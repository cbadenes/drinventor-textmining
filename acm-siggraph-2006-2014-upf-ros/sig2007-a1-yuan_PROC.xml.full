{
  "uri" : "sig2007-a1-yuan_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2007/a1-yuan_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Image Deblurring with Blurred/Noisy Image Pairs",
    "published" : null,
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ ]
  },
  "bagOfWords" : [ "b34d2ea8a90f678fecabbb8480fecad1515a05d91195ddc967d529da0070a20d", "oru", "10.1145", "1239451.1239452", "name", "identification", "possible", "image", "deblurr", "Blurred/Noisy", "image", "Pairs", "Lu", "Yuan", "Jian", "Sun", "Long", "Quan", "Heung-Yeung", "Shum", "Hong", "Kong", "University", "Science", "Technology", "Microsoft", "Research", "Asia", "-lrb-", "-rrb-", "blur", "image", "-lrb-", "-rrb-", "noisy", "image", "figure", "photograph", "low", "light", "environment", "-lrb-", "-rrb-", "blur", "image", "-lrb-", "shutter", "speed", "second", "iso", "100", "-rrb-", "due", "camera", "shake", "-lrb-", "-rrb-", "noisy", "image", "-lrb-", "shutter", "speed", "1/100", "second", "iso", "1600", "-rrb-", "due", "insufficient", "light", "-lrb-", "-rrb-", "noisy", "image", "enhance", "adjust", "level", "gamma", "-lrb-", "-rrb-", "we", "deblurred", "image", "take", "satisfactory", "photo", "under", "dim", "lighting", "condition", "use", "hand-held", "camera", "challenge", "camera", "set", "long", "exposure", "time", "image", "blur", "due", "camera", "shake", "other", "hand", "image", "dark", "noisy", "take", "short", "exposure", "time", "high", "camera", "gain", "combine", "information", "extract", "from", "both", "blur", "noisy", "image", "however", "we", "show", "paper", "how", "produce", "high", "quality", "image", "can", "obtain", "simply", "denoise", "noisy", "image", "deblurr", "blur", "image", "alone", "we", "approach", "image", "deblurr", "help", "noisy", "image", "first", "both", "image", "use", "estimate", "accurate", "blur", "kernel", "which", "otherwise", "difficult", "obtain", "from", "single", "blur", "image", "second", "again", "use", "both", "image", "residual", "deconvolution", "propose", "significantly", "reduce", "ring", "artifact", "inherent", "image", "deconvolution", "Third", "remain", "ringing", "artifact", "smooth", "image", "region", "further", "suppress", "gain-controlled", "deconvolution", "process", "we", "demonstrate", "effectiveness", "we", "approach", "use", "number", "indoor", "outdoor", "image", "take", "off-the-shelf", "hand-held", "camera", "poor", "lighting", "environment", "introduction", "capture", "satisfactory", "photo", "under", "low", "light", "condition", "use", "hand-held", "camera", "can", "frustrating", "experience", "often", "photo", "take", "blur", "noisy", "brightness", "image", "can", "increase", "three", "way", "first", "reduce", "shutter", "speed", "shutter", "speed", "below", "safe", "shutter", "speed", "-lrb-", "reciprocal", "focal", "length", "lens", "unit", "seconds", "-rrb-", "camera", "shake", "result", "blur", "image", "second", "use", "large", "aperture", "large", "aperture", "however", "reduce", "depth", "field", "moreover", "range", "aperture", "many", "camera", "very", "limited", "Third", "set", "high", "iso", "however", "high", "iso", "image", "very", "noisy", "because", "noise", "amplify", "camera?s", "gain", "increase", "take", "sharp", "image", "dim", "lighting", "environment", "best", "setting", "safe", "shutter", "speed", "largest", "aperture", "highest", "iso", "even", "combination", "capture", "image", "may", "still", "dark", "very", "noisy", "typically", "two", "kind", "degraded", "image", "can", "take", "low", "light", "condition", "one", "blur", "image", "which", "take", "slow", "shutter", "speed", "low", "iso", "setting", "show", "Figure", "-lrb-", "-rrb-", "enough", "light", "have", "correct", "color", "intensity", "high", "SignalNoise", "Ratio", "-lrb-", "SNR", "-rrb-", "blurry", "due", "camera", "shake", "other", "underexposed", "noisy", "image", "fast", "shutter", "speed", "high", "iso", "setting", "show", "Figure", "-lrb-", "-rrb-", "sharp", "very", "noisy", "due", "insufficient", "exposure", "high", "camera", "gain", "color", "image", "also", "partially", "lose", "due", "low", "contrast", "recover", "high", "quality", "image", "from", "very", "noisy", "image", "easy", "task", "fine", "image", "detail", "texture", "conceal", "noise", "denoising", "-lsb-", "Portilla", "et", "al.", "2003", "-rsb-", "can", "completely", "separate", "signal", "from", "noise", "other", "hand", "deblurr", "from", "single", "blur", "image", "challenging", "blind", "deconvolution", "problem", "both", "blur", "kernel", "-lrb-", "point", "spread", "function", "-rrb-", "estimation", "image", "deconvolution", "highly", "under-constrained", "moreover", "unpleasant", "artifact", "-lrb-", "e.g.", "ring", "-rrb-", "from", "image", "deconvolution", "even", "when", "use", "perfect", "kernel", "also", "appear", "reconstructed", "image", "deblurr", "blurred/noisy", "image", "pair", "have", "be", "propose", "Lim", "Silverstein", "-lsb-", "2006", "-rsb-", "paper", "we", "also", "use", "blurred/noisy", "image", "pair", "describe", "approach", "estimate", "much", "more", "accurate", "blur", "kernel", "produce", "deblurred", "image", "almost", "ringing", "like", "most", "previous", "image", "deblurr", "approach", "we", "acm", "Reference", "Format", "Yuan", "L.", "Sun", "J.", "Quan", "L.", "Shum", "H.", "2007", "image", "deblurr", "Blurred/Noisy", "image", "Pairs", "ACM", "Trans", "graph", "26", "Article", "-lrb-", "July", "2007", "-rrb-", "10", "page", "dous", "10.1145", "1239451.1239452", "http://doi.acm", "org/10", ".1145", "1239451.1239452", "copyright", "Notice", "permission", "make", "digital", "hard", "copy", "part", "all", "work", "personal", "classroom", "use", "grant", "without", "fee", "provide", "copy", "make", "distribute", "profit", "direct", "commercial", "advantage", "copy", "show", "notice", "first", "page", "initial", "screen", "display", "along", "full", "citation", "copyright", "component", "work", "own", "other", "than", "ACM", "must", "honor", "abstract", "credit", "permit", "copy", "otherwise", "republish", "post", "server", "redistribute", "list", "use", "any", "component", "work", "other", "work", "require", "prior", "specific", "permission", "and/or", "fee", "permission", "may", "request", "from", "Publications", "Dept.", "ACM", "Inc.", "Penn", "Plaza", "Suite", "701", "New", "York", "NY", "10121-0701", "fax", "+1", "-lrb-212-rrb-Â 869-0481", "permissions@acm.org", "2007", "ACM", "0730-0301/2007", "03-art1", "5.00", "DOI", "10.1145", "1239451.1239452", "http://doi.acm.org/10.1145/1239451.1239452", "-lrb-", "-rrb-", "enhance", "noisy", "image", "-lrb-", "-rrb-", "we", "deblurred", "result", "we", "thank", "reviewer", "point", "out", "Lim", "Silverstein", "-lsb-", "2006", "-rsb-", "work", "during", "rebuttal", "phase", "ACM", "transaction", "Graphics", "Vol", "26", "no.", "Article", "publication", "date", "July", "2007", "1-2", "Yuan", "et", "al.", "assume", "image", "blur", "can", "well", "describe", "single", "blur", "kernel", "cause", "camera", "shake", "scene", "static", "inspire", "-lsb-", "Fergus", "et", "al.", "2006", "-rsb-", "we", "convert", "blind", "deconvolution", "problem", "two", "non-blind", "deconvolution", "problem", "non-blind", "kernel", "estimation", "non-blind", "image", "deconvolution", "kernel", "estimation", "we", "show", "very", "accurate", "initial", "kernel", "can", "recover", "from", "blur", "image", "exploit", "large", "scale", "sharp", "image", "structure", "noisy", "image", "we", "approach", "also", "able", "handle", "larger", "kernel", "than", "those", "recover", "-lsb-", "Fergus", "et", "al.", "2006", "-rsb-", "use", "single", "blur", "image", "greatly", "reduce", "ring", "artifact", "commonly", "result", "from", "image", "deconvolution", "we", "propose", "residual", "deconvolution", "approach", "we", "also", "propose", "gain-controlled", "deconvolution", "further", "suppress", "ringing", "artifact", "smooth", "image", "region", "all", "three", "step", "kernel", "estimation", "residual", "deconvolution", "gaincontrolled", "deconvolution", "take", "advantage", "both", "image", "final", "reconstructed", "image", "sharper", "than", "blur", "image", "clearer", "than", "noisy", "image", "show", "Figure", "-lrb-", "-rrb-", "we", "approach", "practical", "despite", "we", "require", "two", "image", "we", "have", "find", "motion", "between", "two", "blurred/noisy", "image", "when", "take", "quick", "succession", "mainly", "translation", "significant", "because", "kernel", "estimation", "independent", "translation", "which", "only", "result", "offset", "kernel", "we", "describe", "how", "acquire", "align", "image", "pair", "section", "previous", "work", "single", "image", "deblurring", "image", "deblurring", "can", "categorize", "two", "type", "blind", "deconvolution", "non-blind", "deconvolution", "former", "more", "difficult", "since", "blur", "kernel", "unknown", "comprehensive", "literature", "review", "can", "find", "-lsb-", "Kundur", "Hatzinakos", "1996", "-rsb-", "demonstrate", "-lsb-", "Fergus", "et", "al.", "2006", "-rsb-", "real", "kernel", "cause", "camera", "shake", "complex", "beyond", "simple", "parametric", "form", "-lrb-", "e.g.", "single", "one-direction", "motion", "gaussian", "-rrb-", "assume", "previous", "approach", "-lsb-", "reeve", "Mersereau", "1992", "Y.", "Yitzhaky", "Kopeika", "1998", "Caron", "et", "al.", "2002", "Jalobeanu", "et", "al.", "2002", "-rsb-", "-lsb-", "Fergus", "et", "al.", "2006", "-rsb-", "natural", "image", "statistics", "together", "sophisticated", "variational", "baye", "inference", "algorithm", "use", "estimate", "kernel", "image", "reconstruct", "use", "standard", "non-blind", "deconvolution", "algorithm", "very", "nice", "result", "obtain", "when", "kernel", "small", "-lrb-", "e.g.", "30", "30", "pixel", "fewer", "-rrb-", "-lsb-", "Fergus", "et", "al.", "2006", "-rsb-", "Kernel", "estimation", "large", "blur", "however", "inaccurate", "unreliable", "use", "single", "image", "even", "known", "kernel", "non-blind", "deconvolution", "-lsb-", "geman", "Reynolds", "1992", "Zarowin", "1994", "Neelamani", "et", "al.", "2004", "-rsb-", "still", "under-constrained", "reconstruction", "artifact", "e.g.", "ring", "effect", "color", "speckle", "inevitable", "because", "high", "frequency", "loss", "blur", "image", "error", "due", "sensor", "noise", "quantization", "image/kernel", "also", "amplify", "deconvolution", "process", "example", "more", "iteration", "Richardson-Lucy", "-lrb-", "RL", "-rrb-", "algorithm", "-lsb-", "h.", "Richardson", "1972", "-rsb-", "result", "more", "ring", "artifact", "we", "approach", "we", "significantly", "reduce", "artifact", "non-blind", "deconvolution", "take", "advantage", "noisy", "image", "recently", "spatially", "variant", "kernel", "estimation", "have", "also", "be", "propose", "-lsb-", "Bardsley", "et", "al.", "2006", "-rsb-", "-lsb-", "Levin", "2006", "-rsb-", "image", "segmented", "several", "layer", "different", "kernel", "kernel", "each", "layer", "uni-directional", "layer", "motion", "velocity", "constant", "hardware", "base", "solution", "-lsb-", "Nikon", "2005", "-rsb-", "reduce", "image", "blur", "include", "lens", "stabilization", "sensor", "stabilization", "both", "technique", "physically", "move", "element", "lens", "sensor", "counterbalance", "camera", "shake", "typically", "capture", "image", "can", "sharp", "be", "take", "shutter", "speed", "2-3", "stop", "faster", "single", "image", "denoising", "image", "denoising", "classic", "problem", "extensively", "study", "challenge", "image", "denoising", "how", "compromise", "between", "remove", "noise", "preserve", "edge", "texture", "commercial", "software", "e.g.", "NeatImage", "-lrb-", "www.neatimage.com", "-rrb-", "imagenomic", "-lrb-", "www.imagenomic.com", "-rrb-", "use", "wavelet-based", "approach", "-lsb-", "simoncellus", "Adelson", "1996", "Portilla", "et", "al.", "2003", "-rsb-", "bilateral", "filter", "-lsb-", "Tomasi", "Manduchi", "1998", "Durand", "Dorsey", "2002", "-rsb-", "have", "also", "be", "simple", "effective", "method", "widely", "use", "computer", "graphic", "other", "approach", "include", "anisotropic", "diffusion", "-lsb-", "Perona", "Malik", "1990", "-rsb-", "pde-based", "method", "-lsb-", "Rudin", "et", "al.", "1992", "-rsb-", "field", "expert", "-lsb-", "Roth", "Black", "2005", "-rsb-", "nonlocal", "method", "-lsb-", "buade", "et", "al.", "2005", "-rsb-", "multiple", "image", "deblurr", "denoise", "deblurr", "denoise", "can", "benefit", "from", "multiple", "image", "image", "different", "blur", "direction", "-lsb-", "Bascle", "et", "al.", "1996", "Rav-Acha", "Peleg", "2000", "Rav-Acha", "Peleg", "2005", "-rsb-", "can", "use", "kernel", "estimation", "-lsb-", "Liu", "Gamal", "2001", "-rsb-", "CMOS", "sensor", "can", "capture", "multiple", "high-speed", "frame", "within", "normal", "exposure", "time", "pixel", "motion", "replace", "pixel", "one", "high-speed", "frame", "Raskar", "et", "al.", "-lsb-", "2006", "-rsb-", "propose", "flutter", "shutter", "camera", "which", "open", "close", "shutter", "during", "normal", "exposure", "time", "pseudo-random", "sequence", "approach", "preserve", "high", "frequency", "spatial", "detail", "blur", "image", "produce", "impressive", "result", "assume", "blur", "kernel", "know", "denoise", "can", "perform", "joint/cross", "bilateral", "filter", "use", "flash/no-flash", "image", "-lsb-", "Petschnigg", "et", "al.", "2004", "Eisemann", "Durand", "2004", "-rsb-", "spatio-temporal", "filter", "video", "sequence", "-lsb-", "Bennett", "McMillan", "2005", "-rsb-", "hybrid", "imaging", "system", "-lsb-", "Ben-Ezra", "Nayar", "2003", "-rsb-", "consist", "primary", "sensor", "-lrb-", "high", "spatial", "resolution", "-rrb-", "secondary", "sensor", "-lrb-", "high", "temporal", "resolution", "-rrb-", "secondary", "sensor", "capture", "number", "low", "resolution", "sharp", "image", "kernel", "estimation", "we", "approach", "estimate", "kernel", "only", "from", "two", "image", "without", "need", "special", "hardware", "another", "related", "work", "-lsb-", "Jia", "et", "al.", "2004", "-rsb-", "also", "use", "pair", "image", "where", "color", "blur", "image", "transfer", "noisy", "image", "without", "kernel", "estimation", "approach", "limit", "case", "noisy", "image", "have", "high", "snr", "fine", "detail", "work", "most", "related", "ours", "-lsb-", "Lim", "Silverstein", "2006", "-rsb-", "which", "also", "make", "use", "short", "exposure", "image", "help", "estimate", "kernel", "deconvolution", "kernel", "estimate", "linear", "leastsquare", "sense", "use", "two", "image", "work", "have", "also", "suggest", "application", "defocus", "use", "large/small", "aperture", "image", "however", "work", "do", "show", "any", "result", "analysis", "paper", "we", "demonstrate", "we", "propose", "technique", "can", "obtain", "much", "accurate", "kernel", "compare", "Lim", "Silverstein?s", "approach", "produce", "almost", "artifact-free", "image", "propose", "de-ringing", "approach", "deconvolution", "Problem", "Formulation", "we", "take", "pair", "image", "blur", "image", "slow", "shutter", "speed", "low", "iso", "noisy", "image", "high", "shutter", "speed", "high", "iso", "noisy", "image", "usually", "underexpose", "have", "very", "low", "snr", "since", "camera", "noise", "dependent", "image", "intensity", "level", "-lsb-", "Liu", "et", "al.", "2006", "-rsb-", "moreover", "noise", "high", "iso", "image", "also", "larger", "than", "low", "iso", "image", "since", "noise", "amplify", "camera", "gain", "noisy", "image", "sharp", "because", "we", "use", "fast", "shutter", "speed", "above", "safe", "shutter", "speed", "we", "pre-multiply", "noisy", "image", "ratio", "iso", "iso", "compensate", "exposure", "difference", "between", "blur", "noisy", "image", "where", "exposure", "time", "we", "perform", "multiplication", "irradiance", "space", "go", "back", "image", "space", "camera", "response", "curve", "-lsb-", "Debevec", "Malik", "1997", "-rsb-", "know", "otherwise", "gamma", "ACM", "transaction", "Graphics", "Vol", "26", "no.", "Article", "publication", "date", "July", "2007", "image", "deblurr", "Blurred/Noisy", "image", "Pairs", "1-3", "-lrb-", "2.0", "-rrb-", "curve", "use", "approximation", "3.1", "we", "approach", "we", "goal", "reconstruct", "high", "quality", "image", "use", "input", "image", "where", "blur", "kernel", "convolution", "operator", "noisy", "image", "we", "compute", "denoise", "image", "-lsb-", "Portilla", "et", "al.", "2003", "-rsb-", "-lrb-", "see", "section", "detail", "-rrb-", "lose", "some", "fine", "detail", "denoising", "process", "preserve", "large", "scale", "sharp", "image", "structure", "we", "represent", "lose", "detail", "layer", "residual", "image", "we", "first", "important", "observation", "denoise", "image", "very", "good", "initial", "approximation", "purpose", "kernel", "estimation", "from", "equation", "-lrb-", "-rrb-", "residual", "image", "relatively", "small", "respect", "power", "spectrum", "image", "mainly", "lie", "denoise", "image", "moreover", "large", "scale", "sharp", "image", "structure", "make", "important", "contribution", "kernel", "estimation", "show", "we", "experiment", "synthetic", "real", "image", "accurate", "kernel", "can", "obtain", "use", "nonblind", "convolution", "once", "estimate", "we", "can", "again", "use", "equation", "-lrb-", "-rrb-", "non-blindly", "deconvolute", "which", "unfortunately", "have", "significant", "artifact", "e.g", "ring", "effect", "instead", "recover", "directly", "we", "propose", "first", "recover", "residual", "image", "from", "blur", "image", "B.", "combine", "equation", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "residual", "image", "can", "reconstruct", "from", "residual", "deconvolution", "where", "residual", "blur", "image", "we", "second", "observation", "ringing", "artifact", "from", "residual", "deconvolution", "-lrb-", "equation", "-lrb-", "-rrb-", "-rrb-", "smaller", "than", "those", "from", "deconvolution", "-lrb-", "equation", "-lrb-", "-rrb-", "-rrb-", "because", "have", "much", "smaller", "magnitude", "than", "after", "be", "offset", "denoise", "image", "also", "provide", "crucial", "gain", "signal", "control", "deconvolution", "process", "so", "we", "can", "suppress", "ring", "artifact", "especially", "smooth", "image", "region", "we", "propose", "de-ringing", "approach", "use", "gain-controlled", "deconvolution", "algorithm", "further", "reduce", "ring", "artifact", "above", "three", "step", "kernel", "estimation", "-lrb-", "section", "-rrb-", "residual", "deconvolution", "-lrb-", "section", "-rrb-", "de-ringing", "-lrb-", "section", "-rrb-", "iterate", "refine", "estimate", "blur", "kernel", "deconvoluted", "image", "i.", "Kernel", "Estimation", "section", "we", "show", "simple", "constrain", "least-square", "optimization", "able", "produce", "very", "good", "initial", "kernel", "iterative", "kernel", "estimation", "goal", "kernel", "estimation", "find", "blur", "kernel", "from", "initialization", "vector-matrix", "form", "ak", "where", "vector", "form", "matrix", "form", "i.", "Lim", "Silverstein", "-lsb-", "2006", "-rsb-", "compute", "kernel", "solve", "ak", "linear", "least-square", "however", "estimate", "kernel", "simple", "approach", "may", "poor", "show", "figure", "-lrb-", "-rrb-", "obtain", "better", "kernel", "we", "use", "Tikhonov", "regularization", "hysteresis", "thersholding", "scale", "space", "regularization", "stabilize", "solution", "we", "use", "Tikhonov", "regularization", "method", "positive", "scalar", "solve", "min", "Ak", "-lrb-", "-rrb-", "blurry", "image", "true", "kernel", "-lrb-", "-rrb-", "noisy", "image", "-lrb-", "-rrb-", "denoise", "image", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "result", "Fergus", "et.al", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "we", "result", "-lrb-", "-rrb-", "figure", "Kernel", "Estimation", "two", "blur", "image", "synthesize", "from", "true", "image", "-lrb-", "also", "show", "Figure", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-rrb-", "matlab?s", "deconvblind", "routine", "result", "-lrb-", "-rrb-", "fergus?s", "result", "finest", "level", "-lrb-", "-rrb-", "Lim", "Silverstein?s", "result", "-lrb-", "-rrb-", "estimate", "kernel", "without", "hysteresis", "thresholding", "-lrb-", "-rrb-", "we", "result", "finest", "level", "-lrb-", "-rrb-", "true", "kernel", "default", "value", "set", "solution", "give", "-lrb-", "-rrb-", "closed-form", "other", "constraint", "kernel", "real", "blur", "kernel", "have", "non-negative", "preserve", "energy", "so", "optimal", "kernel", "obtain", "from", "follow", "optimization", "system", "min", "Ak", "subject", "we", "adopt", "Landweber", "method", "-lsb-", "Engl", "et", "al.", "2000", "-rsb-", "iteratively", "update", "follow", "initialize", "delta", "function", "Update", "+1", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "set", "+1", "+1", "normalize", "+1", "+1", "+1", "scalar", "control", "convergence", "iteration", "stop", "when", "change", "between", "two", "step", "sufficiently", "small", "we", "typically", "run", "about", "20", "30", "iteration", "set", "1.0", "algorithm", "fast", "use", "FFT", "take", "about", "12", "seconds", "64", "64", "kernel", "800", "600", "image", "ACM", "transaction", "Graphics", "Vol", "26", "no.", "Article", "publication", "date", "July", "2007", "1-4", "Yuan", "et", "al.", "-lrb-", "-rrb-", "blurred/noise", "pair", "-lrb-", "-rrb-", "zoom", "-lrb-", "-rrb-", "figure", "blur", "noisy", "image", "from", "light-blue", "box", "-lrb-", "-rrb-", "zoomed-in", "-lrb-", "-rrb-", "top", "image", "-lrb-", "-rrb-", "zoomed-in", "view", "lightorange", "box", "-lrb-", "-rrb-", "reveal", "true", "kernel", "middle", "image", "-lrb-", "-rrb-", "estimate", "kernel", "use", "only", "image", "patch", "-lrb-", "-rrb-", "bottom", "image", "-lrb-", "-rrb-", "estimate", "kernel", "use", "whole", "image", "hysteresis", "thresholding", "scale", "space", "above", "iterative", "algorithm", "can", "implement", "scale", "space", "make", "solution", "overcome", "local", "minimal", "straightforward", "method", "use", "kernel", "estimate", "current", "level", "initialize", "next", "finer", "level", "however", "we", "have", "find", "initialization", "insufficient", "control", "noise", "kernel", "estimation", "noise", "error", "coarse", "level", "may", "propagate", "amplify", "fine", "level", "suppress", "noise", "estimate", "kernel", "we", "prefer", "global", "shape", "kernel", "fine", "level", "similar", "shape", "its", "coarser", "level", "achieve", "we", "propose", "hysteresis", "thresholding", "-lsb-", "canny", "1986", "-rsb-", "scale", "space", "each", "level", "kernel", "mask", "define", "threshold", "kernel", "value", "tk", "max", "where", "threshold", "max", "maximum", "all", "kernel", "value", "we", "compute", "two", "mask", "low", "high", "set", "two", "threshold", "low", "high", "low", "larger", "contain", "high", "after", "kernel", "estimation", "we", "set", "all", "element", "outside", "mask", "high", "zero", "reduce", "noise", "level", "l.", "next", "finer", "level", "we", "set", "all", "element", "+1", "outside", "up-sampled", "mask", "low", "zero", "further", "reduce", "noise", "hysteresis", "thresholding", "perform", "from", "coarse", "fine", "pyramid", "construct", "use", "downsampling", "factor", "until", "kernel", "size", "coarsest", "level", "reach", "we", "typically", "choose", "low", "0.03", "high", "0.05", "result", "discussion", "we", "first", "compare", "we", "estimate", "kernel", "true", "kernel", "use", "synthetic", "example", "figure", "-lrb-", "a-c", "-rrb-", "show", "two", "blur", "image", "noisy", "image", "denoise", "image", "blur", "image", "synthesize", "two", "41", "41", "known", "kernel", "figure", "-lrb-", "-rrb-", "show", "kernel", "estimate", "matlab?s", "deconvblind", "routine", "-lrb-", "blind", "deconvolution", "-rrb-", "use", "denoise", "image", "initialization", "figure", "-lrb-", "-rrb-", "show", "coarse-to-fine", "kernel", "-lrb-", "finest", "level", "-rrb-", "estimate", "fergus?s", "algorithm", "only", "use", "blur", "image", "-lsb-", "Fergus", "et", "al.", "2006", "-rsb-", "Matlab", "code", "release", "Fergus", "-lrb-", "http://people.csail.mit.edu/fergus/", "-rrb-", "we", "exhaustively", "tune", "all", "option", "fergus?s", "algorithm", "select", "different", "region", "image", "produce", "best", "result", "fergus?s", "algorithm", "recover", "much", "better", "kernel", "than", "those", "use", "matlab?s", "blind", "deconvolution", "figure", "-lrb-", "-rrb-", "result", "from", "-lsb-", "Lim", "Silverstein", "2006", "-rsb-", "comparison", "we", "estimate", "kernel", "figure", "-lrb-", "-rrb-", "very", "close", "true", "kernel", "figure", "-lrb-", "-rrb-", "because", "we", "solve", "non-blind", "kernel", "estimation", "problem", "fine", "detail", "thin", "structure", "kernel", "recover", "figure", "-lrb-", "-rrb-", "also", "show", "we", "kernel", "estimation", "without", "hysteresis", "thresholding", "which", "very", "noisy", "Figure", "show", "we", "result", "real", "image", "light-blue", "trajectory", "cause", "highlight", "scene", "clearly", "reveal", "accurate", "shape", "-lrb-", "-rrb-", "standard", "rl", "decovolution", "-lrb-", "-rrb-", "residual", "deconvolution", "-lrb-", "-rrb-", "residual", "deconvolution", "de-ringing", "-lrb-", "-rrb-", "gain", "map", "-lrb-", "-rrb-", "true", "image", "figure", "deconvolution", "use", "true", "kernel", "all", "result", "generate", "after", "20", "iteration", "note", "standard", "rl", "result", "contain", "unpleasant", "ring", "artifact", "dark", "light", "ripple", "around", "strong", "image", "feature", "kernel", "one", "trajectory", "show", "Figure", "-lrb-", "-rrb-", "we", "also", "compare", "two", "kernel", "use", "select", "image", "patch", "whole", "image", "recover", "kernel", "have", "very", "similar", "shape", "lightblue", "trajectory", "show", "Figure", "-lrb-", "-rrb-", "Kernel", "estimation", "insensitive", "select", "region", "kernel", "size", "very", "large", "92", "92", "pixel", "residual", "Deconvolution", "give", "blur", "kernel", "true", "image", "can", "reconstruct", "from", "i.", "Figure", "-lrb-", "-rrb-", "show", "deconvolution", "result", "use", "standard", "richardson-lucy", "-lrb-", "rl", "-rrb-", "algorithm", "after", "20", "iteration", "true", "kernel", "result", "image", "contain", "visible", "ring", "artifact", "dark", "light", "ripple", "around", "bright", "feature", "image", "ringing", "artifact", "often", "occur", "iterative", "method", "rl", "algorithm", "more", "iteration", "introduce", "only", "more", "image", "detail", "also", "more", "ringing", "Fergus", "et", "al.", "-lsb-", "2006", "-rsb-", "also", "observe", "issue", "from", "result", "ACM", "transaction", "Graphics", "Vol", "26", "no.", "Article", "publication", "date", "July", "2007", "image", "deblurr", "Blurred/Noisy", "image", "Pairs", "1-5", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "Figure", "residual", "deconvolution", "-lrb-", "a-b", "-rrb-", "blur", "signal", "de", "noised", "signal", "blur", "kernel", "box", "filter", "-lrb-", "-rrb-", "standard", "deconvolution", "result", "from", "-lrb-", "-rrb-", "-lrb-", "d-e", "-rrb-", "blur", "residual", "signal", "its", "deconvolution", "result", "-lrb-", "-rrb-", "residual", "deconvolution", "result", "Notice", "ring", "artifact", "-lrb-", "-rrb-", "smaller", "than", "-lrb-", "-rrb-", "ringing", "effect", "due", "well-known", "Gibbs", "phenomenon", "fourier", "analysis", "discontinuous", "point", "discontinuity", "could", "image", "edge", "point", "boundary", "artificially", "introduce", "inadequate", "spatial", "sampling", "image", "kernel", "larger", "blur", "kernel", "stronger", "ringing", "artifact", "Gibbs", "oscillation", "have", "amplitude", "independent", "cutoff", "frequency", "filter", "always", "proportional", "signal", "jump", "discontinuous", "point", "key", "we", "approach", "we", "perform", "deconvolution", "relative", "image", "quantity", "reduce", "absolute", "amplitude", "signal", "instead", "do", "deconvolution", "directly", "image", "we", "perform", "deconvolution", "residual", "blur", "image", "recover", "residual", "image", "final", "reconstructed", "image", "standard", "rl", "algorithm", "one", "ratio-based", "iterative", "approach", "enforce", "non-negativity", "pixel", "value", "when", "use", "rl", "algorithm", "residual", "image", "should", "offset", "add", "constant", "all", "image", "normalize", "range", "-lsb-", "0,1", "-rsb-", "after", "each", "iteration", "residual", "image", "offset", "back", "subtract", "constant", "+1", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-rrb-", "where", "???", "correlation", "operator", "Figure", "-lrb-", "-rrb-", "show", "deconvolution", "result", "use", "residual", "rl", "algorithm", "same", "number", "iteration", "compare", "standard", "rl", "result", "-lrb-", "figure", "-lrb-", "-rrb-", "-rrb-", "ringing", "effect", "reduce", "Figure", "show", "1d", "example", "residual", "deconvolution", "ringing", "artifact", "from", "significantly", "weaker", "than", "those", "because", "magnitude", "-lrb-", "after", "subtract", "from", "-rrb-", "much", "smaller", "than", "B.", "de-ringing", "gain-controlled", "rl", "residual", "deconvolution", "lessen", "ringing", "effect", "can", "fully", "eliminate", "they", "show", "Figure", "-lrb-", "-rrb-", "another", "example", "show", "figure", "-lrb-", "-rrb-", "we", "observe", "ringing", "effect", "most", "distracting", "smooth", "region", "because", "human", "perception", "can", "tolerate", "small", "scale", "ringing", "highly", "textured", "region", "we", "have", "also", "find", "mid-scale", "ringing", "effect", "more", "noticeable", "compare", "fine", "detail", "large", "scale", "sharp", "structure", "image", "note", "strong", "ringing", "mainly", "cause", "high", "contrast", "edge", "magnitude", "ringing", "proportional", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "gain", "-lrb-", "-rrb-", "iter", "-lrb-", "-rrb-", "iter", "10", "-lrb-", "-rrb-", "iter", "20", "figure", "gain-controlled", "rl", "-lrb-", "a-c", "-rrb-", "blur", "signal", "denoised", "signal", "gain", "map", "kernel", "estimate", "use", "-lrb-", "d-f", "-rrb-", "deconvolution", "result", "standard", "rl", "-lrb-", "green", "-rrb-", "residual", "rl", "-lrb-", "blue", "-rrb-", "gain-controlled", "rl", "-lrb-", "red", "-rrb-", "after", "iteration", "10", "20", "plot", "bottom-right", "blownup", "view", "Notice", "ringing", "effect", "amplify", "propagate", "standard", "rl", "residual", "rl", "suppress", "gain-controlled", "rl", "magnitude", "image", "gradient", "base", "observation", "we", "propose", "de-ringing", "approach", "gain-controlled", "rl", "algorithm", "follow", "gain-controlled", "richardson-lucy", "-lrb-", "rl", "-rrb-", "we", "modify", "residual", "rl", "algorithm", "introduce", "gain", "map", "Gain", "+1", "gain", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-rrb-", "where", "gain", "multiplier", "-lrb-", "-rrb-", "suppress", "contrast", "recover", "residual", "image", "since", "rl", "ratio-based", "algorithm", "ringing", "effect", "amplify", "each", "iteration", "ratio", "-lrb-", "+1", "+1", "-rrb-", "-lrb-", "-rrb-", "multiply", "factor", "less", "than", "one", "each", "iteration", "suppress", "propagation", "ringing", "effect", "Notice", "multiply", "factor", "decrease", "overall", "magnitude", "signal", "decrease", "contrast", "signal", "because", "ratio", "-lrb-", "+1", "+1", "-rrb-", "increase", "magnitude", "signal", "each", "iteration", "last", "iteration", "we", "do", "multiply", "gain", "map", "gain", "we", "denote", "image", "reconstruct", "gain-controlled", "rl", "since", "we", "want", "suppress", "contrast", "ring", "smooth", "region", "while", "avoid", "suppression", "sharp", "edge", "gain", "map", "should", "small", "smooth", "region", "large", "other", "hence", "we", "define", "gain", "map", "use", "gradient", "denoise", "image", "gain", "-lrb-", "-rrb-", "where", "control", "influence", "gain", "map", "gradient", "denoise", "image", "lth", "level", "gaussian", "pyramid", "standard", "deviation", "0.5", "parameter", "control", "degree", "suppression", "all", "result", "show", "paper", "we", "set", "value", "0.2", "aggregated", "image", "gradient", "multiple", "scale", "have", "also", "be", "use", "HDR", "compression", "-lsb-", "Fattal", "et", "al.", "2002", "Li", "et", "al.", "2005", "-rsb-", "here", "gradient", "denoise", "image", "provide", "gain", "signal", "adaptively", "suppress", "ringing", "effect", "different", "region", "Figure", "show", "1d", "example", "gain-controlled", "rl", "we", "can", "see", "residual", "rl", "can", "reduce", "magnitude", "ring", "compare", "standard", "rl", "both", "standard", "rl", "residual", "rl", "magnitude", "ring", "increase", "spatial", "range", "ring", "spread", "gradually", "after", "each", "iteration", "control", "from", "gain", "map", "ringing", "effect", "suppress", "each", "iteration", "ACM", "transaction", "Graphics", "Vol", "26", "no.", "Article", "publication", "date", "July", "2007", "1-6", "Yuan", "et", "al.", "-lrb-", "-rrb-", "blurred/noisy", "image", "-lrb-", "-rrb-", "residual", "rl", "-lrb-", "-rrb-", "gain-controlled", "rl", "-lrb-", "-rrb-", "detail", "layer", "-lrb-", "-rrb-", "final", "image", "-lrb-", "-rrb-", "ringing", "layer", "figure", "de-ringing", "gain-controlled", "rl", "effectively", "suppress", "ringing", "artifact", "produce", "de-ringing", "image", "-lrb-", "-rrb-", "detail", "layer", "-lrb-", "-rrb-", "extract", "from", "residual", "rl", "result", "-lrb-", "-rrb-", "guidance", "use", "joint/cross", "bilateral", "filter", "we", "final", "image", "-lrb-", "-rrb-", "obtain", "add", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "together", "-lrb-", "e.g.", "gain", "0.8", "flat", "region", "-rrb-", "most", "importantly", "propagation", "ringing", "greatly", "prevent", "so", "ringing", "significantly", "reduce", "Figure", "-lrb-", "-rrb-", "show", "gain-controlled", "rl", "result", "clean", "deconvolution", "result", "large", "scale", "sharp", "edge", "compare", "residual", "rl", "result", "figure", "-lrb-", "-rrb-", "however", "some", "fine", "detail", "inevitably", "suppress", "gain-controlled", "rl", "fortunately", "we", "able", "add", "fine", "scale", "image", "detail", "residual", "rl", "result", "use", "follow", "approach", "add", "detail", "we", "extract", "fine", "scale", "detail", "layer", "from", "residual", "rl", "result", "where", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "filtered", "image", "-lrb-", "-rrb-", "low-pass", "filter", "other", "word", "detail", "layer", "obtain", "high-pass", "filter", "we", "use", "joint/cross", "bilateral", "filter", "-lsb-", "Petschnigg", "et", "al.", "2004", "Eisemann", "Durand", "2004", "-rsb-", "preserve", "large", "scale", "edge", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "where", "spatial", "signal", "deviation", "gaussian", "kernel", "-lrb-", "-rrb-", "neighbor", "window", "normalization", "term", "default", "value", "1.6", "0.08", "Figure", "-lrb-", "-rrb-", "show", "extract", "detail", "layer", "Compact", "Camera", "DSRL", "Camera", "laptop", "control", "Manual", "control", "Figure", "top", "left", "image", "pattern", "four", "corner", "red", "box", "extract", "two", "shot", "corresponding", "point", "pair", "top", "right", "in-plane", "rotation", "correction", "use", "two", "manually", "specify", "line", "bottom", "experiment", "repeat", "four", "user", "-lrb-", "-rrb-", "each", "cell", "-lrb-", "4x4", "grid", "-rrb-", "one", "color", "dot", "represent", "difference", "vector", "between", "one", "corresponding", "point", "pair", "two", "shot", "grid", "unit", "0.5", "pixel", "cell", "center", "coordinate", "origin", "compose", "gain-controlled", "rl", "result", "detail", "layer", "produce", "we", "final", "image", "show", "figure", "-lrb-", "-rrb-", "ringing", "layer", "-lrb-", "figure", "-lrb-", "-rrb-", "-rrb-", "can", "also", "obtain", "subtract", "from", "filter", "image", "we", "expect", "ringing", "layer", "mainly", "contain", "ripple-like", "ringing", "effect", "final", "result", "ringing", "artifact", "significantly", "reduce", "while", "recover", "image", "detail", "from", "deconvolution", "well", "preserve", "figure", "-lrb-", "c-d", "-rrb-", "show", "another", "example", "result", "after", "de-ringing", "computed", "gain", "map", "summarize", "we", "iterative", "image", "deblurr", "algorithm", "consist", "follow", "step", "estimate", "kernel", "compute", "residual", "deconvolution", "image", "compute", "gain-controlled", "deconvolution", "image", "construct", "final", "image", "add", "detail", "layer", "iteration", "stop", "when", "change", "sufficiently", "small", "implementation", "detail", "image", "acquisition", "practice", "we", "require", "one", "image", "take", "soon", "after", "another", "minimize", "misalignment", "between", "two", "image", "we", "have", "two", "option", "capture", "image", "pair", "very", "quickly", "first", "two", "successive", "shot", "different", "camera", "setting", "trigger", "laptop", "computer", "connect", "camera", "free", "user", "from", "change", "camera", "setting", "between", "two", "shot", "second", "we", "use", "exposure", "bracket", "build", "many", "DSLR", "camera", "mode", "two", "successive", "shot", "can", "take", "different", "shutter", "speed", "press", "shutter", "only", "once", "use", "two", "option", "time", "interval", "between", "two", "shot", "can", "very", "small", "typically", "only", "1/5", "second", "which", "small", "fraction", "typical", "shutter", "speed", "-lrb-", "second", "-rrb-", "blur", "image", "motion", "between", "two", "shot", "mainly", "small", "translation", "we", "assume", "blur", "image", "can", "model", "single", "blur", "kernel", "i.e.", "dominant", "motion", "translation", "because", "translation", "only", "result", "offset", "kernel", "unnecessary", "align", "two", "image", "we", "can", "also", "manually", "change", "camera", "setting", "between", "two", "shot", "case", "we", "have", "find", "dominant", "motion", "between", "two", "shot", "translation", "in-plane", "rotation", "correct", "in-plane", "rotation", "we", "simply", "draw", "two", "corresponding", "line", "blurred/noisy", "image", "blur", "image", "line", "can", "specify", "along", "straight", "object", "boundary", "connect", "two", "corner", "feature", "noisy", "image", "rotate", "around", "its", "image", "center", "two", "line", "virtually", "parallel", "advanced", "exposure", "bracket", "allow", "more", "control", "build", "future", "camera", "manual", "alignment", "become", "unnecessary", "quantitatively", "measure", "relative", "motion", "between", "two", "shot", "we", "have", "perform", "usability", "study", "we", "ask", "four", "user", "continuously", "take", "two", "shot", "pattern", "wall", "-lrb-", "show", "top", "right", "figure", "-rrb-", "use", "laptop", "control", "manual", "control", "compact", "camera", "DSLR", "camera", "two", "shot", "have", "blur", "take", "same", "camera", "setting", "four", "corresponding", "point", "nearby", "image", "corner", "two", "shot", "extract", "we", "correct", "transformation", "-lrb-", "only", "translation", "laptop", "control", "in-plane", "rotation", "after", "translation", "manual", "control", "-rrb-", "between", "two", "shot", "bottom", "row", "Figure", "show", "registration", "error", "after", "correction", "each", "cell", "dot", "represent", "difference", "vector", "between", "pair", "corresponding", "point", "overall", "pixel", "error", "less", "than", "pixel", "full", "image", "resolution", "surprisingly", "best", "align", "image", "obtain", "use", "laptop", "control", "DSLR", "camera", "image", "denoising", "noisy", "image", "we", "apply", "wavelet-based", "denoising", "algorithm", "-lsb-", "Portilla", "et", "al.", "2003", "-rsb-", "Matlab", "code", "from", "http://decsai.ugr.es/", "javier/denoise", "algorithm", "one", "state-of-art", "technique", "comparable", "several", "commercial", "denoising", "software", "we", "have", "also", "experiment", "bilateral", "filter", "find", "hard", "achieve", "good", "balance", "between", "remove", "noise", "preserve", "detail", "even", "careful", "parameter", "tuning", "ACM", "transaction", "Graphics", "Vol", "26", "no.", "Article", "publication", "date", "July", "2007", "image", "deblurr", "Blurred/Noisy", "image", "Pairs", "1-7", "experimental", "result", "we", "apply", "we", "approach", "variety", "blurred/noisy", "image", "pair", "low", "lighting", "environment", "use", "compact", "camera", "-lrb-", "canon", "s60", "5m", "pixel", "-rrb-", "DSLR", "camera", "-lrb-", "canon", "20d", "8m", "pixel", "-rrb-", "comparison", "we", "compare", "we", "approach", "denoising", "-lsb-", "Portilla", "et", "al.", "2003", "-rsb-", "standard", "rl", "algorithm", "Figure", "from", "leave", "right", "show", "blur", "image", "noisy", "image", "-lrb-", "enhance", "-rrb-", "denoise", "image", "standard", "rl", "result", "-lrb-", "use", "we", "estimate", "kernel", "-rrb-", "we", "result", "kernel", "size", "31", "31", "33", "33", "40", "40", "three", "example", "we", "manually", "tune", "noise", "parameter", "-lrb-", "standard", "deviation", "-rrb-", "denoising", "algorithm", "achieve", "best", "visual", "balance", "between", "noise", "removal", "detail", "preservation", "compare", "denoise", "result", "show", "Figure", "-lrb-", "-rrb-", "we", "result", "Figure", "-lrb-", "-rrb-", "contain", "much", "more", "fine", "detail", "tiny", "texture", "fabric", "first", "example", "thin", "grid", "structure", "crown", "second", "example", "clear", "text", "camera", "last", "example", "because", "noise", "image", "scale", "up", "from", "very", "dark", "low", "contrast", "image", "partial", "color", "information", "also", "lose", "we", "approach", "recover", "correct", "color", "through", "image", "deblurring", "Figure", "-lrb-", "-rrb-", "show", "standard", "rl", "deconvoution", "result", "which", "exhibit", "unpleasant", "ringing", "artifact", "large", "noise", "Figure", "10", "show", "blurred/noisy", "pair", "contain", "thin", "hair", "sweater", "detailed", "structure", "image", "capture", "compact", "camera", "noisy", "image", "have", "very", "strong", "noise", "most", "fabric", "texture", "sweater", "faithfully", "recover", "we", "result", "last", "column", "second", "row", "Figure", "10", "show", "estimate", "initial", "kernel", "refine", "kernel", "iterative", "optimization", "iteration", "number", "typically", "we", "experiment", "refined", "kernel", "have", "sharper", "sparser", "shape", "than", "initial", "one", "large", "kernel", "Figure", "11", "show", "example", "large", "blur", "compact", "camera", "kernel", "size", "87", "87", "original", "resolution", "1200", "1600", "image", "show", "here", "crop", "975", "1146", "compare", "state-of-art", "single", "image", "kernel", "estimation", "approach", "-lsb-", "Fergus", "et", "al.", "2006", "-rsb-", "which", "largest", "kernel", "30", "pixel", "we", "approach", "use", "image", "pair", "significantly", "extend", "degree", "blur", "can", "handle", "small", "noise", "kernel", "moderately", "dim", "lighting", "environment", "we", "may", "capture", "input", "image", "small", "noise", "blur", "show", "Figure", "12", "typical", "case", "assume", "Jia?s", "approach", "-lsb-", "2004", "-rsb-", "which", "color", "transfer", "base", "algorithm", "third", "fourth", "column", "Figure", "12", "color", "transfer", "result", "-lsb-", "Jia", "et", "al.", "2004", "-rsb-", "histogram", "equalization", "result", "from", "blur", "image", "denoise", "image", "note", "color", "can", "accurately", "transfer", "-lrb-", "e.g.", "Buddha?s", "golden", "hat", "-rrb-", "because", "both", "approach", "use", "global", "mapping", "we", "result", "only", "recover", "more", "detail", "-lrb-", "e.g.", "horizontal", "line", "background", "-rrb-", "also", "have", "similar", "color", "blur", "image", "all", "detail", "Table", "show", "shutter", "speed", "iso", "setting", "example", "Figure", "-12", "we", "able", "reduce", "exposure", "time", "-lrb-", "shutter", "speed", "iso", "-rrb-", "about", "10", "stop", "blur", "image", "noisy", "image", "art", "-lrb-", "fig", "-rrb-", "1.0", "iso", "100", "1/200s", "iso", "1600", "crown", "-lrb-", "fig", "-rrb-", "1.0", "iso", "100", "1/90s", "iso", "1600", "camera", "-lrb-", "fig", "-rrb-", "0.8", "iso", "100", "1/320s", "iso", "1600", "sweater", "-lrb-", "fig", "-rrb-", "1.3", "iso", "100", "1/80s", "iso", "400", "dragon", "-lrb-", "fig", "10", "-rrb-", "1.3", "iso", "100", "1/80s", "iso", "400", "budda", "-lrb-", "fig", "11", "-rrb-", "1.0", "iso", "100", "1/200s", "iso", "1600", "blur", "image", "noisy", "image", "art", "-lrb-", "fig.", "-rrb-", "1.0", "iso", "100Â 1/200", "iso", "1600", "crown", "-lrb-", "fig.", "-rrb-", "1.0", "iso", "100Â 1/90", "iso", "1600", "camera", "-lrb-", "fig.", "-rrb-", "0.8", "iso", "100Â 1/320", "iso", "1600", "sweater", "-lrb-", "fig.", "-rrb-", "1.3", "iso", "100Â 1/80", "iso", "400", "dragon", "-lrb-", "fig.", "10", "-rrb-", "1.3", "iso", "100Â 1/80", "iso", "400", "budda", "-lrb-", "fig.", "11", "-rrb-", "1.0", "iso", "100Â 1/200", "iso", "1600", "Table", "Shutter", "speed", "iso", "setting", "Figure", "10", "11", "12", "discussion", "conclusion", "we", "have", "propose", "image", "deblurr", "approach", "use", "pair", "blurred/noisy", "image", "we", "approach", "take", "advantage", "both", "image", "produce", "high", "quality", "reconstruct", "image", "formulate", "image", "deblurr", "problem", "use", "two", "image", "we", "have", "develop", "iterative", "deconvolution", "algorithm", "which", "can", "estimate", "very", "good", "initial", "kernel", "significantly", "reduce", "deconvolution", "artifact", "special", "hardware", "require", "we", "propose", "approach", "use", "off-the-shelf", "hand-held", "camera", "Limitations", "remain", "we", "approach", "however", "we", "approach", "share", "common", "limitation", "most", "image", "deblurr", "technique", "assume", "single", "spatial-invariant", "blur", "kernel", "spatial-variant", "kernel", "possible", "locally", "estimate", "kernel", "different", "part", "image", "blend", "deconvolution", "result", "most", "significantly", "we", "approach", "require", "two", "image", "we", "envision", "ability", "capture", "pair", "eventually", "move", "camera", "firmware", "thereby", "make", "two-shot", "capture", "easier", "faster", "future", "we", "plan", "extend", "we", "approach", "other", "image", "deblurr", "application", "deblurr", "video", "sequence", "outof-focus", "deblurring", "we", "technique", "can", "also", "apply", "hybrid", "image", "system", "-lsb-", "Ben-Ezra", "Nayar", "2003", "-rsb-", "combine", "code", "exposure", "photography", "-lsb-", "raskar", "et", "al.", "2006", "-rsb-", "acknowledgement", "we", "thank", "anonymous", "reviewer", "help", "we", "improve", "paper", "Stephen", "Lin", "he", "help", "video", "production", "proofread", "work", "perform", "when", "Lu", "Yuan", "visit", "Microsoft", "Research", "Asia", "Lu", "Yuan", "Long", "Quan", "be", "support", "part", "Hong", "Kong", "RGC", "porject", "619005", "619006", "ACM", "transaction", "Graphics", "Vol", "26", "no.", "Article", "publication", "date", "July", "2007", "1-8", "Yuan", "et", "al.", "-lrb-", "-rrb-", "blur", "image", "-lrb-", "-rrb-", "noisy", "image", "-lrb-", "-rrb-", "denoise", "image", "figure", "comparison", "noisy", "image", "enhance", "display", "estimate", "blur", "kernel", "show", "bottom-right", "corner", "last", "column", "second", "example", "take", "compact", "camera", "other", "two", "DSLR", "camera", "note", "we", "result", "contain", "finer", "detail", "than", "denoise", "image", "less", "ringing", "artifact", "than", "rl", "deconvolution", "result", "last", "example", "vest", "pocket", "KODAK", "camera", "can", "see", "from", "we", "result", "hard", "impossible", "recognize", "from", "blur", "image", "noisy", "image", "we", "encourage", "reader", "see", "close-up", "view", "electronic", "version", "ACM", "transaction", "Graphics", "Vol", "26", "no.", "Article", "publication", "date", "July", "2007", "-lrb-", "-rrb-", "rl", "deconvolution", "-lrb-", "-rrb-", "we", "result", "image", "deblurr", "Blurred/Noisy", "image", "Pairs", "1-9", "Figure", "10", "large", "noise", "top", "three", "image", "blur", "noisy", "we", "result", "bottom", "leave", "four", "image", "zoomed-in", "view", "blur", "noisy", "denoise", "we", "result", "bottom", "right", "two", "image", "initial", "kernel", "-lrb-", "top", "-rrb-", "refine", "kernel", "-lrb-", "bottom", "-rrb-", "use", "we", "iterative", "algorithm", "kernel", "size", "32", "32", "Figure", "11", "large", "kernel", "leave", "blur", "image", "noisy", "image", "denoise", "image", "we", "result", "top", "right", "two", "image", "patch", "light-orange", "box", "blurred/noisy", "image", "reveal", "kernel", "shape", "note", "highlight", "point", "noisy", "patch", "ellipse-like", "shape", "bottom", "right", "estimate", "87", "87", "kernel", "Figure", "12", "small", "noise", "kernel", "example", "take", "DSLR", "camera", "kernel", "size", "21", "21", "from", "leave", "right", "blur", "image", "noisy", "image", "color", "transfer", "denoise", "image", "histogram-equalization", "denoise", "image", "we", "result", "we", "deblurred", "result", "have", "more", "detail", "vivid", "color", "ACM", "transaction", "Graphics", "Vol", "26", "no.", "Article", "publication", "date", "July", "2007", "1-10", "Yuan", "et", "al.", "reference", "ardsley", "J.", "EFFERIES", "S.", "AGY", "J.", "lemmon", "R.", "2006", "Blind", "iterative", "restoration", "image", "spatially-varying", "blur", "Optics", "Express", "1767", "1782", "ascle", "B.", "LAKE", "a.", "isserman", "a.", "1996", "Motion", "deblurr", "super-resolution", "from", "image", "sequence", "Processings", "ECCV", "vol", "II", "573", "582", "en", "zra", "m.", "ayar", "S.", "K.", "2003", "Motion", "deblurr", "use", "hybrid", "imaging", "Processings", "CVPR", "vol", "657", "664", "ennett", "E.", "P.", "ILLAN", "L.", "2005", "Video", "enhancement", "use", "per-pixel", "virtual", "exposure", "ACM", "Trans", "graph", "24", "845", "852", "uade", "a.", "oll", "B.", "orel", "J.", "M.", "2005", "non-local", "algorithm", "image", "denoising", "Proceedings", "CVPR", "vol", "II", "60", "65", "anny", "J.", "1986", "computational", "approach", "edge", "detection", "IEEE", "Trans", "PAMI", "679", "698", "aron", "J.", "N.", "M.", "N.", "N.", "J.", "R.", "C.", "2002", "noniterative", "blind", "datum", "restoration", "use", "extract", "filter", "function", "Applied", "optics", "-lrb-", "appl", "opt", "-rrb-", "41", "32", "68", "84", "ebevec", "P.", "E.", "ALIK", "J.", "1997", "recover", "high", "dynamic", "range", "radiance", "map", "from", "photograph", "Proceedings", "SIGGRAPH", "369", "378", "urand", "F.", "ORSEY", "J.", "2002", "fast", "bilateral", "filter", "display", "high-dynamic-range", "image", "Proceedings", "SIGGRAPH", "257", "266", "isemann", "E.", "URAND", "F.", "2004", "flash", "photography", "enhancement", "via", "intrinsic", "relighting", "ACM", "Trans", "graph", "23", "673", "678", "ngl", "H.", "W.", "ANKE", "M.", "eubauer", "a.", "2000", "regularization", "Inverse", "problem", "Kluwer", "Academic", "attal", "R.", "ISCHINSKI", "D.", "ERMAN", "M.", "2002", "gradient", "domain", "high", "dynamic", "range", "compression", "Proceedings", "SIGGRAPH", "249", "256", "ergus", "R.", "ingh", "B.", "ERTZMANN", "A.", "OWEIS", "S.", "T.", "reeman", "W.", "T.", "2006", "remove", "camera", "shake", "from", "single", "photograph", "ACM", "Trans", "Graph.", "vol", "25", "787", "794", "eman", "D.", "eynold", "G.", "1992", "constrain", "restoration", "recovery", "discontinuity", "IEEE", "Trans", "PAMI", "14", "367", "383", "H.", "ICHARDSON", "W.", "1972", "bayesian-based", "iterative", "method", "image", "restoration", "JOSA", "62", "55", "59", "ALOBEANU", "a.", "lanc", "eraud", "L.", "erubium", "J.", "2002", "estimation", "blur", "noise", "parameter", "remote", "sense", "Proceedings", "ICASSP", "249", "256", "ia", "J.", "UN", "J.", "ang", "c.-k.", "hum", "h.-y", "2004", "bayesian", "correction", "image", "intensity", "spatial", "consideration", "Proceedings", "ECCV", "342-354", "UNDUR", "D.", "atzinako", "D.", "1996", "Blind", "image", "deconvolution", "IEEE", "Signal", "Processing", "Magazine", "13", "43", "64", "evin", "a.", "2006", "Blind", "motion", "deblurr", "use", "image", "statistics", "advance", "Neural", "Information", "Processing", "Systems", "-lrb-", "NIPS", "-rrb-", "Y.", "HARAN", "L.", "DELSON", "E.", "H.", "2005", "compress", "compand", "high", "dynamic", "range", "image", "subband", "architecture", "ACM", "Trans", "graph", "24", "836", "844", "im", "S.", "H.", "ILVERSTEIN", "D.", "A.", "2006", "method", "deblurr", "image", "US", "Patent", "application", "pub", "us2006/0187308", "a1", "aug", "24", "2006", "iu", "X.", "amal", "a.", "2001", "simultaneous", "image", "formation", "motion", "blur", "restoration", "via", "multiple", "capture", "Proceedings", "ICASSP", "iu", "C.", "reeman", "W.", "zeliskus", "R.", "ang", "S.", "2006", "noise", "estimation", "from", "single", "image", "Proceedings", "CVPR", "vol", "901", "908", "eelamanus", "R.", "HOI", "H.", "ARANIUK", "R.", "2004", "forward", "fourier-wavelet", "regularize", "deconvolution", "illconditioned", "system", "IEEE", "Trans", "signal", "processing", "52", "418", "433", "IKON", "2005", "http://www.nikon.co.jp/main/eng/portfolio/about/tech", "nology/nikon", "technology/vr", "e/index", "htm", "erona", "P.", "ALIK", "J.", "1990", "scale-space", "edge", "detection", "use", "anisotropic", "diffusion", "IEEE", "Trans", "PAMI", "12", "629", "639", "etschnigg", "G.", "GRAWALA", "M.", "OPPE", "H.", "zeliskus", "R.", "OHEN", "M.", "oyama", "K.", "2004", "Digital", "photography", "flash", "no-flash", "image", "pair", "ACM", "Trans", "graph", "23", "664", "672", "ortillum", "J.", "trelum", "V.", "AINWRIGHT", "M.", "IMON", "CELLI", "E.", "P.", "2003", "image", "denoising", "use", "scale", "mixture", "gaussian", "wavelet", "domain", "IEEE", "Trans", "image", "processing", "12", "11", "1338", "1351", "askar", "R.", "GRAWAL", "a.", "umblin", "J.", "2006", "code", "exposure", "photography", "motion", "deblurr", "use", "flutter", "shutter", "ACM", "Trans", "graph", "25", "795", "804", "av", "cha", "a.", "eleg", "S.", "2000", "restoration", "multiple", "image", "motion", "blur", "different", "direction", "IEEE", "Workshop", "application", "computer", "Vision", "av", "cha", "a.", "eleg", "S.", "2005", "two", "motion-blurred", "image", "better", "than", "one", "pattern", "recogn", "Lett", "26", "311", "317", "eeve", "S.", "J.", "ERSEREAU", "R.", "M.", "1992", "blur", "identification", "method", "generalize", "cross-validation", "IEEE", "Trans", "image", "processing", "301", "311", "oth", "S.", "lack", "M.", "J.", "2005", "Fields", "expert", "framework", "learn", "image", "prior", "Proceedings", "CVPR", "vol", "II", "860", "867", "UDIN", "L.", "SHER", "S.", "atemus", "E.", "1992", "nonlinear", "total", "variation", "base", "noise", "removal", "algorithm", "Phys", "D.", "60", "259", "268", "imoncellus", "E.", "P.", "DELSON", "E.", "H.", "1996", "noise", "removal", "via", "bayesian", "wavelet", "coring", "Proceedings", "ICIP", "vol", "379", "382", "omasus", "C.", "anduchus", "R.", "1998", "bilateral", "filter", "gray", "color", "image", "Proceedings", "ICCV", "839", "846", "Y.", "itzhaky", "i.", "a.", "L.", "OPEIKA", "N.", "1998", "direct", "method", "restoration", "motion", "blur", "image", "J.", "Opt", "soc", "Am.", "15", "1512", "1519", "arowin", "C.", "B.", "1994", "robust", "noniterative", "computationally", "efficient", "modification", "vab", "cittert", "deconvolution", "optical", "figure", "JOSA", "11", "10", "2571", "2583", "ACM", "transaction", "Graphics", "Vol", "26", "no.", "Article", "publication", "date", "July", "2007" ],
  "content" : "\n  \n    b34d2ea8a90f678fecabbb8480fecad1515a05d91195ddc967d529da0070a20d\n    oru\n    10.1145/1239451.1239452\n    Name identification was not possible. \n  \n  \n    \n      \n        Image Deblurring with Blurred/Noisy Image Pairs\n      \n      Lu Yuan 1 Jian Sun 2 Long Quan 1 Heung-Yeung Shum 2 1 The Hong Kong University of Science and Technology 2 Microsoft Research Asia\n      \n        \n      \n      (a) blurred image (b) noisy image\n      \n        Figure 1: Photographs in a low light environment. (a) Blurred image (with shutter speed of 1 second, and ISO 100) due to camera shake. (b) Noisy image (with shutter speed of 1/100 second, and ISO 1600) due to insufficient light. (c) Noisy image enhanced by adjusting level and gamma. (d) Our deblurred image.\n      \n      Taking satisfactory photos under dim lighting conditions using a hand-held camera is challenging. If the camera is set to a long exposure time, the image is blurred due to camera shake. On the other hand, the image is dark and noisy if it is taken with a short exposure time but with a high camera gain. By combining information extracted from both blurred and noisy images, however, we show in this paper how to produce a high quality image that cannot be obtained by simply denoising the noisy image, or deblurring the blurred image alone. Our approach is image deblurring with the help of the noisy image. First, both images are used to estimate an accurate blur kernel, which otherwise is difficult to obtain from a single blurred image. Second, and again using both images, a residual deconvolution is proposed to significantly reduce ringing artifacts inherent to image deconvolution. Third, the remaining ringing artifacts in smooth image regions are further suppressed by a gain-controlled deconvolution process. We demonstrate the effectiveness of our approach using a number of indoor and outdoor images taken by off-the-shelf hand-held cameras in poor lighting environments.\n    \n    \n      \n        1 Introduction\n      \n      Capturing satisfactory photos under low light conditions using a hand-held camera can be a frustrating experience. Often the photos  taken are blurred or noisy. The brightness of the image can be increased in three ways. First, to reduce the shutter speed. But with a shutter speed below a safe shutter speed (the reciprocal of the focal length of the lens, in the unit of seconds), camera shake will result in a blurred image. Second, to use a large aperture. A large aperture will however reduce the depth of field. Moreover, the range of apertures in many cameras is very limited. Third, to set a high ISO. However, the high ISO image is very noisy because the noise is amplified as the camera?s gain increases. To take a sharp image in a dim lighting environment, the best settings are: safe shutter speed, the largest aperture, and the highest ISO. Even with this combination, the captured image may still be dark and very noisy. Typically, two kinds of degraded image can be taken in the low light conditions. One is a blurred image which is taken with a slow shutter speed and a low ISO setting, as shown in Figure 1(a) . With enough light, it has the correct color, intensity and a high SignalNoise Ratio (SNR). But it is blurry due to camera shake. The other is an underexposed and noisy image with a fast shutter speed and a high ISO setting, as shown in Figure 1(b) . It is sharp but very noisy due to insufficient exposure and high camera gain. The colors of this image are also partially lost due to low contrast. Recovering a high quality image from a very noisy image is no easy task as fine image details and textures are concealed in noise. Denoising [Portilla et al. 2003] cannot completely separate signals from noise. On the other hand, deblurring from a single blurred image is a challenging blind deconvolution problem both blur kernel (or Point Spread Function) estimation and image deconvolution are highly under-constrained. Moreover, unpleasant artifacts (e.g., ringing) from image deconvolution, even when using a perfect kernel, also appear in the reconstructed image. Deblurring with blurred/noisy image pair has been proposed by Lim and Silverstein [2006] 1 . In this paper, we also use a blurred/noisy image pair, but describe an approach that estimates a much more accurate blur kernel and produces a deblurred image with almost no ringing. Like most previous image deblurring approaches, we\n      ACM Reference Format Yuan, L., Sun, J., Quan, L., Shum, H. 2007. Image Deblurring With Blurred/Noisy Image Pairs. ACM Trans. Graph. 26, 3, Article 1 (July 2007), 10 pages. DOI = 10.1145/1239451.1239452 http://doi.acm . org/10.1145/1239451.1239452. Copyright Notice Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or direct commercial advantage and that copies show this notice on the first page or initial screen of a display along with the full citation. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers, to redistribute to lists, or to use any component of this work in other works requires prior specific permission and/or a fee. Permissions may be requested from Publications Dept., ACM, Inc., 2 Penn Plaza, Suite 701, New York, NY 10121-0701, fax +1 (212) 869-0481, or permissions@acm.org . ? 2007 ACM 0730-0301/2007/03-ART1 $5.00 DOI 10.1145/1239451.1239452 http://doi.acm.org/10.1145/1239451.1239452\n      (c) enhanced noisy image (d) our deblurred result\n      1 We thank the reviewers for pointing out Lim and Silverstein [2006]?s work during the rebuttal phase.\n      ACM Transactions on Graphics, Vol. 26, No. 3, Article 1, Publication date: July 2007.\n      1-2\n      ?\n      Yuan et al.\n      assume that the image blur can be well described by a single blur kernel caused by camera shake and the scene is static. Inspired by [Fergus et al. 2006], we convert the blind deconvolution problem into two non-blind deconvolution problems non-blind kernel estimation and non-blind image deconvolution. In kernel estimation, we show that a very accurate initial kernel can be recovered from the blurred image by exploiting the large scale, sharp image structures in the noisy image. Our approach is also able to handle larger kernels than those recovered by [Fergus et al. 2006] using a single blurred image. To greatly reduce the ?ringing? artifacts that commonly result from the image deconvolution, we propose a residual deconvolution approach. We also propose a gain-controlled deconvolution to further suppress the ringing artifacts in smooth image regions. All three steps kernel estimation, residual deconvolution, and gaincontrolled deconvolution take advantage of both images. The final reconstructed image is sharper than the blurred image and clearer than the noisy image, as shown in Figure 1(d) . Our approach is practical despite that we require two images. We have found that the motion between two blurred/noisy images, when taken in a quick succession, is mainly a translation. This is significant because the kernel estimation is independent of the translation, which only results in an offset of the kernel. We will describe how to acquire and align such image pairs in Section 7.\n      \n        2 Previous Work\n        Single image deblurring. Image deblurring can be categorized into two types: blind deconvolution and non-blind deconvolution. The former is more difficult since the blur kernel is unknown. A comprehensive literature review can be found in [Kundur and Hatzinakos 1996]. As demonstrated in [Fergus et al. 2006], the real kernel caused by camera shake is complex, beyond a simple parametric form (e.g., single one-direction motion or a gaussian) assumed in previous approaches [Reeves and Mersereau 1992; Y. Yitzhaky and Kopeika. 1998; Caron et al. 2002; Jalobeanu et al. 2002]. In [Fergus et al. 2006], natural image statistics together with a sophisticated variational Bayes inference algorithm are used to estimate the kernel. The image is then reconstructed using a standard non-blind deconvolution algorithm. Very nice results are obtained when the kernel is small (e.g. 30 ? 30 pixels or fewer) [Fergus et al. 2006]. Kernel estimation for a large blur is, however, inaccurate and unreliable using a single image. Even with a known kernel, non-blind deconvolution [Geman and Reynolds 1992; Zarowin 1994; Neelamani et al. 2004] is still under-constrained. Reconstruction artifacts, e.g., ?ringing? effects or color speckles, are inevitable because of high frequency loss in the blurred image. The errors due to sensor noise and quantizations of the image/kernel are also amplified in the deconvolution process. For example, more iterations in the Richardson-Lucy (RL) algorithm [H. Richardson 1972] will result in more ?ringing? artifacts. In our approach, we significantly reduce the artifacts in a non-blind deconvolution by taking advantage of the noisy image. Recently, spatially variant kernel estimation has also been proposed in [Bardsley et al. 2006]. In [Levin 2006], the image is segmented into several layers with different kernels. The kernel in each layer is uni-directional and the layer motion velocity is constant. Hardware based solutions [Nikon 2005] to reduce image blur include lens stabilization and sensor stabilization. Both techniques physically move an element of the lens, or the sensor, to counterbalance the camera shake. Typically, the captured image can be as sharp as if it were taken with a shutter speed 2-3 stops faster.  Single image denoising. Image denoising is a classic problem extensively studied. The challenge of image denoising is how to compromise between removing noise and preserving edge or texture. Commercial softwares, e.g., ?NeatImage? (www.neatimage.com) and ?Imagenomic? (www.imagenomic.com), use wavelet-based approaches [Simoncelli and Adelson 1996; Portilla et al. 2003]. Bilateral filtering [Tomasi and Manduchi 1998; Durand and Dorsey 2002] has also been a simple and effective method widely used in computer graphics. Other approaches include anisotropic diffusion [Perona and Malik 1990], PDE-based methods [Rudin et al. 1992], fields of experts [Roth and Black 2005], and nonlocal methods [Buades et al. 2005]. Multiple images deblurring and denoising. Deblurring and denoising can benefit from multiple images. Images with different blurring directions [Bascle et al. 1996; Rav-Acha and Peleg 2000; Rav-Acha and Peleg 2005] can be used for kernel estimation. In [Liu and Gamal 2001], a CMOS sensor can capture multiple high-speed frames within a normal exposure time. The pixel with motion replaced with the pixel in one of the high-speed frames. Raskar et al. [2006] proposed a ?fluttered shutter? camera which opens and closes the shutter during a normal exposure time with a pseudo-random sequence. This approach preserves high frequency spatial details in the blurred image and produces impressive results, assuming the blur kernel is known. Denoising can be performed by a joint/cross bilateral filter using flash/no-flash images [Petschnigg et al. 2004; Eisemann and Durand 2004], or by a spatio-temporal filter for video sequences [Bennett and McMillan 2005]. Hybrid imaging system [Ben-Ezra and Nayar 2003] consists of a primary sensor (high spatial resolution) and a secondary sensor (high temporal resolution). The secondary sensor captures a number of low resolution, sharp images for kernel estimation. Our approach estimates the kernel only from two images, without the need for special hardware. Another related work [Jia et al. 2004] also uses a pair of images, where the colors of the blurred image are transferred into the noisy image without kernel estimation. But this approach is limited to the case that the noisy image has a high SNR and fine details. The work most related to ours is [Lim and Silverstein 2006] which also makes use of a short exposure image to help estimate the kernel and deconvolution. The kernel is estimated in the linear leastsquares sense using two images. Their works has also suggested an application for defocus using large/small aperture images. However, their work does not show any results or analysis. In this paper, we demonstrate that our proposed techniques can obtain much accurate kernel compared with Lim and Silverstein?s approach, and produce almost artifact-free image by a proposed de-ringing approach in deconvolution.\n      \n      \n        3 Problem Formulation\n        We take a pair of images: a blurred image B with a slow shutter speed and low ISO, and a noisy image N with high shutter speed and high ISO. The noisy image is usually underexposed and has a very low SNR since camera noise is dependent on the image intensity level [Liu et al. 2006]. Moreover, the noise in the high ISO image is also larger than that in the low ISO image since the noise is amplified by camera gain. But the noisy image is sharp because we use a fast shutter speed that is above the safe shutter speed. We pre-multiply the noisy image by a ratio ISO ISO N B ?t ?t B N to compensate for the exposure difference between the blurred and noisy images, where ?t is the exposure time. We perform the multiplication in irradiance space then go back to image space if the camera response curve [Debevec and Malik 1997] is known. Otherwise, a gamma\n        ACM Transactions on Graphics, Vol. 26, No. 3, Article 1, Publication date: July 2007.\n        Image Deblurring with Blurred/Noisy Image Pairs\n        ?\n        1-3\n        ( ? = 2.0) curve is used as an approximation. 3.1 Our approach\n        Our goal is to reconstruct a high quality image I using the input images B and N\n        \n          1\n          B = I ? K,\n        \n        where K is the blur kernel and ? is the convolution operator. For the noisy image N, we compute a denoised image N D [Portilla et al. 2003] (See Section 7 for details). N D loses some fine details in the denoising process, but preserves the large scale, sharp image structures. We represent the lost detail layer as a residual image ?I:\n        \n          2\n          I = N D + ?I.\n        \n        Our first important observation is that the denoised image N D is a very good initial approximation to I for the purpose of kernel estimation from Equation (1). The residual image ?I is relatively small with respect to N D . The power spectrum of the image I mainly lies in the denoised image N D . Moreover, the large scale, sharp image structures in N D make important contributions for the kernel estimation. As will be shown in our experiments on synthetic and real images, accurate kernels can be obtained using B and N D in nonblind convolution. Once K is estimated, we can again use Equation (1) to non-blindly deconvolute I, which unfortunately will have significant artifacts, e.g, ringing effects. Instead of recovering I directly, we propose to first recover the residual image ?I from the blurred image B. By combining Equations (1) and (2), the residual image can be reconstructed from a residual deconvolution:\n        \n          3\n          ?B = ?I ? K,\n        \n        where ?B = B ? N D ? K is a residual blurred image. Our second observation is that the ringing artifacts from residual deconvolution of ?I (Equation (3)) are smaller than those from deconvolution of I (Equation (1)) because ?B has a much smaller magnitude than B after being offset by N D ? K. The denoised image N D also provides a crucial gain signal to control the deconvolution process so that we can suppress ringing artifacts, especially in smooth image regions. We propose a de-ringing approach using a gain-controlled deconvolution algorithm to further reduce ringing artifacts. The above three steps kernel estimation (Section 4), residual deconvolution (Section 5), and de-ringing (Section 6) are iterated to refine the estimated blur kernel K and the deconvoluted image I.\n      \n      \n        4 Kernel Estimation\n        In this section, we show that a simple constrained least-squares optimization is able to produce a very good initial kernel. Iterative kernel estimation. The goal of kernel estimation is to find the blur kernel K from B = I ? K with the initialization I = N D . In vector-matrix form, it is b = Ak, where b and k are the vector forms of B and K, and A is the matrix form of I. Lim and Silverstein [2006] compute the kernel k by solving b = Ak in the linear least-squares. However, the estimated kernel by this simple approach may be poor, as shown in Figure 2 (f). To obtain a better kernel, we use Tikhonov regularization and hysteresis thersholding in scale space. Regularization. To stabilize the solution, we use Tikhonov regularization method with a positive scalar ? by solving min k ||Ak ?\n        \n          \n        \n        (a ) blurry images and true kernels\n        \n          \n        \n        (b ) noisy image (c ) denoised image\n        \n          \n        \n        (d) (e) Results by Fergus et.al. (f)\n        \n          \n        \n        (g) (h) Our Results (i)\n        \n          Figure 2: Kernel Estimation. Two blurred images are synthesized from a\n        \n        true image (also shown in Figure 4(e) ). (d) Matlab?s deconvblind routine results. (e) Fergus?s result at finest 4 levels. (f) Lim and Silverstein?s result. (g) estimated kernels without hysteresis thresholding. (h) our result at the finest 4 levels. (i) true kernels.\n        b|| 2 + ? 2 ||k|| 2 . The default value of ? is set at 5. The solution is given by (A T A + ? 2 I)k = A T b in closed-form if there are no other constraints on the kernel k. But a real blur kernel has to be non-negative and preserve energy, so the optimal kernel is obtained from the following optimization system:\n        \n          4\n          min ||Ak ? b|| 2 + ? 2 ||k|| 2 , subject to k i ? 0, and ? k i = 1. k i\n        \n        We adopt the Landweber method [Engl et al. 2000] to iteratively update as follows. 1. Initialize k 0 = ? , the delta function. 2. Update k n+1 = k n + ? (A T b ? (A T A + ? 2 I)k n ). 3. Set k i n+1 = 0 if k i n+1 < 0, and normalize k i n+1 = k i n+1 / ? i k i n+1 . ? is a scalar that controls the convergence. The iteration stops when the change between two steps is sufficiently small. We typically run about 20 to 30 iterations by setting ? = 1.0. The algorithm is fast using FFT, taking about 8 to 12 seconds for a 64 ? 64 kernel and a 800 ? 600 image.\n        ACM Transactions on Graphics, Vol. 26, No. 3, Article 1, Publication date: July 2007.\n        1-4\n        ?\n        Yuan et al.\n        \n          \n        \n        (a) blurred/noise pair (b) zoom in (c)\n        \n          Figure 3: Blurred and noisy images from the light-blue box in (a) are\n        \n        zoomed-in in (b). The top image in (c) is a zoomed-in view of the lightorange box in (a), revealing the true kernel. The middle image in (c) is the estimated kernel using only image patches in (b). The bottom image in (c) is the estimated kernel using the whole image.\n        Hysteresis thresholding in scale space. The above iterative algorithm can be implemented in scale space to make the solution to overcome the local minimal. A straightforward method is to use the kernel estimated at the current level to initialize the next finer level. However, we have found that such initialization is insufficient to control noise in the kernel estimation. The noise or errors at coarse levels may be propagated and amplified to fine levels. To suppress noise in the estimate of the kernel, we prefer the global shape of the kernel at a fine level to be similar to the shape at its coarser level. To achieve this, we propose a hysteresis thresholding [Canny 1986] in scale space. At each level, a kernel mask M is defined by thresholding the kernel values, M i = 1 if k i > tk max , where t is a threshold and k max is the maximum of all kernel values. We compute two masks M low and M high by setting two thresholds t low and t high . M low is larger and contains M high . After kernel estimation, we set all elements of K l outside the mask M high to zero to reduce the noise at level l. Then, at the next finer level l + 1, we set all elements of K l+1 outside the up-sampled mask of M low to zero to further reduce noise. This hysteresis thresholding is performed from coarse to fine. ? The pyramids are constructed using a downsampling factor of 1/ 2 until the kernel size at the coarsest level reaches 9 ? 9. We typically choose t low = 0.03, and t high = 0.05. Results and discussion. We first compare our estimated kernel with the true kernel using a synthetic example. Figures 2(a-c) show two blurred images, a noisy image, and a denoised image. The blurred images are synthesized with two 41 ? 41 known kernels. Figure 2(d) shows kernels estimated by Matlab?s deconvblind routine (a blind deconvolution) using the denoised image N D as initialization. Figure 2(e) shows coarse-to-fine kernels (the finest 4 levels) estimated by Fergus?s algorithm only using the blurred image [Fergus et al. 2006]. The Matlab code is released by Fergus ( http://people.csail.mit.edu/fergus/). We exhaustively tune all options in Fergus?s algorithm and select different regions in the image to produce the best results. Fergus?s algorithm recovers much better kernels than those using Matlab?s blind deconvolution. Figure 2(f) is result from [Lim and Silverstein 2006]. In comparison, our estimated kernels in Figure 2(h) are very close to the true kernels in in Figure 2(i) because we solve a non-blind kernel estimation problem. The fine details and thin structures of the kernels are recovered. Figure 2(g) also shows our kernel estimation without hysteresis thresholding, which is very noisy. Figure 3 shows our result on real images. Light-blue trajectories caused by highlights in the scene clearly reveal the accurate shape\n        \n          \n        \n        (a) standard RL decovolution\n        \n          \n        \n        (b) residual deconvolution\n        \n          \n        \n        (c) residual deconvolution + de-ringing\n        \n          \n        \n        (d) gain map (e) true image\n        \n          Figure 4: Deconvolution using true kernels. All results are generated after\n        \n        20 iterations. Note that standard RL results contain unpleasant ?ringing? artifacts dark and light ripples around strong image features.\n        of the kernel. One such trajectories is shown in Figure 3(c) . We also compare two kernels using selected image patches and the whole image. The recovered kernels have very similar shape to the lightblue trajectory, as shown in Figure 3(c) . Kernel estimation is insensitive to the selected regions. The kernel size is very large, with 92 ? 92 pixels.\n      \n      \n        5 Residual Deconvolution\n        Given the blur kernel K, the true image can be reconstructed from B = K ? I. Figure 4(a) shows the deconvolution results using a standard Richardson-Lucy (RL) algorithm after 20 iterations with the true kernels. The resulting images contain visible ?ringing? artifacts, with dark and light ripples around bright features in the image. The ringing artifacts often occur with iterative methods, such as the RL algorithm. More iterations introduce not only more image details but also more ringing. Fergus et al. [2006] also observed this issue from their results.\n        ACM Transactions on Graphics, Vol. 26, No. 3, Article 1, Publication date: July 2007.\n        Image Deblurring with Blurred/Noisy Image Pairs\n        ?\n        1-5\n        1\n        (a) B (b) N D (c) (d) ?B = B ? N D ? K (e) ?I (f) I = N D + ?I\n        \n          Figure 5: Residual deconvolution. (a-b) are the blurred signal and de-\n        \n        noised signal. The blur kernel is a box filter. (c) is the standard deconvolution result from (a). (d-e) are the blurred residual signal and its deconvolution result. (f) is the residual deconvolution result. Notice that ringing artifact in (f) is smaller than that in (c).\n        The ringing effects are due to the well-known Gibbs phenomena in Fourier analysis at discontinuous points. The discontinuities could be at image edge points, boundaries or are artificially introduced by the inadequate spatial sampling of the images or the kernels. The larger the blur kernel, the stronger the ringing artifacts are. The Gibbs oscillations have an amplitude independent of the cutoff frequencies of the filter, but are always proportional to the signal jump at the discontinuous points. The key to our approach is that we perform the deconvolution on relative image quantities to reduce the absolute amplitude of the signals. Instead of doing the deconvolution directly on the image B, we perform deconvolution on the residual blurred image ?B = ?I ? K to recover the residual image ?I. The final reconstructed image is I = N D + ?I. The standard RL algorithm is one of ratio-based iterative approaches. It enforces the non-negativity of pixel values. When using RL algorithms, the residual images should be offset by adding the constant 1, ?I ? ?I + 1 and ?B ? ?B + 1, as all images are normalized to range [0,1]. After each iteration, the residual image is offset back by subtracting the constant 1:\n        \n          5\n          ?B + 1 ?I n+1 = (K ? (?I n + 1) ? K ) ? (?I n + 1) ? 1,\n        \n        where ??? is the correlation operator. Figure 4(b) shows the deconvolution results using the residual RL algorithm with the same number of iterations. Compared with the standard RL results (Figure 4(a)), the ringing effects are reduced. Figure 5 shows a 1D example of the residual deconvolution. The ringing artifacts from ?I are significantly weaker than those in I because the magnitude of ?B (after subtracting N D ? K from B) is much smaller than that of B.\n      \n      \n        6 De-ringing with Gain-controlled RL\n        The residual deconvolution lessened the ringing effects, but cannot fully eliminate them, as shown in Figure 4(b) . Another example is shown in Figure 7(b) . We observe that the ringing effects are most distracting in smooth regions because human perception can tolerate small scale ringing in highly textured regions. We have also found that the mid-scale ringing effects are more noticeable compared with the fine details and large scale sharp structures in the image. Note that the strong ringing is mainly caused by high contrast edges and the magnitude of ringings is proportional to the\n        0 8 0 6 0 4 0 2 0 (a) B (b) N D (c) I gain (d) iter. 1 (e) iter. 10 (f) iter. 20\n        \n          Figure 6: Gain-controlled RL. (a-c) blurred signal, denoised signal, and\n        \n        gain map. The kernel is estimated using B and N D . (d-f) deconvolution results by standard RL (green), residual RL(blue), and gain-controlled RL (red), after iteration 1, 10, and 20. The plot at the bottom-right are blownup views. Notice that the ringing effects are amplified and propagated in standard RL and residual RL, but suppressed in gain-controlled RL.\n        magnitude of image gradient. Based on these observations, we propose a de-ringing approach with a gain-controlled RL algorithm as follows. Gain-controlled Richardson-Lucy (RL). We modify the residual RL algorithm by introducing a gain map I Gain :\n        \n          6\n          ?B + 1 ?I n+1 = I Gain ? (K ? (?I n + 1) ? K ) ? (?I n + 1) ? 1 ,\n        \n        where I Gain is a multiplier (? 1) to suppress the contrast of the recovered residual image ?I. Since RL is a ratio-based algorithm, the ringing effects are amplified at each iteration by the ratio K ? (?I ?B+1 n +1)?K in (6). Multiplying a factor less than one at each iteration will suppress the propagation of the ringing effects. Notice that multiplying a factor will not decrease the overall magnitude of the signal but decrease the contrast of the signal because the ratio K ? (?I ?B+1 n +1)?K will increase the magnitude of the signal in each iteration. At the last iteration, we do not multiply the gain map I Gain . We denote the image reconstructed by gain-controlled RL as I g . Since we want to suppress the contrast of ringing in the smooth regions while avoiding suppression of sharp edges, the gain map should be small in smooth regions and large in others. Hence, we define the gain map using the gradient of the denoised image as:\n        \n          7\n          I Gain = (1 ? ? ) + ? ? ? ||?N D l ||, l\n        \n        where ? controls the influence of the gain map, and ?N D l is the gradient of the denoised image at the lth level of the Gaussian pyramid with standard deviation 0.5. The parameter ? controls the degree of suppression. In all the results shown in this paper, we set the value of ? to 0.2. Aggregated image gradients at multiple scales have also been used in HDR compression [Fattal et al. 2002; Li et al. 2005]. Here, the gradients of denoised image provide a gain signal to adaptively suppress the ringing effects in different regions. Figure 6 shows a 1D example of gain-controlled RL. As we can see, the residual RL can reduce the magnitude of ringing compared with the standard RL. In both standard RL and residual RL, the magnitude of ringing increases and the spatial range of ringing spreads gradually, after each iteration. With the control from the gain map, the ringing effects are suppressed at each iteration\n        ACM Transactions on Graphics, Vol. 26, No. 3, Article 1, Publication date: July 2007.\n        1-6\n        ?\n        Yuan et al.\n        \n          \n        \n        (a) blurred/noisy image (b) I, by residual RL\n        \n          \n        \n        (c) , by gain-controlled RL (d) detail layer I\n        I g\n        \n          \n        \n        (e) final image (f) ringing layer\n        \n          Figure 7: De-ringing. The gain-controlled RL effectively suppresses the\n        \n        ringing artifacts and produces de-ringing image I g in (c). The detail layer I d in (d) is extracted from the residual RL result in (b) with the guidance of the I g using a joint/cross bilateral filter. Our final image in (e) is obtained by adding (c) and (d) together.\n        (e.g., I Gain = 0.8 in flat region). Most importantly, the propagation of ringing is greatly prevented so that the ringing is significantly reduced. Figure 7(c) shows a gain-controlled RL result I g . It is a clean deconvolution result with large scale sharp edges, compared with the residual RL result I in Figure 7(c) . However, some fine details are inevitably suppressed by gain-controlled RL. Fortunately, we are able to add fine scale image details for the residual RL result I using the following approach. Adding details. We extract the fine scale detail layer I d = I ? I from the residual RL result I, where I(x) = F(I(x)) is a filtered image and F(?) is a low-pass filter. In other words, the details layer is obtained by a high-pass filtering. We use joint/cross bilateral filtering [Petschnigg et al. 2004; Eisemann and Durand 2004] as it preserves large scale edges in I g :\n        F(I(x); I g ) = Z 1 x x ?W ? (x) G d (x ? x )G r (I(x) ? I g (x )) ? I x ,\n        where ? d and ? r are spatial and signal deviations of Gaussian kernels G d and G r . W (x) is a neighboring window and Z x is a normalization term. The default values of ? d and ? r are 1.6 and 0.08. Figure 7(d) shows the extracted detail layer.\n        \n          \n        \n        Compact Camera DSRL Camera A B C D A B C D Laptop control Manual control\n        \n          Figure 8: Top left: image pattern. Four corners in red boxes are extracted\n        \n        in two shots as corresponding point pairs. Top right: in-plane rotation correction using two manually specified lines. Bottom: The experiment was repeated by four users (A,B,C,D). In each cell (a 4x4 grid), one color dot represents a difference vector between one of corresponding point pairs in two shots. The grid unit is 0.5 pixel and cell center is the coordinate origin.\n        Composing the gain-controlled RL result I g and the detail layer I d produces our final image, as shown in Figure 7(e) . The ringing layer ( Figure 7(f) ) can also be obtained by subtracting I g from the filtered image I. As we expected, the ringing layer mainly contains the ripple-like ringing effects. In the final result, the ringing artifacts are significantly reduced while the recovered image details from deconvolution are well preserved. Figures 4 (c-d) show another example of results after de-ringing and the computed gain map. To summarize, our iterative image deblurring algorithm consists of the following steps: estimate the kernel K, compute the residual deconvolution image I, compute the gain-controlled deconvolution image I g , and construct the final image by adding the detail layer I d . The iterations stop when the change is sufficiently small.\n      \n      \n        7 Implementation Details\n        Image acquisition In practice, we require one image be taken soon after another, to minimize misalignment between two images. We have two options to capture such image pairs very quickly. First, two successive shots with different camera settings are triggered by a laptop computer connected to the camera. This frees the user from changing camera settings between two shots. Second, we use exposure bracketing built in many DSLR cameras. In this mode, two successive shots can be taken with different shutter speeds by pressing the shutter only once. Using these two options, the time interval between two shots can be very small, typically only 1/5 second which is a small fraction of typical shutter speed (> 1 second) of the blurred image. The motion between two such shots is mainly a small translation if we assume that the blurred image can be modeled by a single blur kernel, i.e., the dominant motion is translation. Because the translation only results in an offset of the kernel, it is unnecessary to align two images. We can also manually change the camera settings between two shots. In this case, we have found that the dominant motions between two shots are translation and in-plane rotation. To correct in-plane rotation, we simply draw two corresponding lines in the blurred/noisy images. In the blurred image, the line can be specified along a straight object boundary or by connecting two corner features. The noisy image is rotated around its image center such  that two lines are virtually parallel. If an advanced exposure bracketing allowing more controls is built to future cameras, this manual alignment will become unnecessary. To quantitatively measure relative motion between two shots, we have performed a usability study. We asked four users to continuously take two shots of a pattern on the wall (as shown in the top right of Figure 8 ), using laptop control and manual control, with a compact camera and a DSLR camera. Two shots have no blur and are taken with the same camera settings. Then, four corresponding points nearby the image corners in two shots are extracted. We correct the transformation (only translation for laptop control, but in-plane rotation after translation for manual control) between two shots. The bottom row of Figure 8 shows registration errors after the correction. In each cell, a dot represents a difference vector between a pair of corresponding points. The overall pixel error is less than 2 pixels at the full image resolution. Not surprisingly, the best aligned image is obtained using laptop control and a DSLR camera. Image denoising For the noisy image N, we apply a wavelet-based denoising algorithm [Portilla et al. 2003] with Matlab code from http://decsai.ugr.es/ ?javier/denoise/. The algorithm is one of the state-of-art techniques and comparable to several commercial denoising softwares. We have also experimented with bilateral filtering but found that it is hard to achieve a good balance between removing noise and preserving details, even with careful parameter tuning.\n        ACM Transactions on Graphics, Vol. 26, No. 3, Article 1, Publication date: July 2007.\n        Image Deblurring with Blurred/Noisy Image Pairs\n        ?\n        1-7\n      \n      \n        8 Experimental Results\n        We apply our approach to a variety of blurred/noisy image pairs in low lighting environments using a compact camera (Canon S60, 5M pixels) and a DSLR camera (Canon 20D, 8M pixels). Comparison. We compare our approach with denoising [Portilla et al. 2003], and a standard RL algorithm. Figure 9 , from left to right, shows a blurred image, noisy image (enhanced), denoised image, standard RL result (using our estimated kernel), and our result. The kernel sizes are 31 ? 31, 33 ? 33, and 40 ? 40 for the three examples. We manually tune the noise parameter (standard deviation) in the denoising algorithm to achieve a best visual balance between noise removal and detail preservation. Compared with denoised results shown in Figure 9(c) , our results in Figure 9(e) contain much more fine details, such as tiny textures on the fabric in the first example, thin grid structures on the crown in the second example, and clear text on the camera in the last example. Because the noise image is scaled up from a very dark, low contrast image, partial color information is also lost. Our approach recovers correct colors through image deblurring. Figure 9(d) shows standard RL deconvoution results which exhibit unpleasant ringing artifacts. Large noise. Figure 10 shows a blurred/noisy pair containing thin hairs and a sweater with detailed structures. The images are captured by the compact camera and the noisy image has very strong noises. Most fabric textures on the sweater are faithfully recovered in our result. The last column in the second row of Figure 10 shows the estimated initial kernel and the refined kernel by the iterative optimization. The iteration number is typically 2 or 3 in our experiments. The refined kernel has a sharper and sparser shape than the initial one. Large kernel. Figure 11 shows an example with a large blur by the compact camera. The kernel size is 87 ? 87 at the original resolution 1200 ? 1600. The image shown here is cropped to 975 ? 1146. Compared with the state-of-art single image kernel estimation approach [Fergus et al. 2006] in which the largest kernel is 30 pixels, our approach using an image pair significantly extends the degree of blur that can be handled. Small noise and kernel. In a moderately dim lighting environment, we may capture input images with small noise and blur, as shown in Figure 12 . This is a typical case assumed in Jia?s approach [2004] which is a color transfer based algorithm. The third and fourth columns in Figure 12 are color transferred result [Jia et al. 2004] and histogram equalization result from the blurred image to the denoised image. Note that the colors cannot be accurately transferred (e.g., Buddha?s golden hat) because both approaches use global mappings. Our result not only recovers more details (e.g., horizontal lines on background) but also has similar colors to the blurred image for all details.  Table 1 shows the shutter speeds and ISO settings of examples in Figure 9 -12. We are able to reduce exposure time (shutter speed ? ISO) by about 10 stops.\n        \n          \n            \n              \n              \n                \n                  \n                  \n                   blurred image\n                   noisy image\n                \n                \n                   art (Fig.\n                   8)\n                   1.0s, ISO 100\n                   1/200s, ISO 1600\n                \n                \n                   crown (Fig.\n                   8)\n                   1.0s, ISO 100\n                   1/90s, ISO 1600\n                \n                \n                   camera (Fig.\n                   8)\n                   0.8s, ISO 100\n                   1/320s, ISO 1600\n                \n                \n                   sweater (Fig.\n                   9)\n                   1.3s, ISO 100\n                   1/80s, ISO 400\n                \n                \n                   dragon (Fig.\n                   10)\n                   1.3s, ISO 100\n                   1/80s, ISO 400\n                \n                \n                   budda (Fig.\n                   11)\n                   1.0s, ISO 100\n                   1/200s, ISO 1600\n                \n              \n            \n          \n          blurred image noisy image art ( Fig. 8 ) 1.0s, ISO 100 1/200s, ISO 1600 crown ( Fig. 8 ) 1.0s, ISO 100 1/90s, ISO 1600 camera ( Fig. 8 ) 0.8s, ISO 100 1/320s, ISO 1600 sweater ( Fig. 9 ) 1.3s, ISO 100 1/80s, ISO 400 dragon ( Fig. 10 ) 1.3s, ISO 100 1/80s, ISO 400 budda ( Fig. 11 ) 1.0s, ISO 100 1/200s, ISO 1600\n          Table 1: Shutter speeds and ISO settings in Figure 9 , 10, 11, and 12.\n        \n      \n      \n        9 Discussion and Conclusion\n        We have proposed an image deblurring approach using a pair of blurred/noisy images. Our approach takes advantage of both images to produce a high quality reconstructed image. By formulating the image deblurring problem using two images, we have developed an iterative deconvolution algorithm which can estimate a very good initial kernel and significantly reduce deconvolution artifacts. No special hardware is required. Our proposed approach uses off-the-shelf, hand-held cameras.  Limitations remain in our approach, however. Our approach shares the common limitation of most image deblurring techniques: assuming a single, spatial-invariant blur kernel. For spatial-variant kernel, it is possible to locally estimate kernels for different parts of the image and blend deconvolution results. Most significantly, our approach requires two images. We envision that the ability to capture such pairs will eventually move into the camera firmware, thereby making two-shots capture easier and faster. In the future, we plan to extend our approach to other image deblurring applications, such as deblurring video sequences, or outof-focus deblurring. Our techniques can also be applied in a hybrid image system [Ben-Ezra and Nayar 2003] or combined with coded exposure photography [Raskar et al. 2006].\n      \n      \n        Acknowledgements\n        We thank the anonymous reviewers for helping us to improve this paper, Stephen Lin for his help in video production and proofreading. This work is performed when Lu Yuan visited Microsoft Research Asia. Lu Yuan and Long Quan were supported in part by Hong Kong RGC porjects 619005 and 619006.\n        ACM Transactions on Graphics, Vol. 26, No. 3, Article 1, Publication date: July 2007.\n        1-8\n        ?\n        Yuan et al.\n        \n          \n          \n          \n        \n        (a) blurred image (b) noisy image (c) denoised image\n        \n          Figure 9: Comparison. The noisy image is enhanced for display. The estimated blur kernel is shown at the bottom-right corner in the last column. The second example is taken by the compact camera and the other two by the DSLR camera. Note that our result contains finer details than the denoised image and less ringing artifacts than the RL deconvolution result. In the last example, ?VEST POCKET KODAK? on the camera can be seen from our result but it is hard, if not impossible, to be recognized from the blurred image or the noisy image. We encourage the reader to see a close-up view in the electronic version. ACM Transactions on Graphics, Vol. 26, No. 3, Article 1, Publication date: July 2007.\n        \n        (d) RL deconvolution (e) our result\n        Image Deblurring with Blurred/Noisy Image Pairs\n        ?\n        1-9\n        \n          \n          Figure 10: Large noise. Top three images: blurred, noisy, and our result. Bottom left four images: zoomed-in views of blurred, noisy, denoised and our result. Bottom right two images are initial kernel (top) and refined kernel (bottom) using our iterative algorithm. The kernel size is 32 ? 32 .\n        \n        \n          \n          Figure 11: Large kernel. Left: blurred image, noisy image, denoised image, and our result. Top right: two image patches in the light-orange boxes in blurred/noisy images reveal the kernel shape. Note that the highlight point in the noisy patch is an ellipse-like shape. Bottom right: estimated 87 ? 87 kernel.\n        \n        \n          \n          Figure 12: Small noise and kernel. This examples is taken by the DSLR camera. The kernel size is 21 ? 21. From left to right: blurred image, noisy image, color transferred denoised image, histogram-equalization denoised image, and our result. Our deblurred result has more details and vivid colors.\n        \n        \n          \n        \n        ACM Transactions on Graphics, Vol. 26, No. 3, Article 1, Publication date: July 2007.\n        1-10\n        ?\n        Yuan et al.\n      \n      \n        References\n        \n          B ARDSLEY , J., J EFFERIES , S., N AGY , J., AND P LEMMONS , R. 2006. Blind iterative restoration of images with spatially-varying blur. In Optics Express, 1767?1782.\n          B ASCLE , B., B LAKE , A., AND Z ISSERMAN , A. 1996. Motion deblurring and super-resolution from an image sequence. In Processings of ECCV, vol. II, 573?582.\n          B EN -E ZRA , M., AND N AYAR , S. K. 2003. Motion deblurring using hybrid imaging. In Processings of CVPR, vol. I, 657?664.\n          B ENNETT , E. P., AND M C M ILLAN , L. 2005. Video enhancement using per-pixel virtual exposures. ACM Trans. Graph. 24, 3, 845?852.\n          B UADES , A., C OLL , B., AND M OREL , J. M. 2005. A non-local algorithm for image denoising. In Proceedings of CVPR, vol. II, 60?65.\n          C ANNY , J. 1986. A computational approach to edge detection. IEEE Trans. on PAMI. 8, 6, 679?698.\n          C ARON , J. N., M., N. N., AND J., R. C. 2002. Noniterative blind data restoration by use of an extracted filter function. Applied optics (Appl. opt.) 41, 32, 68?84.\n          D EBEVEC , P. E., AND M ALIK , J. 1997. Recovering high dynamic range radiance maps from photographs. In Proceedings of SIGGRAPH, 369?378.\n          D URAND , F., AND D ORSEY , J. 2002. Fast bilateral filtering for the display of high-dynamic-range images. In Proceedings of SIGGRAPH, 257?266.\n          E ISEMANN , E., AND D URAND , F. 2004. Flash photography enhancement via intrinsic relighting. ACM Trans. Graph. 23, 3, 673?678.\n          E NGL , H. W., H ANKE , M., AND N EUBAUER , A. 2000. Regularization of Inverse Problems. Kluwer Academic.\n          F ATTAL , R., L ISCHINSKI , D., AND W ERMAN , M. 2002. Gradient domain high dynamic range compression. In Proceedings of SIGGRAPH, 249?256.\n          F ERGUS , R., S INGH , B., H ERTZMANN , A., R OWEIS , S. T., AND F REEMAN , W. T. 2006. Removing camera shake from a single photograph. In ACM Trans. Graph., vol. 25, 787?794.\n          G EMAN , D., AND R EYNOLDS , G. 1992. Constrained restoration and the recovery of discontinuities. IEEE Trans. on PAMI. 14, 3, 367?383.\n          H. R ICHARDSON , W. 1972. Bayesian-based iterative method of image restoration. JOSA, A 62, 1, 55?59.\n          J ALOBEANU , A., B LANC -F ERAUD , L., AND Z ERUBIA , J. 2002. Estimation of blur and noise parameters in remote sensing. In Proceedings of ICASSP, 249?256.\n          J IA , J., S UN , J., T ANG , C.-K., , AND S HUM , H.-Y. 2004. Bayesian correction of image intensity with spatial consideration. In Proceedings of ECCV, 342-354.\n          K UNDUR , D., AND H ATZINAKOS , D. 1996. Blind image deconvolution. IEEE Signal Processing Magazine. 13, 3, 43?64.\n          L EVIN , A. 2006. Blind motion deblurring using image statistics. In Advances in Neural Information Processing Systems (NIPS).\n          L I , Y., S HARAN , L., AND A DELSON , E. H. 2005. Compressing and companding high dynamic range images with subband architectures. ACM Trans. Graph. 24, 3, 836?844.\n          L IM , S. H., AND S ILVERSTEIN , D. A. 2006. Method for deblurring an image. US Patent Application, Pub. No. US2006/0187308 A1, Aug 24, 2006.\n          L IU , X., AND G AMAL , A. 2001. Simultaneous image formation and motion blur restoration via multiple capture. Proceedings of ICASSP..\n          L IU , C., F REEMAN , W., S ZELISKI , R., AND K ANG , S. 2006. Noise estimation from a single image. In Proceedings of CVPR, vol. I, 901?908.\n          N EELAMANI , R., C HOI , H., AND B ARANIUK , R. 2004. ForWaRd: Fourier-wavelet regularized deconvolution for illconditioned systems. IEEE Trans. on Signal Processing 52, 2, 418?433.\n          N IKON . 2005. http://www.nikon.co.jp/main/eng/portfolio/about/tech- nology/nikon technology/vr e/index.htm.\n          P ERONA , P., AND M ALIK , J. 1990. Scale-space and edge detection using anisotropic diffusion. IEEE Trans. on PAMI 12, 7, 629? 639.\n          P ETSCHNIGG , G., A GRAWALA , M., H OPPE , H., S ZELISKI , R., C OHEN , M., AND T OYAMA ., K. 2004. Digital photography with flash and no-flash image pairs. ACM Trans. Graph. 23, 3, 664?672.\n          P ORTILLA , J., S TRELA , V., W AINWRIGHT , M., AND S IMON CELLI ., E. P. 2003. Image denoising using scale mixtures of gaussians in the wavelet domain. IEEE Trans. on Image Processing 12, 11, 1338?1351.\n          R ASKAR , R., A GRAWAL , A., AND T UMBLIN , J. 2006. Coded exposure photography: motion deblurring using fluttered shutter. ACM Trans. Graph. 25, 3, 795?804.\n          R AV -A CHA , A., AND P ELEG , S. 2000. Restoration of multiple images with motion blur in different directions. IEEE Workshop on Applications of Computer Vision.\n          R AV -A CHA , A., AND P ELEG , S. 2005. Two motion-blurred images are better than one. Pattern Recogn. Lett. 26, 3, 311?317.\n          R EEVES , S. J., AND M ERSEREAU , R. M. 1992. Blur identification by the method of generalized cross-validation. IEEE Trans. on Image Processing. 1, 3, 301?311.\n          R OTH , S., AND B LACK , M. J. 2005. Fields of experts: A framework for learning image priors. In Proceedings of CVPR, vol. II, 860?867.\n          R UDIN , L., O SHER , S., AND F ATEMI , E. 1992. Nonlinear total variation based noise removal algorithms. Phys. D. 60, 259?268.\n          S IMONCELLI , E. P., AND A DELSON , E. H. 1996. Noise removal via bayesian wavelet coring. In Proceedings of ICIP, vol. I, 379? 382.\n          T OMASI , C., AND M ANDUCHI , R. 1998. Bilateral filtering for gray and color images. In Proceedings of ICCV, 839?846.\n          Y. Y ITZHAKY , I. M OR , A. L., AND K OPEIKA ., N. 1998. Direct method for restoration of motion blurred images. J. Opt. Soc. Am., A 15, 6, 1512?1519.\n          Z AROWIN , C. B. 1994. Robust, noniterative, and computationally efficient modification of vab cittert deconvolution optical figuring. JOSA, A 11, 10, 2571?2583.\n        \n        ACM Transactions on Graphics, Vol. 26, No. 3, Article 1, Publication date: July 2007.\n      \n    \n  ",
  "resources" : [ ]
}