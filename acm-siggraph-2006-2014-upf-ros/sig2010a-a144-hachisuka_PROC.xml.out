{
  "uri" : "sig2010a-a144-hachisuka_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2010a/a144-hachisuka_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "A Progressive Error Estimation Framework for Photon Density Estimation",
    "published" : "2010",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Toshiya-Hachisuka",
      "name" : "Toshiya",
      "surname" : "Hachisuka"
    }, {
      "uri" : "http://drinventor/Wojciech-Jarosz",
      "name" : "Wojciech",
      "surname" : "Jarosz"
    }, {
      "uri" : "http://drinventor/Henrik Wann-Jensen",
      "name" : "Henrik Wann",
      "surname" : "Jensen"
    } ]
  },
  "bagOfWords" : [ "part", "we", "error", "computation", "we", "extend", "progressive", "photon", "map", "operate", "smooth", "kernel", "we", "result", "demonstrate", "how", "we", "error", "estimation", "framework", "work", "well", "realistic", "synthetic", "scene", "we", "demonstrate", "we", "estimate", "error", "capture", "error", "due", "noise", "bias", "under", "complex", "light", "transport", "although", "error", "estimation", "itself", "already", "high", "value", "example", "application", "we", "also", "demonstrate", "can", "use", "automatically", "terminate", "render", "without", "any", "subjective", "trial", "error", "user", "fact", "error", "unbiased", "Monte", "Carlo", "method", "appear", "variance", "have", "be", "use", "many", "application", "we", "focus", "photon", "density", "estimation", "which", "we", "focus", "well", "Myszkowski", "-lsb-", "1997", "-rsb-", "propose", "use", "multiple", "radius", "during", "radiance", "estimation", "estimate", "bias", "select", "estimate", "minimize", "error", "heuristic", "order", "estimate", "bias", "we", "method", "estimate", "derivative", "illumination", "use", "kernel", "derivative", "radiance/density", "estimation", "progressive", "density", "estimation", "we", "derivative", "estimate", "converge", "correct", "solution", "bound", "memory", "consumption", "gradient", "computation", "light", "transport", "itself", "have", "be", "study", "previous", "work", "-lsb-", "Ward", "Heckbert", "1992", "Ramamoorthi", "et", "al.", "2007", "Jarosz", "et", "al.", "2008", "-rsb-", "we", "introduce", "alternative", "method", "which", "integrate", "easily", "we", "error", "estimation", "framework", "subsequent", "pass", "perform", "photon", "trace", "accumulate", "statistics", "refine", "radiance", "estimate", "measurement", "point", "way", "radiance", "estimate", "consistent", "therefore", "converge", "correct", "solution", "limit", "we", "summarize", "we", "notation", "Table", "each", "measurement", "point", "track", "photon", "which", "fall", "within", "its", "search", "radius", "accumulate", "power", "where", "outgoing", "direction", "measurement", "point", "incoming", "direction", "photon", "brdf", "-lrb-", "-rrb-", "flux", "carry", "photon", "number", "photon", "emit", "each", "pass", "we", "use", "express", "total", "number", "emit", "photon", "up", "include", "pass", "i.", "note", "radius", "number", "intercept", "photon", "both", "depend", "measurement", "point", "we", "omit", "dependency", "we", "notation", "simplicity", "after", "first", "pass", "statistics", "refine", "perform", "additional", "photon", "trace", "pass", "each", "emit", "more", "photon", "during", "pass", "+1", "additional", "photon", "intercept", "we", "use", "all", "+1", "photon", "keep", "radius", "fix", "we", "could", "obtain", "improved", "estimate", "flux", "use", "all", "+1", "photon", "just", "accumulate", "additional", "flux", "accomplish", "reduce", "radius", "statistically", "keep", "only", "fraction", "intercept", "photon", "each", "iteration", "reduce", "radius", "compute", "account", "accumulate", "flux", "next", "iteration", "compute", "+1", "+1", "+1", "-lrb-", "-rrb-", "+1", "-lrb-", "-rrb-", "+1", "-lrb-", "-rrb-", "+1", "well", "know", "stochastic", "error", "bound", "unbiased", "Monte", "Carlo", "render", "method", "can", "estimate", "use", "variance", "estimate", "reason", "error", "cause", "purely", "noise", "due", "stochastic", "sampling", "however", "bias", "Monte", "Carlo", "render", "method", "have", "bias", "addition", "noise", "since", "photon", "density", "estimation", "include", "progressive", "photon", "mapping", "bias", "rendering", "method", "we", "need", "take", "account", "both", "bias", "noise", "error", "estimate", "bias", "method", "error", "can", "express", "sum", "bias", "estimate", "noise", "due", "sampling", "-lrb-", "we", "denote", "exact", "bias", "since", "bias", "change", "each", "iteration", "progressive", "photon", "mapping", "-rrb-", "where", "estimate", "radiance", "true", "radiance", "bias-noise", "decomposition", "have", "be", "use", "prior", "work", "-lrb-", "-lsb-", "schregle", "2003", "-rsb-", "-rrb-", "well", "applicable", "any", "bias", "Monte", "Carlo", "method", "include", "progressive", "photon", "mapping", "now", "assume", "we", "know", "bias", "sample", "variance", "central", "limit", "theorem", "state", "infinite", "number", "sample", "where", "we", "use", "denote", "distribution", "left-hand-side", "converge", "standard", "normal", "distribution", "-lrb-", "-rrb-", "also", "indicate", "variancebased", "error", "estimation", "unbiased", "method", "fundamentally", "approximation", "unless", "we", "use", "infinite", "number", "sample", "we", "error", "estimation", "framework", "also", "base", "few", "approximation", "we", "describe", "throughout", "paper", "base", "error", "distribution", "we", "can", "derive", "stochastic", "bind", "-lrb-", "confidence", "interval", "-rrb-", "radiance", "estimation", "use", "t-distribution", "where", "percentile", "t-distribution", "degree", "give", "interval", "-lsb-", "-rsb-", "contain", "iv", "probability", "also", "important", "note", "interval", "-lsb-", "-rsb-", "error", "rather", "error", "bias", "point", "probability", "usually", "provide", "user", "desirable", "confidence", "bind", "more", "information", "concept", "can", "find", "statistics", "textbook", "Hastie", "et", "al.", "-lsb-", "2001", "-rsb-", "other", "word", "bias", "just", "affect", "error", "uniform", "constant", "shift", "error", "distribution", "which", "provide", "single-valued", "stochastic", "error", "bind", "absolute", "error", "theoretically", "give", "we", "confidence", "interval", "larger", "confidence", "than", "user-specified", "confidence", "??", "note", "above", "equation", "do", "use", "bind", "bias", "bias", "itself", "dependence", "error", "absolute", "intensity", "radiance", "often", "desirable", "since", "human", "visual", "system", "more", "sensitive", "contrast", "than", "absolute", "difference", "intensity", "-lsb-", "glassner", "1995", "-rsb-", "-lrb-", "13", "-rrb-", "interval", "confidence", "larger", "than", "note", "above", "equation", "Equation", "13", "theoretically", "valid", "only", "we", "know", "exact", "bias", "exact", "sample", "variance", "challenge", "here", "both", "exact", "bias", "exact", "sample", "variance", "unknown", "moreover", "we", "do", "have", "estimator", "variance", "progressive", "photon", "mapping", "concrete", "progressive", "density", "estimation", "have", "different", "formulation", "than", "standard", "radiance", "estimation", "sample", "correlate", "due", "radius", "reduction", "key", "contribution", "we", "work", "estimator", "which", "we", "describe", "follow", "section", "we", "first", "show", "bias", "progressive", "radiance", "estimation", "actually", "average", "bias", "induce", "kernel", "radius", "each", "iteration", "where", "bias", "radiance", "estimate", "use", "only", "photon", "from", "th", "pass", "we", "introduce", "bias", "estimator", "use", "standard", "density", "estimation", "which", "apply", "progressive", "photon", "mapping", "obtain", "equation", "14", "we", "expand", "estimate", "radiance", "+1", "-lrb-", "-rrb-", "th", "iteration", "use", "refinement", "procedure", "describe", "section", "where", "-lrb-", "-rrb-", "radiance", "estimate", "use", "only", "photon", "from", "th", "pass", "note", "+1", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "because", "+1", "-lrb-", "-rrb-", "include", "intercept", "photon", "only", "th", "iteration", "before", "radius", "reduction", "radius", "reduction", "happen", "after", "flux", "accumulation", "-lrb-", "i.e.", "radius", "use", "photon", "query", "-lrb-", "-rrb-", "-rrb-", "key", "observation", "equivalent", "radiance", "estimate", "use", "standard", "radiance", "estimation", "radius", "because", "use", "photon", "only", "from", "th", "pass", "use", "equation", "15", "recursively", "progressive", "radiance", "estimate", "-lrb-", "-rrb-", "express", "finally", "subtract", "-lrb-", "-rrb-", "from", "both", "side", "give", "we", "equation", "14", "we", "can", "apply", "each", "bias", "value", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "17", "-rrb-", "where", "-lrb-", "-rrb-", "dt", "constant", "derive", "from", "kernel", "-lrb-", "-rrb-", "-lrb-", "see", "Appendix", "detail", "-rrb-", "note", "we", "drop", "residual", "term", "proportional", "-lrb-", "-rrb-", "we", "estimation", "thus", "we", "bias", "estimator", "always", "estimate", "approximation", "true", "bias", "however", "estimate", "store", "-lrb-", "-rrb-", "each", "iteration", "progressive", "radiance", "estimation", "tractable", "since", "would", "require", "unbounded", "memory", "we", "use", "relatively", "small", "number", "photon", "per", "iteration", "therefore", "we", "propose", "follow", "approximation", "laplacian", "progressive", "estimate", "-lrb-", "-rrb-", "which", "eliminate", "need", "store", "laplacian", "each", "iteration", "first", "substitute", "equation", "17", "equation", "14", "we", "obtain", "we", "approximate", "summation", "-lrb-", "note", "we", "use", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "finally", "radiance", "estimation", "equation", "16", "we", "can", "expand", "laplacian", "progressive", "estimate", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "use", "recursion", "relation", "equation", "15", "provide", "follow", "identity", "where", "we", "denote", "we", "approximation", "bias", "result", "we", "can", "approximate", "exact", "bias", "just", "compute", "progressive", "estimate", "-lrb-", "-rrb-", "we", "test", "we", "bias", "estimation", "progressive", "photon", "mapping", "scene", "where", "we", "mimic", "soft", "shadow", "boundary", "use", "analytic", "cubic", "smoothstep", "function", "we", "show", "visualization", "result", "radiance", "function", "figure", "-lrb-", "-rrb-", "while", "figure", "-lrb-", "-rrb-", "we", "compare", "actual", "bias", "we", "estimate", "bias", "scene", "sample", "generate", "use", "cubic", "smoothstep", "function", "importance", "sampling", "although", "estimate", "bias", "do", "exactly", "predict", "actual", "bias", "capture", "two", "peak", "bias", "around", "edge", "smoothstep", "function", "well", "zero", "bias", "smooth", "region", "standard", "kernel", "density", "estimation", "variance", "approximate", "-lsb-", "Silverman", "1986", "-rsb-", "where", "-lrb-", "-rrb-", "dt", "approximation", "assume", "sample", "independent", "identically", "distribute", "-lrb-", "i.i.d.", "-rrb-", "note", "sample", "progressive", "radiance", "estimation", "each", "radiance", "estimation", "use", "photon", "from", "only", "th", "iteration", "key", "point", "photon", "trace", "itself", "statistically", "independent", "between", "each", "iteration", "progressive", "photon", "mapping", "only", "dependence", "between", "sample", "cause", "radius", "reduction", "bias-corrected", "sample", "expect", "closer", "statistically", "independent", "since", "dependence", "radius", "remove", "identically", "distribute", "because", "distribute", "accord", "true", "radiance", "l.", "use", "we", "use", "follow", "standard", "procedure", "estimate", "sample", "variance", "each", "iteration", "where", "we", "use", "sample", "however", "we", "find", "effect", "approximation", "statistically", "significant", "practice", "through", "numerical", "experiment", "Figure", "show", "autocorrelation", "bias-corrected", "sample", "almost", "compare", "uncorrected", "sample", "indicate", "sample", "can", "consider", "independent", "Figure", "furthermore", "show", "bias", "correction", "make", "distribution", "noise", "closer", "gaussian", "distribution", "mean", "which", "distribution", "ideal", "i.i.d.", "previously", "describe", "bias", "estimation", "method", "rely", "derivative", "radiance", "-lrb-", "-rrb-", "use", "method", "we", "must", "therefore", "estimate", "derivative", "radiance", "well", "radiance", "itself", "during", "render", "traditional", "photon", "mapping", "derivative", "can", "easily", "estimate", "just", "use", "derivative", "kernel", "section", "we", "provide", "new", "generalize", "formulation", "progressive", "radiance", "estimation", "which", "allow", "arbitrary", "smooth", "kernel", "generalization", "make", "estimation", "derivative", "straightforward", "convergent", "which", "turn", "allow", "we", "estimate", "bias", "more", "accurately", "kernel-based", "density", "estimation", "standard", "extension", "traditional", "density", "estimation", "where", "contribution", "each", "sample", "density", "estimate", "weight", "typically", "smooth", "kernel", "around", "query", "location", "contrast", "standard", "radiance", "estimation", "method", "simply", "replace", "constant", "kernel", "original", "progressive", "radiance", "estimate", "may", "work", "specifically", "since", "radius", "progressive", "radiance", "estimation", "change", "accumulate", "flux", "need", "correct", "after", "radius", "reduction", "adapt", "kernel", "density", "estimation", "progressive", "photon", "mapping", "we", "need", "derive", "equation", "similar", "equation", "-lrb-", "relate", "accumulate", "flux", "before", "reduce", "radius", "+1", "accumulate", "flux", "after", "reduce", "radius", "+1", "-rrb-", "presence", "weighting", "kernel", "accumulate", "flux", "before", "reduce", "radius", "can", "express", "continuous", "setting", "we", "parametrize", "radiance", "over", "circle", "use", "polar", "coordinate", "note", "+1", "function", "-lrb-", "-rrb-", "function", "we", "drop", "dependence", "we", "notation", "simplicity", "accumulate", "flux", "reduce", "radius", "+1", "give", "two", "equation", "we", "can", "express", "+1", "term", "+1", "dr", "dt", "analogously", "+1", "assume", "kernel", "radially", "symmetric", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "above", "expression", "can", "further", "simplify", "swap", "order", "integration", "finally", "simplify", "expression", "further", "we", "assume", "integrate", "radial", "distribution", "radiance", "locally", "constant", "some", "constant", "assumption", "similar", "strict", "locally", "uniform", "density", "assumption", "use", "original", "progressive", "photon", "mapping", "algorithm", "-lsb-", "hachisuka", "et", "al.", "2008", "-rsb-", "although", "end", "result", "look", "similar", "original", "progressive", "photon", "mapping", "distinction", "crucial", "use", "smooth", "kernel", "function", "well", "its", "derivative", "note", "also", "original", "assumption", "imply", "zero", "derivative", "which", "make", "impossible", "use", "derivative", "estimation", "we", "framework", "use", "we", "new", "assumption", "equation", "27", "can", "simplify", "kernel-based", "estimation", "give", "we", "elegant", "way", "estimate", "derivative", "Computing", "derivative", "simply", "involve", "replace", "kernel", "corresponding", "derivative", "kernel", "where", "derivative", "accumulate", "flux", "we", "always", "use", "gradient", "operator", "denote", "gradient", "respect", "position", "parameter", "term", "from", "product", "rule", "omit", "above", "because", "higher-order", "derivative", "can", "derive", "exactly", "same", "way", "simply", "take", "higher-order", "derivative", "kernel", "function", "we", "use", "second", "order", "derivative", "-lrb-", "-rrb-", "order", "estimate", "bias", "equation", "17", "order", "estimate", "derivative", "progressive", "manner", "we", "need", "express", "accumulate", "flux", "derivative", "after", "radius", "reduction", "+1", "term", "accumulate", "value", "before", "radius", "reduction", "+1", "relation", "can", "establish", "differentiate", "equation", "29", "hence", "any", "order", "flux", "derivative", "accumulate", "use", "ratio", "square", "radius", "just", "like", "accumulate", "flux", "again", "only", "change", "term", "implementation", "replace", "kernel", "derivative", "kernel", "same", "thing", "happen", "Epanechnikov", "kernel", "which", "popular", "choice", "standard", "density", "estimation", "we", "therefore", "find", "kernel", "have", "continuous", "boundary", "compute", "nth", "order", "derivative", "-lrb-", "i.e.", "nth", "derivative", "kernel", "must", "go", "edge", "-rrb-", "we", "provide", "example", "kernel", "function", "satisfy", "condition", "Appendix", "order", "investigate", "accuracy", "progressive", "kernel", "radiance", "estimate", "radiance", "derivative", "estimate", "we", "use", "simple", "scene", "point", "light", "source", "where", "all", "value", "can", "compute", "analytically", "Figure", "estimate", "radiance", "value", "match", "analytical", "solution", "very", "closely", "only", "10k", "store", "photon", "we", "have", "implement", "we", "error", "estimation", "top", "implementation", "progressive", "photon", "mapping", "algorithm", "all", "result", "be", "compute", "2.4", "GHz", "Intel", "Core", "q6600", "use", "one", "core", "all", "example", "we", "use", "parameter", "0.8", "progressive", "photon", "mapping", "algorithm", "Figure", "analytic", "investigation", "we", "error", "estimation", "we", "use", "cubic", "ramp", "scene", "describe", "figure", "640000", "sample", "initial", "radius", "1.5", "user-specified", "confidence", "0.95", "graph", "-lrb-", "-rrb-", "show", "estimate", "error", "fact", "above", "actual", "error", "almost", "all", "location", "specify", "we", "further", "investigate", "influence", "bias", "estimation", "noise", "bind", "estimation", "plot", "each", "component", "separately", "graph", "-lrb-", "-rrb-", "note", "we", "framework", "do", "estimate", "bound", "bias", "bias", "itself", "graph", "show", "bias", "estimation", "capture", "error", "due", "bias", "around", "slope", "function", "whereas", "noise", "bind", "estimation", "capture", "error", "due", "sampling", "noise", "around", "flat", "region", "function", "we", "test", "we", "framework", "three", "example", "scene", "reference", "rendering", "show", "Figure", "each", "iteration", "use", "15k", "emit", "photon", "confidence", "specify", "90", "first", "scene", "Cornell", "box", "glass", "sphere", "metal", "sphere", "here", "noise", "dominate", "error", "because", "scene", "compose", "mostly", "large", "flat", "region", "fairly", "uniform", "illumination", "second", "scene", "consist", "three", "flashlight", "model", "scene", "expect", "have", "larger", "bias", "due", "sharp", "caustic", "from", "flashlight", "third", "scene", "room", "lighting", "fixture", "scene", "contain", "both", "sharp", "illumination", "feature", "due", "caustic", "well", "flat", "continuous", "illumination", "which", "realistic", "mixture", "bias", "noise", "error", "note", "both", "flashlight", "scene", "room", "scene", "have", "light", "path", "which", "difficult", "unbiased", "render", "method", "handle", "-lrb-", "sd", "path", "from", "very", "small", "light", "source", "-lsb-", "hachisuka", "et", "al.", "2008", "-rsb-", "-rrb-", "Figure", "show", "behavior", "actual", "error", "estimate", "error", "test", "scene", "we", "pick", "three", "point", "investigate", "actual", "error", "estimate", "error", "show", "leftmost", "column", "figure", "one", "might", "notice", "we", "estimate", "error", "do", "bind", "actual", "error", "some", "point", "point", "room", "scene", "indeed", "expect", "behavior", "because", "we", "error", "estimation", "motivate", "stochastic", "error", "bound", "stochastic", "error", "bound", "definition", "bind", "actual", "error", "some", "probability", "so", "even", "we", "error", "estimate", "perfect", "some", "point", "where", "actual", "error", "higher", "than", "estimation", "expect", "practice", "since", "bias", "estimation", "approximation", "may", "also", "cause", "extra", "overestimation", "underestimation", "actual", "error", "addition", "what", "expect", "from", "exact", "stochastic", "error", "bound", "what", "important", "practice", "whether", "estimate", "error", "respect", "user-specified", "confidence", "order", "check", "we", "compute", "actual", "confidence", "test", "scene", "figure", "ideal", "behavior", "actual", "confidence", "stay", "user-specified", "confidence", "all", "time", "we", "calculate", "actual", "confidence", "percentage", "all", "error", "estimate", "above", "true", "error", "obtain", "use", "reference", "image", "we", "test", "50", "90", "user-specified", "confidence", "although", "calcuated", "confidence", "exactly", "same", "specify", "confidence", "deviation", "from", "user-specified", "confidence", "within", "across", "many", "iteration", "both", "50", "90", "difference", "scene", "yellow", "blue", "image", "figure", "visualize", "whether", "estimate", "error", "above", "error", "per", "pixel", "-lrb-", "yellow", "bound", "blue", "bound", "-rrb-", "note", "also", "error", "estimation", "itself", "become", "more", "reliable", "we", "add", "more", "sample", "because", "magnitude", "error", "estimate", "decrease", "Figure", "show", "ratio", "estimate", "bias", "estimate", "noise", "bind", "use", "15m", "photon", "estimate", "error", "capture", "noise", "flat", "region", "well", "bias", "due", "sharp", "feature", "practical", "scene", "biasto-noise", "ratio", "image", "demonstrate", "importance", "each", "component", "we", "overall", "error", "estimate", "result", "image", "show", "bias", "estimation", "dominate", "error", "estimation", "around", "sharp", "feature", "-lrb-", "show", "red", "-rrb-", "noise", "bind", "estimation", "dominate", "error", "estimation", "within", "flat", "region", "-lrb-", "show", "green", "-rrb-", "unfortunately", "currently", "set", "tedious", "trial-and-error", "user", "example", "application", "we", "error", "estimation", "we", "propose", "automatic", "way", "stop", "render", "process", "without", "specify", "total", "number", "photon", "total", "render", "time", "instead", "we", "stop", "render", "process", "when", "average", "estimated", "error", "over", "image", "below", "user", "specify", "threshold", "each", "iteration", "we", "simply", "compute", "average", "estimated", "error", "over", "all", "measurement", "point", "where", "number", "measurement", "point", "render", "process", "stop", "when", "ave", "thr", "give", "error", "threshold", "thr", "note", "we", "could", "even", "use", "we", "error", "estimation", "individually", "terminate", "computation", "each", "measurement", "point", "since", "error", "estimate", "per", "measurement", "point", "here", "we", "use", "average", "error", "proof", "concept", "show", "we", "error", "estimation", "useful", "practical", "application", "Figure", "-lrb-", "-rrb-", "show", "sequence", "color-code", "image", "actual", "error", "different", "user-specified", "threshold", "we", "plot", "graph", "actual", "average", "relative", "error", "average", "estimate", "error", "Figure", "-lrb-", "-rrb-", "although", "we", "use", "50", "confidence", "terminate", "render", "process", "we", "also", "show", "result", "estimate", "average", "error", "use", "90", "confidence", "reference", "average", "we", "error", "estimate", "use", "50", "confidence", "successfully", "predict", "without", "any", "user", "input", "other", "than", "threshold", "different", "scene", "need", "different", "number", "iteration", "obtain", "sufficient", "quality", "Table", "show", "number", "iteration", "use", "achieve", "specify", "threshold", "note", "even", "though", "flashlight", "scene", "have", "more", "triangle", "than", "Cornell", "box", "scene", "number", "iteration", "achieve", "same", "threshold", "less", "than", "Cornell", "box", "actual", "average", "relative", "error", "achieve", "thr", "0.0625", "0.0465", "0.0448", "0.0437", "Cornell", "box", "scene", "flashlight", "scene", "room", "scene", "respectively", "although", "statement", "different", "scene", "need", "different", "number", "sample", "sound", "trivial", "we", "do", "know", "how", "many", "sample", "need", "unless", "we", "actually", "render", "image", "we", "believe", "even", "simple", "application", "shed", "light", "theoretical", "analysis", "convergence", "behavior", "progressive", "density", "estimation", "which", "still", "unknown", "since", "we", "error", "estimation", "framework", "do", "need", "additional", "photon", "trace", "range", "query", "runtime", "overhead", "due", "error", "estimation", "very", "small", "we", "implementation", "each", "pass", "include", "error", "estimation", "take", "681m", "1291m", "720m", "average", "Cornell", "box", "scene", "flashlight", "scene", "room", "scene", "respectively", "overhead", "due", "error", "estimation", "2.2", "m", "5.9", "m", "3.3", "m", "which", "all", "less", "than", "render", "time", "without", "error", "estimation", "we", "error", "estimation", "framework", "depend", "number", "assumption", "we", "discuss", "some", "issue", "due", "those", "assumption", "we", "make", "section", "help", "reader", "understand", "limitation", "we", "method", "general", "we", "experience", "along", "previous", "work", "conclude", "make", "assumption", "approximation", "probably", "inevitable", "provide", "theoretical", "guarantee", "error", "estimation", "work", "challenge", "first", "derivation", "equation", "10", "exact", "only", "we", "know", "true", "bias", "variance", "since", "we", "approximate", "bias", "variance", "we", "error", "estimation", "finite", "number", "sample", "result", "error", "estimation", "can", "arbitrary", "far", "away", "from", "exact", "error", "even", "approximation", "variance-based", "error", "estimation", "have", "be", "use", "many", "practical", "application", "we", "mention", "section", "we", "therefore", "believe", "use", "approximation", "do", "make", "we", "error", "estimation", "completely", "useless", "practice", "Notice", "however", "we", "do", "claim", "we", "framework", "work", "well", "any", "possible", "scene", "setting", "second", "related", "above", "issue", "we", "bias", "estimation", "consistent", "estimator", "true", "bias", "-lrb-", "i.e.", "do", "give", "we", "true", "bias", "limit", "-rrb-", "turn", "affect", "variance", "estimation", "which", "assume", "i.i.d.", "sample", "after", "bias", "correction", "we", "approximate", "bias", "use", "laplacian", "radiance", "-lrb-", "equation", "17", "-rrb-", "we", "introduce", "one", "additional", "approximation", "between", "equation", "18", "19", "order", "make", "bias", "estimation", "practical", "approximation", "laplacian", "can", "cause", "significant", "error", "bias", "estimation", "-lrb-", "either", "underestimation", "overestimation", "-rrb-", "radiance", "distribution", "contain", "significant", "higher", "order", "derivative", "-lrb-", "higher", "equal", "4th", "order", "-rrb-", "radius", "relatively", "large", "finally", "we", "application", "error", "estimation", "automatic", "render", "termination", "may", "well-suited", "some", "usage", "example", "we", "want", "avoid", "generate", "redundant", "sample", "terminate", "render", "process", "after", "desire", "render", "error", "achieve", "we", "application", "result", "oversample", "due", "slight", "overestimation", "render", "error", "case", "more", "accurate", "error", "estimation", "need", "avoid", "oversampling", "although", "we", "overestimation", "generally", "around", "1.4", "time", "throughout", "many", "iteration", "we", "experiment", "section", "6.1", "could", "mean", "take", "least", "1.4", "1.96", "time", "more", "sample", "than", "absolutely", "necessary", "accord", "-lrb-", "-rrb-", "error", "convergence", "rate", "Monte", "Carlo", "integration", "generate", "redundant", "sample", "would", "require", "estimate", "error", "equal", "exact", "error", "which", "challenge", "accomplish", "general", "we", "have", "present", "error", "estimation", "framework", "progressive", "photon", "mapping", "which", "robust", "wide", "range", "light", "path", "base", "derivation", "stochastic", "error", "bound", "we", "characterize", "error", "use", "estimate", "bias", "estimate", "noise", "bind", "we", "estimate", "bias", "use", "derivative", "radiance", "purpose", "we", "have", "extend", "progressive", "radiance", "estimate", "work", "arbitrary", "smooth", "kernel", "use", "kernel-based", "approach", "we", "can", "compute", "derivative", "radiance", "use", "derivative", "kernel", "we", "have", "show", "bias", "estimate", "can", "use", "construct", "variance", "estimator", "progressive", "radiance", "estimate", "estimate", "error", "capture", "error", "due", "both", "bias", "noise", "under", "complex", "illumination", "give", "user-defined", "confidence", "we", "have", "demonstrate", "we", "error", "estimate", "can", "use", "automatically", "stop", "render", "process", "we", "believe", "we", "work", "first", "step", "towards", "answer", "important", "question", "how", "many", "photon", "need", "render", "scene", "give", "error", "estimate", "we", "can", "try", "accelerate", "progressive", "photon", "mapping", "use", "adaptive", "sampling", "trace", "photon", "part", "scene", "where", "error", "large", "we", "would", "also", "like", "investigate", "error", "estimate", "can", "extend", "include", "stochastic", "progressive", "photon", "mapping", "-lsb-", "hachisuka", "Jensen", "2009", "-rsb-", "which", "would", "need", "estimation", "average", "bias", "over", "unknown", "region", "we", "would", "like", "thank", "Youichi", "Kimura", "-lrb-", "Studio", "Azurite", "-rrb-", "provide", "we", "flashlight", "model", "room", "model", "first", "author", "support", "2008-2009", "ATI", "Fellowship", "Program", "urgathofer", "W.", "1987", "statistical", "method", "adaptive", "stochastic", "sampling", "Computer", "Graphics", "11", "Pergamon", "Press", "New", "York", "amamoorthus", "R.", "AHAJAN", "D.", "ELHUMEUR", "P.", "2007", "first-order", "analysis", "lighting", "shade", "shadow", "ACM", "Trans", "AMASUBRAMANIAN", "M.", "attanaik", "S.", "N.", "REENBERG", "D.", "P.", "1999", "perceptually", "base", "physical", "error", "metric", "realistic", "image", "synthesis", "SIGGRAPH", "99", "Proceedings", "26th", "annual", "conference", "computer", "graphic", "interactive", "technique", "ACM", "Press/Addison-Wesley", "Publishing", "Co.", "New", "York", "NY", "USA", "73", "82", "chregle", "R.", "2003", "Bias", "compensation", "photon", "map", "Forum", "22", "729", "742", "ilverman", "B.", "1986", "density", "estimation", "statistics", "datum", "analysis", "Chapman", "Hall", "New", "York", "NY", "amstorf", "R.", "ENSEN", "H.", "W.", "1997", "adaptive", "smpling", "bias", "estimation", "path", "trace", "Proceedings", "Eurographics", "Workshop", "Rendering", "Techniques", "97", "Springer-Verlag", "London", "UK", "285", "296", "each", "E.", "uiba", "L.", "J.", "1995", "optimally", "combine", "sampling", "technique", "monte", "carlo", "render", "SIGGRAPH", "95", "Conference", "Proceedings", "419", "428", "ALTER", "B.", "ernandez", "S.", "rbree", "a.", "alum", "K.", "ONIKIAN", "M.", "REENBERG", "D.", "P.", "2005", "Lightcuts", "scalable", "approach", "illumination", "ACM", "Trans", "24", "1098", "1107", "ALTER", "B.", "1998", "density", "estimation", "technique", "global", "illumination", "phd", "thesis", "Ithaca", "NY", "USA", "ARD", "G.", "J.", "ECKBERT", "P.", "S.", "1992", "irradiance", "gradient", "Third", "Eurographics", "Workshop", "Rendering", "8598", "ARD", "G.", "J.", "UBINSTEIN", "F.", "M.", "lear", "R.", "D.", "1988", "ray", "trace", "solution", "diffuse", "interreflection", "Proceedings", "15th", "annual", "conference", "computer", "graphic", "interactive", "technique", "ACM", "New", "York", "NY", "USA", "85", "92", "order", "compute", "first", "second", "order", "derivative", "kernel", "function", "must", "least", "twice", "differentiable", "we", "use", "sixth-order", "smooth", "kernel", "-lsb-", "Perlin", "2002", "-rsb-", "progressive", "kernel", "radiance", "estimation", "kernel", "define", "since", "polynomial", "its", "derivative", "can", "easily", "compute", "-lrb-", "-rrb-", "30t", "60t", "30t", "-lrb-", "-rrb-", "120t", "180t", "60t", "normalization", "constant", "10", "168" ],
  "content" : "As a part of our error computation, we extend progressive photon mapping to operate with smooth kernels. Our results demonstrate how our error estimation framework works well in realistic synthetic scenes. We demonstrate that our estimated error captures error due to noise and bias under complex light transport. Although error estimation itself is already of high value, as an example application, we also demonstrate that it can be used to automatically terminate rendering without any subjective trial and error by the user. This fact that error in unbiased Monte Carlo methods appears as variance has been used in many applications. If we focus on photon density estimation, which is our focus as well, Myszkowski [1997] proposed to use multiple radii during radiance estimation to estimate bias, and then selected the estimate that minimized an error heuristic. In order to estimate bias, our method estimates derivatives of the illumination using kernel derivatives in radiance/density estimation. As with progressive density estimation, our derivative estimates converge to the correct solution with a bounded memory consumption. Gradient computation of light transport itself has been studied in previous work [Ward and Heckbert 1992; Ramamoorthi et al. 2007; Jarosz et al. 2008], but we introduce an alternative method which integrates easily in our error estimation framework. The subsequent passes perform photon tracing. These accumulated statistics refine radiance estimates at the measurement points in such a way that the radiance estimate is consistent and therefore converges to the correct solution in the limit. We summarize our notation in Table 1 . Each measurement point tracks the photons which fall within its search radius R and accumulates their power into ? . where ? is the outgoing direction at the measurement point, ? p is the incoming direction of the photon, f r is the BRDF, and ?(x p , ? p ) is the flux carried by photon p. The number of photons emitted in each pass is N e , and we use N i e = iN e to express the total number of emitted photons up to and including pass i. Note that the radius R 1 and number of intercepted photons N 1 both depend on the measurement point x, but we omit these dependencies in our notation for simplicity. After the first pass, these statistics are refined by performing additional photon tracing passes, each emitting N e more photons. During pass i + 1, M i+1 additional photons are intercepted at x. If we used all M i+1 photons and kept the radius fixed, we could obtain an improved estimate for the flux using all N i +M i+1 photons by just accumulating this additional flux as: This is accomplished by reducing the radius and statistically keeping only a fraction of the intercepted photons at each iteration. and the reduced radius is computed as: To account for this, the accumulated flux at the next iteration is computed as:\n        R i+1 2 N i + ?M i+1 ? i+1 (x, ?) = ? i+1 (x, ?) R i 2 = ? i+1 (x, ?) N i + M i+1 . It is well known that stochastic error bounds in unbiased Monte Carlo rendering methods can be estimated using the variance of the  estimate 1 . The reason for this is that the error is caused purely by noise due to stochastic sampling. However, biased Monte Carlo rendering methods have bias in addition to noise. Since photon density estimation, including progressive photon mapping, is a biased rendering method, we need to take into account both bias and noise in the error estimate. In biased methods, the error can be expressed as the sum of bias B i of the estimate and noise N i due to sampling (we denote the exact bias as B i since bias is changing at each iteration in progressive photon mapping): where L i is the estimated radiance and L is the true radiance. This bias-noise decomposition has been used in prior work (such as [Schregle 2003]) as well and it is applicable to any biased Monte Carlo methods, including progressive photon mapping. Now, assuming we know bias B i and sample variance V i , the central limit theorem states that for an infinite number of samples: d where we use ? to denote that the distribution of the left-hand-side converges to the standard normal distribution N (0, 1). This also indicates that the variancebased error estimation in unbiased methods is fundamentally an approximation unless we use an infinite number of samples. Our error estimation framework is also based on a few approximations as we will describe throughout the paper. Based on the error distribution, we can derive a stochastic bound (confidence interval) of radiance estimation using the t-distribution: where t i, 1 ? ? is the 1 ? ? percentile of the t-distribution 2 2 with degree i. This gives the interval [?E i , E i ] that contains iV i L i ? L ? B i with probability 1 ? ?. It is also important to note that the interval [?E i , E i ] is not for ?error?, but rather for ?error bias? at this point. This probability is usually provided by the user as a desirable confidence in the bound. More information on this concept can be found in statistics textbook such as Hastie et al. [2001]. In other words, bias just affects error as a uniform, constant shift of the error distribution. which provides E i + |B i | as a single-valued stochastic error bound of the absolute error. This theoretically gives us a confidence interval with larger confidence than the user-specified confidence 1??. Note that the above equations do not use the bound of bias, but bias itself. Dependence of error on the absolute intensity of radiance is often not desirable since the human visual system is more sensitive to contrast than absolute differences in intensity [Glassner 1995]. L i L i (13)\n        The interval is 0, E i +|B i | with confidence larger than 1 ? ?. Note L i that the above Equation 8 to Equation 13 are theoretically valid only if we know the exact bias and the exact sampled variance. The challenge here is that both the exact bias B i and the exact sample variance V i are unknown. Moreover, we do not have an estimator of variance V i in progressive photon mapping. To be concrete, progressive density estimation has a different formulation than standard radiance estimation and samples are correlated due to radius reduction. The key contributions of our work are estimators of B i and V i which we describe in the following sections. We first show that the bias in progressive radiance estimation is actually the average of bias induced by the kernel radii at each iteration where B p,j is bias of the radiance estimate using only the photons from the j th pass. We then introduce a bias estimator used in standard density estimation, which is applied for progressive photon mapping. To obtain Equation 14, we start by expanding the estimated radiance L j+1 (x) at the j + 1 th iteration using the refinement procedure\n          described in Section 3: where L p,j (x) is radiance estimate using only the photons from the j th pass. Note that ? ?R j+1 j (x,?) (x) 2 = L p,j (x) because ? j+1 (x, ?) includes the intercepted photons only at the j + 1 th iteration before the radius reduction and the radius reduction happens after flux accumulation (i.e., the radius used in the photon query is R j (x)). The key observation is that L p,j is equivalent to the radiance estimate using a standard radiance estimation with radius R j because it uses photons only from the j th pass. Using Equation 15 recursively, the progressive radiance estimate L i (x) is expressed as: Finally, subtracting L(x) from both sides gives us Equation 14. We can apply this to each bias value B p,j as\n          1 2 2 ? k L p,j (x k ) 4 B p,j = 2 R j (x) k 2 L p,j (x) + O ?x k R j (x) k k ? 1 R j (x) 2 k 2 2 L p,j (x), 2 (17)\n          where k 2 = t 2 K(t) dt is a constant derived from the kernel K(t) (see Appendix A for details). Note that we drop the residual term proportional to R j (x) 4 in our estimation, thus our bias estimator always estimates an approximation of the true bias. However, estimating and storing 2 L p,j (x) at each iteration in progressive radiance estimation is not tractable since this would require unbounded memory and we use a relatively small number of photons per iteration. Therefore, we propose the following approximation of the Laplacian of the progressive estimate 2 L i (x) which eliminates the need to store the Laplacian of each iteration. First, substituting Equation 17 into Equation 14, we obtain We approximate the summation as (note that we use R i (x) not R j (x)) Finally, as with radiance estimation in Equation 16, we can expand the Laplacian of the progressive estimate as 2 L i (x) = 1 i i j=1 2 L p,j (x) using the recursion relation in Equation 15. This provides the following identity where we denoted our approximation of bias as B i . As a result, we can approximate the exact bias B i just by computing a progressive estimate of 2 L i (x). We tested our bias estimation for progressive photon mapping on a scene where we mimic a soft shadow boundary using an analytic cubic smoothstep function. We show a visualization of the resulting radiance function in Figure 2(a) while in Figure 2(b) we compare the actual bias to our estimated bias. In this scene, samples are generated using the cubic smoothstep function with importance sampling. Although the estimated bias does not exactly predict the actual bias, it captures two peaks of bias around edges of the smoothstep function as well as zero bias in the smooth region. In standard kernel density estimation, variance is approximated as [Silverman 1986]: where k 3 = K(t) 2 dt. This approximation assumes that samples are independent and identically distributed (i.i.d.). Note that the samples in progressive radiance estimation are each of the radiance estimations using photons from only the j th iteration, L p,j . The key point is that photon tracing itself is statistically independent between each iteration in progressive photon mapping. The only dependence between samples is caused by the radius reduction. The bias-corrected samples are expected to be closer to statistically independent since dependence on radius is removed by B p,j , and identically distributed because L p,j ? B p,j is distributed according to the true radiance L. Using L p,j ? B j , we use the following standard procedure to estimate sample variance V i at each iteration: where we use x j = L p,j ? B j as samples. However, we found that the effect of this approximation is not statistically significant in practice through numerical experiments. Figure 3 shows that the autocorrelation of bias-corrected samples is almost 0 compared to the uncorrected samples. This indicates that the samples can be considered independent. Figure 3 furthermore shows that the bias correction makes the distribution of noise closer to the Gaussian distribution with mean 0, which is the distribution of ideal i.i.d. The previously described bias estimation method relies on the derivatives of radiance, 2 L i (x). To use this method, we must therefore estimate derivatives of radiance as well as radiance itself during rendering. In traditional photon mapping, derivatives can be easily estimated by just using derivatives of the kernel. In this section, we provide a new, generalized formulation of progressive radiance estimation which allows for arbitrary smooth kernels. This generalization makes estimation of derivatives straightforward and convergent, which in turn allows us to estimate bias more accurately. Kernel-based density estimation is a standard extension to traditional density estimation where the contribution of each sample in the density estimate is weighted by a, typically smooth, kernel K around the query location. In contrast to standard radiance estimation methods, simply replacing the constant kernel in the original progressive radiance estimate may not work. Specifically, since the radius in progressive radiance estimation changes, the accumulated flux needs to be corrected after radius reduction. To adapt kernel density estimation to progressive photon mapping, we need to derive an equation similar to Equation 7 (relating the accumulated flux before reducing the radius, ? i+1 , with the accumulated flux after reducing the radius, ? i+1 ) but in the presence of a weighting kernel K.  The accumulated flux before reducing the radius can be expressed in the continuous setting as We parametrized radiance over a circle using polar coordinates. Note that ? i+1 is a function of (x, ?), and R i is a function of x, but we drop this dependence in our notation for simplicity. The accumulated flux with a reduced radius R i+1 is: Given these two equations, we can express ? i+1 in terms of ? i+1 as: with t = R r i , dr = R i dt, and analogously for R i+1 : Assuming that a kernel is radially symmetric K(t, ?) = K(t), the above expression can be further simplified by swapping the order of integration: Finally, to simplify this expression further, we assume that the integrated radial distribution of radiance is locally constant such that 2? 2? for some constant C. This assumption is similar, but not as strict as the ?locally uniform density? assumption used in the original progressive photon mapping algorithm [Hachisuka et al. 2008]. Although the end result looks similar to the original progressive photon mapping, this distinction is crucial to use a smooth kernel function as well as its derivatives. Note also that the original assumption implies zero derivatives, which makes it impossible to use for the derivative estimation in our framework. Using our new assumption, Equation 27 can be simplified to: The kernel-based estimation gives us an elegant way to estimate derivatives. Computing the derivatives simply involves replacing the kernel with a corresponding derivative kernel. where the derivative of the accumulated flux is: We always use the gradient operator to denote a gradient with respect to the position parameter x, and the ? p term from the product rule is omitted above because ? p = 0. Higher-order derivatives can be derived in exactly the same way by simply taking higher-order derivatives of the kernel function. We use the second order derivatives 2 L i (x) in order to estimate the bias in Equation 17. In order to estimate derivatives in a progressive manner, we need to express the accumulated flux derivatives after radius reduction, ? i+1 , in terms of the accumulated value before radius reduction, ? i+1 . This relation can be established by differentiating Equation 29: Hence, any order flux derivative is accumulated using the ratio of the squared radii, just like accumulated flux. Again, the only change in terms of implementation is replacing the kernel with derivatives of the kernel. The same thing happens with a Epanechnikov kernel, which is a popular choice in standard density estimation. We therefore found that the kernel has to be C n continuous with 0 at the boundary  for computing nth order derivatives (i.e., the nth derivative of the kernel must go to 0 at the edge). We provide an example of a kernel function that satisfies this condition in Appendix A. In order to investigate the accuracy of the progressive kernel radiance estimate and the radiance derivative estimate, we used a simple scene with a point light source, where all the values can be computed analytically in Figure 4 . The estimated radiance values match the analytical solution very closely with only 10K stored photons. We have implemented our error estimation on top of an implementation of the progressive photon mapping algorithm. All results were computed on a 2.4GHz Intel Core 2 Q6600 using one core. In all examples, we used the parameter ? = 0.8 in the progressive photon mapping algorithm. Figure 5 is an analytic investigation of our error estimation. We used the cubic ramp scene described in Figure 2 with 640000 samples and an initial radius of 1.5. The user-specified confidence is 1 ? ? = 0.95. The graph (b) shows that the estimated error is in fact above the actual error in almost all locations as specified. We further investigated the influence of bias estimation and noise bound estimation by plotting each of these components separately in the graph (c). Note that our framework does not estimate bounds of bias, but bias itself. This graph shows that the bias estimation captures error due to bias around the slope of the function, whereas the noise bound estimation captures error due to sampling noise around the flat region of the function. We tested our framework on three example scenes. The reference renderings are shown in Figure 8 . Each iteration uses 15k emitted photons and the confidence was specified at 90%. The first scene is a Cornell box with a glass sphere and a metal sphere. Here noise dominates the error because the scene is composed of mostly large flat regions of fairly uniform illumination. The second scene consists of three flashlights models. This scene is expected to have larger bias due to sharp caustics from the flashlights. The third scene is a room with lighting fixtures. This scene contains both sharp illumination features due to caustics as well as flat and continuous illumination, which is a realistic mixture of bias and noise in error. Note that both the flashlights scene and the room scene have light paths which are difficult for unbiased rendering methods to handle (such as an SDS path from a very small light source [Hachisuka et al. 2008]). Figure 8 shows behavior of the actual error and the estimated error for the test scenes. We picked three points to investigate the actual error and the estimated error as shown in the leftmost column of Figure 8 . One might notice that our estimated error does not bound actual error at some points, such as the point A in the room scene. This is indeed the expected behavior because our error estimation is motivated by stochastic error bounds. Stochastic error bounds, by definition, bound the actual error with some probability, so even if our error estimate is perfect, some points where the actual error is higher than the estimation are to be expected. In practice, since bias estimation is an approximation, it may also cause extra overestimation or underestimation of the actual error in addition to what is expected from exact stochastic error bounds. What is important in practice is whether the estimated error respect the user-specified confidence. In order to check this, we computed the actual confidence on the test scenes in Figure 7 . The ideal behavior is that the actual confidence stays at the user-specified confidence all the time. We calculate the actual confidence as the percentage of all error estimates that are above the true errors obtained using the reference image. We tested 50% and 90% as the user-specified confidence. Although the calcuated confidence is not exactly the same as the specified confidence, the deviation from the user-specified confidence is within 5% across many iterations for both 50% and 90% in difference scenes. The yellow and blue images in Figure 1 visualize whether estimated error is above error per pixel (yellow: bounded, blue: not bounded). Note also that error estimation itself becomes more reliable as we add more samples because the magnitude of the error estimate decreases. Figure 6 shows the ratio of estimated bias to estimated noise bound using 15M photons. The estimated error captures noise in flat regions as well as bias due to sharp features in practical scenes. The biasto-noise ratio images demonstrate the importance of each of these components to our overall error estimate. The resulting images show bias estimation dominates the error estimation around sharp features (shown as red) and the noise bound estimation dominates the error estimation within flat regions (shown as green). Unfortunately, this is currently set by tedious trial-and-error by the user. As an example application of our error estimation, we propose an automatic way to stop the rendering process without specifying the total number of photons or the total render time. Instead, we stop the rendering process when the average estimated error over the image is below a user specified threshold. At each iteration, we simply compute the average estimated error over all the measurement points: where N m is the number of measurement points. The rendering process stops when E ave ? E thr for a given error threshold E thr . Note that we could even use our error estimation to individually terminate the computation of each measurement point since the error is estimated per measurement point. Here, we use average error as a proof of concept that shows our error estimation is useful for a practical application. Figure 9(a) shows a sequence of color-coded images of actual error with different user-specified thresholds. We plot the graphs of actual average relative error and the average of estimated error in Figure 9(b) . Although we used 50% confidence to terminate the rendering process, we also show the resulting estimated average error using 90% confidence for reference. The average of our error estimate using 50% confidence successfully predicts, without any user input other than the threshold, that different scenes need a different number of iterations to obtain sufficient quality. Table 2 shows the number of iterations used for achieving the specified threshold. Note that, even though the flashlight scene has more triangles than the Cornell box scene, the number of iterations to achieve the same threshold is less than that of the Cornell box. The actual average relative errors achieved with E thr = 0.0625 are 0.0465, 0.0448, 0.0437 for the Cornell box scene, the flashlight scene, and the room scene respectively. Although the statement that different scenes need different number of samples sound trivial, we do not know how many samples are needed unless we actually render an image. We believe that even this simple application will shed light on theoretical analysis of the convergence behavior of progressive density estimation, which is still unknown. Since our error estimation framework does not need additional photon tracing or range query, runtime overhead due to the error estimation is very small. In our implementation, each pass including the error estimation took 681ms, 1291ms, and 720ms on average for the Cornell box scene, the flashlight scene, and the room scene respectively, and the overhead due to the error estimation are 2.2ms, 5.9ms, and 3.3ms which are all less than 1% of the rendering time without error estimation. Our error estimation framework depends on the number of assumptions. We discuss some issues due to those assumptions we made in this section to help readers understand the limitations of our method. In general, our experience along with previous work concludes that making assumptions or approximations is probably inevitable and providing theoretical guarantees that error estimation works is challenging. First, the derivations in Equation 10 are exact only if we know the true bias and variance. Since we approximated bias and variance in our error estimation with a finite number of samples, the resulting error estimation can be arbitrary far away from the exact error. Even with such an approximation, variance-based error estimation has been used in many practical applications as we mentioned in Section 2. We therefore believe that using approximations does not make our error estimation completely useless in practice. Notice however that we do not claim our framework works well in any possible scene setting. Second, related to the above issue, our bias estimation is not a consistent estimator of the true bias (i.e., does not give us the true bias in the limit). This in turn affects variance estimation, which assumes i.i.d. samples after bias correction. We approximate bias using the Laplacian of radiance (Equation 17) and we introduced one additional approximation between Equations 18 and 19 in order to make bias estimation practical. The approximation by Laplacian can cause significant error in bias estimation (either underestimation or overestimation) if the radiance distribution contains significant higher order derivatives (higher or equal to 4th order) and the radius is relatively large. Finally, our application of error estimation for automatic rendering termination may not be well-suited for some usage. For example, if we want to avoid generating redundant samples by terminating the rendering process after the desired rendering error is achieved, our application will result in oversampling due to slight overestimation of the rendering error. In such cases, more accurate error estimation is needed to avoid oversampling. Although our overestimation is generally around 1.4 times throughout many iterations in our experiments as in Section 6.1, this could mean taking at least 1.4 2 = 1.96 times more samples than absolutely necessary, according to O(i ? 1 2 ) error convergence rate of Monte Carlo integration. Not generating redundant samples would require the estimated error to be equal to the exact error, which is challenging to accomplish in general. We have presented an error estimation framework for progressive photon mapping, which is robust to a wide range of light paths. Based on the derivations of stochastic error bounds, we characterized error using estimated bias and an estimated noise bound. We estimate bias using derivatives of radiance, and for this purpose we have extended the progressive radiance estimate to work with arbitrary smooth kernels. Using a kernel-based approach we can compute the derivatives of radiance by using the derivatives of the kernel. We have shown that this bias estimate can be used to construct a variance estimator for the progressive radiance estimate. The estimated error captures error due to both bias and noise under complex illumination given user-defined confidence. We have demonstrated that our error estimate can be used to automatically stop the rendering process. We believe that our work is the first step towards answering the important question: ?How many photons are needed to render this scene? Given an error estimate, we can try to accelerate progressive photon mapping using adaptive sampling by tracing photons into the parts of the scene where the error is large. We would also like to investigate if the error estimate can be extended to include stochastic progressive photon mapping [Hachisuka and Jensen 2009], which would need estimation of average bias over an unknown region. We would like to thank Youichi Kimura (Studio Azurite) for providing us the flashlight model and the room model. The first author was supported by the 2008-2009 ATI Fellowship Program. P URGATHOFER , W. 1987. A statistical method for adaptive stochastic sampling. Computer & Graphics, 11. Pergamon Press, New York. R AMAMOORTHI , R., M AHAJAN , D., AND B ELHUMEUR , P. 2007. A first-order analysis of lighting, shading, and shadows. ACM Trans. R AMASUBRAMANIAN , M., P ATTANAIK , S. N., AND G REENBERG , D. P. 1999. A perceptually based physical error metric for realistic image synthesis. In SIGGRAPH ?99: Proceedings of the 26th annual conference on Computer graphics and interactive techniques, ACM Press/Addison-Wesley Publishing Co., New York, NY, USA, 73?82. S CHREGLE , R. 2003. Bias compensation for photon maps. Forum 22, 4, 729?742. S ILVERMAN , B. 1986. Density Estimation for Statistics and Data Analysis. Chapman and Hall, New York, NY. T AMSTORF , R., AND J ENSEN , H. W. 1997. Adaptive smpling and bias estimation in path tracing. In Proceedings of the Eurographics Workshop on Rendering Techniques ?97, Springer-Verlag, London, UK, 285?296. V EACH , E., AND G UIBAS , L. J. 1995. Optimally combining sampling techniques for monte carlo rendering. In SIGGRAPH 95 Conference Proceedings, 419?428. W ALTER , B., F ERNANDEZ , S., A RBREE , A., B ALA , K., D ONIKIAN , M., AND G REENBERG , D. P. 2005. Lightcuts: a scalable approach to illumination. ACM Trans. 24, 3, 1098?1107. W ALTER , B. 1998. Density Estimation Techniques for Global Illumination. PhD thesis, Ithaca, NY, USA. W ARD , G. J., AND H ECKBERT , P. S. 1992. Irradiance gradients. Third Eurographics Workshop on Rendering, 8598. W ARD , G. J., R UBINSTEIN , F. M., AND C LEAR , R. D. 1988. A ray tracing solution for diffuse interreflection. Proceedings of the 15th annual conference on Computer graphics and interactive techniques, ACM, New York, NY, USA, 85?92. In order to compute the first and second order derivatives, the kernel function must be at least twice differentiable. We use a sixth-order smooth kernel [Perlin 2002] for the progressive kernel radiance estimation. The kernel is defined as: Since K is a polynomial, its derivatives can easily be computed as: K (t) = ?30t 4 + 60t 3 ? 30t 2 , K (t) = ?120t 3 + 180t 2 ? 60t. The normalization constants are k 1 = 2? 7 , and k 2 = 10? 168 .",
  "resources" : [ ]
}