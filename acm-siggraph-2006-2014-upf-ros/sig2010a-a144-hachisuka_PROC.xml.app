{
  "uri" : "sig2010a-a144-hachisuka_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2010a/a144-hachisuka_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "A Progressive Error Estimation Framework for Photon Density Estimation",
    "published" : "2010",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Toshiya-Hachisuka",
      "name" : "Toshiya",
      "surname" : "Hachisuka"
    }, {
      "uri" : "http://drinventor/Wojciech-Jarosz",
      "name" : "Wojciech",
      "surname" : "Jarosz"
    }, {
      "uri" : "http://drinventor/Henrik Wann-Jensen",
      "name" : "Henrik Wann",
      "surname" : "Jensen"
    } ]
  },
  "bagOfWords" : [ "we", "present", "error", "estimation", "framework", "progressive", "photon", "mapping", "enable", "calculation", "illumination", "gradient", "arbitrary", "accuracy", "which", "we", "use", "progressively", "compute", "local", "bias", "radiance", "estimate", "we", "also", "show", "how", "variance", "can", "compute", "progressive", "photon", "mapping", "which", "use", "estimate", "error", "due", "noise", "example", "application", "we", "show", "how", "we", "error", "estimation", "can", "use", "compute", "image", "give", "error", "threshold", "example", "application", "we", "framework", "only", "require", "error", "threshold", "confidence", "level", "automatically", "terminate", "rendering", "other", "word", "we", "need", "error", "estimation", "final", "result", "unbiased", "Monte", "Carlo", "ray", "trace", "algorithm", "commonly", "assume", "only", "choice", "when", "error", "estimation", "require", "example", "bias", "method", "currently", "consider", "only", "technique", "robustly", "handle", "specular", "reflection", "refraction", "caustic", "from", "small", "light", "source", "-lsb-", "hachisuka", "et", "al.", "2008", "-rsb-", "path", "common", "light", "transport", "within", "realistic", "optical", "system", "light", "bulb", "headlight", "thus", "highly", "desirable", "have", "error", "estimation", "bias", "method", "moreover", "since", "bias", "method", "photon", "mapping", "-lsb-", "Jensen", "2001", "-rsb-", "commonly", "use", "commercial", "industrial", "render", "system", "investigate", "error", "estimation", "bias", "method", "also", "useful", "wide", "range", "application", "we", "contribution", "paper", "new", "error", "estimation", "framework", "progressive", "photon", "mapping", "we", "derive", "error", "estimation", "framework", "construct", "bias", "estimator", "noise", "estimator", "progressive", "photon", "mapping", "we", "error", "estimation", "induce", "very", "little", "computational", "overhead", "result", "negligible", "increase", "render", "time", "user", "can", "specify", "desirable", "confidence", "either", "obtain", "per", "pixel", "error", "estimate", "average", "error", "estimate", "across", "image", "Figure", "highlight", "we", "result", "well", "know", "error", "estimation", "unbiased", "Monte", "Carlo", "ray", "trace", "algorithm", "path", "trace", "-lsb-", "Kajiya", "1986", "-rsb-", "bidirectional", "path", "trace", "-lsb-", "Lafortune", "Willems", "1993", "Veach", "Guibas", "1995", "-rsb-", "can", "do", "compute", "variance", "solution", "example", "variance", "often", "use", "adaptive", "sampling", "order", "find", "region", "large", "error", "-lsb-", "Lee", "et", "al.", "1985", "Purgathofer", "1987", "Tamstorf", "Jensen", "1997", "-rsb-", "assume", "error", "distribute", "accord", "normal", "distribution", "also", "possible", "approximate", "stochastic", "error", "bind", "base", "variance", "which", "provide", "estimated", "range", "error", "base", "confidence", "probability", "provide", "user", "we", "method", "provide", "algorithm", "estimate", "error", "especially", "focus", "progressive", "photon", "mapping", "same", "idea", "commonly", "use", "standard", "density", "estimation", "method", "-lsb-", "Silverman", "1986", "-rsb-", "however", "key", "difference", "we", "derivation", "base", "progressive", "density", "estimation", "propose", "Hachisuka", "et", "al", "-lsb-", "2008", "-rsb-", "case", "standard", "density", "estimation", "method", "which", "require", "store", "infinite", "number", "sample", "obtain", "correct", "solution", "although", "conceivable", "use", "we", "bias", "estimate", "bias", "reduction", "we", "do", "target", "application", "we", "paper", "instead", "we", "goal", "estimate", "bias", "reasonable", "accuracy", "error", "estimation", "render", "since", "we", "error", "estimation", "base", "progressive", "photon", "mapping", "we", "briefly", "outline", "algorithm", "section", "primary", "statistics", "each", "measurement", "point", "maintain", "include", "current", "search", "radius", "accumulate", "photon", "count", "reflect", "flux", "note", "Hachisuka", "et", "al.", "use", "express", "un-normalized", "accumulate", "flux", "however", "obtain", "consistent", "notation", "within", "paper", "we", "instead", "use", "express", "normalize", "flux", "after", "pass", "radiance", "measurement", "point", "approximate", "flux", "from", "just", "additional", "photon", "would", "however", "obtain", "consistent", "estimator", "progressive", "photon", "mapping", "must", "ensure", "bias", "variance", "reduce", "each", "iteration", "due", "radius", "reduction", "we", "must", "account", "flux", "photon", "now", "fall", "outside", "reduce", "radius", "Bias", "difference", "between", "estimate", "radiance", "without", "noise", "correct", "radiance", "note", "well-known", "derivation", "interested", "reader", "should", "refer", "example", "geertsema", "-lsb-", "1970", "-rsb-", "order", "estimate", "interval", "error", "we", "shift", "both", "value", "interval", "-lsb-", "-rsb-", "add", "note", "critical", "difference", "between", "stochastic", "bind", "deterministic", "bind", "deterministic", "bind", "always", "correctly", "bound", "value", "stochastic", "bind", "only", "correctly", "bound", "some", "probability", "above", "sign", "confidence-interval", "can", "use", "as-is", "however", "sometimes", "desirable", "obtain", "single", "value", "stochastic", "bind", "absolute", "error", "order", "obtain", "expression", "we", "extend", "interval", "take", "absolute", "value", "bias", "therefore", "we", "divide", "interval", "estimate", "radiance", "obtain", "relative", "stochastic", "error", "bind", "-lrb-", "-rrb-", "we", "therefore", "need", "rely", "estimation", "bias", "variance", "we", "therefore", "have", "consider", "correlation", "between", "sample", "when", "estimate", "variance", "note", "practice", "we", "can", "obtain", "exact", "stochastic", "bound", "define", "above", "due", "approximation", "bias", "variance", "estimator", "therefore", "we", "can", "write", "down", "-lsb-", "-rsb-", "-lrb-", "-rrb-", "base", "definition", "bias", "standard", "radiance", "estimation", "unfortunately", "we", "can", "directly", "use", "approximation", "progressive", "photon", "mapping", "we", "describe", "more", "detail", "how", "estimate", "-lrb-", "-rrb-", "section", "furthermore", "each", "give", "we", "bias", "estimation", "different", "radius", "thus", "identically", "distribute", "therefore", "instead", "use", "sample", "-lrb-", "-rrb-", "directly", "we", "use", "biascorrected", "sample", "order", "estimate", "variance", "we", "show", "we", "can", "relax", "locally", "uniform", "density", "assumption", "use", "original", "progressive", "photon", "mapping", "algorithm", "-lsb-", "hachisuka", "et", "al.", "2008", "-rsb-", "kernel", "should", "radially", "symmetric", "continuous", "boundary", "able", "estimate", "nth", "order", "derivative", "fortunately", "also", "mean", "only", "change", "term", "implementation", "weight", "each", "photon", "kernel", "function", "thus", "straightforward", "implement", "example", "we", "use", "gaussian", "cut", "off", "kernel", "finite", "radius", "give", "we", "infinite", "derivative", "along", "edge", "kernel", "which", "useful", "we", "model", "filament", "lens", "reflector", "flashlight", "order", "simulate", "realistic", "lighting", "pattern", "each", "lighting", "fixture", "consist", "filament", "glass", "casing", "reflector", "which", "replicate", "light", "transport", "real-world", "lighting", "fixture", "predict", "sufficient", "total", "number", "photon", "obtain", "desire", "quality", "particular", "scene", "difficult", "since", "we", "interested", "average", "error", "per-pixel", "error", "we", "choose", "rather", "lower", "50", "confidence", "application", "order", "get", "tighter", "error", "estimation" ],
  "content" : "We present an error estimation framework for progressive photon mapping. This enables the calculation of illumination gradients with arbitrary accuracy, which we use to progressively compute the local bias in the radiance estimate. We also show how variance can be computed in progressive photon mapping, which is used to estimate the error due to noise. As an example application, we show how our error estimation can be used to compute images with a given error threshold. For this example application, our framework only requires the error threshold and a confidence level to automatically terminate rendering. In other words, we need error estimation of the final result. Unbiased Monte Carlo ray tracing algorithms are commonly assumed to be the only choice when error estimation is required. For example, biased methods are currently considered to be the only technique to robustly handle specular reflection or refraction of caustics from small light sources [Hachisuka et al. 2008]. These paths are common in light transport within realistic optical systems such as light bulbs and headlights, thus it is highly desirable to have error estimation for biased methods. Moreover, since biased methods, such as photon mapping [Jensen 2001], are commonly used in commercial and industrial rendering systems, investigating error estimation for biased methods will also be useful for a wide range of applications. Our contribution in this paper is a new error estimation framework for progressive photon mapping. We derive an error estimation framework by constructing a bias estimator and noise estimator in progressive photon mapping. Our error estimation induces very little computational overhead, resulting in negligible increases in render time. The user can specify a desirable confidence to either obtain per pixel error estimates or an average error estimate across the image. Figure 1 highlights our results. It is well known that error estimation in unbiased Monte Carlo ray tracing algorithms, such as path tracing [Kajiya 1986] and bidirectional path tracing [Lafortune and Willems 1993; Veach and Guibas 1995], can be done by computing the variance of the solution. For example, variance is often used for adaptive sampling in order to find regions with large error [Lee et al. 1985; Purgathofer 1987; Tamstorf and Jensen 1997]. Assuming errors are distributed according the normal distribution, it is also possible to approximate a stochastic error bound based on variance, which provides an estimated range of error based on a confidence probability provided by the user. Our method provides an algorithm to estimate error, especially focusing on progressive photon mapping. The same idea is commonly used in standard density estimation  methods [Silverman 1986]; however, the key difference is that our derivation is based on progressive density estimation proposed by Hachisuka et al [2008]. This is not the case for standard density estimation methods, which require storing an infinite number of samples to obtain the correct solution. Although it is conceivable to use our bias estimate for bias reduction, we do not target this application in our paper; instead, our goal is to estimate the bias with reasonable accuracy for error estimation in rendering. Since our error estimation is based on progressive photon mapping, we briefly outline the algorithm in this section. The primary statistics that each measurement point maintains include the current search radius R, the accumulated photon count N , and the reflected flux ? . Note that Hachisuka et al. used ? to express un-normalized accumulated flux; however, to obtain a consistent notation within this paper, we instead use ? to express normalized flux. After pass i, the radiance at a measurement point is approximated as: The flux from just these additional photons would be: However, to obtain a consistent estimator, progressive photon mapping must ensure that the bias and the variance are reduced at each iteration. Due to this radius reduction, we must account for the flux of the photons that now fall outside the reduced radius. Bias is the difference between the estimated radiance without noise and the correct radiance. Note that this is a well-known derivation and interested readers should refer to, for example, Geertsema [1970]. In order to estimate the interval for error, we shift both the value L i ? L ? B i and the interval [?E i , E i ] by adding B i : 1 Note that there is a critical difference between a stochastic bound and a deterministic bound. A deterministic bound always correctly bounds the value, but a stochastic bound only correctly bounds with some probability. The above signed confidence-interval can be used as-is, however, it is sometimes desirable to obtain a single value as the stochastic bound of absolute error. In order to obtain such an expression, we extend the interval by taking the absolute value of the bias: Therefore, we divide the interval by the estimated radiance to obtain the relative stochastic error bound:\n        L i ? L E i + |B i | P (|L i ? L| < E i + |B i |) = P < . We therefore need to rely on estimations of bias and variance. We therefore have to consider the correlation between samples when estimating variance. Note that, in practice, we cannot obtain the exact stochastic bounds as defined above due to approximations in bias and variance estimators. Therefore, we can write down E[L p,j ] = L(x) + B p,j based on the definition of bias in standard radiance estimation. Unfortunately, we cannot directly use this approximation for progressive photon mapping. We will describe more details for how to estimate 2 L i (x) in Section 5. Furthermore, each L p,j gives us a biased estimation with a different radius R j , thus L p,j are not identically distributed. Therefore, instead of using samples (L p,j ) directly, we use biascorrected samples L p,j ? B p,j ? L p,j ? B j in order to estimate variance. We show that we can relax the ?locally uniform density? assumption used in the original progressive photon mapping algorithm [Hachisuka et al. 2008], and that the kernel should be radially  symmetric and C n continuous at the boundary to be able to estimate nth order derivatives. Fortunately, it also means that the only change in terms of implementation is to weight each photon by a kernel function, thus it is straightforward to implement. For example, if we use a Gaussian by cutting off the kernel to a finite radius, this gives us infinite derivatives along the edge of the kernel, which is not useful. We modeled the filament, lens and reflector of the flashlight in order to simulate a realistic lighting pattern. Each lighting fixture consists of a filament, a glass casing, and reflectors which replicates light transport of real-world lighting fixtures. Predicting a sufficient total number of photons to obtain a desired quality for a particular scene is difficult. Since we are interested in the average error, not per-pixel error, we choose rather lower 50% confidence in this application in order to get tighter error estimation.",
  "resources" : [ ]
}