{
  "uri" : "sig2014-a129-huang_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2014/a129-huang_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Image Completion using Planar Structure Guidance",
    "published" : "2014",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Jia-Bin-Huang",
      "name" : "Jia-Bin",
      "surname" : "Huang"
    }, {
      "uri" : "http://drinventor/Sing Bing-Kang",
      "name" : "Sing Bing",
      "surname" : "Kang"
    }, {
      "uri" : "http://drinventor/Narendra-Ahuja",
      "name" : "Narendra",
      "surname" : "Ahuja"
    }, {
      "uri" : "http://drinventor/Johannes-Kopf",
      "name" : "Johannes",
      "surname" : "Kopf"
    } ]
  },
  "bagOfWords" : [ "we", "compare", "we", "result", "against", "several", "state-of-the-art", "image", "completion", "algorithm", "specifically", "we", "choose", "Photoshop", "Content", "Aware", "fill", "-lsb-", "Barnes", "et", "al.", "2009", "Wexler", "et", "al.", "2007", "-rsb-", "he", "sun?s", "method", "-lsb-", "2012", "-rsb-", "image", "melding", "-lsb-", "Darabi", "et", "al.", "2012", "-rsb-", "supplementary", "material", "we", "also", "compare", "against", "Priority", "Belief", "propagation", "-lsb-", "Komodakis", "Tziritas", "2007", "-rsb-", "gimp", "resynthesizer", "all", "method", "use", "fronto-parallel", "translational", "patch", "except", "image", "melding", "which", "allow", "similarity", "transformation", "flip", "patch", "Figure", "we", "show", "series", "comparison", "challenging", "scene", "first", "row", "building", "consist", "near", "regular", "structure", "we", "can", "see", "compete", "algorithm", "fail", "synthesize", "large", "structure", "because", "only", "minimize", "localized", "texture", "energy", "without", "consider", "global", "consistency", "we", "method", "other", "hand", "fill", "hole", "repetitive", "pattern", "similar", "known", "region", "addition", "recover", "plane", "orientation", "we", "synthesize", "result", "physically", "plausible", "second", "row", "we", "show", "single", "planar", "building", "facade", "regular", "pattern", "even", "only", "mild", "perspective", "distortion", "translational", "patch", "insufficient", "synthesize", "foreshortening", "effect", "thus", "result", "broken", "line", "structure", "image", "melding", "while", "theoretically", "equip", "ability", "apply", "appropriate", "scaling", "patch", "fail", "find", "solution", "high-dimensional", "space", "we", "algorithm", "effectively", "use", "plane", "constraint", "extend", "facade", "minimally", "visible", "artifact", "result", "3rd", "6th", "row", "show", "we", "algorithm", "limit", "ideal", "piecewise", "plane", "scene", "homogeneous", "texture", "plane", "support", "detection", "weighting", "scheme", "we", "leverage", "low-level", "algorithm", "find", "good", "transition", "boundary", "between", "one", "structure", "another", "example", "illustrate", "good", "transition", "boundary", "stair", "region", "pure", "texture", "region", "around", "tree", "fourth", "row", "multiple", "unknown", "surface", "discontinuity", "fifth", "row", "last", "row", "we", "demonstrate", "effectiveness", "combine", "plane", "constraint", "regularity-guided", "sampling", "from", "example", "realistic", "scene", "we", "can", "see", "we", "image", "completion", "algorithm", "robust", "deviation", "from", "perfectly", "textured", "planar", "surface", "other", "word", "we", "completion", "algorithm", "do", "require", "perfect", "plane", "orientation", "recovery", "support", "estimation", "segmentation", "symmetry", "detection", "fact", "analysis", "many", "region", "contain", "error", "because", "vision", "algorithm", "far", "from", "perfect", "however", "exemplify", "here", "combine", "powerful", "lowlevel", "algorithm", "mid-level", "constraint", "we", "able", "extend", "state-of-the-art", "image", "completion", "please", "refer", "supplementary", "material", "where", "we", "show", "extensive", "comparison", "result", "variety", "scene", "image", "natural", "scene", "we", "analysis", "usually", "do", "detect", "any", "plane", "because", "reliable", "feature", "detect", "plane", "translational", "regularity", "case", "we", "we", "algorithm", "automatically", "revert", "baseline", "image", "completion", "algorithm", "i.e.", "we", "implementation", "Wexler", "et", "al.", "algorithm", "-lsb-", "2007", "-rsb-", "four", "example", "show", "Figure", "we", "compare", "unguided", "version", "we", "completion", "algorithm", "-lrb-", "fourth", "column", "-rrb-", "validate", "we", "result", "look", "visually", "similar", "baseline", "supplementary", "material", "we", "present", "more", "extensive", "comparison", "25", "natural", "image", "we", "extract", "from", "project", "website", "Kopf", "et", "al.", "paper", "-lsb-", "2012", "-rsb-", "we", "use", "relatively", "simple", "algorithm", "we", "image", "analysis", "stage", "which", "can", "fail", "detect", "vanish", "point", "plane", "regularity", "more", "severely", "return", "false", "positive", "former", "case", "we", "algorithm", "just", "revert", "fronto-parallel", "completion", "while", "latter", "case", "might", "lead", "some", "artifact", "performance", "analysis", "stage", "could", "likely", "improve", "use", "more", "sophisticated", "computer", "vision", "method", "which", "we", "leave", "future", "work", "first", "two", "row", "Figure", "10", "demonstrate", "demonstrate", "difficulty", "find", "demarcation", "line", "between", "different", "perspective", "plane", "when", "unknown", "region", "large", "result", "third", "row", "show", "example", "falsely", "detect", "plane", "may", "overconstrain", "patch", "synthesis", "lead", "poor", "result", "near", "bush", "Notice", "though", "compete", "technique", "also", "fail", "generate", "satisfactory", "result", "Figure", "we", "show", "series", "comparison", "challenging", "scene", "first", "row", "building", "consist", "near", "regular", "structure", "we", "can", "see", "compete", "algorithm", "fail", "synthesize", "large", "structure", "because", "only", "minimize", "localized", "texture", "energy", "without", "consider", "global", "consistency", "we", "method", "other", "hand", "fill", "hole", "repetitive", "pattern", "similar", "known", "region", "addition", "recover", "plane", "orientation", "we", "synthesize", "result", "physically", "plausible", "second", "row", "we", "show", "single", "planar", "building", "facade", "regular", "pattern", "even", "only", "mild", "perspective", "distortion", "translational", "patch", "insufficient", "synthesize", "foreshortening", "effect", "thus", "result", "broken", "line", "structure", "image", "melding", "while", "theoretically", "equip", "ability", "apply", "appropriate", "scaling", "patch", "fail", "find", "solution", "high-dimensional", "space", "we", "algorithm", "effectively", "use", "plane", "constraint", "extend", "facade", "minimally", "visible", "artifact", "result", "3rd", "6th", "row", "show", "we", "algorithm", "limit", "ideal", "piecewise", "plane", "scene", "homogeneous", "texture", "plane", "support", "detection", "weighting", "scheme", "we", "leverage", "low-level", "algorithm", "find", "good", "transition", "boundary", "between", "one", "structure", "another", "example", "illustrate", "good", "transition", "boundary", "stair", "region", "pure", "texture", "region", "around", "tree", "fourth", "row", "multiple", "unknown", "surface", "discontinuity", "fifth", "row", "last", "row", "we", "demonstrate", "effectiveness", "combine", "plane", "constraint", "regularity-guided", "sampling", "from", "example", "realistic", "scene", "we", "can", "see", "we", "image", "completion", "algorithm", "robust", "deviation", "from", "perfectly", "textured", "planar", "surface", "other", "word", "we", "completion", "algorithm", "do", "require", "perfect", "plane", "orientation", "recovery", "support", "estimation", "segmentation", "symmetry", "detection", "fact", "analysis", "many", "region", "contain", "error", "because", "vision", "algorithm", "far", "from", "perfect", "however", "exemplify", "here", "combine", "powerful", "lowlevel", "algorithm", "mid-level", "constraint", "we", "able", "extend", "state-of-the-art", "image", "completion", "please", "refer", "supplementary", "material", "where", "we", "show", "extensive", "comparison", "result", "variety", "scene", "image", "natural", "scene", "we", "analysis", "usually", "do", "detect", "any", "plane", "because", "reliable", "feature", "detect", "plane", "translational", "regularity", "case", "we", "we", "algorithm", "automatically", "revert", "baseline", "image", "completion", "algorithm", "i.e.", "we", "implementation", "Wexler", "et", "al.", "algorithm", "-lsb-", "2007", "-rsb-", "four", "example", "show", "Figure", "we", "compare", "unguided", "version", "we", "completion", "algorithm", "-lrb-", "fourth", "column", "-rrb-", "validate", "we", "result", "look", "visually", "similar", "baseline", "supplementary", "material", "we", "present", "more", "extensive", "comparison", "25", "natural", "image", "we", "extract", "from", "project", "website", "Kopf", "et", "al.", "paper", "-lsb-", "2012", "-rsb-", "we", "use", "relatively", "simple", "algorithm", "we", "image", "analysis", "stage", "which", "can", "fail", "detect", "vanish", "point", "plane", "regularity", "more", "severely", "return", "false", "positive", "former", "case", "we", "algorithm", "just", "revert", "fronto-parallel", "completion", "while", "latter", "case", "might", "lead", "some", "artifact", "performance", "analysis", "stage", "could", "likely", "improve", "use", "more", "sophisticated", "computer", "vision", "method", "which", "we", "leave", "future", "work", "first", "two", "row", "Figure", "10", "demonstrate", "demonstrate", "difficulty", "find", "demarcation", "line", "between", "different", "perspective", "plane", "when", "unknown", "region", "large", "result", "third", "row", "show", "example", "falsely", "detect", "plane", "may", "overconstrain", "patch", "synthesis", "lead", "poor", "result", "near", "bush", "Notice", "though", "compete", "technique", "also", "fail", "generate", "satisfactory", "result" ],
  "content" : "We compare our results against several state-of-the-art image completion algorithms. Specifically, we choose Photoshop Content Aware Fill [Barnes et al. 2009; Wexler et al. 2007], He and Sun?s method [2012], and Image Melding [Darabi et al. 2012]. In the supplementary material we also compare against Priority Belief Propagation [Komodakis and Tziritas 2007] and GIMP Resynthesizer 2 . All of these methods use fronto-parallel translational patches, except Image Melding, which allows similarity transformation and flip of patches. In Figure 8 , we show a series of comparisons on challenging scenes. In the first row, the building consist of near regular structures. We can see that the competing algorithms fail to synthesize such large structure because they only minimize localized texture energy without considering a global consistency. Our method, on the other hand, fills in the hole with repetitive pattern similar to the known region. In addition, with the recovered plane orientation, our synthesized result is physically plausible. In the second row, we show a single planar building facade with regular patterns. Even with only mild perspective distortion, translational patches are insufficient to synthesize the foreshortening effect and thus result in broken line structures. Image Melding, while theoretically equipped with the ability to apply appropriate scaling of the patches, fails to find such solution in high-dimensional space. Our algorithm effectively use the plane constraint to extend the facade with minimally visible artifacts. The results on the 3rd to 6th rows show that our algorithm is not limited to ideal piecewise plane scenes with homogeneous textures. With the plane support detection and the weighting scheme, we leverage the low-level algorithm to find a good transition boundary between one structure and another. Examples illustrating good transition boundaries are the stairs regions and the pure texture region around the tree in the fourth row, and multiple unknown surface discontinuity in the fifth row. In the last row, we demonstrate the effectiveness of combining plane constraints and regularity-guided sampling. From these examples of realistic scenes, we can see that our image completion algorithm is robust to deviations from perfectly textured planar surfaces. In other words, our completion algorithm does not require perfect plane orientation recovery, support estimation, segmentation, and symmetry detection. In fact, the analysis in many regions contains errors because vision algorithms are far from perfect. However, as exemplified here, by combining a powerful lowlevel algorithm with mid-level constraints, we are able to extend the state-of-the-art in image completion. Please refer to the supplementary materials where we show extensive comparison results on a variety of scenes. For images of natural scenes our analysis usually does not detect any planes because there are no reliable features to detect planes and translational regularity. In such cases our our algorithm automatically reverts to the baseline image completion algorithm, i.e., our implementation of Wexler et al.?s algorithm [2007]. Four such examples are shown in Figure 9 . We compare to the unguided version of our completion algorithm (fourth column) to validate that our result looks visually similar to the baseline. In the supplementary material we present a more extensive comparison on 25 natural images we extracted from the project website of Kopf et al.?s paper [2012]. We used relatively simple algorithms in our image analysis stages, which can fail to detect vanishing points or plane regularities, or more severely, return false positives. In the former case our algorithm just reverts to fronto-parallel completion, while the latter case might lead to some artifacts. The performance of the analysis stage could likely be improved using more sophisticated computer vision methods, which we leave to future work. The first two rows in Figure 10 demonstrate demonstrate the difficulty of finding demarcation lines between different perspective planes when the unknown region is large. The results in the third row shows an example that the falsely detected plane may overconstrain the patch synthesis and lead to poor results near the bushes. Notice, though, that the competing techniques also fail to generate satisfactory results. In Figure 8 , we show a series of comparisons on challenging scenes. In the first row, the building consist of near regular structures. We can see that the competing algorithms fail to synthesize such large structure because they only minimize localized texture energy without considering a global consistency. Our method, on the other hand, fills in the hole with repetitive pattern similar to the known region. In addition, with the recovered plane orientation, our synthesized result is physically plausible. In the second row, we show a single planar building facade with regular patterns. Even with only mild perspective distortion, translational patches are insufficient to synthesize the foreshortening effect and thus result in broken line structures. Image Melding, while theoretically equipped with the ability to apply appropriate scaling of the patches, fails to find such solution in high-dimensional space. Our algorithm effectively use the plane constraint to extend the facade with minimally visible artifacts. The results on the 3rd to 6th rows show that our algorithm is not limited to ideal piecewise plane scenes with homogeneous textures. With the plane support detection and the weighting scheme, we leverage the low-level algorithm to find a good transition boundary between one structure and another. Examples illustrating good transition boundaries are the stairs regions and the pure texture region around the tree in the fourth row, and multiple unknown surface discontinuity in the fifth row. In the last row, we demonstrate the effectiveness of combining plane constraints and regularity-guided sampling. From these examples of realistic scenes, we can see that our image completion algorithm is robust to deviations from perfectly textured planar surfaces. In other words, our completion algorithm does not require perfect plane orientation recovery, support estimation, segmentation, and symmetry detection. In fact, the analysis in many regions contains errors because vision algorithms are far from perfect. However, as exemplified here, by combining a powerful lowlevel algorithm with mid-level constraints, we are able to extend the state-of-the-art in image completion. Please refer to the supplementary materials where we show extensive comparison results on a variety of scenes. For images of natural scenes our analysis usually does not detect any planes because there are no reliable features to detect planes and translational regularity. In such cases our our algorithm automatically reverts to the baseline image completion algorithm, i.e., our implementation of Wexler et al.?s algorithm [2007]. Four such examples are shown in Figure 9 . We compare to the unguided version of our completion algorithm (fourth column) to validate that our result looks visually similar to the baseline. In the supplementary material we present a more extensive comparison on 25 natural images we extracted from the project website of Kopf et al.?s paper [2012]. We used relatively simple algorithms in our image analysis stages, which can fail to detect vanishing points or plane regularities, or more severely, return false positives. In the former case our algorithm just reverts to fronto-parallel completion, while the latter case might lead to some artifacts. The performance of the analysis stage could likely be improved using more sophisticated computer vision methods, which we leave to future work. The first two rows in Figure 10 demonstrate demonstrate the difficulty of finding demarcation lines between different perspective planes when the unknown region is large. The results in the third row shows an example that the falsely detected plane may overconstrain the patch synthesis and lead to poor results near the bushes. Notice, though, that the competing techniques also fail to generate satisfactory results.",
  "resources" : [ ]
}