{
  "uri" : "sig2011-a33-ovsjanikov_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2011/a33-ovsjanikov_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Exploration of Continuous Variability in Collections of 3D Shapes",
    "published" : "2011",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Maks-Ovsjanikov",
      "name" : "Maks",
      "surname" : "Ovsjanikov"
    }, {
      "uri" : "http://drinventor/Wilmot-Li",
      "name" : "Wilmot",
      "surname" : "Li"
    }, {
      "uri" : "http://drinventor/Leonidas J.-Guibas",
      "name" : "Leonidas J.",
      "surname" : "Guibas"
    }, {
      "uri" : "http://drinventor/Niloy J.-Mitra",
      "name" : "Niloy J.",
      "surname" : "Mitra"
    } ]
  },
  "bagOfWords" : [ "bf14e5d5c7577d532f0d2ae39876166bdfa6c8958bba16603d0c7fe83e6f6011", "p0s", "10.1145", "1964921.1964928", "name", "identification", "possible", "exploration", "continuous", "variability", "collection", "3D", "Shapes", "Wilmot", "Li", "Maks", "Ovsjanikov", "Figure", "explore", "collection", "3d", "shape", "we", "present", "approach", "learn", "variability", "within", "set", "similar", "shape", "collection", "airplane", "without", "any", "label", "correspondence", "-lrb-", "-rrb-", "we", "analysis", "automatically", "extract", "deformation", "model", "characterize", "variability", "base", "spatial", "arrangement", "component", "template", "shape", "here", "primary", "mode", "variation", "involve", "wing", "move", "along", "fuselage", "couple", "manner", "-lrb-", "-rrb-", "we", "use", "deformation", "model", "provide", "constrain", "manipulation", "interface", "explore", "collection", "-lrb-", "-rrb-", "remarkably", "we", "method", "avoid", "establish", "correspondence", "between", "shape", "any", "stage", "algorithm", "large", "public", "repository", "3d", "shape", "continue", "grow", "amount", "shape", "variability", "collection", "also", "increase", "both", "term", "number", "different", "class", "shape", "well", "geometric", "variability", "shape", "within", "each", "class", "while", "give", "user", "more", "choice", "shape", "selection", "can", "difficult", "explore", "large", "collection", "understand", "range", "variation", "amongst", "shape", "exploration", "particularly", "challenge", "public", "shape", "repository", "which", "often", "only", "loosely", "tag", "contain", "neither", "point-based", "nor", "part-based", "correspondence", "paper", "we", "present", "method", "discover", "explore", "continuous", "variability", "collection", "3d", "shape", "without", "correspondence", "we", "method", "base", "novel", "navigation", "interface", "allow", "user", "explore", "collection", "related", "shape", "deform", "base", "template", "shape", "through", "set", "intuitive", "deformation", "control", "we", "also", "help", "user", "select", "most", "meaningful", "deformation", "use", "novel", "technique", "learn", "shape", "variability", "term", "deformation", "template", "we", "technique", "assume", "set", "shape", "lie", "near", "low-dimensional", "manifold", "certain", "descriptor", "space", "which", "allow", "we", "avoid", "establish", "correspondence", "between", "shape", "while", "be", "rotation", "scaling", "invariant", "we", "present", "result", "several", "shape", "collection", "take", "directly", "from", "public", "repository", "keyword", "3d", "database", "exploration", "shape", "descriptor", "shape", "analysis", "morphable", "model", "model", "variability", "ACM", "Reference", "Format", "Ovsjanikov", "M.", "Li", "W.", "Guibas", "L.", "Mitra", "N.", "2011", "exploration", "continuous", "variability", "collection", "3D", "Shapes", "ACM", "Trans", "graph", "30", "Article", "33", "-lrb-", "July", "2011", "-rrb-", "10", "page", "dous", "10.1145", "1964921.1964928", "http://doi.acm.org/10.1145/1964921.1964928", "copyright", "Notice", "permission", "make", "digital", "hard", "copy", "part", "all", "work", "personal", "classroom", "use", "grant", "without", "fee", "provide", "copy", "make", "distribute", "profit", "direct", "commercial", "advantage", "copy", "show", "notice", "fus", "rst", "page", "initial", "screen", "display", "along", "full", "citation", "copyright", "component", "work", "own", "other", "than", "ACM", "must", "honor", "abstract", "credit", "permit", "copy", "otherwise", "republish", "post", "server", "redistribute", "list", "use", "any", "component", "work", "other", "work", "require", "prior", "specific", "permission", "and/or", "fee", "permission", "may", "request", "from", "Publications", "Dept.", "ACM", "Inc.", "Penn", "Plaza", "Suite", "701", "New", "York", "NY", "10121-0701", "fax", "+1", "-lrb-212-rrb-Â 869-0481", "permissions@acm.org", "2011", "ACM", "0730-0301/2011", "07-art33", "10.00", "DOI", "10.1145", "1964921.1964928", "http://doi.acm.org/10.1145/1964921.1964928", "Leonidas", "Guibas", "Niloy", "J.", "Mitra", "introduction", "grow", "number", "variety", "3d", "model", "become", "available", "web", "via", "online", "repository", "Popular", "website", "turbosquid", "Google", "3D", "Warehouse", "contain", "hundred", "thousand", "model", "from", "wide", "range", "object", "class", "include", "airplane", "car", "furniture", "etc.", "one", "key", "benefit", "repository", "make", "possible", "incorporate", "3d", "model", "variety", "workflow", "without", "have", "create", "3d", "geometry", "from", "scratch", "example", "author", "3d", "game", "animation", "often", "require", "modeling", "environment", "where", "action", "take", "place", "use", "repository", "model", "populate", "environment", "significantly", "reduce", "require", "modeling", "effort", "addition", "2d", "graphic", "designer", "sometimes", "incorporate", "3d", "content", "work", "so", "can", "tweak", "perspective", "lighting", "while", "create", "final", "image", "thus", "also", "benefit", "from", "diverse", "repository", "3d", "model", "while", "grow", "availability", "3d", "model", "give", "user", "increasing", "range", "content", "from", "which", "choose", "explore", "large", "repository", "can", "challenging", "task", "most", "online", "repository", "support", "text-based", "search/filtering", "return", "list", "all", "match", "model", "interface", "can", "help", "user", "quickly", "select", "class", "object", "-lrb-", "e.g.", "all", "car", "-rrb-", "do", "support", "easy", "exploration", "variation", "within", "class", "example", "search", "car", "Google", "3D", "Warehouse", "return", "ten", "thousand", "model", "thousand", "result", "page", "difficult", "get", "overall", "sense", "what", "type", "car", "available", "range", "different", "car", "shape", "without", "look", "all", "result", "furthermore", "text-based", "search", "do", "allow", "user", "explore", "collection", "shape", "base", "geometric", "characteristic", "instance", "while", "look", "one", "car", "collection", "user", "may", "want", "see", "similar", "model", "skinnier", "body", "larger", "wheel", "another", "approach", "explore", "collection", "3d", "model", "organize", "they", "base", "geometric", "similarity", "difference", "most", "basic", "operation", "context", "shape", "comparison", "retrieval", "which", "consist", "find", "model", "collection", "most", "similar", "give", "3d", "shape", "along", "line", "large", "body", "exist", "work", "shape", "descriptor", "attempt", "capture", "important", "geometric", "property", "3d", "shape", "enable", "meaningful", "shape-to-shape", "comparison", "while", "analyze", "set", "3d", "model", "descriptor", "space", "often", "make", "easy", "identify", "cluster", "similar", "model", "retrieve", "model", "match", "give", "target", "shape", "technique", "do", "directly", "address", "exploration", "problem", "text-based", "filter", "clustering", "descriptor", "space", "may", "still", "result", "large", "unorganized", "set", "similar", "model", "difficult", "explore", "other", "hand", "example-based", "shape", "retrieval", "most", "useful", "when", "user", "already", "have", "sense", "what", "type", "model", "present", "collection", "have", "least", "one", "example", "desire", "type", "model", "alternative", "user", "can", "explore", "collection", "navigate", "directly", "descriptor", "space", "however", "most", "descriptor", "very", "high-dimensional", "standard", "projection", "space", "multidimensional", "scaling", "-lrb-", "md", "-rrb-", "typically", "do", "result", "intuitive", "set", "parameter", "exploration", "due", "primarily", "large", "amount", "geometric", "detail", "present", "shape", "-lrb-", "figure", "-rrb-", "which", "can", "obscure", "global", "structural", "variability", "finally", "different", "set", "method", "navigate", "collection", "shape", "aim", "obtain", "explicit", "representation", "variability", "observe", "collection", "find", "consistent", "parametrization", "shape", "perform", "statistical", "analysis", "parameter", "space", "most", "common", "way", "parametrize", "set", "shape", "establish", "correspondence", "between", "point", "part", "shape", "measure", "displacement", "across", "shape", "collection", "active", "shape", "model", "computer", "vision", "-lsb-", "Cootes", "et", "al.", "1995", "-rsb-", "statistical", "shape", "analysis", "biology", "-lsb-", "dryden", "Mardia", "1998", "-rsb-", "inverse", "kinematic", "computer", "graphic", "-lsb-", "Sumner", "et", "al.", "2005", "-rsb-", "all", "share", "spirit", "method", "useful", "navigate", "within", "family", "related", "shape", "because", "can", "constrain", "exploration", "within", "bound", "observe", "datum", "however", "obtain", "reliable", "correspondence", "across", "even", "moderately", "size", "collection", "shape", "very", "challenging", "problem", "especially", "unstructured", "user-generated", "shape", "find", "public", "repository", "work", "we", "propose", "new", "correspondence-free", "technique", "explore", "unorganized", "collection", "3d", "model", "focus", "learn", "present", "variation", "within", "set", "similar", "shape", "specifically", "we", "method", "analyze", "input", "collection", "extract", "organize", "continuous", "variability", "can", "express", "term", "relative", "size", "position", "shape", "part", "base", "analysis", "we", "provide", "exploration", "interface", "which", "user", "interactively", "deform", "template", "shape", "drag", "arrow", "indicate", "main", "variability", "axis", "amongst", "input", "shape", "template", "deform", "system", "present", "closest", "matching", "model", "collection", "two", "key", "idea", "behind", "we", "approach", "i.", "exploration", "via", "template", "deformation", "unlike", "standard", "example-based", "retrieval", "where", "user", "must", "obtain", "specify", "example", "model", "each", "query", "we", "allow", "user", "explore", "collection", "via", "interactive", "deformation", "template", "shape", "we", "system", "help", "user", "select", "suitable", "template", "provide", "simple", "direct", "manipulation", "tool", "specify", "deformation", "II", "constrain", "template", "deformation", "model", "help", "user", "specify", "deformation", "match", "actual", "shape", "variation", "collection", "we", "propose", "novel", "technique", "extract", "constrain", "template", "deformation", "model", "directly", "from", "collection", "notably", "we", "method", "do", "require", "correspondence", "between", "model", "collection", "instead", "we", "propose", "technique", "convert", "variability", "descriptor", "space", "representation", "collection", "deformation", "model", "template", "shape", "we", "strategy", "combine", "direct", "manipulation", "template-based", "interface", "constrain", "deformation", "model", "address", "many", "limitation", "exist", "exploration", "technique", "unlike", "text-based", "search", "we", "approach", "allow", "user", "explore", "collection", "base", "ACM", "transaction", "Graphics", "Vol", "30", "no.", "Article", "33", "publication", "date", "July", "2011", "figure", "navigate", "descriptor", "space", "plot", "md", "model", "generate", "use", "100-dimensional", "smooth", "histogram", "descriptor", "describe", "section", "5.1", "while", "highlight", "model", "similar", "position", "descriptor", "space", "do", "indicate", "any", "obvious", "consistent", "structural", "variation", "geometric", "characteristic", "contrast", "previous", "descriptorbased", "method", "we", "represent", "shape", "variation", "term", "template", "deformation", "intuitive", "continuous", "parameter", "space", "allow", "user", "explore", "variability", "collection", "respect", "configuration", "part", "comprise", "object", "example", "one", "we", "result", "we", "analyze", "collection", "airplane", "automatically", "extract", "deformation", "model", "which", "position", "wing", "vary", "from", "front", "back", "fuselage", "-lrb-", "figure", "-rrb-", "base", "analysis", "we", "allow", "user", "explore", "collection", "directly", "deform", "wing", "template", "model", "finally", "fact", "we", "do", "rely", "compute", "shape-to-shape", "correspondence", "make", "we", "method", "both", "robust", "geometric", "diversity", "efficient", "enable", "real", "time", "exploration", "shape", "collection", "main", "assumption", "we", "method", "follow", "first", "we", "assume", "shape", "input", "collection", "all", "share", "common", "global", "part", "structure", "-lrb-", "e.g.", "set", "four-legged", "chair", "two-winged", "airplane", "-rrb-", "however", "we", "do", "assume", "shape", "similarly", "segmented", "rather", "unrealistic", "general", "shape", "repository", "example", "wing", "airplane", "may", "compose", "single", "connected", "mesh", "component", "one", "model", "dozen", "component", "another", "we", "also", "assume", "most", "shape", "variability", "within", "collection", "can", "explain", "term", "relative", "size", "position", "shape", "part", "more", "specifically", "we", "assume", "give", "any", "pair", "shape", "collection", "possible", "deform", "modify", "size", "position", "its", "part", "align", "close", "B.", "finally", "we", "assume", "space", "possible", "deformation", "low", "dimensional", "sufficiently", "densely", "sample", "collection", "other", "word", "we", "assume", "we", "give", "shape", "collection", "lie", "near", "low-dimensional", "manifold", "deformation", "space", "define", "respect", "relative", "size", "position", "shape", "part", "we", "work", "make", "two", "main", "contribution", "we", "present", "template-based", "interface", "explore", "collection", "similar", "3d", "model", "via", "constrain", "direct", "manipulation", "we", "introduce", "novel", "technique", "convert", "descriptor", "variability", "deformation", "model", "template", "shape", "without", "rely", "correspondence", "between", "shape", "remainder", "paper", "we", "describe", "detail", "we", "approach", "present", "several", "result", "ACM", "transaction", "Graphics", "Vol", "30", "no.", "Article", "33", "publication", "date", "July", "2011", "exploration", "continuous", "variability", "collection", "3D", "Shapes", "33:3", "related", "work", "morphable", "model", "deformation", "modeling", "collection", "shape", "assign", "correspondence", "implicitly", "encode", "deformation", "model", "collection", "shape", "can", "see", "high", "dimensional", "point", "within", "common", "coordinate", "system", "principal", "mode", "variation", "can", "directly", "extract", "use", "statistical", "tool", "Blanz", "et", "al.", "-lsb-", "1999", "-rsb-", "highly", "influential", "work", "explore", "idea", "context", "3d", "face", "model", "subsequently", "framework", "have", "be", "extend", "analyze", "shape", "human", "body", "consistent", "pose", "-lsb-", "Allen", "et", "al.", "2003", "-rsb-", "also", "human", "body", "both", "pose", "size", "variation", "-lsb-", "Anguelov", "et", "al.", "2005", "-rsb-", "Sumner", "et", "al.", "-lsb-", "2005", "-rsb-", "represent", "mesh", "feature", "vector", "deformation", "gradient", "relative", "reference", "pose", "allow", "direct", "mesh", "manipulation", "restricted", "nonlinear", "span", "example", "feature", "vector", "Kokkonos", "Yuille", "-lsb-", "2007", "-rsb-", "learn", "object", "deformation", "model", "use", "active", "appearance", "model", "among", "object", "manually", "annotated", "landmark", "correspondence", "which", "similar", "spirit", "statistical", "shape", "analysis", "biology", "-lsb-", "dryden", "Mardia", "1998", "-rsb-", "medical", "domain", "Kim", "et", "al.", "-lsb-", "2008", "-rsb-", "use", "pca", "base", "deformation", "model", "between", "template", "training", "image", "robust", "registration", "mr", "brain", "scan", "recently", "Berner", "et", "al.", "-lsb-", "2011", "-rsb-", "extract", "repetitive", "object", "part", "where", "part", "form", "low", "dimensional", "shape", "space", "alternatively", "Kilian", "et", "al.", "-lsb-", "2007", "-rsb-", "create", "shape", "space", "isometric", "deformation", "allow", "computation", "geodesic", "path", "between", "model", "pair", "give", "correspondence", "Mitra", "et", "al.", "-lsb-", "2007", "-rsb-", "map", "transformation", "domain", "manipulation", "indirectly", "deform", "corresponding", "shape", "object", "space", "while", "all", "above", "method", "can", "learn", "useful", "mode", "variation", "specific", "class", "shape", "reliance", "accurate", "correspondence", "significant", "limitation", "task", "explore", "unorganized", "collection", "3d", "shape", "particular", "typically", "large", "amount", "variation", "topology", "geometric", "quality", "across", "model", "public", "repository", "even", "those", "within", "same", "class", "example", "note", "Xu", "et", "al.", "-lsb-", "2010", "-rsb-", "uncommon", "see", "point", "set", "polygon", "soup", "water-tight", "mesh", "all", "within", "single", "collection", "model", "face", "variation", "global", "correspondence", "detection", "remain", "challenging", "open", "problem", "-lrb-", "see", "-lsb-", "van", "Kaick", "et", "al.", "2010", "-rsb-", "-rrb-", "explore", "shape", "dataset", "due", "difficulty", "establish", "correspondence", "across", "unstructured", "collection", "shape", "researcher", "have", "propose", "several", "alternative", "strategy", "explore", "collection", "example", "text", "keyword", "-lrb-", "see", "-lsb-", "Fisher", "Hanrahan", "2010", "-rsb-", "discussion", "-rrb-", "proxy", "shape", "part", "-lsb-", "Funkhouser", "et", "al.", "2004", "Chaudhuri", "Koltun", "2010", "-rsb-", "regularly", "use", "query", "heterogeneous", "dataset", "alternatively", "model", "can", "map", "appropriate", "global", "descriptor", "space", "-lrb-", "e.g.", "shape", "distribution", "-lsb-", "Osada", "et", "al.", "2002", "-rsb-", "spherical", "harmonic", "-lsb-", "Kazhdan", "et", "al.", "2003", "-rsb-", "spherical", "wavelet", "-lsb-", "Laga", "et", "al.", "2006", "-rsb-", "heat", "kernel", "-lsb-", "Ovsjanikov", "et", "al.", "2009", "-rsb-", "-rrb-", "base", "property", "descriptor", "-lrb-", "e.g.", "shape", "pose", "rotation", "invariance", "-rrb-", "shape", "embed", "consistent", "descriptor", "space", "without", "require", "explicit", "object", "level", "correspondence", "while", "clustering", "descriptor", "space", "produce", "broad", "categorization", "-lrb-", "e.g.", "distinguish", "between", "car", "horse", "-rrb-", "study", "finer", "scale", "variation", "within", "cluster", "remain", "challenge", "recently", "partbased", "correspondence", "have", "be", "explore", "method", "study", "variation", "within", "model", "cluster", "example", "Golovinskiy", "et", "al.", "-lsb-", "2009", "-rsb-", "present", "algorithm", "simultaneously", "segment", "while", "establish", "part", "correspondence", "across", "set", "model", "base", "clustering", "graph", "potential", "corresponding", "model", "face", "Kalogerakis", "et", "al.", "-lsb-", "2010", "-rsb-", "introduce", "data-driven", "approach", "learn", "consistent", "segmentation", "labeling", "model", "part", "use", "range", "geometric", "contextual", "feature", "con", "trast", "we", "demonstrate", "subtle", "model", "variation", "can", "learn", "explore", "from", "model", "collection", "establish", "two-way", "mapping", "between", "descriptor", "space", "object", "space", "without", "compute", "direct", "correspondence", "level", "feature", "part", "significant", "amount", "prior", "work", "support", "modeling", "help", "database", "exist", "model", "-lsb-", "Funkhouser", "et", "al.", "2004", "Chaudhuri", "Koltun", "2010", "Fisher", "Hanrahan", "2010", "Xu", "et", "al.", "2010", "-rsb-", "while", "some", "technique", "propose", "use", "specific", "way", "search", "database", "good", "candidate", "model", "-lrb-", "suggestion", "-rrb-", "method", "typically", "rely", "example-based", "search", "which", "discuss", "earlier", "ideal", "explore", "unfamiliar", "collection", "shape", "many", "way", "we", "work", "complementary", "data-driven", "modeling", "community", "we", "focus", "technique", "facilitate", "exploration", "model", "collection", "while", "focus", "method", "combine", "various", "component", "from", "different", "model", "together", "Overview", "we", "approach", "consist", "two", "main", "step", "give", "collection", "3d", "shape", "we", "first", "analyze", "collection", "select", "template", "shape", "extract", "deformation", "model", "capture", "primary", "mode", "continuous", "variability", "find", "collection", "we", "incorporate", "template", "its", "deformation", "model", "exploration", "interface", "allow", "user", "browse", "collection", "interactively", "deform", "template", "find", "similar", "shape", "since", "goal", "we", "work", "help", "user", "understand", "explore", "variation", "within", "collection", "similar", "shape", "we", "assume", "input", "model", "all", "come", "from", "same", "class", "-lrb-", "e.g.", "set", "shape", "return", "text-based", "filter", "clustering", "some", "descriptor", "space", "-rrb-", "furthermore", "we", "focus", "extract", "continuous", "rather", "than", "discrete", "variability", "thus", "we", "approach", "work", "best", "object", "class", "whose", "shape", "variation", "characterize", "relative", "size", "position", "main", "object", "part", "-lrb-", "e.g.", "bicycle", "car", "plane", "other", "mechanical", "object", "-rrb-", "we", "do", "attempt", "learn", "variation", "number", "part", "per", "shape", "-lrb-", "e.g.", "chair", "different", "number", "leg", "-rrb-", "finally", "we", "implementation", "we", "assume", "input", "model", "represent", "polygonal", "mesh", "help", "explain", "motivate", "we", "analysis", "technique", "we", "first", "discuss", "problem", "extract", "deformation", "model", "from", "set", "shape", "context", "simple", "example", "-lrb-", "section", "-rrb-", "we", "describe", "detail", "we", "analysis", "framework", "-lrb-", "section", "-rrb-", "exploration", "interface", "-lrb-", "section", "-rrb-", "finally", "we", "present", "result", "from", "several", "experiment", "-lrb-", "section", "-rrb-", "discuss", "direction", "future", "work", "-lrb-", "section", "-rrb-", "Problem", "Formulation", "Method", "Overview", "section", "we", "illustrate", "problem", "shape", "exploration", "motivate", "example", "which", "underline", "both", "complexity", "shape", "analysis", "property", "we", "approach", "most", "basic", "setting", "suppose", "we", "give", "collection", "shape", "where", "each", "shape", "simply", "set", "point", "2dimensional", "space", "show", "Figure", "-lrb-", "top", "-rrb-", "we", "overall", "goal", "discover", "expose", "variability", "shape", "collection", "while", "factor", "out", "rotation", "course", "a-priorus", "information", "about", "shape", "any", "set", "correspondence", "deformation", "equally", "likely", "now", "suppose", "instead", "know", "every", "shape", "collection", "obtain", "deform", "basis", "shape", "Figure", "-lrb-", "top", "left", "-rrb-", "moreover", "set", "deformation", "form", "smooth", "1-parameter", "family", "although", "shape", "present", "any", "particular", "order", "example", "shape", "Figure", "be", "obtain", "scale", "coordinate", "each", "point", "shape", "show", "top", "left", "dx", "coordinate", "dy", "where", "range", "from", "dx", "dy", "fix", "moreover", "arbitrary", "rotation", "add", "each", "shape", "we", "goal", "recover", "dx", "dy", "well", "value", "each", "shape", "while", "factor", "out", "rotation", "note", "even", "give", "knowledge", "set", "shape", "produce", "smooth", "deformation", "establish", "point", "correspondence", "non-trivial", "due", "combinatorial", "complexity", "search", "both", "right", "order", "shape", "right", "correspondence", "between", "they", "indeed", "brute-force", "approach", "establish", "point-correspondence", "between", "shape", "point", "would", "have", "-lrb-", "s!n", "-rrb-", "complexity", "which", "doubly", "exponential", "-lrb-", "-rrb-", "one", "main", "observation", "paper", "collection", "shape", "come", "from", "1-parameter", "family", "set", "deformation", "-lrb-", "i.e.", "each", "shape", "correspond", "deformation", "some", "basis", "shape", "-rrb-", "appropriately", "choose", "rotation-invariant", "descriptor", "space", "-lrb-", "section", "5.1", "-rrb-", "descriptor", "shape", "trace", "smooth", "curve", "other", "word", "we", "summarize", "each", "shape", "compact", "rotationinvariant", "descriptor", "which", "change", "smoothly", "shape", "deform", "set", "all", "descriptor", "form", "smooth", "oneparameter", "family", "which", "curve", "moreover", "since", "any", "1-parameter", "family", "deformation", "produce", "set", "shape", "whose", "descriptor", "trace", "curve", "give", "potential", "value", "dx", "dy", "we", "can", "evaluate", "how", "well", "its", "curve", "fit", "datum", "descriptor", "space", "pick", "deformation", "parameter", "faithful", "possible", "datum", "particular", "we", "have", "explicit", "expression", "how", "change", "deformation", "parameter", "affect", "descriptor", "we", "can", "view", "problem", "pick", "optimal", "deformation", "parameter", "energy", "minimization", "problem", "solve", "use", "gradient", "descent", "other", "optimization", "technique", "note", "example", "we", "use", "descriptor", "introduce", "section", "5.1", "continuous", "optimization", "framework", "describe", "section", "5.3", "successfully", "recover", "original", "deformation", "rest", "paper", "we", "show", "how", "apply", "idea", "recover", "continuous", "variability", "unlabeled", "collection", "3d", "shape", "namely", "variability", "collection", "shape", "can", "capture", "deformation", "some", "base", "template", "shape", "we", "goal", "recover", "both", "template", "well", "its", "family", "deformation", "moreover", "we", "avoid", "rely", "correspondence", "across", "shape", "since", "obtain", "correspondence", "very", "challenging", "problem", "which", "only", "become", "harder", "growth", "shape", "repository", "ACM", "transaction", "Graphics", "Vol", "30", "no.", "Article", "33", "publication", "date", "July", "2011", "33:4", "M.", "Ovsjanikov", "et", "al.", "...", "...", "Figure", "overview", "we", "method", "give", "collection", "unlabeled", "shape", "-lrb-", "top", "-rrb-", "we", "compute", "descriptor", "each", "shape", "embed", "they", "canonical", "domain", "-lrb-", "bottom", "-rrb-", "shape", "be", "produce", "1-parameter", "family", "deformation", "descriptor", "trace", "curve", "moreover", "any", "family", "deformation", "start", "shape", "produce", "curve", "descriptor", "space", "-lrb-", "bottom", "red", "-rrb-", "fitting", "curve", "lie", "most", "closely", "datum", "we", "recover", "original", "deformation", "shape", "analysis", "deformation", "modeling", "give", "set", "related", "3d", "shape", "we", "apply", "high-level", "approach", "describe", "previous", "section", "extract", "model", "continuous", "variation", "collection", "realize", "approach", "we", "present", "analysis", "framework", "address", "follow", "challenge", "identify", "suitable", "shape", "descriptor", "whose", "variability", "relate", "deformation", "template", "shape", "-lrb-", "section", "5.1", "-rrb-", "Select", "representative", "template", "shape", "whose", "deformation", "use", "explain", "variability", "input", "shape", "-lrb-", "section", "5.2", "-rrb-", "find", "variability", "descriptor", "space", "convert", "variability", "deformation", "template", "shape", "-lrb-", "section", "5.3", "-rrb-", "learn", "low-dimensional", "deformation", "model", "capture", "template", "deformation", "-lrb-", "section", "5.4", "-rrb-", "5.1", "shape", "descriptor", "describe", "section", "we", "general", "strategy", "extract", "continuous", "variability", "descriptor", "space", "which", "each", "shape", "represent", "vector", "fix", "finite", "dimension", "use", "infer", "continuous", "variability", "relative", "size", "position", "shape", "part", "key", "requirement", "finite", "dimensional", "descriptor", "work", "we", "setting", "continuous", "-lrb-", "differentiable", "-rrb-", "deformation", "shape", "must", "result", "continuous", "-lrb-", "differentiable", "-rrb-", "change", "each", "coordinate", "shape", "descriptor", "moreover", "we", "show", "section", "5.3", "we", "would", "like", "have", "explicit", "expression", "change", "descriptor", "coordinate", "respect", "shape", "deformation", "note", "direct", "adaptation", "most", "shape", "descriptor", "do", "satisfy", "property", "illustrate", "Figure", "show", "change", "different", "descriptor", "under", "smooth", "deformation", "shape", "obtain", "continuously", "slide", "wing", "plane", "model", "along", "its", "fuselage", "from", "very", "front", "towards", "back", "-lrb-", "figure", "top", "-rrb-", "we", "sample", "deformation", "71", "time", "consider", "how", "different", "coordinate", "multi-dimensional", "shape", "descriptor", "change", "under", "motion", "Figure", "-lrb-", "bottom", "leave", "-rrb-", "show", "change", "coordinate", "popular", "517-dimensional", "spherical", "harmonic", "descriptor", "-lsb-", "Kazhdan", "et", "al.", "2003", "-rsb-", "while", "Figure", "-lrb-", "bottom", "middle", "-rrb-", "show", "change", "out", "100", "coordinate", "shape", "distribution", "-lsb-", "Osada", "et", "al.", "2002", "-rsb-", "represent", "histogram", "pairwise", "distance", "between", "million", "point", "pair", "remove", "randomness", "computation", "histogram", "pair", "point", "be", "pre-computed", "deform", "together", "rest", "shape", "order", "achieve", "above-stated", "goal", "we", "use", "different", "discretization", "shape", "distribution", "specifically", "give", "input", "shape", "we", "first", "compute", "euclidean", "distance", "between", "pair", "point", "-lrb-", "j1", "j2", "-rrb-", "-lsb-", "-rsb-", "where", "each", "j1", "j2", "sample", "uniformly", "random", "M.", "however", "instead", "discretize", "distribution", "distance", "histogram", "we", "convolve", "distribution", "gaussian", "kernel", "fix", "width", "thus", "give", "shape", "its", "descriptor", "-lrb-", "-rrb-", "vector", "th", "coordinate", "-lrb-", "-rrb-", "exp", "-lrb-", "-lrb-", "j1", "j2", "-rrb-", "-rrb-", "where", "normalize", "constant", "-lrb-", "1/n", "-rrb-", "-lrb-", "j1", "j2", "-rrb-", "we", "use", "3i/m", "-lrb-", "m-dimensional", "descriptor", "vector", "-rrb-", "0.1", "we", "experiment", "note", "each", "coordinate", "-lrb-", "-rrb-", "change", "smoothly", "under", "smooth", "change", "coordinate", "point", "j1", "j2", "Figure", "-lrb-", "bottom", "right", "-rrb-", "we", "note", "same", "discretization", "technique", "can", "apply", "other", "descriptor", "base", "distribution", "quantity", "change", "ACM", "transaction", "Graphics", "Vol", "30", "no.", "Article", "33", "publication", "date", "July", "2011", "exploration", "continuous", "variability", "collection", "3D", "Shapes", "33:5", "10", "-3", "1.2", "5th", "0.22", "10th", "0.18", "10th", "25th", "0.21", "20th", "20th", "50th", "30th", "0.17", "30th", "0.2", "0.16", "0.8", "0.19", "0.18", "0.15", "0.6", "0.17", "0.14", "0.4", "0.16", "0.13", "0.15", "0.2", "0.14", "0.12", "10", "20", "30", "40", "50", "60", "70", "0.13", "10", "20", "30", "40", "50", "60", "70", "0.11", "10", "20", "30", "40", "50", "60", "70", "strength", "Deformation", "strength", "Deformation", "strength", "Deformation", "Figure", "change", "different", "descriptor", "under", "smooth", "deformation", "shape", "-lrb-", "top", "-rrb-", "basis", "shape", "deform", "progressively", "move", "wing", "along", "body", "-lrb-", "bottom", "-rrb-", "change", "fix", "coordinate", "different", "descriptor", "-lrb-", "leave", "-rrb-", "spherical", "harmonic", "-lsb-", "Kazhdan", "et", "al.", "2003", "-rsb-", "-lrb-", "middle", "-rrb-", "shape", "distribution", "-lrb-", "sd", "-rrb-", "-lsb-", "Osada", "et", "al.", "2002", "-rsb-", "represent", "histogram", "distance", "-lrb-", "right", "-rrb-", "we", "discretization", "sd", "simplicity", "we", "only", "present", "how", "specific", "coordinate", "each", "descriptor", "change", "under", "smooth", "deformation", "smoothly", "under", "shape", "deformation", "area", "curvature", "nevertheless", "smoothness", "discretized", "descriptor", "very", "easily", "break", "e.g.", "scale", "quantity", "maximum", "value", "rather", "than", "mean", "similarly", "convolve", "distribution", "after", "bin", "histogram", "result", "smooth", "descriptor", "since", "histogram", "fixed", "number", "value", "thus", "its", "convolve", "version", "have", "only", "finite", "number", "possible", "state", "can", "possibly", "vary", "smoothly", "under", "continuous", "deformation", "moreover", "we", "discretization", "technique", "do", "necessarily", "achieve", "smoothness", "all", "histogram-based", "descriptor", "example", "shape", "diameter", "function", "-lsb-", "Shapira", "et", "al.", "2008", "-rsb-", "measure", "length", "inward-pointing", "ray", "within", "shape", "which", "can", "change", "discontinuously", "under", "deformation", "note", "also", "possible", "produce", "smoothly", "vary", "descriptor", "summarize", "distribution", "use", "its", "moment", "where", "th", "coordinate", "descriptor", "become", "-lrb-", "1/n", "-rrb-", "-lrb-", "-lrb-", "j1", "j2", "-rrb-", "-rrb-", "use", "empirical", "characteristic", "function", "exp", "-lrb-", "-lrb-", "j1", "j2", "-rrb-", "-rrb-", "various", "value", "where", "imaginary", "unit", "we", "leave", "comparison", "descriptor", "exploration", "other", "possibility", "future", "work", "also", "important", "observe", "-lrb-", "-rrb-", "invariant", "under", "rigid", "deformation", "well", "global", "scaling", "sample", "point", "furthermore", "show", "Boutin", "Kemper", "-lsb-", "2004", "-rsb-", "almost", "all", "npoint", "configuration", "reconstructable", "from", "distribution", "distance", "since", "-lrb-", "-rrb-", "simply", "convolution", "shape", "distribution", "gaussian", "kernel", "fix", "width", "contain", "same", "amount", "information", "-lrb-", "since", "invertible", "fourier", "domain", "-rrb-", "can", "thus", "discriminate", "between", "non-congruent", "shape", "5.2", "template", "selection", "deformation", "space", "first", "stage", "we", "pipeline", "we", "compute", "descriptor", "each", "shape", "give", "collection", "since", "stage", "do", "off-line", "only", "once", "we", "emphasize", "accuracy", "over", "efficiency", "thus", "can", "afford", "use", "large", "set", "point-pair", "compute", "descriptor", "practice", "we", "use", "million", "point", "pair", "every", "shape", "100", "coordinate", "descriptor", "-lrb-", "-rrb-", "sample", "uniformly", "between", "-lrb-", "recall", "mean", "distance", "always", "-rrb-", "illustrate", "dependence", "accuracy", "estimation", "we", "descriptor", "number", "sample", "point", "we", "plot", "Figure", "2d", "3d", "md", "embedding", "descriptor", "compute", "shape", "from", "set", "show", "Figure", "-lrb-", "top", "-rrb-", "unlike", "experiment", "show", "Figure", "however", "we", "compute", "descriptor", "independently", "each", "pose", "rather", "than", "fix", "set", "point", "pair", "result", "since", "pair", "sample", "randomly", "20k", "100k", "2m", "Figure", "0.06", "0.04", "0.01", "0.02", "-0.01", "-0.1", "-0.02", "-0.05", "-0.04", "0.03", "-0.06", "-0.05", "0.05", "0.1", "0.05", "-0.03", "variance", "estimation", "descriptor", "decrease", "increase", "sampling", "density", "point", "represent", "2d", "-lrb-", "left", "-rrb-", "3d", "-lrb-", "right", "-rrb-", "md", "embedding", "descriptor", "compute", "set", "shape", "use", "Figure", "sample", "independently", "each", "shape", "curve", "descriptor", "space", "well", "pronounced", "already", "100k", "variance", "estimation", "descriptor", "other", "hand", "because", "shape", "relate", "smooth", "deformation", "we", "expect", "descriptor", "trace", "curve", "descriptor", "space", "can", "see", "Figure", "variance", "estimation", "descriptor", "decrease", "when", "increase", "sampling", "density", "-lrb-", "from", "20k", "100k", "2m", "sample", "-rrb-", "curve", "become", "well", "pronounced", "after", "compute", "descriptor", "all", "shape", "we", "system", "help", "user", "select", "template", "shape", "whose", "constituent", "part", "define", "allowable", "set", "deformation", "-lrb-", "i.e.", "deformation", "space", "-rrb-", "we", "analysis", "since", "goal", "we", "analysis", "determine", "how", "relative", "size", "position", "object", "part", "vary", "across", "input", "collection", "choose", "template", "should", "include", "all", "basic", "part", "give", "object", "class", "ideally", "segmented", "exactly", "those", "part", "note", "Xu", "et", "al.", "-lsb-", "2010", "-rsb-", "shape", "public", "repository", "tend", "over-segmented", "when", "consider", "simply", "mesh", "connectivity", "thus", "we", "adopt", "simple", "strategy", "select", "template", "shape", "collection", "we", "first", "order", "shape", "distance", "descriptor", "average", "descriptor", "collection", "next", "we", "filter", "out", "all", "shape", "have", "more", "than", "user-specified", "maximum", "number", "connected", "mesh", "component", "finally", "we", "automatically", "suggest", "first", "shape", "user", "potential", "template", "approach", "we", "end", "up", "suggest", "template", "closely", "resemble", "average", "while", "be", "over-segmented", "most", "case", "manual", "inspection", "user", "still", "necessary", "ensure", "template", "component", "reasonably", "segmented", "actually", "correspond", "meaningful", "set", "part", "user", "happy", "first", "suggestion", "she", "can", "view", "other", "shape", "order", "list", "suggest", "template", "addition", "we", "allow", "user", "modify", "template", "shape", "select", "component", "group", "together", "single", "part", "all", "we", "experiment", "we", "be", "able", "find", "satisfactory", "template", "amongst", "first", "shape", "closest", "mean", "three", "we", "six", "test", "dataset", "we", "end", "up", "use", "automatically", "suggest", "template", "without", "any", "modification", "remain", "three", "dataset", "we", "group", "few", "component", "together", "simplify", "template", "part", "structure", "group", "take", "less", "than", "one", "minute", "per", "template", "note", "exact", "choice", "template", "shape", "crucial", "we", "method", "long", "have", "desire", "global", "structure", "since", "relation", "base", "deformation", "transitive", "reflexive", "i.e.", "deformable", "onto", "imply", "deformable", "onto", "a.", "choose", "template", "shape", "component", "-lrb-", "userdefined", "group", "component", "-rrb-", "we", "define", "template", "configuration", "-lrb-", "...", "6c", "-rrb-", "coordinate", "bound", "box", "every", "component", "we", "parameterize", "deformation", "space", "template", "shape", "set", "6c", "deformation", "parameter", "correspond", "translation", "scaling", "parameter", "each", "component", "specifically", "give", "deformation", "vector", "6c", "deform", "coordinate", "point", "-lrb-", "-rrb-", "belong", "component", "become", "-lrb-", "-rrb-", "-lrb-", "c1", "c2", "c3", "c4", "c5", "c6", "-rrb-", "where", "c1", "...", "c6", "deformation", "parameter", "correspond", "component", "c.", "although", "more", "flexible", "parameterization", "deformation", "space", "possible", "e.g.", "-lsb-", "Sorkine", "Alexa", "2007", "-rsb-", "we", "goal", "capture", "global", "variability", "use", "few", "possible", "deformation", "parameter", "note", "also", "since", "we", "view", "each", "shape", "point", "highdimensional", "deformation", "space", "we", "need", "dense", "sampling", "recover", "pattern", "deformation", "space", "without", "over-fitting", "which", "become", "progressively", "more", "difficult", "introduce", "more", "complicated", "thus", "higher", "dimensional", "deformation", "parameterization", "give", "template", "shape", "parametrization", "its", "deformation", "space", "we", "goal", "use", "navigate", "through", "other", "shape", "collection", "learn", "variability", "other", "word", "we", "would", "like", "capture", "variability", "shape", "present", "collection", "term", "deformation", "template", "shape", "we", "identify", "local", "pattern", "among", "set", "descriptor", "shape", "collection", "specifically", "since", "construction", "we", "descriptor", "change", "smoothly", "under", "deformation", "shape", "low", "dimensional", "family", "deformation", "get", "map", "low", "dimensional", "variability", "descriptor", "therefore", "capture", "shape", "variability", "we", "perform", "local", "PCA", "descriptor", "space", "around", "descriptor", "undeformed", "template", "shape", "we", "select", "large", "set", "neighbor", "template", "descriptor", "find", "principal", "direction", "variability", "descriptor", "collection", "we", "goal", "convert", "variability", "descriptor", "space", "variability", "deformation", "template", "solve", "problem", "first", "consider", "following", "simple", "formulation", "suppose", "we", "give", "descriptor", "two", "shape", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "we", "goal", "find", "deformation", "would", "cause", "its", "descriptor", "move", "closely", "possible", "problem", "can", "phrase", "term", "energy", "minimization", "particular", "choice", "deformation", "parameter", "let", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-rrb-", "where", "-lrb-", "-rrb-", "represent", "shape", "deform", "accord", "D.", "optimal", "deformation", "can", "define", "opt", "arg", "min", "-lrb-", "-rrb-", "find", "use", "non-linear", "optimization", "technique", "one", "key", "requirement", "technique", "gradient", "-lrb-", "-rrb-", "exist", "preferably", "can", "compute", "analytically", "note", "very", "easy", "do", "we", "descriptor", "give", "knowledge", "partial", "derivative", "coordinate", "each", "point", "respect", "deformation", "parameter", "-lrb-", "-rrb-", "particular", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "where", "jacobian", "matrix", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "which", "can", "easily", "compute", "-lrb-", "-rrb-", "exp", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "where", "-lrb-", "j1", "-lrb-", "-rrb-", "j2", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "j1", "-lrb-", "-rrb-", "j2", "-lrb-", "-rrb-", "-lrb-", "j1", "-lrb-", "-rrb-", "j2", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-rrb-", "particular", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "e.g.", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "similarly", "...", "summarize", "we", "give", "parametrization", "deformation", "space", "fixed", "number", "parameter", "encode", "vector", "coordinate", "all", "point", "shape", "change", "smoothly", "under", "change", "parameter", "gradient", "energy", "-lrb-", "-rrb-", "well", "define", "have", "simple", "close", "form", "solution", "which", "can", "use", "find", "optimal", "deformation", "D.", "note", "however", "general", "multiple", "solution", "may", "exist", "opt", "since", "although", "we", "descriptor", "informative", "because", "limited", "precision", "memory", "multiple", "shape", "may", "exist", "share", "same", "descriptor", "other", "hand", "since", "we", "interested", "variability", "among", "descriptor", "rather", "than", "fitting", "deformation", "single", "point", "descriptor", "space", "we", "would", "like", "fit", "entire", "curve", "-lrb-", "line", "case", "pca", "-rrb-", "thereby", "also", "alleviate", "ambiguity", "solution", "we", "sample", "give", "principal", "direction", "equally", "space", "sample", "point", "start", "descriptor", "undeformed", "template", "shape", "rather", "than", "solve", "single", "deformation", "we", "solve", "deformation", "...", "minimize", "follow", "energy", "function", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "where", "second", "term", "design", "ensure", "smoothness", "deformation", "practice", "we", "use", "example", "paper", "note", "formulation", "assume", "uniformly", "space", "deformation", "deformation", "space", "produce", "approximately", "uniform", "change", "descriptor", "space", "although", "may", "true", "general", "we", "have", "observe", "medium", "deformation", "restrictive", "assumption", "we", "compute", "optimal", "set", "deformation", "use", "same", "optimization", "framework", "describe", "above", "make", "possible", "smoothness", "energy", "respect", "deformation", "parameter", "thus", "we", "ability", "compute", "analytic", "gradient", "-lrb-", "-rrb-", "output", "procedure", "set", "2l", "deformation", "each", "principal", "direction", "each", "positive", "negative", "direction", "use", "deformation", "we", "learn", "deformation", "model", "use", "navigate", "shape", "collection", "efficiently", "combine", "2l", "template", "deformation", "from", "previous", "step", "deformation", "model", "we", "use", "approach", "similar", "ActiveShape", "model", "Cootes", "et", "al.", "-lsb-", "1995", "-rsb-", "related", "technique", "first", "we", "convert", "each", "deformation", "from", "set", "translation", "scale", "parameter", "deformation", "vector", "-lrb-", "...", "6c", "-rrb-", "represent", "explicit", "offset", "from", "give", "template", "configuration", "while", "equivalent", "-lrb-", "i.e.", "define", "same", "template", "deformation", "-rrb-", "more", "convenient", "representation", "learn", "deformation", "model", "next", "we", "perform", "pca", "all", "2l", "deformation", "vector", "treat", "first", "principal", "component", "deformation", "basis", "basis", "represent", "core", "we", "deformation", "model", "restrict", "space", "allowable", "deformation", "linear", "combination", "basis", "vector", "we", "ensure", "template", "always", "deform", "way", "correspond", "underlie", "descriptor", "variability", "limit", "how", "far", "template", "can", "deform", "each", "basis", "direction", "we", "project", "original", "2l", "deformation", "onto", "basis", "compute", "minimum", "maximum", "project", "value", "each", "basis", "dimension", "other", "word", "we", "compute", "k-dimensional", "bound", "box", "original", "2l", "deformation", "vector", "project", "onto", "basis", "we", "define", "space", "allowable", "template", "deformation", "linear", "combination", "basis", "deformation", "whose", "coefficient", "fall", "within", "bound", "box", "example", "paper", "we", "set", "also", "make", "we", "learn", "deformation", "model", "bit", "more", "flexible", "we", "increase", "range", "allowable", "coefficient", "value", "each", "basis", "dimension", "small", "scale", "factor", "ACM", "transaction", "Graphics", "Vol", "30", "no.", "Article", "33", "publication", "date", "July", "2011", "33:6", "M.", "Ovsjanikov", "et", "al.", "5.3", "descriptor", "variability", "template", "deformation", "5.4", "Learning", "deformation", "model", "ACM", "transaction", "Graphics", "Vol", "30", "no.", "Article", "33", "publication", "date", "July", "2011", "Figure", "Exploration", "interface", "user", "deform", "template", "shape", "use", "coordinate", "arrow", "-lrb-", "-rrb-", "its", "descriptor", "display", "context", "collection", "-lrb-", "-rrb-", "closest", "model", "exploration", "have", "analyze", "collection", "shape", "obtain", "template", "corresponding", "deformation", "model", "we", "provide", "exploration", "interface", "visualize", "variability", "collection", "allow", "user", "explore", "set", "input", "shape", "interactively", "deform", "template", "we", "interface", "consist", "three", "link", "view", "-lrb-", "figure", "-rrb-", "template", "view", "show", "set", "axis-aligned", "bound", "box", "correspond", "component", "template", "shape", "view", "allow", "user", "specify", "template", "deformation", "directly", "manipulate", "individual", "template", "box", "model", "view", "show", "model", "collection", "most", "similar", "current", "template", "configuration", "view", "update", "automatically", "user", "deform", "template", "finally", "descriptor", "view", "show", "2d", "md", "embedding", "descriptor", "entire", "collection", "descriptor", "current", "template", "configuration", "which", "update", "user", "deform", "template", "view", "allow", "user", "see", "how", "template", "deformation", "map", "descriptor", "space", "provide", "visual", "context", "how", "current", "template", "configuration", "relate", "rest", "collection", "remainder", "section", "describe", "main", "feature", "we", "interface", "explain", "how", "feature", "help", "user", "understand", "navigate", "variety", "shape", "collection", "6.1", "visualize", "variability", "help", "user", "understand", "variability", "collection", "respect", "template", "shape", "we", "template", "view", "provide", "two", "type", "visualization", "coordinate", "arrow", "discuss", "previous", "section", "we", "parameterize", "deformation", "space", "template", "6c", "coordinate", "value", "define", "size", "position", "each", "template", "component", "thus", "one", "way", "visualize", "variability", "collection", "show", "range", "allowable", "value", "each", "coordinate", "under", "give", "deformation", "model", "we", "show", "range", "use", "arrow", "one", "each", "coordinate", "extend", "from", "corresponding", "template", "box", "face", "minimum/maximum", "allowable", "value", "coordinate", "reduce", "visual", "clutter", "user", "can", "tell", "system", "only", "show", "arrow", "select", "template", "box", "-lrb-", "figure", "7a", "-rrb-", "emphasize", "how", "individual", "coordinate", "allow", "deform", "coordinate", "arrow", "help", "user", "understand", "variability", "term", "specific", "template", "component", "example", "Figure", "7b", "show", "airplane", "collection", "length", "wing", "its", "position", "along", "fuselage", "both", "vary", "much", "more", "than", "wing", "thickness", "component", "arrow", "different", "way", "visualize", "variability", "show", "how", "overall", "arrangement", "template", "component", "vary", "across", "collection", "end", "we", "generate", "component", "arrow", "which", "simply", "subset", "all", "coordinate", "arrow", "template", "each", "template", "component", "we", "identify", "dimension", "-lrb-", "i.e.", "-rrb-", "whose", "two", "corresponding", "coordinate", "have", "maximum", "range", "allowable", "value", "we", "show", "corresponding", "two", "coordinate", "arrow", "component", "arrow", "allow", "user", "see", "glance", "main", "way", "which", "relative", "position", "component", "can", "change", "under", "deformation", "model", "example", "Figure", "7b", "show", "primary", "variation", "airplane", "dataset", "correspond", "wing", "move", "along", "fuselage", "vertical", "tail", "fin", "slide", "forwards", "backwards", "order", "generate", "both", "coordinate", "component", "arrow", "we", "must", "able", "determine", "allowable", "range", "value", "give", "template", "coordinate", "respect", "current", "template", "configuration", "X.", "do", "so", "we", "first", "construct", "offset", "vector", "represent", "how", "change", "when", "we", "increase/decrease", "we", "project", "basis", "space", "define", "deformation", "model", "get", "set", "basis", "coefficient", "basis", "offset", "since", "deformation", "model", "specify", "allowable", "range", "basis", "coefficient", "value", "we", "can", "determine", "longest", "distance", "we", "can", "travel", "along", "start", "from", "before", "we", "reach", "limit", "allowable", "template", "deformation", "finally", "we", "take", "longest", "distance", "basis", "space", "convert", "range", "allowable", "value", "Figure", "arrow", "we", "generate", "coordinate", "arrow", "component", "arrow", "visualize", "variability", "respect", "template", "shape", "image", "show", "variation", "within", "collection", "airplane", "6.2", "explore", "via", "constrain", "direct", "manipulation", "explore", "collection", "user", "deform", "template", "interactively", "drag", "along", "any", "visible", "arrow", "template", "view", "user", "drag", "we", "update", "template", "follow", "first", "we", "modify", "current", "template", "configuration", "update", "only", "coordinate", "associate", "drag", "arrow", "we", "project", "modify", "configuration", "deformation", "basis", "obtain", "set", "basis", "coefficient", "we", "clamp", "each", "coefficient", "base", "range", "allowable", "value", "specify", "deformation", "model", "we", "multiply", "basis", "deformation", "vector", "reconstruct", "new", "template", "configuration", "since", "we", "always", "project", "template", "back", "deformation", "basis", "user", "able", "explore", "space", "allowable", "deformation", "entire", "template", "just", "modify", "single", "coordinate", "furthermore", "since", "drag", "arrow", "attempt", "modify", "only", "corresponding", "coordinate", "interaction", "enable", "both", "part", "scaling", "translation", "long", "deformation", "support", "deformation", "model", "once", "template", "update", "we", "compute", "descriptor", "new", "configuration", "find", "most", "similar", "model", "collection", "perform", "nearest", "neighbor", "search", "descriptor", "space", "we", "update", "model", "view", "show", "nearest", "neighbor", "model", "we", "update", "descriptor", "view", "show", "new", "template", "descriptor", "value", "user", "scroll", "model", "view", "we", "cycle", "through", "nearest", "neighbor", "model", "where", "user-specified", "parameter", "one", "important", "property", "we", "direct", "manipulation", "approach", "automatically", "enforce", "any", "spatial", "dependency", "between", "part", "capture", "deformation", "model", "example", "deformation", "model", "we", "extract", "from", "collection", "airplane", "drag", "left", "wing", "template", "automatically", "move", "right", "wing", "well", "-lrb-", "see", "supplementary", "video", "-rrb-", "while", "technically", "possible", "explore", "collection", "deform", "each", "template", "coordinate", "independently", "we", "find", "learn", "dependency", "critical", "achieve", "practical", "exploration", "interface", "example", "figure", "8d", "show", "two", "principal", "mode", "deformation", "model", "collection", "bicycle", "motorcycle", "model", "relationship", "between", "interwheel", "distance", "height", "body", "component", "long", "motorcycle", "have", "lower", "body", "while", "long", "bicycle", "tend", "have", "higher", "body", "without", "deformation", "model", "user", "would", "have", "guess", "what", "template", "deformation", "might", "match", "collection", "case", "even", "user", "guess", "correctly", "shape", "long", "interwheel", "distance", "slide", "front", "wheel", "forward", "-lrb-", "Figure", "8e", "-rrb-", "he", "would", "only", "find", "long", "motorcycle", "long", "bicycle", "ACM", "transaction", "Graphics", "Vol", "30", "no.", "Article", "33", "publication", "date", "July", "2011", "33:8", "M.", "Ovsjanikov", "et", "al.", "class", "shape", "mean", "conn.", "std.dev", "comp", "manifold", "bicycle", "67", "96.8", "97.3", "29.8", "car", "100", "75.2", "165.3", "67", "motorbike", "81", "223", "207.3", "16", "plane", "55", "52.4", "97.8", "25.5", "chair", "132", "444.9", "1931.8", "89.4", "conn.", "comp", "class", "shape", "manifold", "mean", "std.dev", "bicycle", "67", "96.8", "97.3", "29.8", "car", "100", "75.2", "165.3", "67", "motorbike", "81Â 223Â 207", ".3", "16", "plane", "55", "52.4", "97.8", "25.5", "chair", "132", "444.9", "1931.8", "89.4", "Table", "Properties", "we", "dataset", "note", "number", "connected", "component", "range", "wildly", "across", "shape", "-lrb-", "from", "20494", "we", "dataset", "-rrb-", "only", "small", "fraction", "shape", "manifold", "result", "evaluate", "we", "approach", "we", "consider", "five", "class", "3d", "shape", "airplane", "bicycle", "motorcycle", "car", "chair", "we", "choose", "object", "because", "have", "well-defined", "set", "part", "-lrb-", "e.g.", "wing", "wheel", "etc.", "-rrb-", "variation", "within", "class", "model", "often", "characterize", "spatial", "layout", "part", "furthermore", "mechanical", "shape", "furniture", "very", "popular", "online", "repository", "-lrb-", "e.g.", "40k", "car", "14k", "chair", "Google", "3D", "Warehouse", "-rrb-", "each", "class", "we", "gather", "dataset", "3d", "model", "range", "size", "from", "55", "132", "model", "-lrb-", "Table", "-rrb-", "we", "obtain", "most", "we", "example", "from", "INRIA", "GAMMA", "Group", "repository", "-lsb-", "saltel", "2008", "-rsb-", "which", "aggregate", "3d", "model", "from", "variety", "commercial", "academic", "database", "-lrb-", "e.g.", "Foundation", "3D", "Princeton", "shape", "database", "-rrb-", "few", "extra", "shape", "add", "from", "Google", "3D", "Warehouse", "note", "we", "do", "prune", "model", "base", "any", "low-level", "geometric", "property", "thus", "we", "dataset", "span", "wide", "range", "model", "complexity", "quality", "which", "typical", "online", "repository", "general", "example", "across", "we", "test", "datum", "number", "connected", "component", "vary", "from", "20494", "significant", "portion", "model", "non-manifold", "show", "Table", "finally", "since", "goal", "we", "approach", "find", "variation", "within", "collection", "similar", "shape", "we", "remove", "outlier", "from", "dataset", "threshold", "distance", "measure", "-lsb-", "Chazal", "et", "al.", "2010", "-rsb-", "10", "we", "smooth", "histogram", "descriptor", "space", "Table", "summarize", "shape", "we", "obtain", "after", "pruning", "outlier", "detection", "determine", "variation", "within", "each", "class", "shape", "we", "analyze", "dataset", "describe", "section", "note", "template", "selection", "we", "manually", "group", "small", "number", "connected", "component", "airplane", "chair", "template", "we", "use", "automatically", "select", "template", "bicycle", "motorcycle", "car", "give", "template", "we", "approach", "automatically", "extract", "deformation", "model", "each", "class", "shape", "we", "use", "we", "exploration", "interface", "visualize", "navigate", "variability", "collection", "figure", "8a", "show", "main", "mode", "variation", "five", "different", "class", "shape", "Notice", "we", "technique", "capture", "change", "both", "size", "position", "template", "component", "example", "distance", "between", "front", "back", "wheel", "account", "most", "variability", "motorcycle", "while", "length", "width", "body", "vary", "across", "set", "car", "furthermore", "we", "discuss", "section", "6.2", "we", "method", "automatically", "learn", "encode", "spatial", "dependency", "between", "component", "help", "user", "understand", "explore", "space", "allowable", "deformation", "define", "datum", "example", "symmetric", "component", "wheel", "wing", "deform", "together", "all", "four", "learn", "deformation", "model", "we", "also", "capture", "less", "obvious", "dependency", "body", "motorcycle", "move", "downward", "front", "wheel", "move", "forward", "relationship", "mainly", "due", "several", "stretch", "low-profile", "chopper", "bike", "dataset", "one", "show", "bottom", "row", "Figure", "8b", "additional", "experiment", "we", "combine", "bicycle", "motorcycle", "one", "collection", "see", "we", "could", "learn", "single", "deformation", "model", "two", "related", "class", "shape", "analysis", "produce", "deformation", "model", "two", "distinct", "mode", "variation", "-lrb-", "figure", "8c", "8d", "-rrb-", "interestingly", "second", "mode", "variation", "combined", "set", "contain", "deformation", "related", "stretch", "body", "along", "its", "width", "so", "skinny", "configuration", "correspond", "bicycle", "use", "deformation", "we", "be", "able", "navigate", "through", "both", "bicycle", "motorcycle", "we", "exploration", "interface", "show", "accompany", "supplementary", "video", "timing", "far", "most", "time", "consuming", "part", "we", "approach", "pre-processing", "when", "we", "compute", "descriptor", "each", "shape", "collection", "use", "simple", "MATLAB", "implementation", "computation", "take", "under", "18", "seconds", "per", "shape", "average", "2m", "point", "pair", "Intel", "core", "duo", "processor", "during", "optimization", "we", "only", "use", "20k", "sample", "compute", "descriptor", "efficiency", "however", "prior", "optimization", "we", "find", "set", "20k", "sample", "descriptor", "compute", "use", "set", "within", "0.5", "percent", "descriptor", "compute", "use", "2m", "pair", "time", "optimization", "depend", "number", "connected", "component", "template", "always", "remain", "under", "1-2", "minute", "template", "up", "connected", "component", "conclusion", "future", "work", "paper", "we", "introduce", "method", "capture", "explore", "variability", "collection", "shape", "without", "correspondence", "we", "main", "insight", "study", "relation", "between", "deformation", "shape", "its", "global", "high-dimensional", "descriptor", "we", "introduce", "modification", "previously", "suggest", "descriptor", "vary", "smoothly", "under", "smooth", "deformation", "shape", "therefore", "allow", "we", "analyze", "shape", "variability", "descriptor", "space", "we", "describe", "method", "recover", "variability", "term", "deformation", "template", "model", "describe", "exploration", "interface", "allow", "we", "navigate", "collection", "related", "shape", "via", "restricted", "template", "manipulation", "although", "we", "system", "show", "encouraging", "result", "we", "believe", "only", "beginning", "number", "interesting", "question", "answer", "future", "first", "although", "we", "parametrization", "deformation", "space", "low", "dimensional", "result", "optimization", "can", "non-intuitive", "component", "drift", "apart", "explicit", "encoding", "part", "connectivity", "optimization", "may", "interesting", "way", "resolve", "issue", "similarly", "since", "we", "solve", "non-convex", "non-linear", "problem", "we", "may", "only", "find", "local", "minimum", "energy", "convex", "formulation", "similar", "optimization", "problem", "interesting", "problem", "future", "other", "extension", "we", "framework", "may", "include", "outlier", "detection", "shape", "retrieval", "verify", "similar", "shape", "use", "curve", "descriptor", "space", "deformation", "produce", "mention", "earlier", "also", "interesting", "consider", "compare", "other", "descriptor", "which", "shape", "deformation", "result", "explicit", "change", "perhaps", "most", "interesting", "case", "analyze", "relation", "discrete", "variability", "shape", "-lrb-", "add", "extra", "component", "-rrb-", "term", "change", "various", "descriptor", "finally", "we", "consider", "extension", "we", "exploration", "interface", "where", "user", "can", "query", "system", "deformation", "explore", "different", "part", "descriptor", "space", "acknowledgement", "we", "would", "like", "acknowledge", "INRIA", "GAMMA", "group", "especially", "Eric", "Saltel", "model", "database", "-lsb-", "saltel", "2008", "-rsb-", "anonymous", "reviewer", "helpful", "comment", "suggestion", "Primoz", "Skraba", "extremely", "useful", "feedback", "discussion", "work", "partially", "support", "kaust", "visit", "student", "scholarship", "Adobe", "internship", "NSF", "grant", "FODAVA", "0808515", "ii", "0914833", "CCF", "1011228", "nsf/nih", "MathBio", "grant", "0900700", "grant", "from", "Google", "Inc.", "special", "thanks", "skype", "enable", "seamless", "communication", "channel", "during", "all", "stage", "project", "ACM", "transaction", "Graphics", "Vol", "30", "no.", "Article", "33", "publication", "date", "July", "2011", "exploration", "continuous", "variability", "collection", "3D", "Shapes", "33:9", "figure", "Summary", "result", "we", "apply", "we", "method", "extract", "template", "deformation", "model", "five", "class", "shape", "-lrb-", "a?e", "-rrb-", "each", "class", "we", "show", "sample", "template", "deformation", "left", "corresponding", "nearest", "neighbor", "shape", "from", "collection", "right", "grey", "box", "indicate", "select", "template", "shape", "each", "dataset", "Notice", "learn", "deformation", "model", "capture", "variation", "both", "size", "position", "component", "also", "encode", "dependency", "between", "part", "so", "example", "wing", "airplane", "move", "together", "addition", "we", "visualize", "principal", "mode", "variation", "from", "dataset", "both", "bicycle", "morotcycle", "-lrb-", "f?g", "-rrb-", "mode", "capture", "several", "non-trivial", "deformation", "include", "movement", "wheel", "along", "length", "height", "template", "shrinking", "width", "body", "second", "mode", "-lrb-", "-rrb-", "contrast", "manual", "deformation", "template", "unlikely", "include", "all", "learn", "deformation", "-lrb-", "-rrb-", "ACM", "transaction", "Graphics", "Vol", "30", "no.", "Article", "33", "publication", "date", "July", "2011", "33:10", "M.", "Ovsjanikov", "et", "al.", "reference", "llen", "B.", "URLESS", "B.", "opovus", "Z.", "2003", "space", "human", "body", "shape", "reconstruction", "parameterization", "from", "range", "scan", "Proc", "SIGGRAPH", "587", "594", "nguelov", "D.", "rinivasan", "P.", "OLLER", "D.", "hrun", "S.", "ODGERS", "J.", "AVIS", "J.", "2005", "Scape", "shape", "completion", "animation", "people", "ACM", "SIGGRAPH", "24", "-lrb-", "July", "-rrb-", "408", "416", "erner", "a.", "M.", "ITRA", "N.", "J.", "ewe", "D.", "EI", "DEL", "h.-p", "2011", "shape", "analysis", "subspace", "symmetry", "cgf", "-lrb-", "Proc", "eurographic", "-rrb-", "30", "277", "286", "lanz", "V.", "ETTER", "T.", "1999", "morphable", "model", "synthesis", "3d", "face", "Proc", "SIGGRAPH", "187", "194", "outin", "m.", "EMPER", "G.", "2004", "reconstruct", "n-point", "configuration", "from", "distribution", "distance", "area", "advance", "Applied", "Mathematics", "32", "709", "735", "haudhurus", "S.", "OLTUN", "V.", "2010", "data-driven", "suggestion", "creativity", "support", "3d", "modeling", "ACM", "SIGGRAPH", "Asia", "183:1", "183:10", "hazal", "F.", "OHEN", "teiner", "D.", "RIGOT", "Q.", "2010", "geometric", "inference", "measure", "base", "Distance", "function", "Research", "Report", "RR-6930", "INRIA", "oote", "T.", "F.", "aylor", "C.", "J.", "OOPER", "D.", "H.", "raham", "J.", "1995", "active", "shape", "model", "training", "application", "Comput", "Vis", "image", "underst", "61", "38", "59", "ryden", "i.", "ardium", "K.", "1998", "statistical", "shape", "analysis", "John", "Wiley", "Sons", "ISHER", "M.", "ANRAHAN", "P.", "2010", "context-based", "search", "3d", "model", "ACM", "SIGGRAPH", "Asia", "182:1", "182:10", "unkhouser", "T.", "AZHDAN", "M.", "hilane", "P.", "P.", "IEFER", "W.", "AL", "a.", "usinkiewicz", "S.", "OBKIN", "D.", "2004", "modeling", "example", "ACM", "SIGGRAPH", "23", "652", "663", "olovinskiy", "a.", "unkhouser", "t.", "2009", "consistent", "segmentation", "3d", "model", "Comput", "graph", "33", "-lrb-", "June", "-rrb-", "262", "269", "ALOGERAKIS", "E.", "ERTZMANN", "a.", "ingh", "K.", "2010", "Learning", "3d", "mesh", "segmentation", "labeling", "ACM", "SIGGRAPH", "102:1", "102:12", "AZHDAN", "M.", "unkhouser", "T.", "usinkiewicz", "S.", "2003", "Rotation", "invariant", "spherical", "harmonic", "representation", "3d", "shape", "descriptor", "Proc", "sgp", "156", "164", "ILIAN", "M.", "ITRA", "N.", "J.", "OTTMANN", "H.", "2007", "geometric", "modeling", "shape", "space", "vol", "26", "64", "IM", "M.-J.", "IM", "M.-H.", "hen", "D.", "2008", "learning-based", "deformation", "estimation", "fast", "non-rigid", "registration", "cvpr", "workshop", "OKKINOS", "I.", "uille", "a.", "2007", "unsupervised", "learning", "object", "deformation", "model", "IEEE", "ICCV", "aga", "H.", "akahashus", "H.", "AKAJIMA", "M.", "2006", "spherical", "wavelet", "descriptor", "content-based", "3d", "model", "retrieval", "SMI", "15", "itra", "N.", "J.", "UIBAS", "L.", "auly", "M.", "2007", "symmetrization", "ACM", "SIGGRAPH", "vol", "26", "63", "SADA", "R.", "unkhouser", "T.", "HAZELLE", "B.", "OBKIN", "D.", "2002", "shape", "distribution", "ACM", "TOG", "21", "807", "832", "vsjanikov", "m.", "ronstein", "a.", "M.", "RONSTEIN", "M.", "M.", "UIBAS", "L.", "2009", "Shapegoogle", "computer", "vision", "approach", "invariant", "shape", "retrieval", "iccv", "workshop", "nordium", "altel", "E.", "2008", "INRIA", "Gamma", "team", "research", "database", "http://www-roc.inria.fr/gamma/download/download.php", "hapira", "L.", "hamir", "a.", "ohen", "D.", "2008", "consistent", "mesh", "partitioning", "skeletonisation", "use", "shape", "diameter", "function", "Vis", "Comput", "24", "249", "259", "orkine", "O.", "LEXA", "M.", "2007", "as-rigid-as-possible", "surface", "modeling", "Proc", "sgp", "109", "116", "umner", "R.", "W.", "WICKER", "M.", "OTSMAN", "C.", "opovus", "J.", "2005", "mesh-based", "inverse", "kinematic", "ACM", "SIGGRAPH", "24", "488", "495", "VAN", "AICK", "O.", "HANG", "H.", "AMARNEH", "G.", "ohen", "D.", "2010", "survey", "shape", "correspondence", "Computer", "Graphics", "Forum", "K.", "H.", "HANG", "H.", "OHEN", "D.", "IONG", "Y.", "heng", "z.-q", "2010", "style-content", "separation", "anisotropic", "part", "scale", "ACM", "SIGGRAPH", "Asia", "184:1", "184:10", "ACM", "transaction", "Graphics", "Vol", "30", "no.", "Article", "33", "publication", "date", "July", "2011" ],
  "content" : "\n  \n    bf14e5d5c7577d532f0d2ae39876166bdfa6c8958bba16603d0c7fe83e6f6011\n    p0s\n    10.1145/1964921.1964928\n    Name identification was not possible. \n  \n  \n    \n      \n        Exploration of Continuous Variability in Collections of 3D Shapes\n      \n      Wilmot Li ?\n      Maks Ovsjanikov ? ?\n      \n        \n        Figure 1: Exploring collections of 3D shapes. We present an approach for learning variability within a set of similar shapes, such as a collection of airplanes, without any labels or correspondences (a). Our analysis automatically extracts a deformation model that characterizes variability based on the spatial arrangement of components in a template shape. Here, the primary mode of variation involves the wings moving along the fuselage in a coupled manner (b). We use this deformation model to provide a constrained manipulation interface for exploring the collection (c). Remarkably, our method avoids establishing correspondences between shapes at any stage of the algorithm.\n      \n      As large public repositories of 3D shapes continue to grow, the amount of shape variability in such collections also increases, both in terms of the number of different classes of shapes, as well as the geometric variability of shapes within each class. While this gives users more choice for shape selection, it can be difficult to explore large collections and understand the range of variations amongst the shapes. Exploration is particularly challenging for public shape repositories, which are often only loosely tagged and contain neither point-based nor part-based correspondences. In this paper, we present a method for discovering and exploring continuous variability in a collection of 3D shapes without correspondences. Our method is based on a novel navigation interface that allows users to explore a collection of related shapes by deforming a base template shape through a set of intuitive deformation controls. We also help the user to select the most meaningful deformations using a novel technique for learning shape variability in terms of deformations of the template. Our technique assumes that the set of shapes lies near a low-dimensional manifold in a certain descriptor space, which allows us to avoid establishing correspondences between shapes, while being rotation and scaling invariant. We present results on several shape collections taken directly from public repositories. Keywords: 3D database exploration, shape descriptors, shape analysis, morphable models, model variability\n    \n    \n      \n        ACM Reference Format\n        Ovsjanikov, M., Li, W., Guibas, L., Mitra, N. 2011. Exploration of Continuous Variability in Collections of 3D Shapes. ACM Trans. Graph. 30, 4, Article 33 (July 2011), 10 pages. DOI = 10.1145/1964921.1964928 http://doi.acm.org/10.1145/1964921.1964928.\n      \n      \n        Copyright Notice\n        Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or direct commercial advantage and that copies show this notice on the fi rst page or initial screen of a display along with the full citation. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers, to redistribute to lists, or to use any component of this work in other works requires prior specific permission and/or a fee. Permissions may be requested from Publications Dept., ACM, Inc., 2 Penn Plaza, Suite 701, New York, NY 10121-0701, fax +1 (212) 869-0481, or permissions@acm.org . ? 2011 ACM 0730-0301/2011/07-ART33 $10.00 DOI 10.1145/1964921.1964928 http://doi.acm.org/10.1145/1964921.1964928\n        Leonidas Guibas ? Niloy J. Mitra\n      \n      \n        1 Introduction\n      \n      A growing number and variety of 3D models are becoming available on the web via online repositories. Popular websites such as TurboSquid or Google 3D Warehouse contain hundreds of thousands of models from a wide range of object classes, including airplanes, cars, furniture, etc. One key benefit of these repositories is that they make it possible to incorporate 3D models into a variety of workflows without having to create 3D geometry from scratch. For example, authoring a 3D game or animation often requires modeling the environment where the action takes place. Using repository models to populate these environments significantly reduces the required modeling effort. In addition, 2D graphic designers sometimes incorporate 3D content into their work so that they can tweak perspective and lighting while creating the final image, and thus also benefit from diverse repositories of 3D models. While the growing availability of 3D models gives users an increasing range of content from which to choose, exploring large repositories can be a challenging task. Most online repositories support text-based search/filtering and return a list of all the matching models. This interface can help users quickly select a class of objects (e.g., all the cars), but it does not support easy exploration of the variations within that class. For example, searching for ?car? in the Google 3D Warehouse returns tens of thousands of models on thousands of results pages, and it is difficult to get an overall sense for what types of cars are available or the range of different car shapes without looking at all the results. Furthermore, text-based search does not allow users to explore collections of shapes based on geometric characteristics; for instance, while looking at one car in the collection, a user may want to see if there are similar models with skinnier bodies or larger wheels. Another approach to exploring collections of 3D models is to organize them based on geometric similarities and differences. The most basic operations in this context are shape comparison and retrieval, which consists of finding models in a collection that are most similar to a given 3D shape. Along these lines, there is a large body of existing work on shape descriptors that attempt to capture  important geometric properties of 3D shapes to enable meaningful shape-to-shape comparisons. While analyzing a set of 3D models in descriptor space often makes it easy to identify clusters of similar models and to retrieve models that match a given target shape, these techniques do not directly address the exploration problem. As with text-based filtering, clustering in descriptor space may still result in large, unorganized sets of similar models that are difficult to explore. On the other hand, example-based shape retrieval is most useful when the user already has a sense for what types of models are present in the collection and has at least one example of the desired type of models. As an alternative, the user can explore a collection by navigating directly in descriptor space. However, most descriptors are very high-dimensional, and a standard projection of the space, such as multidimensional scaling (MDS), typically does not result in an intuitive set of parameters for exploration, due primarily to the large amount of geometric detail present in the shapes ( Figure 2 ), which can obscure the global structural variability. Finally, a different set of methods for navigating a collection of shapes aims at obtaining an explicit representation for the variability observed in the collection, by finding a consistent parametrization for the shapes and then performing statistical analysis in the parameter space. The most common way for parametrizing a set of shapes is by establishing correspondences between points or parts of shapes and measuring their displacements across the shapes in the collection. Active shape models in computer vision [Cootes et al. 1995], statistical shape analysis in biology [Dryden and Mardia 1998] and inverse kinematics in computer graphics [Sumner et al. 2005] all share this spirit. Such methods are useful for navigating within a family of related shapes because they can constrain exploration within the bounds of the observed data. However, obtaining reliable correspondences across even moderately sized collections of shapes is a very challenging problem, especially for the unstructured user-generated shapes found in public repositories. In this work, we propose a new correspondence-free technique for exploring unorganized collections of 3D models that focuses on learning and presenting variations within a set of similar shapes. Specifically, our method analyzes the input collection to extract and organize continuous variability that can be expressed in terms of the relative sizes and positions of shape parts. Based on this analysis, we provide an exploration interface in which the user interactively deforms a template shape by dragging arrows that indicate the main variability axes amongst the input shapes. As the template deforms, the system presents the closest matching model in the collection. There are two key ideas behind our approach: I. Exploration via template deformation. Unlike standard example-based retrieval where users must obtain and specify an example model for each query, we allow users to explore the collection via interactive deformation of a template shape. Our system helps the user select a suitable template and provides simple direct manipulation tools for specifying deformations. II. Constrained template deformation model. To help the user specify deformations that match the actual shape variations in the collection, we propose a novel technique for extracting a constrained template deformation model directly from the collection. Notably, our method does not require correspondences between the models in the collection; instead, we propose a technique that converts variability in the descriptor space representation of the collection into a deformation model of the template shape. Our strategy of combining a direct manipulation template-based interface with a constrained deformation model addresses many of the limitations of existing exploration techniques. Unlike text-based search, our approach allows the user to explore a collection based\n      ACM Transactions on Graphics, Vol. 30, No. 4, Article 33, Publication date: July 2011.\n      \n        \n      \n      \n        Figure 2: Navigating in descriptor space. This plot is an MDS\n      \n      models, generated using the 100-dimensional smoothed histogram descriptor described in Section 5.1. While the 4 highlighted models are similar, their positions in descriptor space do not indicate any obvious consistent structural variation.\n      on geometric characteristics, and in contrast to previous descriptorbased methods, we represent shape variation in terms of template deformation, with an intuitive, continuous parameter space that allows users to explore the variability in a collection with respect to the configurations of parts that comprise the object. For example, in one of our results, we analyze a collection of airplanes and automatically extract a deformation model in which the positions of the wings vary from the front to the back of the fuselage ( Figure 1 ). Based on this analysis, we allow the user to explore the collection by directly deforming the wings of the template model. Finally, the fact that we do not rely on computing shape-to-shape correspondences makes our method both robust to geometric diversity and efficient, enabling real time exploration of shape collections. The main assumptions of our method are as follows. First, we assume that the shapes in the input collection all share a common global part structure (e.g., a set of four-legged chairs or two-winged airplanes). However, we do not assume the shapes to be similarly segmented, as this is rather unrealistic for general shape repositories. For example, the wing of an airplane may be composed of a single connected mesh component in one model and dozens of components in another. We also assume that most of the shape variability within the collection can be explained in terms of the relative sizes and positions of the shape parts. More specifically, we assume that given any pair of shapes A and B in the collection, it is possible to deform A by modifying the sizes and positions of its parts to align A close to B. Finally, we assume that the space of possible deformations is low dimensional and sufficiently densely sampled in the collection. In other words, we assume that we are given a shape collection that lies near a low-dimensional manifold in a deformation space defined with respect to the relative sizes and positions of shape parts.\n      Our work makes two main contributions: ? We present a template-based interface for exploring collections of similar 3D models via constrained direct manipulation. ? We introduce a novel technique to convert descriptor variability into a deformation model for a template shape without relying on correspondences between shapes.\n      In the remainder of the paper, we describe the details of our approach and present several results.\n      ACM Transactions on Graphics, Vol. 30, No. 4, Article 33, Publication date: July 2011.\n      Exploration of Continuous Variability in Collections of 3D Shapes\n      ?\n      33:3\n      \n        2 Related Work\n        Morphable models and deformation modeling. A collection of shapes with assigned correspondences implicitly encodes a deformation model for the collection. Such shapes can be seen as high dimensional points within a common coordinate system, and their principal modes of variations can be directly extracted using statistical tools. Blanz et al. [1999] in their highly influential work explore this idea in the context of 3D face models. Subsequently, the framework has been extended to analyze shapes of human bodies in consistent poses [Allen et al. 2003], and also for human bodies with both pose and size variations [Anguelov et al. 2005]. Sumner et al. [2005] represent meshes as feature vectors of deformation gradients relative to a reference pose, and allow direct mesh manipulation restricted to a nonlinear span of the example feature vectors. Kokkonos and Yuille [2007] learn object deformation models using an active appearance model among objects with manually annotated landmark correspondences, which is similar in spirit to statistical shape analysis in biology [Dryden and Mardia 1998]. In the medical domain, Kim et al. [2008] use a PCA based deformation model between a template and training images for robust registration of MR brain scans. Recently, Berner et al. [2011] extract repetitive object parts where the parts form low dimensional shape spaces. Alternatively, Kilian et al. [2007] create a shape space for isometric deformations that allow computation of geodesic paths between model pairs with given correspondence. Mitra et al. [2007] map transformation domain manipulations to indirectly deform the corresponding shapes in the object space. While all of the above methods can learn useful modes of variation for specific classes of shapes, their reliance on accurate correspondences is a significant limitation for the task of exploring unorganized collections of 3D shapes. In particular, there is typically a large amount of variation in topology and geometric quality across models in public repositories, even those within the same class. For example, as noted by Xu et al. [2010] it is not uncommon to see point sets, polygon soups, and water-tight meshes all within a single collection of models. In the face of such variations, global correspondence detection remains a challenging open problem (see [van Kaick et al. 2010]).  Exploring shape datasets. Due to the difficulty of establishing correspondences across unstructured collections of shapes, researchers have proposed several alternative strategies for exploring such collections. For example, text keywords (see [Fisher and Hanrahan 2010] for a discussion), or proxies for shape parts [Funkhouser et al. 2004; Chaudhuri and Koltun 2010] are regularly used to query heterogeneous datasets. Alternatively, models can be mapped to an appropriate global descriptor space (e.g., shape distributions [Osada et al. 2002], spherical harmonics [Kazhdan et al. 2003], spherical wavelets [Laga et al. 2006], heat kernels [Ovsjanikov et al. 2009]) and based on the properties of the descriptors (e.g., shape, pose or rotation invariance) shapes are embedded in a consistent descriptor space without requiring explicit object level correspondences. While clustering in descriptor space produces broad categorizations (e.g., distinguishing between cars and horses) studying finer scale variations within a cluster remains a challenge. Recently, partbased correspondence has been explored as a method for studying variations within such model clusters. For example, Golovinskiy et al. [2009] present an algorithm for simultaneously segmenting while establishing part correspondences across a set of models based on clustering on a graph of potential corresponding model faces, and Kalogerakis et al. [2010] introduce a data-driven approach for learning a consistent segmentation and labeling of model parts using a range of geometric and contextual features. In con- trast, we demonstrate that subtle models variations can be learned and explored from model collections by establishing a two-way mapping between descriptor space and object space without computing direct correspondences at the level of features or parts. There is a significant amount of prior work that supports modeling with the help of a database of existing models [Funkhouser et al. 2004; Chaudhuri and Koltun 2010; Fisher and Hanrahan 2010; Xu et al. 2010]. While some of these techniques propose or use specific ways of searching the database for good candidate models (or suggestions), these methods typically rely on example-based search, which, as discussed earlier, is not ideal for exploring unfamiliar collections of shapes. In many ways, our work is complementary to that of the data-driven modeling community; we focus on techniques that facilitate the exploration of model collections, while they focus on methods for combining various components from different models together.\n      \n      \n        3 Overview\n        Our approach consists of two main steps. Given a collection of 3D shapes, we first analyze the collection to select a template shape and extract a deformation model that captures the primary modes of continuous variability found in the collection. Then, we incorporate the template and its deformation model into an exploration interface that allows users to browse the collection by interactively deforming the template to find similar shapes. Since the goal of our work is to help users understand and explore variations within a collection of similar shapes, we assume the input models all come from the same class (e.g., a set of shapes returned by text-based filtering or clustering in some descriptor space). Furthermore, we focus on extracting continuous rather than discrete variability. Thus, our approach works best for object classes whose shape variations are characterized by the relative size and positions of the main object parts (e.g., bicycles, cars, planes and other mechanical objects), and we do not attempt to learn variations in the number of parts per shape (e.g., chairs with different numbers of legs). Finally, in our implementation, we assume the input models are represented as polygonal meshes. To help explain and motivate our analysis technique, we first discuss the problem of extracting a deformation model from a set of shapes in the context of a simple example (Section 4). We then describe the details of our analysis framework (Section 5) and exploration interface (Section 6). Finally, we present results from several experiments (Section 7) and discuss directions for future work (Section 8).\n      \n      \n        4 Problem Formulation and Method Overview\n        In this section, we illustrate the problem of shape exploration with a motivating example, which underlines both the complexity of shape analysis and the properties of our approach. In the most basic setting, suppose that we are given a collection of s shapes, where each shape is simply a set of n points in 2dimensional space, as shown in Figure 3 (top). Our overall goal is to discover and expose the variability of the shapes in the collection, while factoring out the rotation. Of course, if there is no a-priori information about the shapes, any set of correspondences or deformations is equally likely. Now suppose instead that it is known that every shape in the collection is obtained by deforming the basis shape, Figure 3 (top left), and that moreover, the set of deformations forms a smooth 1-parameter family, although the shapes are not presented in any particular order. For example, the shapes in Figure 3 were obtained by scaling the x coordinate of each point of the shape shown in the top left, by t dx and the y coordinate by t dy, where t ranges from 0 to 1, and dx, dy are fixed. Moreover, an arbitrary rotation was added to each shape. Our goal is then to recover dx and dy as well as the value of t for each shape, while factoring out the rotations. Note that even given the knowledge that a set of shapes was produced by a smooth deformation, establishing point correspondences is non-trivial due to the combinatorial complexity of the search for both the right order of the shapes and the right correspondences between them. Indeed, a brute-force approach to establishing point-correspondences between s shapes with n points would have O(s!n! s ) complexity, which is doubly exponential if s = O(n). One of the main observations of this paper is that if a collection of shapes comes from a 1-parameter family set of deformations (i.e., each shape corresponds to a deformation of some basis shape) then in an appropriately chosen rotation-invariant descriptor space (Section 5.1), the descriptors of the shapes will trace a smooth curve. In other words, if we summarize each shape by a compact rotationinvariant descriptor in R m , which changes smoothly as the shape is deformed, then the set of all descriptors will form a smooth oneparameter family in R m , which is a curve. Moreover, since any 1-parameter family of deformations will produce a set of shapes whose descriptors trace a curve, given a potential value for dx and dy we can evaluate how well its curve fits the data in the descriptor space and pick the deformation parameters that are as faithful as possible to the data. In particular, if we have an explicit expression for how the change in the deformation parameters affects the descriptor, we can view the problem of picking the optimal deformation parameters as an energy minimization problem, and solve it using gradient descent or other optimization techniques. Note that in this example we used the descriptor introduced in Section 5.1 and the continuous optimization framework described in Section 5.3 to successfully recover the original deformation. In the rest of this paper, we show how to apply this idea to recover continuous variability in unlabeled collections of 3D shapes. Namely, if the variability in a collection of shapes can be captured by deformations of some base template shape, our goal is to recover both the template as well as its family of deformations. Moreover, we avoid relying on correspondences across shapes, since obtaining such correspondences is a very challenging problem, which only becomes harder with the growth of shape repositories.\n        ACM Transactions on Graphics, Vol. 30, No. 4, Article 33, Publication date: July 2011.\n        33:4\n        ?\n        M. Ovsjanikov et al.\n        ... ...\n        \n          \n          \n          Figure 3: Overview of our method. Given a collection of unlabeled shapes (top), we compute a descriptor for each shape, embedding them into a canonical domain (bottom). If the shapes were produced by a 1-parameter family of deformations, their descriptors will trace a curve. Moreover, any such family of deformations of a starting shape will produce a curve in the descriptor space (bottom red). By fitting the curve lying most closely to the data, we recover the original deformation.\n        \n      \n      \n        5 Shape Analysis and Deformation Modeling\n        Given a set of related 3D shapes, we apply the high-level approach described in the previous section to extract and model the continuous variations in the collection. To realize this approach, we present an analysis framework that addresses the following challenges: ? Identify a suitable shape descriptor whose variability is related to deformations of the template shape (Section 5.1). ? Select a representative template shape whose deformation will be used to explain the variability of the input shapes (Section 5.2). ? Find variability in the descriptor space and convert it into variability in the deformations of the template shape (Section 5.3). ? Learn a low-dimensional deformation model that captures the template deformations (Section 5.4).\n        \n          5.1 Shape descriptor\n          As described in Section 4, our general strategy is to extract continuous variability in the descriptor space, in which each shape is represented as a vector of fixed finite dimensions, and use it to infer continuous variability in the relative sizes and positions of shape parts. The key requirement for a finite dimensional descriptor to work in our setting is that continuous (or differentiable) deformations of a shape must result in continuous (or differentiable) changes in each coordinate of the shape descriptor. Moreover, as we show in Section 5.3, we would like to have explicit expressions for the change in the descriptor coordinates with respect to shape deformations. Note that direct adaptations of most shape descriptors do not satisfy these properties. To illustrate this, Figure 4 shows the changes of different descriptors under smooth deformation of a shape, obtained by continuously sliding the wings of a plane model along its fuselage from the very front towards the back ( Figure 4 top). We sampled this deformation 71 times and considered how different coordinates of multi-dimensional shape descriptors change under this motion. Figure 4 (bottom left) shows the changes in 3 coordinates of a popular 517-dimensional Spherical Harmonic descriptor [Kazhdan et al. 2003], while Figure 4 (bottom middle) shows the changes in 3 out of 100 coordinates of the Shape Distribution [Osada et al. 2002] represented as a histogram of pairwise distances between 2 million point pairs. To remove randomness in the computation of the histogram, the pairs of points were pre-computed and deformed together with the rest of the shape. In order to achieve the above-stated goals, we use a different discretization of the Shape Distribution. Specifically, given an input shape M, we first compute Euclidean distances between N pairs of points (p j1 , p j2 ), j ? [1..N], where each p j1 and p j2 is sampled uniformly at random on M. However, instead of discretizing the distribution of distances as a histogram, we convolve this distribution with a Gaussian kernel of a fixed width ? . Thus, given a shape M its descriptor S(M) is a vector in R m , with the i th coordinate: S i (M) = N 1 X N exp ? ? ( ? i ? d(p 2 j1 ? , 2 p j2 )/R) 2 ? , j=1 where the normalizing constant R = (1/N) P N j=1 d(p j1 , p j2 ), and we use ? i = 3i/m (for an m-dimensional descriptor vector) and ? = 0.1 in our experiments. Note that each coordinate S i (M) changes smoothly under smooth changes of the coordinates of the points, p j1 , p j2 , Figure 4 (bottom right). We note that the same discretization technique can be applied to other descriptors based on distributions of quantities that change\n          ACM Transactions on Graphics, Vol. 30, No. 4, Article 33, Publication date: July 2011.\n          Exploration of Continuous Variability in Collections of 3D Shapes\n          ?\n          33:5\n          \n            \n          \n          x 10 -3 1.2 5th 0.22 10th 0.18 10th 25th 0.21 20th 20th 1 50th 30th 0.17 30th 0.2 0.16 0.8 0.19 0.18 0.15 0.6 0.17 0.14 0.4 0.16 0.13 0.15 0.2 0.14 0.12 0 0 10 20 30 40 50 60 70 0.13 0 10 20 30 40 50 60 70 0.11 0 10 20 30 40 50 60 70\n        \n      \n      \n        Strength of the Deformation Strength of the Deformation Strength of the Deformation\n        \n          Figure 4: Changes of different descriptors under smooth deformation of a shape. (Top) A basis shape was deformed by progressively moving the wings along the body. (Bottom) Changes of fixed coordinates of different descriptors. (Left) Spherical Harmonics [Kazhdan et al. 2003], (middle) Shape Distribution (SD) [Osada et al. 2002] represented as a histogram of distances, and (right) our discretization of SD. For simplicity we only present how specific coordinates of each descriptor change under smooth deformations.\n        \n        smoothly under shape deformations, such as areas or curvatures. Nevertheless, the smoothness of the discretized descriptor is very easily broken, e.g., by scaling these quantities by their maximum value rather than the mean. Similarly, convolving a distribution after binning it to a histogram will not result in a smooth descriptor; since a histogram of a fixed number of values ? and thus, its convolved version ? has only a finite number of possible states, it cannot possibly vary smoothly under continuous deformations. Moreover, our discretization technique does not necessarily achieve smoothness for all histogram-based descriptors. For example, the Shape Diameter Function [Shapira et al. 2008] measures the lengths of inward-pointing rays within a shape, which can change discontinuously under deformations. Note that it is also possible to produce smoothly varying descriptors by summarizing a distribution using its moments, where i th coordinate of the descriptor becomes (1/N) P N j=1 (d(p j1 , p j2 )/R) i , or to use the empirical characteristic function: P j exp( ? t d(p j1 , p j2 )) for various values of t, where ? is the imaginary unit. We leave the comparison of these descriptors and exploration of other possibilities to future work. It is also important to observe that S(M) is invariant under rigid deformations as well as global scaling of the sample points. Furthermore, as shown by Boutin and Kemper [2004] almost all npoint configurations are reconstructable from their distributions of distances. Since S(M) is simply a convolution of the Shape Distribution with a Gaussian kernel of fixed width, it contains the same amount of information (since it is invertible in the Fourier domain) and can thus discriminate between non-congruent shapes.  5.2 Template selection and deformation space In the first stage of our pipeline, we compute the descriptor for each shape in the given collection. Since this stage is done off-line and only once, we emphasize accuracy over efficiency, and thus, can afford to use a large set of point-pairs for computing the descriptor. In practice, we use 2 million point pairs for every shape, and 100 coordinates for the descriptor S(M) sampled uniformly between 0 and 3 (recall that the mean distance is always 1). To illustrate the dependence of the accuracy of the estimation of our descriptor on the number of sample points, we plotted in Figure 5 the 2D and 3D MDS embedding of the descriptors computed for the shapes from the set shown in Figure 4 (top). Unlike the experiment shown in Figure 4 , however, we computed the descriptor independently for each pose, rather than fixing the set of point pairs. As a result, since the pairs are sampled randomly, there will\n      \n      \n        20k 100k 2M\n        \n          Figure 5:\n        \n        0.06 0.04 0.01 0.02 -0.01 0 0 -0.1 -0.02 -0.05 -0.04 0 0.03 -0.06 -0.05 0 0.05 0.1 0.05 -0.03 0 The variance in the estimation of the descriptor decreases with increasing sampling density. The points represent 2D (left) and 3D (right) MDS embedding of the descriptors computed for the set of shapes used in Figure 4 , but sampled independently for each shape. The curve in the descriptor space is well pronounced already with 100k. be variance in the estimation of the descriptor. On the other hand, because the shapes are related by a smooth deformation, we expect the descriptors to trace a curve in the descriptor space. As can be seen in Figure 5 , the variance in the estimation of the descriptor decreases when increasing sampling density (from 20k to 100k to 2M samples), and the curve becomes well pronounced. After computing the descriptor for all shapes, our system helps the user select a template shape whose constituent parts define the allowable set of deformations (i.e., the deformation space) for our analysis. Since the goal of our analysis is to determine how the relative sizes and positions of object parts vary across the input collection, the chosen template should include all the basic parts for the given object class and ideally be segmented into exactly those parts. As noted by Xu et al. [2010], shapes in public repositories tend to be over-segmented when considering simply their mesh connectivity. Thus, we adopt a simple strategy for selecting a template shape in a collection. We first order the shapes by the distance of their descriptor to the average descriptor in the collection. Next, we filter out all shapes that have more than a user-specified maximum number of connected mesh components. Finally, we automatically suggest the first shape to the user as a potential template. With this approach, we end up suggesting a template that closely resembles the average while not being over-segmented. In most cases, manual inspection by the user is still necessary to ensure that the template components are reasonably segmented and actually correspond to a meaningful set of parts. If the user is not happy with the first suggestion, she can view the other shapes in the ordered list of suggested templates. In addition, we allow the user to modify a template shape by selecting components to group together into a single part. In all of our experiments, we were able to find satisfactory templates amongst the first 2?3 shapes closest to the mean, and for three of our six test datasets, we ended up using the automatically suggested template without any modifications. For the remaining three datasets, we grouped a few components together to simplify the template part structure; this grouping took less than one minute per template. Note that the exact choice of the template shape is not crucial in our method as long as it has the desired global structure, since relations based on deformation are transitive and reflexive ? i.e., A is deformable onto B implies that B is deformable onto A. For the chosen template shape, with C components (or userdefined groups of components), we define the template configuration X = (x 1 , . . . , x 6C ) as the coordinates of the bounding box for every component. We parameterize the deformation space of the template shape by a set of 6C deformation parameters that correspond to 3 translation and 3 scaling parameters for each component. Specifically, given a deformation vector D ? R 6C , the deformed coordinate of a point p = (p x , p y , p z ) that belongs to component c becomes p(D) = (D c1 p x + D c2 , D c3 p y + D c4 , D c5 p x + D c6 ), where D c1 . . . D c6 are the deformation parameters in D corresponding to component c. Although more flexible parameterizations of the deformation space are possible, e.g., [Sorkine and Alexa 2007], our goal is to capture global variability using as few as possible deformation parameters. Note also that since we view each shape as a point in the highdimensional deformation space, we need a dense sampling to recover patterns in the deformation space without over-fitting, which becomes progressively more difficult by introducing more complicated and thus higher dimensional deformation parameterizations. Given a template shape and a parametrization of its deformation space, our goal is to use it to navigate through other shapes in a collection and to learn their variability. In other words we would like to capture the variability of shapes present in the collection in terms of the deformation of the template shape. We start by identifying local patterns among the set of descriptors of the shapes in the collection. Specifically, since by construction our descriptors change smoothly under deformations of the shape, low dimensional families of deformations get mapped to low dimensional variability of the descriptors. Therefore to capture shape variability, we perform local PCA in the descriptor space around the descriptor of the undeformed template shape. We select a large set of neighbors of the template descriptor, and find the principal directions of variability of the descriptors in this collection. Our goal then is to convert this variability in the descriptor space into variability in the deformation of the template. To solve this problem, first consider the following simple formulation: suppose we are given descriptors of two shapes S(M 1 ) and S(M 2 ), and our goal is to find a deformation of M 1 that would cause its descriptor to move as closely as possible to that of M 2 . This problem can be phrased in terms of energy minimization. For a particular choice of deformation parameters D, let E(D) = S(M 1 (D)) ? S(M 2 ) 2 , where M 1 (D) represents shape M 1 deformed according to D. Then, the optimal deformation D can be defined as D opt = arg min D E(D), and found using non-linear optimization techniques. One key requirement of such techniques is that the gradient ?E(D) exists and preferably can be computed analytically. Note that this is very easy to do with our descriptor, given the knowledge of partial derivatives of the coordinate of each point p ? M 1 with respect to the deformation parameters: ? p(D) i /? D j . In particular: ?E(D) = 2(S(M 1 (D)) ? S(M 2 ))J, where J is the Jacobian matrix, such that J(k, i) = ? S(M 1 (D)) k / ? D i , which can be easily computed as: J(k, i) = 1 X N exp ? ? ( ? k ? d j /R) 2 ? ( ? k ? d j /R) ? (d j /R) , N 2 ? 2 ? 2 ? D i j=1 where d j = d(p j1 (D), p j2 (D)), R = N 1 P N j=1 d j , and ? (d j /R) ? d j /? D i P d j ? d j P ? d j /? D i = N , ? D i ( P d j ) 2 ? d j p j1 (D) ? p j2 (D) ? (p j1 (D) ? p j2 (D)) = ? . ? D i d j (D) ? D i In particular, if p(D) = (D 1 p x + D 2 , D 3 p y + D 4 , D 5 p z + D 6 ), then e.g. ? p(D)/? D 1 = (p x , 0, 0), ? p(D)/? D 2 = (1, 0, 0) and similarly for D i , i = 3 . . . 6. To summarize, if we are given a parametrization of the deformation space by a fixed number of parameters encoded in a vector D, such that the coordinates of all points of the shape change smoothly under the changes of these parameters, then the gradient of the energy E(D) is well defined and has a simple closed form solution, which can be used to find the optimal deformation D. Note, however, that in general multiple solutions may exist for D opt since, although our descriptor is informative, because of limited precision and memory multiple shapes may exist sharing the same descriptor. On the other hand, since we are interested in the variability among the descriptors, rather than fitting the deformation to a single point in the descriptor space, we would like to fit it to an entire curve (a line in the case of PCA), thereby also alleviating the ambiguity in the solution. For this, we sample a given principal direction with L equally spaced sample points starting at the descriptor of the undeformed template shape, and rather than solving for a single deformation D, we solve for L deformations D 1 ...D L that minimize the following energy function: L L X S(M(D j )) ? S j 2 + ? X D j ? D j?1 2 , j=1 j=2 where the second term is designed to ensure smoothness of the deformations. In practice, we use L = 3 and ? = 2 for the examples in this paper. Note that this formulation assumes that uniformly spaced deformations in the deformation space will produce approximately uniform changes in the descriptor space. Although this may not be true in general, we have observed that for medium deformations, this is not a restrictive assumption. We compute the optimal set of deformations using the same optimization framework as described above, made possible by the smoothness of the energy with respect to the deformation parameters, and thus our ability to compute the analytic gradient ?E(D). The output of this procedure is a set of 2L deformations for each principal direction with L in each positive and negative directions. Using these deformations we then learn a deformation model that is used to navigate the shape collection efficiently. To combine the 2L template deformations from the previous step into a deformation model, we use an approach similar to the ActiveShape Models of Cootes et al. [1995] and related techniques. First, we convert each deformation D from a set of translation and scaling parameters into a deformation vector T = (t 1 , t 2 , . . . , t 6C ) that represents an explicit offset from a given template configuration. While D and T are equivalent (i.e., define the same template deformation), T is a more convenient representation for learning the deformation model. Next, we perform PCA on all 2L deformation vectors and treat the first K principal components as a deformation basis. This basis represents the core of our deformation model. By restricting the space of allowable deformations to linear combinations of the basis vectors, we ensure that the template always deforms in a way that corresponds with the underlying descriptor variability. To limit how far the template can deform in each basis direction, we project the original 2L deformations onto the basis and compute the minimum and maximum projected values in each basis dimension ? in other words, we compute the K-dimensional bounding box of the original 2L deformations vectors projected onto the basis. We define the space of allowable template deformations as the linear combinations of basis deformations whose coefficients fall within this bounding box. For the examples in this paper, we set K = 2. Also, to make our learned deformation models a bit more flexible, we increase the range of allowable coefficient values in each basis dimension by a small scale factor.\n        ACM Transactions on Graphics, Vol. 30, No. 4, Article 33, Publication date: July 2011.\n        33:6\n        ?\n        M. Ovsjanikov et al.\n        5.3 Descriptor variability and template deformations\n        5.4 Learning the deformation model\n        ACM Transactions on Graphics, Vol. 30, No. 4, Article 33, Publication date: July 2011.\n        \n          \n          Figure 6: Exploration interface. As the user deforms the template shape using coordinate arrows (a), its descriptor is displayed in the\n        \n        context of the collection (c), and the closest model\n        \n          \n        \n      \n      \n        6 Exploration\n        Having analyzed a collection of shapes to obtain a template and corresponding deformation model, we provide an exploration interface that visualizes the variability in the collection and allows the user to explore the set of input shapes by interactively deforming the template. Our interface consists of three linked views ( Figure 6 ): The template view shows the set of C axis-aligned bounding boxes that correspond to the components of the template shape. This view allows the user to specify a template deformation by directly manipulating the individual template boxes. The model view shows the model in the collection that is most similar to the current template configuration. This view updates automatically as the user deforms the template. Finally, the descriptor view shows a 2D MDS embedding of the descriptors for the entire collection and the descriptor for the current template configuration, which updates as the user deforms the template. This view allows the user to see how template deformations map to descriptor space and provides visual context for how the current template configuration relates to the rest of the collection. The remainder of this section describes the main features of our interface, and explains how these features help the user understand and navigate the variety of shapes in the collection.\n        \n          6.1 Visualizing variability\n          To help the user understand the variability in the collection with respect to the template shape, our template view provides two types of visualizations.  Coordinate arrows. As discussed in the previous section, we parameterize the deformation space of a template by the 6C coordinate values that define the size and position of each template component. Thus, one way to visualize the variability in the collection is to show the range of allowable values for each of these coordinates under the given deformation model. We show these ranges using arrows, one for each coordinate, that extend from the corresponding template box face to the minimum/maximum allowable value for that coordinate. To reduce visual clutter, the user can tell the system to only show the arrows for a selected template box ( Figure 7a ). By emphasizing how individual coordinates are allowed to deform, coordinate arrows help the user understand variability in terms of specific template components. For example, Figure 7b shows that in the airplane collection, the length of the wing and its position along the fuselage both vary much more than the wing thickness. Component arrows. A different way to visualize variability is to show how the overall arrangement of template components varies across the collection. To this end, we generate component arrows, which are simply a subset of all the coordinate arrows for the template. For each template component, we identify the dimension (i.e., x, y or z) whose two corresponding coordinates have the maximum range of allowable values. We then show the corresponding two coordinate arrows. These component arrows allow the user to see, at a glance, the main ways in which the relative positions of components can change under the deformation model. For example, Figure 7b shows that the primary variations in the airplane dataset correspond to the wings moving along the fuselage and the vertical tail fin sliding forwards and backwards. In order to generate both coordinate and component arrows, we must be able to determine the allowable range of values for a given template coordinate x i with respect to the current template configuration X. To do so, we first construct the offset vector u that represents how X changes when we increase/decrease x i . We then project X and u into the basis space defined by the deformation model, to get a set of basis coefficients Y and basis offset v. Since the deformation model specifies the allowable range of basis coefficient values, we can determine the longest distance we can travel along v i starting from Y before we reach the limit of allowable template deformations. Finally, we take this longest distance in basis space and convert it to range of allowable values for x i .\n          \n            Figure 7: Arrows. We generate coordinate arrows and component arrows to visualize variability with respect to the template shape.\n          \n          These images show the variations within a collection of airplanes.\n        \n        \n          6.2 Exploring via constrained direct manipulation\n          To explore the collection, the user deforms the template by interactively dragging along any visible arrow in the template view. As the user drags, we update the template as follows. First, we modify the current template configuration X 1 by updating only the coordinate associated with the dragged arrow. We then project this modified configuration X 1 into the deformation basis to obtain a set of basis coefficients Y 2 . We clamp each coefficient based on the range of allowable values specified by the deformation model, and then we multiply Y 2 by the basis deformation vectors to reconstruct a new template configuration X 2 . Since we always project the template back into the deformation basis, the user is able to explore the space of allowable deformations for the entire template just by modifying a single coordinate. Furthermore, since dragging on an arrow attempts to modify only the corresponding coordinate, this interaction enables both part scaling and translation, as long as such deformations are supported by the deformation model. Once the template is updated, we compute the descriptor for the new configuration and then find the most similar model in the collection by performing a nearest neighbor search in descriptor space. We update the model view to show the nearest neighbor model, and we update the descriptor view to show the new template descriptor value. If the user scrolls in the model view, we cycle through the k nearest neighbor models, where k is a user-specified parameter. One important property of our direct manipulation approach is that it automatically enforces any spatial dependencies between parts  that are captured by the deformation model. For example, with the deformation model that we extracted from the collection of airplanes, dragging the left wing of the template automatically moves the right wing as well (see supplementary video). While it is technically possible to explore the collection by deforming each template coordinate independently, we found the learned dependencies to be critical for achieving a practical exploration interface. As an example, Figures 8d?e, show two principal modes of the deformation model for a collection of bicycles and motorcycles. In this model, there is a relationship between interwheel distance and the height of the body component; long motorcycles have lower bodies, while long bicycles tend have higher bodies. Without the deformation model, the user would have to guess what template deformations might match the collection. In this case, even if the user guesses correctly that there are shapes with a long interwheel distance and slides the front wheel forward ( Figure 8e ), he would only find long motorcycles and not long bicycles.\n          ACM Transactions on Graphics, Vol. 30, No. 4, Article 33, Publication date: July 2011.\n          33:8\n          ?\n          M. Ovsjanikov et al.\n          \n            \n              \n                \n                  \n                     class\n                     # of shapes\n                     mean # conn. std.dev. comp.\n                     % manifold\n                  \n                \n                \n                  \n                     Bicycles\n                     67\n                     96.8 97.3\n                     29.8\n                  \n                  \n                     Cars\n                     100\n                     75.2 165.3\n                     67\n                  \n                  \n                     Motorbikes\n                     81\n                     223 207.3\n                     16\n                  \n                  \n                     Planes\n                     55\n                     52.4 97.8\n                     25.5\n                  \n                  \n                     Chairs\n                     132\n                     444.9 1931.8\n                     89.4\n                  \n                \n              \n            \n            # conn. comp. class # of shapes % manifold mean std.dev. Bicycles 67 96.8 97.3 29.8 Cars 100 75.2 165.3 67 Motorbikes 81 223 207.3 16 Planes 55 52.4 97.8 25.5 Chairs 132 444.9 1931.8 89.4\n            Table 1: Properties of our datasets. Note that the number of connected components ranges wildly across shapes (from 1 to 20494 in our datasets), and only a small fraction of shapes are manifold.\n          \n        \n      \n      \n        7 Results\n        To evaluate our approach, we consider five classes of 3D shapes: airplanes, bicycles, motorcycles, cars and chairs. We chose these objects because they have a well-defined set of parts (e.g., wings, wheels, etc.), and variations within these classes of models are often characterized by the spatial layout of the parts. Furthermore, mechanical shapes and furniture are very popular in online repositories (e.g., 40k ?cars? and 14k ?chairs? in the Google 3D Warehouse). For each class, we gathered a dataset of 3D models, ranging in size from 55 to 132 models ( Table 1 ). We obtained most of our examples from the INRIA GAMMA Group repository [Saltel 2008], which aggregates 3D models from a variety of commercial and academic databases (e.g., Foundation 3D, the Princeton Shape database), with a few extra shapes added from the Google 3D Warehouse. Note that we did not prune models based on any low-level geometric properties. Thus, our datasets span a wide range of model complexity and quality, which is typical of online repositories in general. For example, across our test data the number of connected components varies from 1 to 20494, and a significant portion of the models are non-manifold as shown in Table 1 . Finally, since the goal of our approach is to find variations within collections of similar shapes, we removed outliers from the datasets by thresholding the distance to measure [Chazal et al. 2010], with k = 10 in our smoothed histogram descriptor space. Table 1 summarizes the shapes we obtained after pruning and outlier detection. To determine the variations within each class of shapes, we analyzed the datasets as described in Section 5. Note that for template selection, we manually grouped a small number of connected components in the airplane and chair templates, and we used the automatically selected template for the bicycles, motorcycles, and cars. Given these templates, our approach automatically extracted a deformation model for each class of shapes. We then used our exploration interface to visualize and navigate the variability in the collection. Figures 8a?e show the main modes of variation for the five different classes of shapes. Notice that our technique captures changes in both the size and position of the template components. For example, the distance between the front and back wheel accounts for most of the variability in the motorcycles, while the length and width of the body varies across the set of cars. Furthermore, as we discussed in Section 6.2, our method automatically learns and encodes the spatial dependencies between components to help the user understand and explore the space of allowable deformations as defined by the data. For example, symmetric components such as wheels and wings deform together in all four learned deformation models. We also capture less obvious dependencies, such as the body of the motorcycle moving downwards as the front wheel moves forward; this relationship is mainly due to several stretched, low-profile ?chopper? bikes in the dataset, such as the one shown in the bottom row of Figure 8b . As an additional experiment, we combined the bicycles and motorcycles into one collection to see if we could learn a single deformation model for these two related classes of shapes. The analysis produced a deformation model with two distinct modes of variation (Figures 8c and 8d). Interestingly, the second mode of variation in the combined set contains a deformation related to stretching the body along its width, so that skinny configurations corresponded to bicycles. Using these deformations, we were able to navigate through both the bicycles and motorcycles in our exploration interface, as shown in the accompanying supplementary video. Timing. By far, the most time consuming part of our approach is pre-processing, when we compute the descriptor for each shape in the collection. Using a simple MATLAB implementation, this computation took under 18 seconds per shape on average for 2M point pairs on an Intel Core 2 Duo processor. During optimization, we only use 20k samples to compute the descriptor for efficiency. However, prior to optimization we find a set of 20k samples such that the descriptor computed using this set is within 0.5 percent of the descriptor computed using 2M pairs. The time for optimization depends on the number of connected components in the template, but always remained under 1-2 minutes for templates with up to 8 connected components.\n      \n      \n        8 Conclusions and Future Work\n        In this paper, we introduced a method to capture and explore variability in a collection of shapes without correspondences. Our main insight is to study the relation between the deformation of a shape and its global, high-dimensional descriptor. We introduced a modification of a previously suggested descriptor that varies smoothly under smooth deformations of the shape, and therefore allows us to analyze shape variability in the descriptor space. We described a method for recovering this variability in terms of deformations of a template model and described an exploration interface that allows us to navigate a collection of related shapes via restricted template manipulation.  Although our system shows encouraging results, we believe that this is only a beginning and there are a number of interesting questions to be answered in the future. First, although our parametrization of the deformation space is low dimensional, the results of the optimization can be non-intuitive with components ?drifting apart.? An explicit encoding of the part connectivity in the optimization may be an interesting way to resolve this issue. Similarly, since we solve a non-convex non-linear problem, we may only find a local minimum of the energy. A convex formulation of a similar optimization problem is an interesting problem for the future. Other extensions to our framework may include outlier detection for shape retrieval by verifying similar shapes using curves in the descriptor space that their deformations produce. As mentioned earlier, it is also interesting to consider and compare other descriptors in which shape deformation results in explicit changes. Perhaps most interesting is the case of analyzing the relation of discrete variability in the shape (such as adding extra components), in terms of the changes of various descriptors. Finally, we are considering extensions to our exploration interface, where the user can query the system for deformations that explore different parts of the descriptor space. Acknowledgements. We would like to acknowledge the INRIA GAMMA group and especially Eric Saltel for the model database [Saltel 2008], the anonymous reviewers for the helpful comments and suggestions, and Primoz Skraba for the extremely useful feedback and discussions. The work was partially supported by a KAUST visiting student scholarship, an Adobe internship, NSF grants FODAVA 0808515, IIS 0914833 and CCF 1011228, NSF/NIH MathBio grant 0900700, and a grant from Google Inc. Special thanks to Skype for enabling a seamless communication channel during all the stages of the project.\n        ACM Transactions on Graphics, Vol. 30, No. 4, Article 33, Publication date: July 2011.\n        Exploration of Continuous Variability in Collections of 3D Shapes\n        ?\n        33:9\n        \n          \n          Figure 8: Summary of results. We apply our method to extract templates and deformation models for five classes of shapes (a?e). For each class, we show sample template deformations on the left and the corresponding nearest neighbor shapes from the collection on the right. The grey boxes indicate the selected template shape for each dataset. Notice that the learned deformation models capture variations in both the size and position of components. They also encode dependencies between parts, so that, for example, the wings of the airplane move together. In addition, we visualize the principal modes of variation from a dataset with both bicycles and morotcycles (f?g). These modes capture several non-trivial deformations including movement of the wheels along the length and height of the template, and shrinking of the width of the body in the second mode (g). In contrast, a manual deformation of the template is unlikely to include all of the learned deformations (h).\n        \n        ACM Transactions on Graphics, Vol. 30, No. 4, Article 33, Publication date: July 2011.\n        33:10\n        ?\n        M. Ovsjanikov et al.\n      \n      \n        References\n        \n          A LLEN , B., C URLESS , B., AND P OPOVI C  ? , Z. 2003. The space of human body shapes: reconstruction and parameterization from range scans. In Proc. SIGGRAPH, 587?594.\n          A NGUELOV , D., S RINIVASAN , P., K OLLER , D., T HRUN , S., R ODGERS , J., AND D AVIS , J. 2005. Scape: shape completion and animation of people. ACM SIGGRAPH 24 (July), 408?416.\n          B ERNER , A., W AND , M., M ITRA , N. J., M EWES , D., AND S EI DEL , H.-P. 2011. Shape analysis with subspace symmetries. CGF (Proc. EUROGRAPHICS) 30, 2, 277?286.\n          B LANZ , V., AND V ETTER , T. 1999. A morphable model for the synthesis of 3d faces. In Proc. SIGGRAPH, 187?194.\n          B OUTIN , M., AND K EMPER , G. 2004. On reconstructing n-point configurations from the distribution of distances or areas. Advances in Applied Mathematics 32, 4, 709 ? 735.\n          C HAUDHURI , S., AND K OLTUN , V. 2010. Data-driven suggestions for creativity support in 3d modeling. In ACM SIGGRAPH Asia, 183:1?183:10.\n          C HAZAL , F., C OHEN S TEINER , D., AND M ?RIGOT , Q. 2010. Geometric Inference for Measures based on Distance Functions. Research Report RR-6930, INRIA.\n          C OOTES , T. F., T AYLOR , C. J., C OOPER , D. H., AND G RAHAM , J. 1995. Active shape models ? their training and application. Comput. Vis. Image Underst. 61, 38?59.\n          D RYDEN , I., AND M ARDIA , K. 1998. Statistical Shape Analysis. John Wiley & Sons.\n          F ISHER , M., AND H ANRAHAN , P. 2010. Context-based search for 3d models. In ACM SIGGRAPH Asia, 182:1?182:10.\n          F UNKHOUSER , T., K AZHDAN , M., S HILANE , P., M IN , P., K IEFER , W., T AL , A., R USINKIEWICZ , S., AND D OBKIN , D. 2004. Modeling by example. ACM SIGGRAPH 23, 652?663.\n          G OLOVINSKIY , A., AND F UNKHOUSER , T. 2009. Consistent segmentation of 3d models. Comput. Graph. 33 (June), 262?269.\n          K ALOGERAKIS , E., H ERTZMANN , A., AND S INGH , K. 2010. Learning 3d mesh segmentation and labeling. In ACM SIGGRAPH, 102:1?102:12.\n          K AZHDAN , M., F UNKHOUSER , T., AND R USINKIEWICZ , S. 2003. Rotation invariant spherical harmonic representation of 3d shape descriptors. In Proc. SGP, 156?164.\n          K ILIAN , M., M ITRA , N. J., AND P OTTMANN , H. 2007. Geometric modeling in shape space. vol. 26, #64, 1?8.\n          K IM , M.-J., K IM , M.-H., AND S HEN , D. 2008. Learning-based deformation estimation for fast non-rigid registration. In CVPR workshop, 1?6.\n          K OKKINOS , I., AND Y UILLE , A. 2007. Unsupervised learning of object deformation models. In IEEE ICCV, 1 ?8.\n          L AGA , H., T AKAHASHI , H., AND N AKAJIMA , M. 2006. Spherical wavelet descriptors for content-based 3d model retrieval. In SMI, 15.\n          M ITRA , N. J., G UIBAS , L., AND P AULY , M. 2007. Symmetrization. In ACM SIGGRAPH, vol. 26, #63, 1?8.\n          O SADA , R., F UNKHOUSER , T., C HAZELLE , B., AND D OBKIN , D. 2002. Shape distributions. ACM TOG 21, 807?832.\n          O VSJANIKOV , M., B RONSTEIN , A. M., B RONSTEIN , M. M., AND G UIBAS , L. 2009. Shapegoogle: a computer vision approach for invariant shape retrieval. In ICCV workshop, NORDIA.\n          S ALTEL , E., 2008. INRIA Gamma team research database. http://www-roc.inria.fr/gamma/download/download.php .\n          S HAPIRA , L., S HAMIR , A., AND C OHEN -O R , D. 2008. Consistent mesh partitioning and skeletonisation using the shape diameter function. Vis. Comput. 24, 249?259.\n          S ORKINE , O., AND A LEXA , M. 2007. As-rigid-as-possible surface modeling. In Proc. SGP, 109?116.\n          S UMNER , R. W., Z WICKER , M., G OTSMAN , C., AND P OPOVI C  ? , J. 2005. Mesh-based inverse kinematics. ACM SIGGRAPH 24, 488?495.\n          VAN K AICK , O., Z HANG , H., H AMARNEH , G., AND C OHEN O R , D. 2010. A survey on shape correspondence. Computer Graphics Forum.\n          X U , K., L I , H., Z HANG , H., C OHEN -O R , D., X IONG , Y., AND C HENG , Z.-Q. 2010. Style-content separation by anisotropic part scales. In ACM SIGGRAPH Asia, 184:1?184:10.\n        \n        ACM Transactions on Graphics, Vol. 30, No. 4, Article 33, Publication date: July 2011.\n      \n    \n  ",
  "resources" : [ ]
}