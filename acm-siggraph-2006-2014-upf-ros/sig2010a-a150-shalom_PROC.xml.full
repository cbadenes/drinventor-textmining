{
  "uri" : "sig2010a-a150-shalom_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2010a/a150-shalom_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Cone Carving for Surface Reconstruction",
    "published" : "2010",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Shy-Shalom",
      "name" : "Shy",
      "surname" : "Shalom"
    }, {
      "uri" : "http://drinventor/Ariel-Shamir",
      "name" : "Ariel",
      "surname" : "Shamir"
    }, {
      "uri" : "http://drinventor/Hao Zhang-null",
      "name" : "Hao Zhang",
      "surname" : null
    }, {
      "uri" : "http://drinventor/Daniel-Cohen-Or",
      "name" : "Daniel",
      "surname" : "Cohen-Or"
    } ]
  },
  "bagOfWords" : [ "3c7ef6e1dc524510e3bce73eba4ef33540364079eebfbcd842876fa166bc2e52", "p0us", "10.1145", "1866158.1866176", "name", "identification", "possible", "Cone", "Carving", "surface", "reconstruction", "Shy", "shalom", "Ariel", "Shamir", "Bar-Ilan", "University", "Interdisciplinary", "Center", "Herzliya", "Figure", "significant", "amount", "miss", "datum", "scanned", "point", "cloud", "-lrb-", "left", "-rrb-", "conventional", "surface", "reconstruction", "scheme", "rbf", "error-prone", "-lrb-", "middle", "-rrb-", "Cone", "carve", "space", "carve", "technique", "utilize", "global", "visibility", "information", "more", "accurately", "infer", "capture", "shape", "create", "additional", "off-surface", "point", "specifically", "area", "sparse", "input", "produce", "more", "faithful", "reconstruction", "-lrb-", "right", "-rrb-", "we", "present", "cone", "carve", "novel", "space", "carve", "technique", "support", "topologically", "correct", "surface", "reconstruction", "from", "incomplete", "scanned", "point", "cloud", "technique", "utilize", "point", "sample", "only", "local", "surface", "position", "estimation", "also", "obtain", "global", "visibility", "information", "under", "assumption", "each", "acquire", "point", "visible", "from", "point", "lie", "outside", "shape", "enable", "associate", "each", "point", "generalize", "cone", "call", "visibility", "cone", "carve", "portion", "outside", "ambient", "space", "shape", "from", "inside", "out", "cone", "collectively", "provide", "means", "better", "approximate", "sign", "distance", "shape", "specifically", "near", "region", "contain", "large", "hole", "scan", "allow", "one", "infer", "correct", "surface", "topology", "combine", "new", "distance", "measure", "conventional", "rbf", "we", "define", "implicit", "function", "whose", "zero", "level", "set", "define", "surface", "shape", "we", "demonstrate", "utility", "cone", "carve", "cope", "significant", "miss", "datum", "raw", "scan", "from", "commercial", "3d", "scanner", "well", "synthetic", "input", "introduction", "surface", "reconstruction", "from", "scanned", "point", "cloud", "central", "problem", "computer", "graphic", "have", "inspire", "constant", "research", "over", "past", "year", "give", "set", "3d", "point", "acquire", "scanning", "device", "goal", "construct", "2d", "watertight", "surface", "embed", "3d", "which", "approximate", "scan", "shape", "closely", "possible", "from", "its", "global", "topology", "down", "finer", "geometric", "detail", "apart", "from", "noise", "most", "common", "difficulty", "scan", "point", "cloud", "existence", "hole", "datum", "area", "shape", "be", "properly", "acquire", "particular", "large", "hole", "often", "occur", "deep", "ACM", "Reference", "Format", "shalom", "S.", "Shamir", "a.", "Zhang", "H.", "Cohen-Or", "D.", "2010", "Cone", "Carving", "surface", "reconstruction", "ACM", "Trans", "graph", "29", "Article", "150", "-lrb-", "December", "2010", "-rrb-", "10", "page", "dous", "10.1145", "1866158.1866176", "http://doi.acm.org/10.1145/1866158.1866176", "copyright", "Notice", "permission", "make", "digital", "hard", "copy", "part", "all", "work", "personal", "classroom", "use", "grant", "without", "fee", "provide", "copy", "make", "distribute", "profit", "direct", "commercial", "advantage", "copy", "show", "notice", "fus", "rst", "page", "initial", "screen", "display", "along", "full", "citation", "copyright", "component", "work", "own", "other", "than", "ACM", "must", "honor", "abstract", "credit", "permit", "copy", "otherwise", "republish", "post", "server", "redistribute", "list", "use", "any", "component", "work", "other", "work", "require", "prior", "specific", "permission", "and/or", "fee", "permission", "may", "request", "from", "Publications", "Dept.", "ACM", "Inc.", "Penn", "Plaza", "Suite", "701", "New", "York", "NY", "10121-0701", "fax", "+1", "212", "869-0481", "permissions@acm.org", "2010", "ACM", "0730-0301/2010", "12-art150", "10.00", "DOI", "10.1145", "1866158.1866176", "http://doi.acm.org/10.1145/1866158.1866176", "Hao", "Zhang", "Daniel", "Cohen-Or", "Simon", "Fraser", "University", "Tel-Aviv", "University", "hard", "reach", "cavity", "object", "place", "where", "object", "part", "too", "close", "each", "other", "impose", "serious", "adverse", "effect", "quality", "reconstruction", "particularly", "term", "its", "topology", "one", "more", "successful", "technique", "recover", "watertight", "2d", "surface", "from", "point", "cloud", "have", "be", "define", "implicit", "function", "over", "ambient", "space", "underlie", "shape", "take", "zero", "level-set", "function", "example", "technique", "include", "Radial", "Basis", "function", "-lsb-", "Carr", "et", "al.", "2001", "-rsb-", "partition", "unity", "-lsb-", "Ohtake", "et", "al.", "2003", "-rsb-", "Poisson", "reconstruction", "-lsb-", "Kazhdan", "et", "al.", "2006", "-rsb-", "many", "case", "implicit", "function", "define", "use", "some", "blend", "kernel", "local", "neighborhood", "define", "over", "point", "set", "better", "estimate", "function", "set", "sample", "point", "which", "consider", "onsurface", "point", "augment", "set", "off-surface", "point", "carry", "sign", "distance", "perceive", "surface", "instance", "-lsb-", "Carr", "et", "al.", "2001", "-rsb-", "dipole", "off-surface", "point", "create", "offset", "input", "point", "along", "estimate", "normal", "direction", "either", "side", "perceive", "surface", "however", "major", "problem", "use", "dipole", "point", "surface", "reconstruction", "occur", "over", "area", "sparse", "missing", "datum", "without", "sufficient", "point", "sampling", "one", "can", "define", "dipole", "point", "reliably", "similar", "reason", "previous", "implicit", "surface", "reconstruction", "method", "can", "only", "fill", "hole", "smoothly", "more", "often", "than", "lead", "topological", "geometric", "reconstruction", "error", "e.g.", "see", "Figure", "-lrb-", "middle", "-rrb-", "while", "previous", "algorithm", "have", "effectively", "use", "blending", "positional", "information", "point", "paper", "we", "utilize", "blending", "global", "visibility", "information", "well", "information", "can", "effectively", "define", "sign", "distance", "function", "surface", "even", "region", "where", "sample", "datum", "miss", "we", "assume", "scan", "surface", "perform", "way", "each", "acquire", "sample", "visible", "from", "point", "outside", "shape", "other", "word", "from", "any", "point", "sample", "exist", "ray", "emanate", "from", "point", "lie", "completely", "outside", "shape", "we", "call", "direction", "ray", "outward", "direction", "rather", "weak", "realistic", "assumption", "since", "most", "optical", "scanner", "under", "typical", "acquisition", "setting", "outward", "direction", "already", "know", "each", "sample", "point", "direction", "from", "point", "scanner", "head", "position", "moment", "capture", "use", "outward", "direction", "we", "convert", "each", "sample", "point", "visibility", "cone", "apex", "point", "-lrb-", "see", "Figure", "-rrb-", "cone", "assume", "exterior", "underlie", "shape", "key", "idea", "ACM", "transaction", "Graphics", "Vol", "29", "no.", "Article", "150", "publication", "date", "December", "2010", "150:2", "S.", "shalom", "et", "al.", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "figure", "visibility", "cone", "-lrb-", "-rrb-", "3d", "point", "cloud", "point", "sample", "outside", "direction", "sample", "-lrb-", "-rrb-", "corresponding", "ideal", "-lrb-", "maximal", "-rrb-", "visibility", "cone", "-lrb-", "-rrb-", "general", "3d", "visibility", "cone", "can", "have", "rather", "complex", "boundary", "cone", "extend", "beyond", "direct", "outward", "direction", "carve", "out", "outside", "space", "therefore", "carry", "global", "visibility", "information", "can", "use", "define", "more", "reliable", "distance", "measure", "shape", "near", "region", "sparse", "input", "datum", "let", "point", "input", "point", "cloud", "which", "sample", "scan", "shape", "we", "define", "visibility", "cone", "largest", "generalize", "cone", "apex", "which", "contain", "outward", "direction", "other", "point", "from", "its", "interior", "ideal", "visibility", "cone", "would", "one", "extrude", "from", "along", "silhouette", "view", "from", "show", "figure", "union", "all", "visibility", "cone", "from", "provide", "virtual", "carve", "ambient", "3d", "space", "around", "underlie", "shape", "set", "visibility", "cone", "collectively", "carry", "global", "information", "about", "shape", "offer", "robust", "indicator", "outside", "relation", "respect", "specifically", "near", "region", "sparse", "datum", "cavity", "interface", "between", "inside", "outside", "space", "define", "visibility", "cone", "give", "boundary", "volume", "form", "union", "all", "cone", "we", "call", "boundary", "surface", "lower", "envelope", "set", "visibility", "cone", "view", "from", "insideout", "perspective", "ideal", "continuous", "setting", "when", "under", "visibility", "assumption", "lower", "envelope", "simply", "we", "discrete", "setting", "where", "we", "still", "utilize", "distance", "approximation", "distance", "we", "define", "new", "set", "off-surface", "point", "use", "approximate", "sign", "distance", "from", "point", "surface", "instead", "blend", "cone", "construct", "lower", "envelope", "we", "use", "statistical", "blending", "individual", "distance", "from", "new", "off-surface", "point", "cone", "arrive", "reliable", "robust", "distance", "measure", "practical", "challenge", "create", "cone", "discrete", "setting", "also", "include", "construction", "approximate", "3d", "visibility", "cone", "base", "point", "cloud", "towards", "end", "we", "adopt", "imagebased", "approach", "exploit", "render", "speed", "capability", "GPU", "use", "point-rendering", "process", "adaptive", "splat", "size", "we", "project", "point", "cloud", "onto", "small", "cube", "around", "each", "trace", "appropriate", "silhouette", "contour", "cube", "extrude", "visibility", "cone", "from", "essence", "process", "can", "see", "view", "dependent", "blending", "input", "point", "cloud", "define", "local", "visibility", "silhouette", "each", "point", "sample", "p.", "summarize", "we", "algorithm", "rely", "blend", "three", "level", "first", "local", "position", "sample", "point", "blended", "similar", "previous", "algorithm", "second", "view-dependent", "positional", "information", "blended", "define", "visibility", "cone", "all", "sample", "point", "Third", "distance", "cone", "from", "new", "off-surface", "point", "which", "we", "term", "cone-based", "off-surface", "point", "blended", "arrive", "robust", "distance-to-surface", "measure", "blending", "combine", "local", "positional", "global", "visibility", "information", "more", "effective", "surface", "reconstruction", "show", "figure", "11", "Figure", "object", "contain", "cavity", "-lrb-", "left", "-rrb-", "space", "carve", "from", "outside", "-lrb-", "e.g.", "silhouette", "carve", "-rrb-", "can", "fail", "reconstruct", "correct", "shape", "-lrb-", "right", "-rrb-", "contrast", "cone", "carve", "can", "exploit", "full", "potential", "visibility", "information", "-lrb-", "see", "Figure", "11", "-rrb-", "related", "work", "-lsb-", "Curless", "Levoy", "1996", "-rsb-", "be", "first", "combine", "positional", "visibility", "information", "surface", "reconstruction", "use", "space", "carve", "VRIP", "however", "use", "conservative", "line-of-sight", "from", "sample", "point", "scanner", "clear", "out", "empty", "voxel", "we", "carve", "larger", "part", "outside", "space", "use", "continuous", "cone", "base", "adaptive", "sampling", "distance", "between", "sample", "point", "we", "technique", "do", "depend", "voxel", "resolution", "do", "need", "explicit", "knowledge", "scanner", "head?s", "location", "moreover", "case", "similar", "Figure", "VRIP", "algorithm", "would", "need", "place", "backdrop", "surface", "while", "scanning", "recover", "inner", "part", "cylinder", "contrast", "we", "cone", "carry", "global", "visibility", "information", "successfully", "handle", "case", "space", "carve", "also", "use", "reconstruct", "3d", "shape", "use", "image", "take", "from", "multiple", "view", "-lsb-", "kutulako", "Seitz", "2000", "Montenegro", "et", "al.", "2004", "Nitschke", "et", "al.", "2007", "-rsb-", "method", "create", "rough", "volumetric", "estimation", "shape", "do", "aim", "surface", "reconstruction", "from", "point", "cloud", "-lrb-", "see", "Figure", "-rrb-", "furthermore", "outside", "space", "define", "carve", "out", "space", "use", "ray", "emanate", "from", "camera", "position", "towards", "object", "through", "its", "silhouette", "-lrb-", "figure", "-rrb-", "while", "we", "use", "inverse", "direction", "carve", "out", "cone", "originate", "each", "sample", "point", "cloud", "one", "exception", "work", "Laurentini", "-lsb-", "1994", "-rsb-", "where", "underlie", "concept", "cone", "carve", "have", "be", "explore", "from", "theoretical", "stand", "point", "bound", "type", "surface", "may", "reconstruct", "technique", "give", "-lrb-", "-rrb-", "theoretical", "algorithm", "however", "implementation", "algorithm", "real", "world", "set", "use", "point", "cloud", "explore", "general", "reconstruct", "surface", "from", "scan", "unstructured", "point", "cloud", "widely", "regard", "difficult", "ill-posed", "problem", "pioneering", "work", "Hoppe", "et", "al.", "-lsb-", "1992", "-rsb-", "compute", "sign", "distance", "field", "underlie", "surface", "use", "local", "tangent", "plane", "construction", "extract", "isosurface", "from", "distance", "field", "use", "march", "cube", "algorithm", "over", "year", "other", "implicit", "formulation", "have", "be", "propose", "include", "rbf", "-lsb-", "Carr", "et", "al.", "2001", "-rsb-", "partition", "unity", "-lsb-", "Ohtake", "et", "al.", "2003", "-rsb-", "Poisson", "reconstruction", "-lsb-", "Kazhdan", "et", "al.", "2006", "-rsb-", "method", "all", "rely", "acquire", "-lsb-", "Nehab", "et", "al.", "2005", "-rsb-", "estimate", "-lsb-", "Alexa", "et", "al.", "2003", "Hoppe", "et", "al.", "1992", "-rsb-", "point", "normal", "however", "presence", "variety", "datum", "artifact", "due", "measurement", "noise", "scan", "mis-registration", "selfocclusion", "obtain", "reliable", "normal", "everywhere", "easy", "task", "subject", "intensive", "research", "its", "own", "right", "-lsb-", "Huang", "et", "al.", "2009", "-rsb-", "voronoi-based", "approach", "typically", "do", "require", "normal", "attempt", "reconstruct", "surface", "use", "Voronoi", "diagram", "Delaunay", "triangulation", "provide", "proper", "sampling", "condition", "under", "which", "reconstruct", "surface", "have", "provable", "theoretical", "guarantee", "-lsb-", "Amenta", "Bern", "1998", "Amenta", "et", "al.", "2001", "Dey", "Goswami", "2003", "cazal", "Giesen", "2006", "-rsb-", "method", "however", "lim", "ite", "when", "face", "severe", "under-sampling", "non-uniform", "sampling", "particular", "delaunay-based", "technique", "which", "use", "concept", "shape", "-lsb-", "Edelsbrunner", "M?cke", "1994", "-rsb-", "worth", "mention", "closely", "related", "concept", "hull", "can", "present", "use", "carve", "analogy", "use", "empty", "ball", "radius", "carve", "ambient", "space", "around", "mesh", "hull", "technique", "can", "use", "topological", "simplification", "-lsb-", "el-sana", "Varshney", "1998", "-rsb-", "surface", "reconstruction", "use", "shape", "extract", "surface", "from", "Delaunay", "tetrahedralization", "input", "point", "cloud", "use", "empty", "ball", "means", "filter", "Giesen", "et", "al.", "-lsb-", "2006", "-rsb-", "use", "ball", "adaptive", "radius", "deal", "non-uniform", "sampling", "however", "class", "method", "still", "only", "return", "sub-complex", "Delaunay", "tetrahedralization", "significant", "miss", "datum", "Delaunay", "tetrahedralization", "may", "contain", "any", "sub-complex", "proper", "surface", "reconstruction", "see", "Figure", "-lrb-", "-rrb-", "when", "datum", "miss", "input", "scan", "some", "exist", "surface", "reconstruction", "technique", "e.g.", "voronoi-based", "power", "crust", "-lsb-", "Amenta", "et", "al.", "2001", "-rsb-", "tight", "cocone", "-lsb-", "dey", "Goswami", "2003", "-rsb-", "implicit", "scheme", "use", "radial", "basis", "function", "-lrb-", "rbf", "-rrb-", "-lsb-", "Carr", "et", "al.", "2001", "-rsb-", "can", "still", "guarantee", "output", "water-tight", "2-manifold", "however", "presence", "large", "hole", "close-by", "surface", "sheet", "approach", "typically", "produce", "topological", "geometric", "error", "complicated", "scenario", "where", "purely", "local", "consideration", "point", "normal", "Voronoi", "construction", "insufficient", "infer", "shape", "correctly", "additional", "information", "assumption", "need", "one", "can", "try", "identify", "surface", "boundary", "-lsb-", "Dey", "et", "al.", "2009", "-rsb-", "utilize", "hole-filling", "several", "exist", "algorithm", "hole", "fill", "rely", "additional", "datum", "assumption", "multiple", "datum", "scan", "-lsb-", "Turk", "Levoy", "1994", "-rsb-", "template", "-lsb-", "Pauly", "et", "al.", "2005", "-rsb-", "specialize", "shape", "prior", "-lsb-", "Gal", "et", "al.", "2007", "Schnabel", "et", "al.", "2009", "Tagliasacchi", "et", "al.", "2009", "-rsb-", "visibility", "information", "can", "also", "utilize", "volumetric", "diffusion", "-lsb-", "Davis", "et", "al.", "2002", "-rsb-", "when", "hole", "easy", "detect", "specify", "part", "input", "several", "approach", "can", "apply", "achieve", "high-quality", "surface", "completion", "include", "use", "smooth", "interpolant", "-lsb-", "sorkine", "cohen-or", "2004", "-rsb-", "self", "similarity", "shape", "-lsb-", "Sharf", "et", "al.", "2004", "-rsb-", "we", "cone", "carve", "technique", "deal", "significant", "miss", "datum", "surface", "reconstruction", "while", "rely", "weaker", "more", "practical", "assumption", "existence", "outward", "direction", "each", "point", "sample", "typically", "outward", "direction", "can", "return", "scanner", "head", "position", "which", "available", "from", "some", "brand", "laser", "scanner", "some", "commercial", "product", "software", "bundle", "Polhemus", "FastSCAN", "scanner", "-lsb-", "aranz", "2009", "-rsb-", "know", "use", "information", "some", "extent", "usually", "only", "coarse", "task", "determine", "correct", "sign", "normal", "vector", "we", "aware", "previous", "work", "utilize", "information", "surface", "reconstruction", "ACM", "transaction", "Graphics", "Vol", "29", "no.", "Article", "150", "publication", "date", "December", "2010", "Cone", "Carving", "surface", "reconstruction", "150:3", "visibility", "cone", "carve", "illustrate", "idea", "behind", "cone", "carve", "we", "first", "describe", "simplify", "version", "algorithm", "2d", "we", "input", "2d", "point", "set", "miss", "datum", "one", "show", "Figure", "-lrb-", "-rrb-", "which", "similar", "typical", "output", "range", "scan", "???", "shape", "boundary", "line", "closely", "parallel", "scanning", "direction", "likely", "suffer", "from", "sparse", "sampling", "result", "large", "hole", "since", "grazing", "angle", "which", "scanner", "beam", "hit", "shape", "boundary", "too", "shallow", "do", "reflect", "light", "properly", "Dipole", "distance", "distance", "lower", "envelope", "input", "point", "set", "give", "Figure", "-lrb-", "-rrb-", "standard", "reconstruction", "algorithm", "rbf", "-lsb-", "Carr", "et", "al.", "2001", "-rsb-", "would", "produce", "undesirable", "result", "regular", "rbf", "use", "dipole", "off-surface", "point", "which", "create", "constant", "distance", "from", "input", "point", "along", "direc", "tion", "estimate", "normal", "see", "-lrb-", "-rrb-", "convention", "sign", "distance", "take", "positive", "value", "when", "inside", "shape", "negative", "value", "when", "outside", "base", "dipole", "point", "rbf", "interpolation", "imply", "sign", "distance", "field", "which", "we", "refer", "dipole", "distance", "dp", "over", "ambient", "space", "show", "Figure", "-lrb-", "-rrb-", "we", "can", "observe", "area", "where", "large", "gap", "between", "sample", "off-surface", "point", "create", "consequently", "interpolation", "produce", "smooth", "curve", "part", "zero", "level-set", "dp", "distance", "field", "which", "may", "give", "correct", "representation", "underlie", "shape", "one", "other", "hand", "cone", "carve", "algorithm", "use", "additional", "global", "visibility", "information", "result", "better", "implicit", "distance", "function", "infer", "shape", "boundary", "input", "point", "visibility", "cone", "2d", "largest", "sector", "can", "stretch", "from", "outward", "direction", "without", "contain", "any", "other", "input", "point", "show", "-lrb-", "-rrb-", "assumption", "base", "cone", "carve", "area", "inside", "visibility", "cone", "completely", "outside", "shape", "take", "advantage", "global", "visibility", "information", "we", "construct", "visibility", "cone", "each", "point", "input", "set", "union", "all", "cone", "serve", "approximation", "exterior", "ambient", "space", "around", "shape", "show", "-lrb-", "-rrb-", "2d", "visibility", "cone", "sector", "delimit", "two", "ray", "emanate", "from", "p.", "each", "ray", "must", "pass", "through", "some", "other", "point", "input", "point", "set", "position", "scanning", "head", "know", "point", "outward", "direction", "know", "hence", "we", "calculate", "ray", "from", "scanner", "head", "sweep", "radially", "much", "possible", "until", "hit", "other", "cloud", "point", "when", "direction", "unknown", "we", "assume", "cone", "sector", "largest", "opening", "angle", "one", "which", "contain", "outward", "direction", "hence", "we", "can", "search", "largest", "empty", "opening", "between", "two", "point", "view", "from", "construct", "visibility", "cone", "p.", "note", "assumption", "may", "always", "hold", "erroneous", "cone", "may", "create", "however", "practice", "situation", "rare", "do", "effect", "algorithm", "general", "because", "see", "later", "3d", "case", "individual", "visibility", "cone", "essentially", "blended", "statistically", "achieve", "robustness", "against", "potential", "error", "recall", "boundary", "union", "visibility", "cone", "have", "be", "define", "lower", "envelope", "2d", "case", "each", "visibility", "cone", "assume", "particularly", "simple", "structure", "therefore", "we", "can", "explicitly", "construct", "lower", "envelope", "E.", "Next", "we", "define", "DTE", "Distance-to-Envelope", "shortest", "distance", "E.", "Figure", "-lrb-", "-rrb-", "show", "2d", "example", "plot", "DTE", "distance", "field", "convention", "sign", "distance", "take", "positive", "value", "when", "outside", "union", "visibility", "cone", "negative", "value", "when", "inside", "note", "choice", "sign", "consistent", "choice", "distance", "sign", "respect", "underlie", "shape", "choose", "between", "distance", "use", "quadtree", "subdivision", "ambient", "space", "-lrb-", "octree", "3d", "-rrb-", "we", "sample", "DTE", "field", "create", "cone-based", "off-surface", "point", "tree", "initialize", "uniform", "grid", "point", "subsequently", "subdivide", "cell", "contain", "sign", "transition", "DTE", "measure", "create", "adaptive", "sampling", "point", "concentrate", "near", "surface", "do", "rely", "distribution", "input", "point", "allow", "one", "sample", "distance", "field", "area", "sparse", "missing", "datum", "other", "hand", "area", "sufficiently", "dense", "input", "datum", "well", "cover", "dipole", "point", "imply", "dp", "distance", "field", "decision", "which", "distance", "dp", "DTE", "choose", "each", "region", "dictate", "how", "off-surface", "point", "generate", "final", "rbf", "process", "let", "we", "recall", "collection", "visibility", "cone", "serve", "carve", "out", "exterior", "outside", "space", "respect", "underlie", "shape", "cone", "only", "reliable", "outside", "indicator", "indeed", "while", "any", "point", "inside", "visibility", "cone", "should", "assume", "outside", "underlie", "shape", "point", "outside", "all", "visibility", "cone", "should", "assume", "inside", "we", "discrete", "setting", "gap", "ACM", "transaction", "Graphics", "Vol", "29", "no.", "Article", "150", "publication", "date", "December", "2010", "150:4", "S.", "shalom", "et", "al.", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "figure", "Cone", "carve", "illustrate", "2d", "-lrb-", "-rrb-", "input", "point", "set", "-lrb-", "-rrb-", "Delaunay", "triangulation", "significant", "miss", "datum", "sub-complex", "triangulation", "-lrb-", "e.g.", "use", "ball", "-rrb-", "proper", "surface", "reconstruction", "-lrb-", "-rrb-", "dipole", "off-surface", "point", "rbf", "reconstruction", "-lrb-", "-rrb-", "dp", "implicit", "distance", "field", "create", "rbf", "-lrb-", "blue", "positive", "inside", "shape", "orange", "negative", "outside", "-rrb-", "also", "do", "provide", "proper", "reconstruction", "due", "miss", "piece", "-lrb-", "-rrb-", "single", "visibility", "cone", "-lrb-", "-rrb-", "outside", "carve", "space", "use", "all", "cone", "-lrb-", "-rrb-", "DTE", "implicit", "distance", "field", "derive", "from", "lower", "envelope", "visibility", "cone", "-lrb-", "blue", "positive", "outside", "union", "cone", "orange", "negative", "inside", "-rrb-", "-lrb-", "-rrb-", "combined", "set", "off-surface", "point", "dipole", "point", "cone-based", "point", "generate", "from", "octree", "use", "DTE", "-lrb-", "-rrb-", "difference", "between", "two", "implicit", "distance", "function", "dp", "DTE", "-lrb-", "-rrb-", "final", "rbf", "reconstruction", "from", "-lrb-", "-rrb-", "use", "-lrb-", "-rrb-", "dp", "DTE", "DTE", "dp", "OUT", "OUT", "Figure", "difference", "between", "dp", "dte", "distance", "dic", "tate", "conjectured", "position", "boundary", "underlie", "shape", "either", "purple", "green", "-lrb-", "-rrb-", "same", "both", "situation", "when", "-lrb-", "-rrb-", "-lrb-", "right", "-rrb-", "where", "threshold", "DTE", "measure", "carve", "interior", "-lrb-", "positive", "sign", "-rrb-", "space", "indicate", "dp", "measure", "DTE", "reliable", "indicator", "outside", "-lrb-", "negative", "sign", "-rrb-", "relation", "shape", "purple", "boundary", "assume", "sign", "invert", "contrast", "when", "-lrb-", "-rrb-", "-lrb-", "left", "-rrb-", "dp", "take", "precedence", "over", "DTE", "between", "lower", "envelop", "actual", "boundary", "shape", "may", "appear", "see", "top", "cavity", "???", "Figure", "-lrb-", "-rrb-", "thus", "key", "situation", "where", "DTE", "distance", "should", "choose", "over", "dp", "distance", "region", "which", "dp", "distance", "incorrectly", "indicate", "inside", "shape", "illustrate", "right", "Figure", "let", "dp", "-lrb-", "-rrb-", "DTE", "-lrb-", "-rrb-", "denote", "scalar", "value", "point", "ambient", "space", "give", "dp", "dte", "distance", "field", "respectively", "we", "denote", "difference", "between", "dp", "-lrb-", "-rrb-", "DTE", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "dp", "-lrb-", "-rrb-", "DTE", "-lrb-", "-rrb-", "examine", "scalar", "field", "-lrb-", "-rrb-", "show", "Figure", "-lrb-", "-rrb-", "we", "differentiate", "between", "three", "possible", "case", "-lrb-", "-rrb-", "regard", "threshold", "value", "-lrb-", "-rrb-", "when", "two", "distance", "similar", "we", "choose", "dp", "distance", "since", "tend", "more", "accurate", "indeed", "dp", "distance", "derive", "from", "dipole", "point", "which", "turn", "obtain", "from", "local", "on-surface", "point", "sample", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "other", "hand", "DTE", "distance", "use", "global", "visibility", "information", "which", "can", "less", "accurate", "-lrb-", "-rrb-", "occur", "when", "DTE", "distance", "place", "point", "significantly", "-lrb-", "more", "than", "threshold", "-rrb-", "towards", "outside", "shape", "than", "dp", "distance", "we", "choose", "DTE", "since", "reliable", "outside", "indicator", "case", "visibility", "cone", "carve", "out", "region", "which", "dp", "distance", "indicate", "inside", "shape", "show", "right", "Figure", "precisely", "situation", "where", "global", "visibility", "information", "serve", "correct", "potential", "reconstruction", "error", "-lrb-", "-rrb-", "??", "occur", "when", "DTE", "distance", "place", "point", "significantly", "towards", "inside", "shape", "see", "left", "Figure", "we", "choose", "dp", "over", "DTE", "since", "latter", "reliable", "indicator", "inside", "relation", "summarize", "we", "use", "DTE", "distance", "only", "where", "difference", "positive", "indicate", "color", "blue", "Figure", "-lrb-", "-rrb-", "above", "threshold", "over", "area", "DTE", "distance", "most", "likely", "provide", "better", "estimation", "distance", "from", "underlie", "shape", "practice", "scenario", "typically", "occur", "over", "region", "sparse", "missing", "input", "datum", "cavity", "we", "have", "use", "value", "avg", "where", "avg", "average", "all", "point", "data-set", "distance", "nearest", "neighbor", "-lrb-", "see", "Section", "6.2", "-rrb-", "combine", "two", "distance", "we", "obtain", "hybrid", "set", "off-surface", "point", "value", "show", "Figure", "-lrb-", "-rrb-", "point", "together", "steer", "final", "rbf", "reconstruction", "combine", "merit", "traditional", "local", "position", "blending", "global", "visibility", "information", "show", "Figure", "-lrb-", "-rrb-", "visibility", "cone", "3d", "3d", "visibility", "cone", "point", "empty", "generalize", "cone", "apex", "cone-like", "volume", "ray", "originate", "from", "extend", "towards", "outside", "shape", "generalize", "cone", "empty", "sense", "contain", "other", "input", "point", "exact", "continuous", "boundary", "surface", "shape", "know", "3d", "visibility", "cone", "point", "can", "define", "project", "silhouette", "shape", "from", "p?s", "viewpoint", "towards", "outside", "direction", "practice", "construction", "visibility", "cone", "from", "point", "cloud", "3d", "ill-posed", "problem", "since", "trivial", "way", "delimit", "generalize", "3d", "sector", "we", "do", "2d", "use", "two", "ray", "seem", "construct", "visibility", "cone", "one", "must", "first", "reconstruct", "smooth", "surface", "instead", "we", "employ", "view-dependent", "blending", "point", "cloud", "use", "splat", "-lsb-", "Westover", "1990", "Pfister", "et", "al.", "2000", "-rsb-", "from", "perspective", "each", "point", "p.", "View", "dependent", "blend", "we", "extend", "definition", "3d", "cone", "exclude", "just", "point", "from", "data-set", "neighborhood", "size", "around", "each", "point", "value", "key", "produce", "useful", "visibility", "cone", "conform", "accurately", "shape", "point", "set", "small", "may", "produce", "cone", "protrude", "considerably", "shape", "lead", "crack", "between", "adjacent", "point", "while", "large", "can", "produce", "cone", "too", "far", "remove", "from", "point", "set", "lose", "vital", "information", "regard", "original", "scan", "shape", "we", "use", "adaptive", "neighborhood", "size", "splat", "size", "each", "render", "point", "depend", "its", "distance", "center", "projection", "p.", "construct", "approximation", "ideal", "visibility", "cone", "point", "we", "perform", "two", "pass", "render", "similar", "setup", "two", "pass", "approach", "often", "use", "kernel", "density", "estimation", "well", "both", "render", "pass", "create", "projection", "point", "set", "onto", "axis-aligned", "six", "side", "cube", "center", "around", "which", "regard", "camera", "position", "first", "render", "pass", "we", "estimate", "adaptive", "neighborhood", "size", "each", "render", "point", "second", "rendering", "pass", "we", "use", "size", "splat", "size", "each", "point", "trace", "cone", "silhouette", "view-dependent", "point-splat", "image", "point", "set", "single", "render", "pass", "result", "six", "square", "image", "each", "create", "perspective", "projection", "90", "field", "view", "point", "direction", "major", "axis", "center", "render", "setup", "similar", "radiosity", "hemi-cube", "method", "-lsb-", "Cohen", "Greenberg", "1985", "-rsb-", "commonly", "use", "calculate", "form-factor", "difference", "we", "render", "full", "6-sided", "cube", "instead", "5-sided", "hemi-cube", "see", "Figure", "Splat", "size", "purpose", "first", "rendering", "pass", "determine", "adaptive", "splat", "size", "every", "render", "point", "can", "see", "reconstruct", "complete", "surface", "image", "space", "use", "k-nearest", "neighbor", "kernel", "function", "around", "each", "point", "we", "camera", "position", "point", "all", "other", "point", "point", "set", "render", "cube", "single", "pixel", "unique", "color", "hence", "can", "uniquely", "identify", "algorithm", "sweep", "over", "six", "result", "hemi-cube", "image", "calculate", "each", "visible", "point", "splat", "radius", "produce", "sufficient", "cover", "area", "around", "when", "view", "from", "immediate", "vicinity", "pixel", "represent", "scan", "grow", "concentric", "square", "search", "other", "near-by", "non-background", "pixel", "scan", "terminate", "either", "when", "one", "pixel", "detect", "near", "different", "side", "grow", "square", "far", "pixel", "observe", "total", "-lrb-", "see", "Figure", "-rrb-", "we", "use", "far", "near", "splat", "size", "set", "distance", "last", "pixel", "more", "than", "half", "hemi-cube", "size", "value", "work", "well", "all", "data-set", "we", "have", "experiment", "-lrb-", "see", "Section", "6.2", "discussion", "-rrb-", "note", "some", "point", "may", "receive", "any", "splat", "radius", "since", "be", "occlude", "other", "pixel", "render", "image", "point", "exclude", "from", "second", "rendering", "step", "since", "do", "contribute", "desire", "shape", "silhouette", "visible", "silhouette", "trace", "second", "pass", "rendering", "point", "set", "again", "render", "cube", "around", "where", "each", "render", "point", "circular", "splat", "radius", "unique", "color", "next", "we", "trace", "silhouette", "edge", "between", "background", "nonbackground", "pixel", "render", "image", "trace", "begin", "point", "know", "edge", "proceed", "clockwise", "path", "along", "silhouette", "trace", "guarantee", "eventually", "reach", "start", "point", "since", "edge", "between", "background", "non", "background", "pixel", "close", "continuous", "complete", "path", "define", "silhouette", "visibility", "cone", "from", "p.", "find", "start", "edge", "point", "initiate", "trace", "can", "achieve", "several", "way", "scanner", "position", "know", "point", "map", "pixel", "render", "cube", "from", "pixel", "silhouette", "edge", "can", "reach", "shoot", "ray", "any", "direction", "scanner", "position", "unknown", "we", "randomly", "sample", "pixel", "cube", "search", "silhouette", "edge", "random", "direction", "more", "than", "one", "visible", "open", "outside", "from", "more", "than", "one", "silhouette", "can", "find", "we", "select", "silhouette", "longest", "trace", "path", "visibility", "silhouette", "four", "five", "random", "point", "usually", "sufficient", "find", "major", "silhouette", "which", "define", "maximal", "visibility", "cone", "during", "its", "pass", "cube", "trace", "process", "store", "sequence", "point", "touch", "silhouette", "accord", "splat", "color", "sequence", "create", "closed", "3d", "polyline", "we", "create", "boundary", "surface", "generalize", "cone", "closed", "triangle", "fan", "-lcb-", "...", "-rcb-", "apex", "triangle", "extend", "between", "every", "two", "adjacent", "point", "polyline", "definition", "generalize", "cone", "have", "infinite", "boundary", "ray", "hence", "ideally", "triangle", "fan", "should", "extend", "infinity", "practice", "we", "use", "finite", "triangle", "fan", "represent", "cone", "since", "where", "cone", "touch", "surface", "beyond", "irrelevant", "purpose", "calculate", "DTE", "distance", "polyline", "produce", "silhouette", "trace", "can", "often", "jag", "contain", "short", "sequence", "repeat", "edge", "even", "local", "self", "intersection", "aberration", "can", "attribute", "discrete", "nature", "point", "set", "its", "rendering", "may", "hinder", "follow", "step", "therefore", "after", "silhouette", "polyline", "create", "we", "use", "simple", "smoothing", "step", "ensure", "cone", "conform", "better", "shape", "point", "set", "we", "discard", "repeat", "point", "well", "high", "curvature", "point", "repair", "self-intersection", "reordering", "point", "furthermore", "due", "discretization", "obtain", "visibility", "cone", "may", "deviate", "from", "ideal", "one", "which", "would", "have", "be", "produce", "continuous", "surface", "inaccuracy", "can", "cause", "wrong", "indicator", "both", "inside", "outside", "shape", "small", "penetration", "cone", "shape", "outside", "region", "which", "remain", "outside", "cone", "still", "robust", "blending", "DTE", "distance", "alleviate", "inaccuracy", "we", "explain", "next", "section", "ACM", "transaction", "Graphics", "Vol", "29", "no.", "Article", "150", "publication", "date", "December", "2010", "Cone", "Carving", "surface", "reconstruction", "150:5", "Figure", "render", "point", "set", "circular", "splat", "cube", "around", "center", "point", "reveal", "visibility", "direction", "silhouette", "outside", "region", "trace", "define", "visibility", "cone", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "figure", "determine", "splat", "size", "-lrb-", "-rrb-", "every", "point", "render", "single", "pixel", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "scanning", "concentric", "square", "until", "widely", "spread", "pixel", "see", "-lrb-", "-rrb-", "splat", "size", "accord", "distance", "third", "neighbor", "ACM", "transaction", "Graphics", "Vol", "29", "no.", "Article", "150", "publication", "date", "December", "2010", "150:6", "S.", "shalom", "et", "al.", "3d", "reconstruction", "cone", "carve", "surface", "construct", "cone", "carve", "result", "rbf", "fitting", "which", "require", "input", "set", "off-surface", "point", "each", "couple", "sign", "distance", "value", "distance", "value", "positive", "point", "inside", "shape", "negative", "point", "outside", "its", "magnitude", "can", "perceive", "shortest", "distance", "from", "offsurface", "point", "surface", "reconstruct", "use", "offsurface", "point", "we", "compute", "set", "radial", "basis", "function", "whose", "combination", "produce", "implicit", "scalar", "function", "3d", "zero", "iso-surface", "implicit", "function", "interpolate", "shape", "final", "surface", "mesh", "produce", "triangulation", "iso-surface", "use", "variant", "march", "tetrahedron", "algorithm", "-lsb-", "Carr", "et", "al.", "2001", "-rsb-", "similar", "2d", "case", "distance", "field", "sample", "combine", "dp", "dte", "distance", "DTE", "distance", "create", "use", "octree", "sample", "cone-based", "off-surface", "point", "describe", "section", "however", "contrast", "2d", "case", "collection", "3d", "visibility", "cone", "do", "provide", "guarantee", "outside", "indicator", "other", "word", "point", "inside", "union", "visibility", "cone", "guarantee", "outside", "underlie", "shape", "due", "approximative", "nature", "3d", "visibility", "cone", "hence", "computation", "DTE", "distance", "need", "more", "elaborate", "recall", "DTE", "intend", "represent", "distance", "from", "point", "ambient", "space", "surface", "underlie", "shape", "without", "know", "actual", "shape", "we", "approximate", "its", "surface", "lower", "envelop", "which", "boundary", "union", "3d", "visibility", "cone", "due", "imprecision", "3d", "visibility", "cone", "approximation", "quality", "lower", "envelope", "degrade", "one", "solution", "would", "blend", "cone", "represent", "more", "robust", "lower", "envelope", "E.", "however", "geometric", "complexity", "lower", "envelope", "3d", "prohibit", "construct", "explicitly", "moreover", "we", "mainly", "interested", "compute", "DTE", "distance", "itself", "hence", "instead", "blend", "visibility", "cone", "create", "surface", "we", "resort", "robustly", "blend", "distance", "cone", "define", "DTE", "dtc", "Distance-to-Cone", "3d", "visibility", "cone", "divide", "ambient", "space", "two", "region", "region", "inside", "region", "outside", "C.", "Let", "point", "ambient", "space", "we", "define", "scalar", "function", "dtc", "-lrb-", "-rrb-", "where", "dtc", "stand", "Distance-ToCone", "sign", "distance", "from", "cone", "boundary", "min", "-lrb-", "-rrb-", "inside", "dtc", "-lrb-", "-rrb-", "min", "-lrb-", "-rrb-", "outside", "where", "-lrb-", "-rrb-", "euclidean", "distance", "from", "boundary", "-lrb-", "triangle", "-rrb-", "face", "visibility", "cone", "dtc", "can", "obtain", "iteratively", "search", "over", "all", "triangle", "face", "cone", "whether", "Figure", "example", "three", "visibility", "cone", "point", "set", "-lrb-", "leave", "-rrb-", "distance", "dtc", "-lrb-", "-rrb-", "from", "point", "-lrb-", "yellow", "-rrb-", "cone", "distance", "between", "its", "projection", "cone", "-lrb-", "right", "green", "point", "-rrb-", "note", "although", "distance", "value", "may", "similar", "can", "along", "totally", "different", "direction", "from", "s.", "inside", "outside", "cone", "determine", "observe", "orientation", "closest", "face", "use", "appropriate", "normal", "compute", "apex", "cone", "-lsb-", "baerentzen", "aanaes", "2005", "-rsb-", "Representative", "cone", "we", "interested", "DTE", "distance", "DTE", "-lrb-", "-rrb-", "yet", "we", "do", "explicitly", "construct", "lower", "envelope", "what", "we", "have", "be", "able", "compute", "dtc", "distance", "all", "visibility", "cone", "make", "connection", "between", "two", "distance", "we", "note", "simple", "relationship", "between", "they", "DTE", "-lrb-", "-rrb-", "min", "dtc", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "where", "all", "visibility", "cone", "prove", "result", "we", "note", "DTE", "-lrb-", "-rrb-", "shortest", "distance", "from", "some", "point", "lower", "envelope", "definition", "must", "lie", "outside", "each", "visibility", "cone", "let", "any", "visibility", "cone", "we", "consider", "two", "possible", "case", "lie", "inside", "dtc", "-lrb-", "-rrb-", "DTE", "-lrb-", "-rrb-", "since", "outside", "we", "must", "have", "dtc", "-lrb-", "-rrb-", "DTE", "-lrb-", "-rrb-", "hence", "DTE", "-lrb-", "-rrb-", "dtc", "-lrb-", "-rrb-", "lie", "outside", "dtc", "-lrb-", "-rrb-", "lie", "lower", "envelope", "inside", "union", "all", "visibility", "cone", "DTE", "-lrb-", "-rrb-", "follow", "DTE", "-lrb-", "-rrb-", "dtc", "-lrb-", "-rrb-", "final", "scenario", "we", "have", "lie", "outside", "union", "visibility", "cone", "let", "boundary", "dtc", "-lrb-", "-rrb-", "clearly", "either", "lower", "envelope", "lie", "inside", "union", "cone", "therefore", "we", "must", "have", "DTE", "-lrb-", "-rrb-", "dtc", "-lrb-", "-rrb-", "since", "DTE", "-lrb-", "-rrb-", "dtc", "-lrb-", "-rrb-", "all", "we", "get", "equation", "-lrb-", "-rrb-", "hence", "we", "see", "best", "approximation", "DTE", "-lrb-", "-rrb-", "use", "set", "all", "dtc", "distance", "give", "dtc", "distance", "from", "point", "representative", "cone", "we", "define", "DTE", "-lrb-", "-rrb-", "dtc", "-lrb-", "-rrb-", "arg", "min", "dtc", "-lrb-", "-rrb-", "compute", "distance", "representative", "cone", "we", "can", "find", "projection", "roj", "-lrb-", "-rrb-", "onto", "surface", "-lrb-", "see", "Figure", "-rrb-", "note", "projection", "can", "reside", "interior", "cone", "face", "which", "case", "would", "perpendicular", "projection", "onto", "face", "other", "case", "projection", "may", "along", "edge", "cone", "may", "apex", "cone", "ACM", "transaction", "Graphics", "Vol", "29", "no.", "Article", "150", "publication", "date", "December", "2010", "Cone", "Carving", "surface", "reconstruction", "150:7", "Figure", "example", "distance", "blending", "yellow", "point", "have", "several", "significant", "cluster", "distance", "various", "area", "-lrb-", "see", "histogram", "right", "-rrb-", "DTE", "-lrb-", "-rrb-", "choose", "median", "minimal", "sig", "nificant", "cluster", "-lrb-", "red", "-rrb-", "cluster", "find", "use", "slide", "kernel", "window", "histogram", "start", "from", "lowest", "value", "note", "select", "cluster", "actually", "lie", "miss", "face", "-lrb-", "left", "-rrb-", "exemplify", "strength", "cone", "carve", "fill", "miss", "piece", "base", "visibility", "information", "practice", "we", "can", "rely", "any", "single", "representative", "cone", "since", "cone", "may", "erroneous", "due", "discrete", "way", "3d", "visibility", "cone", "be", "construct", "instead", "we", "blend", "distance", "several", "cone", "robustly", "provide", "better", "estimator", "ideal", "dte", "distance", "-lrb-", "free", "from", "erroneous", "visibility", "cone", "-rrb-", "which", "turn", "approximate", "well", "distance", "underlie", "shape", "Cone", "distance", "blend", "two", "main", "reason", "combine", "several", "value", "cone", "distance", "first", "remove", "outlier", "second", "create", "larger", "support", "specific", "distance", "measure", "na?ve", "approach", "blend", "cone", "distance", "would", "create", "histogram", "distance", "from", "point", "all", "cone", "use", "blend", "kernel", "function", "take", "minimal", "significant", "value", "accord", "equation", "-lrb-", "-rrb-", "significant", "value", "would", "value", "whose", "support", "-lrb-", "i.e.", "frequency", "-rrb-", "larger", "than", "threshold", "nevertheless", "same", "distance", "value", "from", "may", "originate", "from", "cone", "totally", "different", "region", "shape", "-lrb-", "see", "Figure", "-rrb-", "only", "one", "which", "give", "correct", "minimum", "therefore", "we", "employ", "two-stage", "approach", "use", "histogram", "search", "minimum", "while", "blend", "3d", "position", "instead", "distance", "use", "clustering", "-lrb-", "see", "Figure", "-rrb-", "start", "from", "minimal", "dtc", "value", "we", "use", "slide", "window", "size", "2r", "each", "value", "we", "examine", "all", "cone", "projection", "from", "whose", "distance", "point", "fall", "inside", "bin", "-lsb-", "2r", "-rsb-", "denote", "set", "cone", "correspond", "project", "point", "-lrb-", "-rrb-", "since", "point", "can", "come", "from", "various", "region", "3d", "space", "we", "cluster", "they", "use", "simple", "hierarchical", "scheme", "-lsb-", "Everitt", "et", "al.", "2001", "-rsb-", "3d", "space", "threshold", "we", "use", "cone", "first", "cluster", "find", "contain", "more", "than", "point", "define", "DTE", "-lrb-", "-rrb-", "denote", "cone", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "we", "take", "median", "distance", "from", "all", "cone", "-lrb-", "-rrb-", "DTE", "-lrb-", "-rrb-", "dte", "-lrb-", "-rrb-", "median", "-lcb-", "dtc", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rcb-", "adequately", "filter", "out", "outlier", "still", "blend", "several", "cone", "we", "use", "value", "0.8", "avg", "all", "example", "paper", "where", "avg", "average", "all", "point", "data-set", "distance", "nearest", "neighbor", "result", "we", "have", "test", "we", "algorithm", "several", "challenging", "example", "term", "miss", "part", "self", "occlusion", "where", "test", "datum", "be", "either", "scan", "take", "from", "aim@shape", "shape", "repository", "artificial", "point", "cloud", "use", "typically", "contain", "5,00014,000", "point", "algorithm", "implement", "C++", "GPU", "part", "use", "glsl", "CUDA", "we", "use", "Intel", "Core2", "Quad", "t9550", "Nvidia", "GeForce", "275", "GTX", "video", "card", "Table", "show", "timing", "result", "model", "show", "paper", "figure", "11", "we", "show", "several", "example", "we", "result", "we", "first", "show", "point", "set", "use", "splat", "give", "sense", "overall", "shape", "datum", "note", "object", "present", "challenge", "previous", "reconstruction", "algorithm", "since", "contain", "part", "inaccessible", "from", "outside", "sampling", "we", "compare", "we", "result", "three", "other", "algorithm", "radial", "basis", "function", "-lsb-", "Carr", "et", "al.", "2001", "-rsb-", "partition", "unity", "-lsb-", "Ohtake", "et", "al.", "2003", "-rsb-", "Poisson", "reconstruction", "-lsb-", "Kazhdan", "et", "al.", "2006", "-rsb-", "all", "method", "encounter", "problem", "misinterpret", "outside", "inside", "thus", "connect", "close", "part", "form", "wrong", "topology", "use", "we", "global", "visibility", "prior", "ambiguity", "solve", "correct", "topological", "interpretation", "give", "shape", "Model", "Points", "Cones", "DTE", "Total", "time", "time", "time", "open", "shape", "5,124", "1:52", "0:31", "2:30", "Inukshuk", "11,808", "5:10", "1:11", "6:35", "12-point", "star", "11,710", "5:02", "0:30", "5:57", "Mannequin", "12,220", "4:55", "1:50", "7:04", "hand", "13,162", "5:19", "1:23", "6:58", "elephant", "14,295", "6:30", "2:05", "9:05", "Model", "Points", "Cones", "DTE", "Total", "time", "time", "time", "open", "shape", "5,124", "1:52", "0:31", "2:30", "Inukshuk", "11,808", "5:10", "1:11", "6:35", "12-point", "star", "11,710", "5:02", "0:30", "5:57", "Mannequin", "12,220", "4:55", "1:50", "7:04", "hand", "13,162", "5:19", "1:23", "6:58", "elephant", "14,295", "6:30", "2:05", "9:05", "Table", "run", "time", "different", "result", "model", "minute", "total", "time", "include", "all", "stage", "algorithm", "include", "final", "point", "merge", "surface", "6.1", "noise", "handle", "due", "blend", "characteristic", "all", "stage", "cone", "carve", "assumption", "base", "use", "visibility", "cone", "remain", "robust", "certain", "degree", "even", "when", "noise", "present", "however", "unlike", "Poisson", "reconstruction", "cone", "carve", "design", "smooth", "filter", "out", "noise", "sense", "effort", "filter", "out", "noise", "orthogonal", "problem", "deal", "miss", "datum", "any", "point-based", "noise", "filter", "algorithm", "could", "use", "prior", "reconstruction", "use", "cone", "carve", "Figure", "10", "present", "some", "reconstruction", "result", "under", "noise", "compare", "behavior", "cone", "carve", "base", "rbf", "Poisson", "reconstruction", "note", "although", "output", "surface", "from", "former", "indeed", "noisy", "topology", "object", "still", "correct", "-lrb-", "contrast", "Poisson", "-rrb-", "remain", "correct", "even", "under", "more", "severe", "level", "noise", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "figure", "10", "-lrb-", "-rrb-", "Poisson", "reconstruction", "point", "cloud", "10", "random", "noise", "10", "point", "smooth", "contain", "topological", "error", "-lrb-", "-rrb-", "Cone", "carve", "same", "point", "cloud", "-lrb-", "-rrb-", "result", "cone", "carve", "point", "cloud", "10", "random", "noise", "all", "point", "still", "maintain", "correct", "topology", "6.2", "Limitations", "main", "disadvantage", "cone-carving", "current", "naive", "implementation", "quadratic", "therefore", "slow", "find", "cone", "boundary", "each", "point", "sample", "splatting", "all", "other", "point", "dataset", "use", "mean", "impractical", "larger", "datum", "set", "currently", "be", "produce", "Advanced", "spatial", "search", "structure", "well", "random", "sampling", "larger", "dataset", "can", "alleviate", "problem", "however", "convert", "linear", "time", "-lrb-", "e.g.", "use", "fix", "size", "neighborhood", "-rrb-", "still", "difficult", "main", "point", "cone", "carve", "utilize", "additional", "global", "information", "visibility", "scan", "datum", "general", "quality", "more", "important", "than", "speed", "surface", "reconstruction", "part", "long", "process", "datum", "collection", "which", "rarely", "interactive", "success", "cone", "carve", "also", "rely", "some", "tuning", "parameter", "three", "main", "stage", "be", "define", "parame", "ter", "cone", "creation", "stage", "cone", "distance", "blend", "stage", "choose", "between", "DTE", "dp", "cone", "creation", "stage", "we", "determine", "splat", "size", "each", "point", "base", "near", "number", "define", "k-nearest", "neighbor", "search", "pixel", "-lrb-", "section", "-rrb-", "Figure", "12", "show", "example", "cube", "render", "one", "point", "vary", "value", "near", "clear", "small", "value", "near", "create", "hole", "surface", "large", "value", "time", "consuming", "redundant", "create", "large", "overlap", "between", "splat", "practice", "we", "find", "near", "strike", "best", "balance", "correctly", "interpret", "shape", "all", "point", "all", "data-set", "cone", "distance", "blend", "stage", "-lrb-", "section", "-rrb-", "two", "parameter", "govern", "blending", "blend", "kernel", "neighborhood", "size", "threshold", "define", "support", "significant", "cluster", "size", "can", "see", "define", "size", "cardinality", "cluster", "define", "DTE", "Figure", "13", "illustrate", "effect", "change", "value", "reconstruction", "choose", "between", "DTE", "dp", "distance", "measure", "we", "use", "parameter", "Figure", "14", "show", "how", "change", "can", "effect", "reconstruction", "summary", "small", "set", "parameter", "control", "cone", "carve", "result", "however", "we", "have", "show", "all", "one", "example", "paper", "-lrb-", "Mannequin", "figure", "we", "use", "more", "sparsely", "sample", "-rrb-", "same", "set", "parameter", "value", "use", "govern", "one", "characteristic", "value", "point", "set", "namely", "what", "we", "define", "avg", "ACM", "transaction", "Graphics", "Vol", "29", "no.", "Article", "150", "publication", "date", "December", "2010", "150:8", "S.", "shalom", "et", "al.", "Figure", "11", "reconstruction", "result", "output", "cone", "carve", "algorithm", "compare", "reconstruction", "result", "dipole", "rbf", "reconstruction", "multi-level", "partition", "Unity", "Poisson", "reconstruction", "Cone", "carve", "interpret", "topology", "approximate", "geometry", "shape", "better", "than", "exist", "technique", "ACM", "transaction", "Graphics", "Vol", "29", "no.", "Article", "150", "publication", "date", "December", "2010", "Cone", "Carving", "surface", "reconstruction", "150:9", "Figure", "12", "effect", "vary", "parameter", "near", "point", "splatting", "too", "small", "value", "-lrb-", "-rrb-", "create", "hole", "while", "too", "large", "value", "-lrb-", "-rrb-", "result", "redundant", "overlap", "splat", "we", "use", "near", "conclusion", "future", "work", "we", "have", "present", "cone", "carve", "enhance", "surface", "reconstruction", "technique", "from", "scan", "point", "cloud", "combine", "local", "positional", "global", "visibility", "information", "Cone", "carve", "utilize", "visibility", "exist", "point", "infer", "new", "point", "complete", "miss", "part", "capture", "model", "unlike", "previous", "attempt", "exploit", "visibility", "assist", "surface", "reconstruction", "here", "visibility", "take", "from", "inside-out", "perspective", "create", "visibility", "cone", "from", "point", "surface", "outward", "cone", "effective", "exactly", "where", "need", "most", "away", "from", "exist", "point", "where", "datum", "miss", "we", "have", "demonstrate", "effectiveness", "cone", "carve", "several", "reconstruction", "both", "synthetic", "input", "raw", "scan", "from", "commercial", "3d", "scanner", "speed", "major", "limitation", "we", "plan", "investigate", "few", "option", "accelerate", "cone", "carve", "create", "generalize", "cone", "only", "subset", "point", "utilize", "entire", "point-set", "trace", "silhouette", "create", "cone", "off-surface", "point", "only", "near", "miss", "part", "rather", "than", "across", "whole", "shape", "focus", "only", "part", "where", "make", "positive", "difference", "use", "pre-computed", "spatial", "datum", "structure", "accelerate", "various", "geometric", "computation", "computation", "dtc", "fully", "exploit", "highly", "parallel", "nature", "algorithm", "use", "GPU", "implementation", "Figure", "13", "size", "cardinality", "cluster", "define", "DTE", "have", "opposite", "effect", "too", "large", "can", "insert", "outlier", "cluster", "while", "too", "small", "do", "blend", "enough", "information", "may", "determine", "wrong", "distance", "large", "can", "reject", "correct", "distance", "cluster", "too", "few", "count", "while", "small", "use", "outlier", "cone", "cluster", "we", "have", "use", "0.8", "avg", "all", "one", "example", "paper", "visibility", "cone", "may", "also", "prove", "useful", "problem", "other", "than", "surface", "reconstruction", "instance", "shape", "distribution", "cone", "can", "assist", "line", "point", "feature", "detection", "another", "interesting", "research", "direction", "would", "study", "potential", "visibility", "cone", "assist", "plan", "positioning", "scanning", "device", "order", "improve", "its", "coverage", "reference", "lexa", "m.", "ehr", "J.", "OHEN", "D.", "LEISHMAN", "S.", "EVIN", "D.", "ILVA", "C.", "T.", "2003", "Computing", "render", "point", "set", "surface", "IEEE", "Trans", "Vis", "Comp", "Graphics", "15", "MENTA", "N.", "ERN", "M.", "W.", "1998", "surface", "reconstruction", "Voronoi", "filter", "Proc", "Symp", "Comp", "Geom.", "39", "48", "MENTA", "N.", "HOI", "S.", "OLLURI", "R.", "2001", "power", "crust", "union", "ball", "medial", "axis", "transform", "computational", "geometry", "Theory", "application", "19", "2-3", "127", "153", "ranz", "2009", "FastSCAN", "Cobra", "Scorpion", "Handheld", "Laser", "Scanner", "user", "Manual", "Aranz", "Scanning", "Ltd", "http://www.fastscan3d.com/", "aerentzen", "J.", "A.", "ANAES", "H.", "2005", "sign", "distance", "computation", "use", "angle", "weighted", "pseudonormal", "IEEE", "transaction", "visualization", "computer", "graphic", "11", "243", "253", "arr", "J.", "C.", "EATSON", "R.", "K.", "HERRIE", "J.", "B.", "ITCHELL", "T.", "J.", "right", "W.", "R.", "ALLUM", "B.", "C.", "van", "t.", "R.", "2001", "reconstruction", "representation", "3d", "object", "radial", "basis", "function", "Proc", "ACM", "SIGGRAPH", "67", "76", "azal", "F.", "IESEN", "J.", "2006", "Delaunay", "triangulation", "base", "surface", "reconstruction", "effective", "computational", "geometry", "curve", "surface", "j.-d", "Boissonnat", "M.", "Teillaud", "Eds", "Springer", "231", "276", "ACM", "transaction", "Graphics", "Vol", "29", "no.", "Article", "150", "publication", "date", "December", "2010", "150:10", "S.", "shalom", "et", "al.", "Figure", "14", "varying", "value", "choose", "between", "DTE", "dp", "distance", "when", "DTE", "use", "whenever", "larger", "than", "dp", "create", "correct", "topology", "can", "result", "some", "noise", "well", "sample", "part", "since", "those", "area", "close", "surface", "dp", "distance", "more", "reliable", "when", "large", "-lrb-", "avg", "-rrb-", "DTE", "distance", "utilize", "wrong", "topology", "base", "dp", "distance", "return", "value", "use", "throughout", "paper", "avg", "ohen", "M.", "F.", "REENBERG", "D.", "P.", "1985", "hemi-cube", "radiosity", "solution", "complex", "environment", "Proc", "ACM", "SIGGRAPH", "31", "40", "urless", "B.", "EVOY", "M.", "1996", "volumetric", "method", "building", "complex", "model", "from", "range", "image", "Proc", "ACM", "SIGGRAPH", "303", "312", "avi", "J.", "arschner", "S.", "R.", "ARR", "M.", "evoy", "M.", "2002", "fill", "hole", "complex", "surface", "use", "volumetric", "diffusion", "Proceedings", "first", "International", "Symposium", "3D", "Data", "Processing", "visualization", "Transmission", "354", "369", "ey", "T.", "OSWAMI", "S.", "2003", "tight", "cocone", "water", "tight", "surface", "reconstructor", "Proc", "ACM", "Sympos", "solid", "modeling", "Appl.", "127", "134", "ey", "T.", "K.", "K.", "AMOS", "E.", "A.", "ENGER", "R.", "2009", "isotopic", "reconstruction", "surface", "boundary", "Computer", "Graphics", "Forum", "special", "issue", "sgp", "09", "Proceedings", "Symposium", "Geometry", "Processing", "28", "1371", "1382", "delsbrunner", "H.", "ucke", "E.", "P.", "1994", "Threedimensional", "alpha", "shape", "ACM", "Trans", "Graphics", "13", "43", "72", "ana", "J.", "arshney", "a.", "1998", "Topology", "simplification", "polygonal", "virtual", "environment", "IEEE", "Trans", "Vis", "Comp", "Graphics", "133", "144", "veritt", "B.", "S.", "ANDAU", "S.", "EESE", "M.", "2001", "cluster", "analysis", "Oxford", "University", "Press", "AL", "R.", "hamir", "a.", "assner", "T.", "auly", "m.", "ohen", "D.", "2007", "surface", "reconstruction", "use", "local", "shape", "prior", "Proc", "Eurographics", "Symp", "Geometry", "Processing", "253", "262", "iesen", "J.", "AZALS", "F.", "auly", "m.", "omorodian", "a.", "2006", "conformal", "alpha", "shape", "filtration", "Visual", "Computer", "22", "531", "540", "OPPE", "H.", "OSE", "T.", "UCHAMP", "T.", "onald", "J.", "TUETZLE", "W.", "1992", "surface", "reconstruction", "from", "unorganized", "point", "Proc", "ACM", "SIGGRAPH", "71", "78", "uang", "H.", "D.", "HANG", "H.", "SCHER", "U.", "ohen", "D.", "2009", "consolidation", "unorganized", "point", "cloud", "surface", "reconstruction", "ACM", "Trans", "graphic", "-lrb-", "Proc", "SIGGRAPH", "Asia", "-rrb-", "28", "Article", "176", "AZHDAN", "M.", "OLITHO", "M.", "OPPE", "H.", "2006", "Poisson", "surface", "reconstruction", "Proc", "Eurographics", "Symp", "Geometry", "Processing", "61", "70", "UTULAKOS", "K.", "N.", "EITZ", "S.", "M.", "2000", "theory", "shape", "space", "carve", "Proc", "int", "J.", "Comp", "Vis", "38", "199", "218", "Marr", "Prize", "special", "issue", "aurentinus", "a.", "1994", "visual", "hull", "concept", "silhouettebased", "image", "understanding", "IEEE", "Trans", "Pat", "Ana", "Mach", "int", "16", "150", "162", "ontenegro", "a.", "A.", "ARVALHO", "P.", "C.", "P.", "ATTASS", "M.", "ELHO", "L.", "C.", "P.", "R.", "2004", "adaptive", "space", "carve", "Proc", "3D", "Data", "Processing", "visualization", "Transmission", "199", "206", "ehab", "D.", "USINKIEWICZ", "S.", "AVIS", "J.", "AMAMOOR", "THI", "R.", "2005", "efficiently", "combine", "position", "normal", "precise", "3d", "geometry", "ACM", "Trans", "Graphics", "24", "536", "543", "itschke", "C.", "AKAZAWA", "a.", "akemura", "H.", "2007", "real-time", "space", "carve", "use", "graphic", "hardware", "IEICE", "Trans", "Inf", "Syst", "e90-d", "1175", "1184", "htake", "Y.", "ELYAEV", "a.", "LEXA", "M.", "urk", "G.", "EI", "DEL", "h.-p", "2003", "multi-level", "partition", "unity", "implicit", "ACM", "Trans", "Graphics", "22", "463", "470", "auly", "m.", "itra", "N.", "J.", "IESEN", "J.", "ROSS", "M.", "uiba", "L.", "J.", "2005", "example-based", "3d", "scan", "completion", "Proc", "Eurographics", "Symp", "Geometry", "Processing", "23", "32", "fister", "H.", "WICKER", "M.", "VAN", "AAR", "J.", "ross", "M.", "2000", "Surfels", "surface", "element", "render", "primitive", "Proc", "ACM", "SIGGRAPH", "335", "342", "chnabel", "R.", "EGENER", "P.", "LEIN", "R.", "2009", "completion", "reconstruction", "primitive", "shape", "Computer", "Graphics", "Forum", "-lrb-", "Proc", "eurographic", "-rrb-", "28", "503", "512", "harf", "a.", "LEXA", "M.", "ohen", "D.", "2004", "contextbased", "surface", "completion", "ACM", "Trans", "Graphics", "23", "878", "887", "orkine", "O.", "ohen", "D.", "2004", "least-square", "mesh", "Proc", "IEEE", "Conf", "shape", "modeling", "application", "191", "199", "agliasacchus", "a.", "hang", "H.", "ohen", "D.", "2009", "curve", "skeleton", "extraction", "from", "incomplete", "point", "cloud", "ACM", "Trans", "Graphics", "28", "Article", "71", "page", "urk", "G.", "EVOY", "M.", "1994", "zippered", "polygon", "mesh", "from", "range", "image", "Proc", "ACM", "SIGGRAPH", "311", "318", "ESTOVER", "L.", "1990", "footprint", "evaluation", "volume", "rendering", "Proc", "ACM", "SIGGRAPH", "367", "376", "ACM", "transaction", "Graphics", "Vol", "29", "no.", "Article", "150", "publication", "date", "December", "2010" ],
  "content" : "\n  \n    3c7ef6e1dc524510e3bce73eba4ef33540364079eebfbcd842876fa166bc2e52\n    p0i\n    10.1145/1866158.1866176\n    Name identification was not possible. \n  \n  \n    \n      \n        Cone Carving for Surface Reconstruction\n      \n      Shy Shalom Ariel Shamir Bar-Ilan University The Interdisciplinary Center, Herzliya\n      \n        \n        Figure 1: With a significant amount of missing data in a scanned point cloud (left), conventional surface reconstruction schemes such as RBF are error-prone (middle). Cone carving, a space carving technique, utilizes global visibility information to more accurately infer the captured shape. It creates additional off-surface points specifically in areas of sparse input to produce a more faithful reconstruction (right).\n      \n      We present cone carving, a novel space carving technique supporting topologically correct surface reconstruction from an incomplete scanned point cloud. The technique utilizes the point samples not only for local surface position estimation but also to obtain global visibility information under the assumption that each acquired point is visible from a point lying outside the shape. This enables associating each point with a generalized cone, called the visibility cone, that carves a portion of the outside ambient space of the shape from the inside out. These cones collectively provide a means to better approximate the signed distances to the shape specifically near regions containing large holes in the scan, allowing one to infer the correct surface topology. Combining the new distance measure with conventional RBF, we define an implicit function whose zero level set defines the surface of the shape. We demonstrate the utility of cone carving in coping with significant missing data and raw scans from a commercial 3D scanner as well as synthetic input.\n    \n    \n      \n        1 Introduction\n      \n      Surface reconstruction from a scanned point cloud is a central problem in computer graphics that has inspired constant research over the past years. Given a set of 3D points acquired by a scanning device, the goal is to construct a 2D watertight surface embedded in 3D which approximates the scanned shape as closely as possible, from its global topology down to the finer geometric details. Apart from noise, the most common difficulty with scanned point clouds is the existence of holes in the data: areas of the shape that were not properly acquired. In particular, large holes often occur in deep,\n      \n        ACM Reference Format\n      \n      Shalom, S., Shamir, A., Zhang, H., Cohen-Or, D. 2010. Cone Carving for Surface Reconstruction. ACM Trans. Graph. 29, 6, Article 150 (December 2010), 10 pages. DOI = 10.1145/1866158.1866176 http://doi.acm.org/10.1145/1866158.1866176.\n      \n        Copyright Notice\n      \n      Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or direct commercial advantage and that copies show this notice on the fi rst page or initial screen of a display along with the full citation. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers, to redistribute to lists, or to use any component of this work in other works requires prior specific permission and/or a fee. Permissions may be requested from Publications Dept., ACM, Inc., 2 Penn Plaza, Suite 701, New York, NY 10121-0701, fax +1\n      \n        212\n        869-0481, or permissions@acm.org.\n      \n      ? 2010 ACM 0730-0301/2010/12-ART150 $10.00 DOI 10.1145/1866158.1866176 http://doi.acm.org/10.1145/1866158.1866176\n      Hao Zhang Daniel Cohen-Or Simon Fraser University Tel-Aviv University\n      hard to reach cavities of the object, or places where object parts are too close to each other. These impose serious adverse effects on the quality of the reconstruction, particularly in terms of its topology.  One of the more successful techniques to recover a watertight 2D surface from point clouds has been to define an implicit function over the ambient space of the underlying shape and take the zero level-set of the function. Examples of this technique include Radial Basis functions [Carr et al. 2001], Partition of unity [Ohtake et al. 2003], and Poisson reconstruction [Kazhdan et al. 2006]. In many cases, the implicit function is defined using some blending kernel of local neighborhoods defined over a point set. To better estimate this function, the set of sample points, which are considered onsurface points, is augmented by a set of off-surface points that carry a signed distances to the perceived surface. For instance, in [Carr et al. 2001] dipole off-surface points are created by offsetting the input points along their estimated normal directions, on either side of the perceived surface. However, a major problem with using dipole points for surface reconstruction occurs over areas with sparse or missing data. Without sufficient point sampling, one cannot define the dipole points reliably. For similar reasons, previous implicit surface reconstruction methods can only fill holes smoothly. More often than not, this leads to topological or geometric reconstruction errors, e.g., see Figure 1 (middle). While previous algorithms have effectively used blending of the positional information of points, in this paper we utilize blending of global visibility information as well. This information can effectively define a signed distance function to the surface even in regions where sample data is missing. We assume that the scan of the surface is performed in such a way that each acquired sample is visible from a point outside the shape. In other words, from any point sample, there exists a ray emanating from the point that lies completely outside the shape. We call the direction of this ray the outward direction. This is a rather weak and realistic assumption since for most optical scanners and under typical acquisition settings, an outward direction is already known for each sample point ? it is the direction from the point to the scanner head position at the moment of the capture. Using the outward direction we convert each sample point to a visibility cone apexed at the point (see Figure 2 ). These cones are assumed to be exterior to the underlying shape. The key idea is that\n      ACM Transactions on Graphics, Vol. 29, No. 6, Article 150, Publication date: December 2010.\n      150:2\n      ?\n      S. Shalom et al.\n      \n        \n      \n      (a) (b) (c)\n      \n        Figure 2: Visibility cones. (a) A 3D point cloud with a point sample and an outside direction at the sample. (b) The corresponding ideal (maximal) visibility cone. (c) In general such 3D visibility cones can have rather complex boundaries.\n      \n      such cones extend beyond the direct outward direction, carve out the outside space and therefore, carry global visibility information that can be used to define a more reliable distance measure to the shape near regions with sparse input data.  Let p be a point in the input point cloud P which samples the scanned shape S. We define the visibility cone of p as the largest generalized cone apexed at p which contains an outward direction at p, with no other point from P in its interior. The ideal visibility cone at p would be one that is extruded from p along the silhouette of S as viewed from p, as shown in Figure 2 . The union of all the visibility cones from P provides a virtual carving of the ambient 3D space around the underlying shape S. The set of visibility cones collectively carry global information about the shape and offers a robust indicator of outside relations with respect to S, specifically near regions of sparse data and cavities. The interface between the inside and outside space defined by the visibility cones is given by the boundary of the volume formed by the union of all cones. We call this boundary surface E the lower envelope of the set of visibility cones as it is viewed from the insideout perspective. In the ideal continuous setting when P = S and under the visibility assumption, the lower envelope E is simply S. In our discrete settings, where E = S, we still utilize the distance to E as an approximation to the distance to S. We define a new set of off-surface points and use E to approximate the signed distances from these points to the surface. Instead of blending the cones to construct the lower envelope E, we use statistical blending of individual distances from the new off-surface points to the cones to arrive at a reliable and robust distance measure. The practical challenges of creating the cones in the discrete setting also include the construction of approximate 3D visibility cones based on the point cloud P . Towards this end, we adopt an imagebased approach, exploiting the rendering speed and capabilities of the GPU. Using a point-rendering process with adaptive splat sizes, we project the point cloud onto a small cube around each p ? P and trace the appropriate silhouette contour on the cube for extruding a visibility cone from p. In essence, this process can be seen as a view dependent blending of the input point cloud defining the local visibility silhouette at each point sample p. To summarize, our algorithm relies on blending at three levels. First, the local position of sample points are blended similar to previous algorithms. Second, view-dependent positional information is blended to define visibility cones for all sample points. Third, distances to the cones from new off-surface points, which we term cone-based off-surface points, are blended to arrive at a robust distance-to-surface measure. These blendings combine local positional and global visibility information for more effective surface reconstruction as shown in Figures 1 and 11.\n      \n        \n        \n        Figure 3: For objects containing cavities (left), space carving from the outside (e.g. silhouette carving) can fail to reconstruct the correct shape (right). In contrast, cone carving can exploit the full potential of visibility information (see Figure 11 )\n      \n      \n        2 Related works\n        [Curless and Levoy 1996] were the first to combine positional and visibility information for surface reconstruction using space carving in VRIP. However, they use the conservative line-of-sight from the sampled points to the scanner to clear out ?empty? voxels. We carve larger parts of the outside space using continuous cones based on adaptive sampling of the distance between the sample points. Our technique does not depend on the voxel resolution and does not need explicit knowledge of the scanner head?s location. Moreover, in cases similar to Figure 1 , the VRIP algorithm would need to place a ?backdrop? surface while scanning to recover the inner part of the cylinder. In contrast, our cones carry global visibility information that successfully handles such cases. Space carving is also used for reconstructing a 3D shape using images taken from multiple views [Kutulakos and Seitz 2000; Montenegro et al. 2004; Nitschke et al. 2007]. These methods create a rough volumetric estimation of the shape and do not aim at surface reconstruction from point clouds (see Figure 3 ). Furthermore, the outside space is defined by carving out space using rays emanating from the camera position towards the object and through its silhouette ( Figure 3 ), while we use the inverse direction and carve out cones originating at each sample of a point cloud. One exception to this is the work by Laurentini [1994], where the underlying concept of cone carving, has been explored from a theoretical stand point. Bounds on the types of surfaces that may be reconstructed with this technique are given with an O(n 6 ) theoretical algorithm. However, an implementation of this algorithm in a real world setting using point clouds was not explored. In general, reconstructing a surface from a scanned, unstructured point cloud is widely regarded as a difficult and ill-posed problem. The pioneering work of Hoppe et al. [1992] computes a signed distance field to the underlying surface using local tangent plane construction, and extracts an isosurface from the distance field using the marching cubes algorithm. Over the years, other implicit formulations have been proposed, including RBF [Carr et al. 2001], Partition of unity [Ohtake et al. 2003], and Poisson reconstruction [Kazhdan et al. 2006]. These methods all rely on acquired [Nehab et al. 2005] or estimated [Alexa et al. 2003; Hoppe et al. 1992] point normals. However, with the presence of a variety of data artifacts due to measurement noise, scan mis-registration, or selfocclusions, obtaining reliable normals everywhere is not an easy task and is a subject of intensive research in its own right [Huang et al. 2009]. Voronoi-based approaches typically do not require normals. They attempt to reconstruct the surface using Voronoi diagrams or Delaunay triangulations and provide proper sampling conditions under which the reconstructed surface has provable theoretical guarantees [Amenta and Bern 1998; Amenta et al. 2001; Dey and Goswami 2003; Cazals and Giesen 2006]. These methods, however, are lim- ited when faced with severe under-sampling or non-uniform sampling. A particular Delaunay-based technique, which uses the concept of ?-shapes [Edelsbrunner and M?cke 1994], is worth mentioning, as the closely related concept of ?-hulls can be presented using a ?carving? analogy. Using empty balls of radius ? to carve the ambient space around a mesh, the ?-hull technique can be used for topological simplification [El-Sana and Varshney 1998]. Surface reconstruction using ?-shapes extracts a surface from the Delaunay tetrahedralization of the input point cloud using empty ?-balls as a means of filtering. Giesen et al. [2006] use ?-balls with adaptive radii to deal with non-uniform sampling. However, this class of methods still only return sub-complexes of the Delaunay tetrahedralization. With significant missing data, the Delaunay tetrahedralization may not contain any sub-complex that is a proper surface reconstruction; see Figure 4(b) . When data is missing in the input scans, some existing surface reconstruction techniques, e.g., Voronoi-based Power Crust [Amenta et al. 2001], tight Cocone [Dey and Goswami 2003], or implicit schemes using radial basis functions (RBF) [Carr et al. 2001], can still guarantee an output that is a water-tight 2-manifold. However, in the presence of large holes or close-by surface sheets, these approaches typically produce topological or geometric errors. These are complicated scenarios where purely local considerations, such as point normals or Voronoi constructions, are insufficient to infer the shape correctly and additional information or assumptions are needed. One can try and identify these as surface boundaries [Dey et al. 2009], or utilize hole-filling. Several existing algorithms for hole filling rely on additional data or assumptions, such as multiple data scans [Turk and Levoy 1994], templates [Pauly et al. 2005] or specialized shape prior [Gal et al. 2007; Schnabel et al. 2009; Tagliasacchi et al. 2009]. Visibility information can also be utilized by volumetric diffusion [Davis et al. 2002]. When the holes are easy to detect or are specified as part of the input, several approaches can be applied to achieve high-quality surface completion; these include the use of smooth interpolants [Sorkine and Cohen-Or 2004] or self similarities in shapes [Sharf et al. 2004]. Our cone carving technique deals with significant missing data in surface reconstruction while relying on a weaker and more practical assumption: the existence of an outward direction at each point sample. Typically, the outward directions can be returned by the scanner head positions, which are available from some brands of laser scanners. Some commercial products, such as the software bundled with the Polhemus FastSCAN scanner [Aranz 2009], are known to use this information to some extent ? but usually only for coarse tasks such as determining the correct sign of normal vectors. We are not aware of previous works that utilize such information for surface reconstruction.\n        ACM Transactions on Graphics, Vol. 29, No. 6, Article 150, Publication date: December 2010.\n        Cone Carving for Surface Reconstruction\n        ?\n        150:3\n      \n      \n        3 Visibility cone carving\n        To illustrate the idea behind cone carving, we first describe a simplified version of the algorithm in 2D. Our input is a 2D point set with missing data such as the one shown in Figure 4(a) , which is similar to a typical output of a range scan for a ??? shape. Boundary lines that are closely parallel to the scanning direction are likely to suffer from sparse sampling and result in large holes since the grazing angle in which the scanner beam hits the shape boundary is too shallow and does not reflect light properly. Dipole distance and distance to lower envelope With an input point set given in Figure 4(a) , standard reconstruction algorithms such as RBF [Carr et al. 2001] would produce undesirable results. Regular RBF uses dipole off-surface points, which are created at a constant distance +c and ?c from an input point p along the direc- tion of the estimated normal; see 4(c). As a convention, the signed distance takes on positive values when inside the shape and negative values when outside. Based on the dipole points, RBF interpolation implies a signed distance field, which we refer to as the dipole distances or DP , over the ambient space, as shown in Figure 4(d) . We can observe that in areas where there are large gaps between samples, no off-surface points are created. Consequently, the interpolation produces smooth curves as part of the zero level-set of the DP distance field, which may not give a correct representation of the underlying shape. One the other hand, the cone carving algorithm uses the additional global visibility information, resulting in a better implicit distance function to infer the shape boundary. For an input point p, the visibility cone at p in 2D is the largest sector that can be stretched from an outward direction without containing any other input points, as shown in 4(e). The assumption at the base of cone carving is that the area inside the visibility cone is completely outside the shape. To take advantage of the global visibility information we construct a visibility cone for each point of the input set. The union of all the cones serves as an approximation of the exterior ambient space around the shape, as shown in 4(f). In 2D, the visibility cone sector is delimited by two rays emanating from p. Each of these rays must pass through some other point of the input point set. If the position of the scanning head is known for point p, an outward direction is known. Hence, we calculate a ray from p to the scanner head and sweep it radially as much as possible until hitting other cloud points. When this direction is unknown, we assume that the cone sector with the largest opening angle is the one which contains the outward direction. Hence, we can search for the largest empty opening between two points as viewed from p to construct the visibility cone for p. Note that this assumption may not always hold and erroneous cones may be created. However, in practice these situations are rare and do not effect the algorithm in general. This is because, as will be seen later in the 3D case, the individual visibility cones are essentially blended statistically to achieve robustness against the potential errors. Recall that the boundary of the union of the visibility cones has been defined as the lower envelope. In the 2D case, each visibility cone assumes a particularly simple structure and therefore we can explicitly construct the lower envelope E. Next, we define the DTE or Distance-to-Envelope as the shortest distance to E. Figure 4(g) shows, for the 2D example, a plot of the DTE distance field. As a convention, the signed distances take on positive values when outside the union of the visibility cones, and negative values when inside. Note that this choice of signs is consistent with the choice of distance signs with respect to the underlying shape. Choosing between distances Using a quadtree subdivision of the ambient space (octree in 3D), we sample the DTE field to create cone-based off-surface points. The tree is initialized with a uniform grid of points and subsequently subdivided into cells containing sign transitions in the DTE measure. This creates an adaptive sampling of points that concentrate near the surface, but does not rely on the distribution of the input points. This allows one to sample the distance field in areas of sparse or missing data. On the other hand, areas with sufficiently dense input data are well covered by the dipole points and the implied DP distance field. The decision on which distances, DP or DTE , to choose in each region dictates how the off-surface points are generated for the final RBF process. Let us recall that the collection of visibility cones serve to carve out the exterior or outside space with respect to the underlying shape. As such, these cones are only reliable as outside indicators. Indeed, while any point inside a visibility cone should be assumed to be outside the underlying shape, a point outside all visibility cones should not be assumed to be inside. In our discrete setting, gaps\n        ACM Transactions on Graphics, Vol. 29, No. 6, Article 150, Publication date: December 2010.\n        150:4\n        ?\n        S. Shalom et al.\n        \n          \n          \n        \n        (a) (b) (c)\n        \n          \n          \n          \n        \n        (f) (g) (h)\n        \n          Figure 4: Cone carving illustrated in 2D. (a) Input point set. (b) The Delaunay triangulation with significant missing data, no sub-complex of the triangulation (e.g. using ?-balls) is a proper surface reconstruction. (c) Dipole off-surface points for RBF reconstruction. (d) DP : implicit distance field created by RBF (blue: positive and inside the shape; orange: negative and outside), also does not provide proper reconstruction due to missing pieces. (e) A single visibility cone. (f) Outside carved space using all cones. (g) DTE : implicit distance field derived from the lower envelope of the visibility cones (blue: positive and outside the union of cones; orange: negative and inside). (h) Combined set of off-surface points, dipole points and cone-based points generated from an octree using DTE . (i) Difference between the two implicit distance functions ? = DP ? DTE . (j) Final RBF reconstruction from (h) using (i).\n        \n        DP DTE DTE DP IN IN OUT OUT\n        \n          Figure 5: The difference ? between the DP and DTE distances dic-\n        \n        tates the conjectured position of the boundary of the underlying shape, either purple or green. ?(s i ) is the same in both situations, i = 1, 2, 3. When ?(s i ) > ? > 0 (right), where ? is a threshold, the DTE measure carves into the interior (positive sign) space indicated by the DP measure. As DTE is a reliable indicator of outside (negative sign) relation to the shape, the purple boundary is assumed and the sign of s 2 is inverted. In contrast, when ?(s i ) < 0 (left), DP takes precedence over DTE .\n        between the lower envelop and the actual boundary of the shape may appear; see top of the cavity in the ??? in Figure 4(f) . Thus the key situation where the DTE distance should be chosen over the DP distance is at a region which the DP distance incorrectly indicates to be inside the shape ? this is illustrated at the right of Figure 5 . Let DP (s) and DTE (s) denote the scalar values at a point s in the ambient space as given by the DP and DTE distance fields, respectively. We denote the difference between DP (s) and DTE (s) as ?(s) = DP (s) ? DTE (s) and examine the scalar field ?(s), as shown in Figure 4(i) . We differentiate between three possible cases of ?(s) with regards to a threshold value ? > 0: ? |?(s)| < ? : When the two distances are similar, we choose the DP distance since it tends to be more accurate. Indeed, the DP distances are derived from dipole points, which in turn are obtained from local on-surface point samples. On the\n        \n          \n          \n        \n        (d) (e)\n        \n          \n          \n        \n        (i) (j)\n        other hand, the DTE distances use global visibility information which can be less accurate. ? ?(s) > ? : This occurs when the DTE distance ?places? point s significantly (more than a threshold) towards the outside of the shape than the DP distance. We choose DTE since it is a reliable outside indicator. In this case, the visibility cones carve out a region which the DP distance indicates to be inside the shape, as shown in the right of Figure 5 . This is precisely the situation where the global visibility information serves to correct potential reconstruction errors. ? ?(s) < ?? : This occurs when the DTE distance ?places? the point s significantly towards the inside of the shape; see left of Figure 5 . We choose DP over DTE since the latter is not a reliable indicator of the inside relation.\n        To summarize, we use the DTE distance only where the difference ? is positive, indicated by color blue in Figure 4(i) , and above the threshold ?. Over these areas, the DTE distance is most likely to provide a better estimation for the distance from the underlying shape. In practice, such scenario typically occurs over regions with sparse or missing input data and cavities. We have used the value ? = d avg , where d avg is the average for all points in the data-set of the distance to their nearest neighbor (see Section 6.2). Combining the two distances we obtain a hybrid set of off-surface point values, as shown in Figure 4(h) . These points together steer the final RBF reconstruction, combining the merits of traditional local position blending and global visibility information as shown in Figure 4(j) .\n      \n      \n        4 Visibility cones in 3D\n        The 3D visibility cone of a point p is an empty generalized cone apexed at p. It is a cone-like volume of rays, originating from p and extending towards the outside of the shape. The generalized cone is empty in the sense that it contains no other input points. If the exact continuous boundary surface of the shape is known, the 3D visibility cone of a point p can be defined by projecting the silhouette of the shape from p?s viewpoint towards the outside direction.  In practice, the construction of visibility cones from a point cloud in 3D is an ill-posed problem since there is no trivial way to delimit a generalized 3D sector as we did in 2D using two rays. It seems that to construct the visibility cone one must first reconstruct the smooth surface. Instead, we employ a view-dependent blending of the point cloud using splatting [Westover 1990; Pfister et al. 2000] from the perspective of each point p. View dependent blending We extend the definition of a 3D cone to exclude not just points from the data-set, but neighborhoods of size ? around each point. The value of ? is key to producing useful visibility cones that conform accurately to the shape of the point set. A small ? may produce cones that protrude considerably into the shape, leading to ?cracks? between adjacent points, while a large ? can produce cones that are too far removed from the point set, losing vital information regarding the original scanned shape. We use an adaptive neighborhood size ? as the splat size of each rendered point, depending on its distance to the center of projection p. To construct the approximation of an ideal visibility cone of a point p, we perform two passes of rendering with a similar setup. Such a two pass approach is often used in kernel density estimations as well. Both rendering passes create a projection of the point set onto an axis-aligned six sided cube, centered around p, which is regarded as the camera position. In the first rendering pass, we estimate the adaptive neighborhood size ? for each rendered point. In the second rendering pass, we use this size as the splat size for each point and trace the cone silhouette on the view-dependent point-splat image of the point set. A single rendering pass results in six square images, each created by a perspective projection with a 90 ? field of view, pointed in the directions of a major axis and centered at p. This rendering setup is similar to the radiosity hemi-cube method [Cohen and Greenberg 1985] commonly used for calculating form-factors, with the difference that we render a full 6-sided cube instead of a 5-sided Hemi-cube; see Figure 6 . Splat size The purpose of the first rendering pass is to determine the adaptive splat size for every rendered point. This can be seen as reconstructing a complete surface in image space using a k-nearest neighbor kernel function around each point. Our camera is positioned at point p and all other points in the point set are rendered on the cube as a single pixel with a unique color and hence can be uniquely identified. The algorithm then sweeps over the six resulting hemi-cube images, calculating for each visible point q the splat radius r p q that produces a sufficient cover of the area around q when viewed from p. The immediate vicinity of the pixel representing q is scanned in growing concentric squares in search for other near-by non-background pixels. This scan is terminated either when one pixel is detected on N near = 3 different sides of the growing squares, or N far pixels are observed in total (see Figure 7 ). We use N far = 3 ? N near . The splat size is then set to the distance to the last pixel but not more than half the hemi-cube size. These values work well for all data-sets we have experimented with (see Section 6.2 for discussion). Note that some points may not receive any splat radii since they were occluded by other pixels in the rendered images. These points are excluded from the second rendering step since they do not contribute to the desired shape silhouette. Visible silhouette tracing In the second pass of rendering, the point set is again rendered on a cube around p, where each rendered point q is a circular splat with radius r p q and with a unique color. Next, we trace the silhouette edge between background and nonbackground pixels on the rendered image. The tracing begins at a point that is known to be on such an edge, and proceeds in a clockwise path along the silhouette. The trace is guaranteed to eventually reach the starting point since the edge between background and non background pixels is closed and continuous. The complete path will define the silhouette of the visibility cone from p. Finding a starting edge point to initiate the tracing can be achieved in several ways. If the scanner position is known for point p, it is mapped to a pixel on the rendered cube. From this pixel, the silhouette edge can be reached by shooting a ray in any direction. If the scanner position is unknown, we randomly sample pixels on the cube and search for a silhouette edge in random directions. If there is more than one visible opening to the outside from p, more than one silhouette can be found. We select the silhouette with the longest traced path as the visibility silhouette. Four to five such random points are usually sufficient for finding the major silhouettes which define the maximal visibility cones. During its pass on the cube, the tracing process stores the sequence of points it touches on the silhouette according to their splat colors. This sequence creates a closed 3D polyline. We create the boundary surface of the generalized cone C as a closed triangle fan C = {f 1 , . . . , f k }, with p as the apex and triangles f i extending between every two adjacent points of this polyline and p. The definition of a generalized cone has infinite boundary rays, hence, ideally, the triangle fans should be extended to infinity. In practice, we use finite triangle fans to represent the cones since that is where the cones touch the surface and beyond it they are irrelevant for the purpose of calculating the DTE distances. The polyline produced by silhouette tracing can often be jagged, containing short sequences of repeating edges or even local self intersections. These aberrations can be attributed to the discrete nature of the point set and its rendering and may hinder the following steps. Therefore, after the silhouette polyline is created, we use a simple smoothing step to ensure that the cone conforms better to the shape of the point set. We discard repeated points as well as high curvature points and repair self-intersections by reordering points. Furthermore, due to discretization, the obtained visibility cone may deviate from the ideal one which would have been produced with a continuous surface. These inaccuracies can cause a wrong indicator both inside and outside the shape: small penetration of cones into the shape, and outside regions which remain outside the cones. Still, the robust blending of the DTE distances alleviates such inaccuracies, as we will explain in the next section.\n        ACM Transactions on Graphics, Vol. 29, No. 6, Article 150, Publication date: December 2010.\n        Cone Carving for Surface Reconstruction\n        ?\n        150:5\n        \n          \n          Figure 6: Rendering the point set as circular splats on a cube around a center point reveals the visibility direction. The silhouette of the outside region is traced to define the visibility cone.\n        \n        (a) (b) (c) (d)\n        \n          Figure 7: Determining the splat size. (a) Every point is rendered as a single pixel. (b),(c) Scanning in concentric squares until 3 widely spread pixels are seen. (d) The splat is sized according to the distance to the third neighbor.\n        \n        ACM Transactions on Graphics, Vol. 29, No. 6, Article 150, Publication date: December 2010.\n        150:6\n        ?\n        S. Shalom et al.\n      \n      \n        5 3D reconstruction by cone carving\n        The surface constructed by cone carving is the result of an RBF fitting which requires as an input a set of off-surface points, each coupled with a signed distance value. The distance value is positive for points inside the shape and negative for points outside, and its magnitude can be perceived as the shortest distance from the offsurface point to the surface to be reconstructed. Using these offsurface points, we compute a set of radial basis functions whose combination produces an implicit scalar function in 3D. The zero iso-surface of this implicit function interpolates the shape. The final surface mesh is produced by a triangulation of the iso-surface using a variant of the marching tetrahedra algorithm [Carr et al. 2001]. Similar to the 2D case, the distance field to be sampled combines the DP and DTE distances. The DTE distances are created by using an octree to sample cone-based off-surface points as described in Section 3. However, in contrast to the 2D case, the collection of 3D visibility cones do not provided a guaranteed outside indicator. In other words, a point q inside the union of the visibility cones is not guaranteed to be outside the underlying shape. This is due to the approximative nature of the 3D visibility cones. Hence the computation of the DTE distance needs to be more elaborate. Recall that DTE is intended to represent the distance from a point in the ambient space to the surface of the underlying shape. Without knowing the actual shape, we approximate its surface by the lower envelop E, which is the boundary of the union of the 3D visibility cones. Due to the imprecisions of the 3D visibility cones, the approximation quality of the lower envelope is degraded. One solution would be to blend the cones to represent a more robust lower envelope E. However, the geometric complexity of the lower envelope in 3D prohibits constructing it explicitly. Moreover, we are mainly interested in computing the DTE distances and not E itself. Hence instead of blending the visibility cones to create a surface, we resort to robustly blending the distances to the cones to define DTE .  DTC : Distance-to-Cone A 3D visibility cone C divides the ambient space into two regions: the region inside or on C and the region outside C. Let s be a point in the ambient space, we define the scalar function DTC (s, C), where DTC stands for Distance-ToCone, to be the signed distance from s to the cone boundary:\n        ? min i d(s, f i ), if s is inside or on C, DTC (s, C) = min i d(s, f i ), if s is outside C,\n        where d(s, f i ) is the Euclidean distance from s to a boundary (triangle) face f i of the visibility cone. The DTC can be obtained by iteratively searching over all the triangle faces of the cone. Whether\n        \n          \n          Figure 8: Examples of three visibility cones of a points set (left). The distance DTC (s, C i ) from a point s (yellow) to the cone C i is\n        \n        the distance between s and its projection on the cone (right, green points). Note that although the distance values may be similar, they can be along totally different directions from s.\n        s is inside or outside the cone is determined by observing the orientation of the closest face and by using an appropriate normal computed at the apex of the cone [Baerentzen and Aanaes 2005].  Representative cone We are interested in the DTE distance DTE (s) yet we do not explicitly construct the lower envelope; what we have been able to compute are the DTC distances to all the visibility cones. To make a connection between the two distances, we note that there is a simple relationship between them:\n        DTE (s) ? min DTC (s, C j ), (1) j\n        where the C j ?s are all the visibility cones. To prove this result, we note that DTE (s) is the shortest distance from s to some point v on the lower envelope. By definition, v must lie on or outside each visibility cone. Let C j be any visibility cone and we consider two possible cases: 1. s lies inside or on C j : Then DTC (s, C j ) ? 0 and DTE (s) ? 0. Since v is on or outside C j , we must have  | DTC (s, C j )| ? ||s ? v|| = | DTE (s)|. Hence, DTE (s) ? DTC (s, C j ). 2. s lies outside C j : Then DTC (s, C j ) > 0. If s lies on the lower envelope or inside the union of all visibility cones, then DTE (s) ? 0. It follows that DTE (s) ? DTC (s, C j ). In the final scenario, we have s lying outside the union of visibility cones. Let u be on the boundary of C j such that ||s ? u|| = DTC (s, C j ). Then clearly u is either on the lower envelope or it lies inside the union of cones. Therefore, we must have DTE (s) ? ||s ? u|| = DTC (s, C j ). Since DTE (s) ? DTC (s, C j ) for all C j , we get equation (1). Hence, we see that the best approximation of DTE (s) using the set of all DTC distances is given by the DTC distance from point s to the representative cone C j ? , and we define: ? DTE (s) = DTC (s, C j ? ), j = arg min DTC (s, C j ) j To compute distance to the representative cone C j ? , we can find the projection P roj(s, C j ? ) of s onto the surface of C j ? (see Figure 8 ). Note that such a projection can reside on the interior of a cone face, in which case it would be a perpendicular projection onto that face. In other cases, the projection may be along an edge of the cone or may be the apex of the cone.\n        ACM Transactions on Graphics, Vol. 29, No. 6, Article 150, Publication date: December 2010.\n        Cone Carving for Surface Reconstruction\n        ?\n        150:7\n        \n          \n          \n          Figure 9: Example of distance blending: the yellow point has several significant clusters of distances to various areas (see histogram on the right). DTE (s) is chosen as the median of the minimal sig-\n        \n        nificant cluster (red). The cluster is found using a sliding kernel window on the histogram starting from the lowest value. Note that this selected cluster actually lies on a missing face (left) exemplifying the strength of cone carving to fill in missing pieces based on visibility information.\n        In practice, we can not rely on any single representative cone since such a cone may be erroneous due to the discrete way the 3D visibility cones were constructed. Instead, we blend the distances to several cones robustly to provide a better estimator for the ideal DTE distance (free from erroneous visibility cones), which in turn approximates well the distance to the underlying shape.  Cone distances blending There are two main reasons to combine several values of cone distances: first, to remove outliers, and second, to create a larger support for a specific distance measure. A na?ve approach to blend cone distances would be to create the histogram of distances from a point s to all cones, use a blending kernel function, and take the minimal significant value according to equation (1). A significant value would be a value whose support (i.e. frequency) is larger than a threshold. Nevertheless, the same distance value from s may originate from cones in a totally different regions of the shape (see Figure 8 ), only one of which gives the correct minimum. Therefore, we employ a two-stage approach by using the histogram to search for the minimum, while blending 3D positions instead of distances using clustering (see Figure 9 ). Starting from the minimal DTC value d 0 at s, we use a sliding window of size 2r. For each value d, we examine all the cone projections v from s whose distance to point s falls inside the bin [d, d + 2r]. Denote the set of cones corresponding to these projected points by V d (s). Since these points can come from various regions in 3D space, we cluster them using a simple hierarchical scheme [Everitt et al. 2001] in 3D space with a threshold of r. We use the cones of the first cluster found that contains more than k points to define DTE (s). Denote these cones by L(s) ? V d (s), we take the median of the distances from s to all cones in L(s) as DTE (s): DTE (s) = median{ DTC (s, C)|C ? L(s)}. To adequately filter out outliers but still blend several cones we used the values k = 5, r = 0.8 ? d avg for all examples in this paper, where d avg is the average for all points in the data-set of the distance to their nearest neighbor.\n      \n      \n        6 Results\n        We have tested our algorithm on several challenging examples in terms of missing parts and self occlusions, where the tested data were either scanned, taken from the AIM@SHAPE shape repository or artificial. The point clouds used typically contain 5,00014,000 points. The algorithm is implemented in C++ and the GPU part using GLSL and CUDA. We used Intel Core2 Quad T9550 with an Nvidia GeForce 275 GTX video card. Table 1 shows the timing results for the models shown in the paper. In Figures 11 we show several examples of our results. We first show the point set using splats to give a sense of the overall shape and data. Note that these objects present a challenge to previous reconstruction algorithms, since they contain parts that are inaccessible from the outside for sampling. We compare our results to three other algorithms: Radial Basis functions [Carr et al. 2001], Partition of unity [Ohtake et al. 2003], and Poisson reconstruction [Kazhdan et al. 2006]. All these methods encounter problems with misinterpreting the outside as inside and thus connecting close parts to form wrong topology. Using our global visibility prior these ambiguities are solved, and a correct topological interpretation is given to the shape.\n        \n          \n            \n              \n                \n                   Model\n                   # Points\n                   Cones\n                   DTE\n                   Total\n                \n              \n              \n                \n                  \n                  \n                   time\n                   time\n                   time\n                \n                \n                   Open L shape\n                   5,124\n                   1:52 m\n                   0:31 m\n                   2:30 m\n                \n                \n                   Inukshuk\n                   11,808\n                   5:10 m\n                   1:11 m\n                   6:35 m\n                \n                \n                   12-point star\n                   11,710\n                   5:02 m\n                   0:30 m\n                   5:57 m\n                \n                \n                   Mannequin\n                   12,220\n                   4:55 m\n                   1:50 m\n                   7:04 m\n                \n                \n                   Hand\n                   13,162\n                   5:19 m\n                   1:23 m\n                   6:58 m\n                \n                \n                   elephant\n                   14,295\n                   6:30 m\n                   2:05 m\n                   9:05 m\n                \n              \n            \n          \n          Model # Points Cones DTE Total time time time Open L shape 5,124 1:52 m 0:31 m 2:30 m Inukshuk 11,808 5:10 m 1:11 m 6:35 m 12-point star 11,710 5:02 m 0:30 m 5:57 m Mannequin 12,220 4:55 m 1:50 m 7:04 m Hand 13,162 5:19 m 1:23 m 6:58 m elephant 14,295 6:30 m 2:05 m 9:05 m\n          Table 1: Running times for the different results models in minutes. The total time includes all stages of the algorithm, including the final points merge and surfacing.\n        \n        \n          6.1 Noise Handling\n          Due to the blending characteristics in all stages of cone carving, the assumptions at the base of using visibility cones remain robust to a certain degree even when noise is present. However, unlike Poisson reconstruction, cone carving is not designed to smooth or filter out noise. In a sense, the effort to filter out noise is orthogonal to the problem of dealing with missing data, and any point-based noise filtering algorithm could be used prior to reconstruction using cone carving. Figure 10 presents some reconstruction results under noise and compares the behavior of cone carving based RBF with that of Poisson reconstruction. Note that although the output surface from the former is indeed noisy, the topology of the object is still correct (in contrast to Poisson) and remains correct even under more severe level of noise.\n          \n            \n          \n          (a) (b) (c)\n          \n            Figure 10: (a) Poisson reconstruction of a point cloud with 10% random noise on 10% of the points is smooth but contains topological errors. (b) Cone carving for the same point cloud. (c) Result of cone carving on a point cloud with 10% random noise on all points still maintains the correct topology.\n          \n        \n        \n          6.2 Limitations\n          The main disadvantage of cone-carving is that the current naive implementation is quadratic, and therefore slow. To find the cone boundary for each point sample, splatting of all other points in the dataset is used. This means it is impractical for the larger data sets  currently being produced. Advanced spatial search structures as well as random sampling on larger datasets can alleviate this problem. However, converting it to linear time (e.g. using fixed size neighborhoods) will still be difficult as the main point of cone carving is utilizing additional global information: the visibility of the scanned data. In general, quality is more important than speed in surface reconstruction, as it is part of a long process of data collection, which is rarely interactive. The success of cone carving also relies on some tuning of parameters. There are three main stages that were defined by parame- ters: the cone creation stage, the cone distance blending stage and choosing between DTE and DP. In the cone creation stage we determine the splat size of each point based on N near . This number defines the k-nearest neighbor search for pixels (Section 4). Figure 12 shows an example of the cube rendering for one point for varying values of N near . It is clear that a small value for N near creates holes in the surface, but a large value is time consuming and redundant creating large overlaps between splats. In practice, we found N near = 3 strikes the best balance, correctly interpreting the shape for all points in all data-sets. At the cone distance blending stage (Section 5), two parameters govern the blending: r, the blending kernel neighborhood size, and k the threshold defining the support for a significant cluster size. These can be seen as defining the size and cardinality of the cluster that defines DTE . Figure 13 illustrates the effect of changing these values on the reconstruction. For choosing between the DTE and DP distance measures we use a parameter ?. Figure 14 shows how changing ? can effect the reconstruction. In summary, there is a small set of parameters control cone carving results. However, we have shown that in all but one example in this paper (for the Mannequin figure we used k = 2 as it is more sparsely sampled) the same set of parameter values was used. These are governed by one characteristic value of the point set, namely, what we defined as d avg .\n          ACM Transactions on Graphics, Vol. 29, No. 6, Article 150, Publication date: December 2010.\n          150:8\n          ?\n          S. Shalom et al.\n          \n            \n            Figure 11: Reconstruction results. The output of the cone carving algorithm is compared to reconstruction results of the dipole RBF reconstruction, Multi-level Partition of Unity, and Poisson reconstruction. Cone carving interprets the topology and approximates the geometry of the shape better than existing techniques.\n          \n          ACM Transactions on Graphics, Vol. 29, No. 6, Article 150, Publication date: December 2010.\n          Cone Carving for Surface Reconstruction\n          ?\n          150:9\n          \n            \n            Figure 12: Effects of varying the parameter N near on point splatting: too small a value (1) creates holes, while too large a value (6) results in redundant overlapping splats. We use N near = 3\n          \n        \n      \n      \n        7 Conclusion and future work\n        We have presented cone carving, enhancing surface reconstruction techniques from scanned point clouds by combining local positional and global visibility information. Cone carving utilizes the visibility of the existing points to infer new points that complete the missing parts of the captured model. Unlike previous attempts to exploit visibility to assist surface reconstruction, here the visibility is taken from an inside-out perspective, creating visibility cones from points on the surface outward. These cones are effective exactly where they are needed the most: away from existing points, where data is missing. We have demonstrated the effectiveness of cone carving in several reconstructions of both synthetic input and raw scans from a commercial 3D scanner. With speed as the major limitation, we plan to investigate a few options to accelerate cone carving: ? Creating generalized cones only for a subset of points, but utilizing the entire point-set for tracing their silhouettes. ? Creating cones and off-surface points only near missing parts rather than across the whole shape and focus only on the parts where they make a positive difference. ? Using a pre-computed spatial data structures to accelerate various geometric computations such as the computation of DTC. ? Fully exploiting the highly parallel nature of the algorithm using a GPU implementation.\n        \n          \n          \n          Figure 13: The size and cardinality of the cluster defining DTE have\n        \n        opposite effects. Too large r can insert outliers to the cluster while too small r does not blend enough information and may determine a wrong distance. Large k can reject the correct distance cluster with too few counts, while small k will use outlier cones clusters. We have used k = 5, r = 0.8 ? d avg in all but one of the examples in the paper.\n        Visibility cones may also prove to be useful for problems other than surface reconstruction. For instance, the shape and distribution of the cones can assist in line and point feature detection. Another interesting research direction would be to study the potential of the visibility cones to assist in planning the positioning of the scanning device in order to improve its coverage.\n      \n      \n        References\n        \n          A LEXA , M., B EHR , J., C OHEN -O R , D., F LEISHMAN , S., L EVIN , D., AND S ILVA , C. T. 2003. Computing and rendering point set surfaces. IEEE Trans. Vis. & Comp. Graphics 9, 1, 3?15.\n          A MENTA , N., AND B ERN , M. W. 1998. Surface reconstruction by Voronoi filtering. In Proc. of Symp. on Comp. Geom., 39?48.\n          A MENTA , N., C HOI , S., AND K OLLURI , R. 2001. The power crust, unions of balls, and the medial axis transform. Computational Geometry: Theory and Applications 19, 2-3, 127?153.\n          A RANZ . 2009. FastSCAN, Cobra and Scorpion, Handheld Laser Scanner User Manual. Aranz Scanning Ltd, http://www.fastscan3d.com/.\n          B AERENTZEN , J. A., AND A ANAES , H. 2005. Signed distance computation using the angle weighted pseudonormal. IEEE Transactions on Visualization and Computer Graphics 11, 3, 243?253.\n          C ARR , J. C., B EATSON , R. K., C HERRIE , J. B., M ITCHELL , T. J., F RIGHT , W. R., M C C ALLUM , B. C., AND E VANS , T. R. 2001. Reconstruction and representation of 3D objects with radial basis functions. In Proc. of ACM SIGGRAPH, 67?76.\n          C AZALS , F., AND G IESEN , J. 2006. Delaunay triangulation based surface reconstruction. In Effective Computational Geometry for Curves and Surfaces, J.-D. Boissonnat and M. Teillaud, Eds. Springer, 231?276.\n        \n        ACM Transactions on Graphics, Vol. 29, No. 6, Article 150, Publication date: December 2010.\n        150:10\n        ?\n        S. Shalom et al.\n        \n          \n          Figure 14: Varying values of ?, for choosing between DTE and DP distances. When ? = 0, DTE is used whenever it is larger than DP. This creates correct topology but can result in some noise at well sampled parts, since in those areas and close to the surface DP distance is more reliable. When ? is large (2 ? d avg ), the DTE distance is not utilized, and wrong topology based on DP distances returns. The value used throughout the paper is ? = d avg .\n        \n        C OHEN , M. F., AND G REENBERG , D. P. 1985. The hemi-cube: a radiosity solution for complex environments. In Proc. of ACM SIGGRAPH, 31?40. C URLESS , B., AND L EVOY , M. 1996. A volumetric method for building complex models from range images. In Proc. of ACM SIGGRAPH, 303?312. D AVIS , J., M ARSCHNER , S. R., G ARR , M., , AND L EVOY , M. 2002. Filling holes in complex surfaces using volumetric diffusion. In Proceedings of the first International Symposium on 3D Data Processing Visualization and Transmission, 354?369. D EY , T., AND G OSWAMI , S. 2003. Tight cocone: A water tight surface reconstructor. In Proc. of ACM Sympos. on Solid Modeling & Appl., 127?134. D EY , T. K., L I , K., R AMOS , E. A., AND W ENGER , R. 2009. Isotopic reconstruction of surfaces with boundaries. Computer Graphics Forum, special issue SGP ?09: Proceedings of the Symposium on Geometry Processing 28, 5, 1371?1382. E DELSBRUNNER , H., AND M UCKE  ? , E. P. 1994. Threedimensional alpha shapes. ACM Trans. on Graphics 13, 1, 43? 72. E L -S ANA , J., AND V ARSHNEY , A. 1998. Topology simplification for polygonal virtual environments. IEEE Trans. Vis. & Comp. Graphics 4, 2, 133?144. E VERITT , B. S., L ANDAU , S., AND L EESE , M. 2001. Cluster Analysis. Oxford University Press. G AL , R., S HAMIR , A., H ASSNER , T., P AULY , M., AND C OHEN O R , D. 2007. Surface reconstruction using local shape priors. In Proc. Eurographics Symp. on Geometry Processing, 253?262. G IESEN , J., C AZALS , F., P AULY , M., AND Z OMORODIAN , A. 2006. The conformal alpha shape filtration. The Visual Computer 22, 8, 531?540. H OPPE , H., D E R OSE , T., D UCHAMP , T., M C D ONALD , J., AND S TUETZLE , W. 1992. Surface reconstruction from unorganized points. In Proc. of ACM SIGGRAPH, 71?78. H UANG , H., L I , D., Z HANG , H., A SCHER , U., AND C OHEN -O R , D. 2009. Consolidation of unorganized point clouds for surface  reconstruction. ACM Trans. on Graphics (Proc. of SIGGRAPH Asia) 28, 5, Article 176. K AZHDAN , M., B OLITHO , M., AND H OPPE , H. 2006. Poisson surface reconstruction. In Proc. Eurographics Symp. on Geometry Processing, 61?70. K UTULAKOS , K. N., AND S EITZ , S. M. 2000. A theory of shape by space carving. Proc. Int. J. Comp. Vis. 38, 3, 199?218. Marr Prize Special Issue. L AURENTINI , A. 1994. The visual hull concept for silhouettebased image understanding. IEEE Trans. Pat. Ana. & Mach. Int. 16, 2, 150?162. M ONTENEGRO , A. A., C ARVALHO , P. C. P., G ATTASS , M., AND V ELHO , L. C. P. R. 2004. Adaptive space carving. In Proc. of 3D Data Processing, Visualization, and Transmission, 199?206. N EHAB , D., R USINKIEWICZ , S., D AVIS , J., AND R AMAMOOR THI , R. 2005. Efficiently combining positions and normals for precise 3D geometry. ACM Trans. on Graphics 24, 3, 536?543. N ITSCHKE , C., N AKAZAWA , A., AND T AKEMURA , H. 2007. Real-time space carving using graphics hardware. IEICE Trans. Inf. Syst. E90-D, 8, 1175?1184. O HTAKE , Y., B ELYAEV , A., A LEXA , M., T URK , G., AND S EI DEL , H.-P. 2003. Multi-level partition of unity implicits. ACM Trans. on Graphics 22, 3, 463?470. P AULY , M., M ITRA , N. J., G IESEN , J., G ROSS , M., AND G UIBAS , L. J. 2005. Example-based 3D scan completion. In Proc. Eurographics Symp. on Geometry Processing, 23?32. P FISTER , H., Z WICKER , M., VAN B AAR , J., AND G ROSS , M. 2000. Surfels: surface elements as rendering primitives. In Proc. of ACM SIGGRAPH, 335?342. S CHNABEL , R., D EGENER , P., AND K LEIN , R. 2009. Completion and reconstruction with primitive shapes. Computer Graphics Forum (Proc. of Eurographics) 28, 2, 503?512. S HARF , A., A LEXA , M., AND C OHEN -O R , D. 2004. Contextbased surface completion. ACM Trans. on Graphics 23, 3, 878? 887. S ORKINE , O., AND C OHEN -O R , D. 2004. Least-squares meshes. In Proc. IEEE Conf. on Shape Modeling and Applications, 191? 199. T AGLIASACCHI , A., Z HANG , H., AND C OHEN -O R , D. 2009. Curve skeleton extraction from incomplete point cloud. ACM Trans. on Graphics 28, 3, Article 71, 9 pages. T URK , G., AND L EVOY , M. 1994. Zippered polygon meshes from range images. In Proc. of ACM SIGGRAPH, 311?318. W ESTOVER , L. 1990. Footprint evaluation for volume rendering. In Proc. of ACM SIGGRAPH, 367?376.\n        ACM Transactions on Graphics, Vol. 29, No. 6, Article 150, Publication date: December 2010.\n      \n    \n  ",
  "resources" : [ ]
}