{
  "uri" : "sig2008a-a108-tan_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2008a/a108-tan_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Single Image Tree Modeling",
    "published" : "2008",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Ping-Tan",
      "name" : "Ping",
      "surname" : "Tan"
    }, {
      "uri" : "http://drinventor/Tian-Fang",
      "name" : "Tian",
      "surname" : "Fang"
    }, {
      "uri" : "http://drinventor/Jianxiong-Xiao",
      "name" : "Jianxiong",
      "surname" : "Xiao"
    }, {
      "uri" : "http://drinventor/Peng-Zhao",
      "name" : "Peng",
      "surname" : "Zhao"
    }, {
      "uri" : "http://drinventor/Long-Quan",
      "name" : "Long",
      "surname" : "Quan"
    } ]
  },
  "bagOfWords" : [ "-lrb-", "-rrb-", "-lrb-", "-rrb-", "figure", "single", "image", "tree", "modeling", "-lrb-", "-rrb-", "single", "input", "image", "tree", "download", "from", "www.flickr.com", "-lrb-", "-rrb-", "stroke", "draw", "user", "only", "two", "stroke", "example", "-lrb-", "-rrb-", "automatic", "synthesis", "tree", "branch", "-lrb-", "-rrb-", "complete", "tree", "model", "render", "same", "viewpoint", "input", "image", "paper", "we", "introduce", "simple", "sketch", "method", "generate", "realistic", "3d", "tree", "model", "from", "single", "image", "user", "draw", "least", "two", "stroke", "tree", "image", "first", "crown", "stroke", "around", "tree", "crown", "mark", "up", "leaf", "region", "second", "branch", "stroke", "from", "tree", "root", "mark", "up", "main", "trunk", "possibly", "few", "other", "branch", "stroke", "refinement", "method", "automatically", "generate", "3d", "tree", "model", "include", "branch", "leave", "branch", "synthesize", "growth", "engine", "from", "small", "library", "elementary", "subtree", "pre-defined", "build", "fly", "from", "recover", "visible", "branch", "leaf", "generate", "from", "region", "bound", "first", "crown", "stroke", "complete", "tree", "many", "method", "-lsb-", "Weber", "Penn", "1995", "Prusinkiewicz", "et", "al.", "2001", "RecheMartinez", "et", "al.", "2004", "Quan", "et", "al.", "2006", "Tan", "et", "al.", "2007", "Neubert", "et", "al.", "2007", "-rsb-", "can", "achieve", "highly", "realistic", "tree", "model", "yet", "all", "method", "need", "significant", "amount", "effort", "produce", "good", "result", "either", "sense", "tuning", "tree", "grow", "parameter", "sense", "image", "processing", "3d", "reconstruction", "overcome", "current", "difficulty", "we", "propose", "method", "drastically", "simplify", "modeling", "process", "we", "use", "single", "image", "model", "tree", "from", "single", "image", "few", "user", "draw", "copyright", "component", "work", "own", "other", "than", "ACM", "must", "honor", "abstract", "credit", "permit", "copy", "otherwise", "republish", "post", "server", "redistribute", "list", "use", "any", "component", "work", "other", "work", "require", "prior", "specific", "permission", "and/or", "fee", "permission", "may", "request", "from", "Publications", "Dept.", "Penn", "Plaza", "Suite", "701", "New", "York", "NY", "10121-0701", "fax", "+1", "-lrb-212-rrb-Â 869-0481", "permissions@acm.org", "could", "part", "cost-effective", "solution", "build", "realistic-looking", "environment", "movie", "post-production", "architectural", "design", "game", "web", "application", "-lsb-", "Reche-Martinez", "et", "al.", "2004", "-rsb-", "recover", "opacity", "color", "each", "cell", "volume", "contain", "tree", "-lsb-", "Neubert", "et", "al.", "2007", "-rsb-", "use", "particle", "flow", "extract", "branch", "structure", "from", "recover", "tree", "volume", "typically", "image", "should", "span", "large", "range", "view", "angle", "correctly", "recover", "3d", "information", "furthermore", "tree", "should", "first", "segmented", "out", "from", "background", "all", "image", "instead", "rely", "rule", "image", "tree", "model", "can", "also", "generate", "accord", "3d", "scanner", "datum", "2d", "user", "sketch", "-lsb-", "Okabe", "et", "al.", "2005", "-rsb-", "generate", "tree", "model", "from", "branch", "skeleton", "sketch", "user", "branch", "stroke", "draw", "from", "tree", "root", "mark", "main", "trunk", "essentially", "nonparametric", "tree", "grow", "system", "we", "do", "intend", "recover", "3d", "structure", "directly", "from", "image", "satisfy", "result", "user", "have", "option", "add", "delete", "stroke", "correction", "appearance", "model", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "foreground", "background", "we", "compute", "graph-cut", "base", "extraction", "detect", "leaf", "pixel", "visible", "branch", "trace", "minimize", "user", "intervention", "system", "automatically", "trace", "along", "branch", "stroke", "detect", "nearby", "visible", "branch", "image", "user", "satisfy", "result", "he", "can", "add", "more", "stroke", "correct", "delete", "wrong", "branch", "basic", "idea", "greedily", "adjust", "branch", "orientation", "so", "distance", "among", "they", "large", "possible", "type", "ii", "replacement", "new", "branch", "can", "grow", "along", "support", "branch", "two", "parameter", "determine", "operation", "attractor", "control", "tree", "growth", "require", "each", "attractor", "should", "close", "result", "tree", "because", "unbalanced", "tree", "can", "minimize", "cost", "2d", "-lrb-", "-rrb-", "well", "without", "any", "back", "branch", "we", "introduce", "some", "extrapolate", "3d", "point", "balance", "tree", "growth", "here", "distance", "between", "3d", "point", "tree", "minimize", "cost", "define", "3d", "-lrb-", "-rrb-", "dist", "-lrb-", "-rrb-" ],
  "content" : "(a) (b) Figure 1 : Single image tree modeling. (a) Single input image of a tree downloaded from www.flickr.com. (b) Strokes drawn by the user, only two strokes for this example. (c) The automatic synthesis of the tree branches. (d) The complete tree model rendered at the same viewpoint as the input image. In this paper, we introduce a simple sketching method to generate a realistic 3D tree model from a single image. The user draws at least two strokes in the tree image: the first crown stroke around the tree crown to mark up the leaf region, the second branch stroke from the tree root to mark up the main trunk, and possibly few other branch strokes for refinement. The method automatically generates a 3D tree model including branches and leaves. Branches are synthesized by a growth engine from a small library of elementary subtrees that are pre-defined or built on the fly from the recovered visible branches. Leaves are generated from the region bounded by the first crown stroke to complete the tree. Many methods [Weber and Penn 1995; Prusinkiewicz et al. 2001; RecheMartinez et al. 2004; Quan et al. 2006; Tan et al. 2007; Neubert et al. 2007] can achieve highly realistic tree models. Yet all these methods need significant amount of efforts to produce good results, either in the sense of tuning tree growing parameters or in the sense of image processing and 3D reconstruction. To overcome the current difficulties, we propose a method that drastically simplifies the modeling process. We use a single image to model a tree. From this single image and few user drawn Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers, to redistribute to lists, or to use any component of this work in other works requires prior specific permission and/or a fee. Permissions may be requested from Publications Dept. , 2 Penn Plaza, Suite 701, New York, NY 10121-0701, fax +1 (212) 869-0481, or permissions@acm.org . It could be part of a cost-effective solution to build realistic-looking environments for movie post-production, architectural designs, games, and web applications. [Reche-Martinez et al. 2004] recovered the opacity and color of each cell of a volume containing the tree. [Neubert et al. 2007] used particle flow to extract branch structure from the recovered tree volume. Typically, these images should span a large range of view angles to correctly recover 3D information. Furthermore, the tree should be first segmented out from background in all images. Instead of relying on rules or images, tree models can also be generated according to 3D scanner data or 2D user sketches. [Okabe et al. 2005] generated tree models from a branch skeleton sketched by user. Then a branch stroke is drawn from the tree root to mark the main trunk. This is essentially a nonparametric tree growing system. We do not intend to recover 3D structure directly from image. If not satisfied with this result, the user has the option of adding or deleting strokes for correction. With these appearance models G(I x , ? F ), G(I x , ? B ) for the foreground and background, we compute a graph-cut based extraction to detect leaf pixels. Visible branch tracing To minimize the user intervention, the system automatically traces along branch strokes to detect nearby visible branches in the image. If the user is not satisfied with this result, he can add more strokes to correct it or delete wrong branches. The basic idea is to greedily adjust branches? orientation so that distance among them are as large as possible. In type II replacement, new branches can grow along the ?supporting branch?. There are two parameters to be determined in this operation. These attractors control the tree growth by requiring that each attractor should be close to the resulting tree T . This is because such an unbalanced tree can minimize the cost E 2D (T ) well without any back branches. We introduce some extrapolated 3D points to balance the tree growth. Here the distance between these 3D points and the tree is to be minimized and the cost is defined as E 3D (T ) = i dist(d i , T ).",
  "resources" : [ ]
}