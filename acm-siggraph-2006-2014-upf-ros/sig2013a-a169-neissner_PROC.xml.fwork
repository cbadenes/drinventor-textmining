{
  "uri" : "sig2013a-a169-neissner_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2013a/a169-neissner_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Real-time 3D Reconstruction at Scale using Voxel Hashing",
    "published" : null,
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ ]
  },
  "bagOfWords" : [ "picture/image", "cr", "category", "i.", "3.3", "-lsb-", "Computer", "Graphics", "-rsb-", "generation?digitizing", "scan", "keyword", "real-time", "reconstruction", "scalable", "datum", "structure", "GPU", "since", "device", "output", "live", "noisy", "depth", "map", "particular", "focus", "recent", "work", "online", "surface", "reconstruction", "use", "consumer", "depth", "camera", "however", "have", "particular", "trade-off", "term", "reconstruction", "speed", "scale", "quality", "high-quality", "online", "scanning", "small", "object", "have", "be", "demonstrate", "-lsb-", "Weise", "et", "al.", "2009", "-rsb-", "largerscale", "reconstruction", "clearly", "trade", "quality", "and/or", "speed", "-lsb-", "Henry", "et", "al.", "2012", "St?ckler", "Behnke", "2012", "-rsb-", "however", "rely", "memory", "inefficient", "regular", "voxel", "grid", "turn", "restrict", "scale", "surface", "datum", "only", "store", "densely", "cell", "where", "measurement", "observe", "while", "type", "efficient", "spatial", "hash", "technique", "have", "be", "propose", "variety", "render", "collision", "detection", "task", "-lsb-", "Teschner", "et", "al.", "2003", "Lefebvre", "Hoppe", "2006", "Bastos", "Celes", "2008", "Alcantara", "et", "al.", "2009", "Pan", "Manocha", "2011", "Garc?a", "et", "al.", "2011", "-rsb-", "we", "describe", "use", "datum", "structure", "surface", "reconstruction", "where", "underlie", "datum", "need", "continuously", "update", "over", "three", "decade", "research", "3d", "reconstruction", "typically", "method", "first", "register", "align", "sequential", "depth", "map", "use", "variant", "Iterative", "Closest", "point", "-lrb-", "icp", "-rrb-", "algorithm", "-lsb-", "besl", "McKay", "1992", "Chen", "Medioni", "1992", "-rsb-", "method", "handle", "some", "denoising", "local", "averaging", "point", "fragile", "presence", "outlier", "area", "high", "curvature", "point-based", "method", "perform", "reconstruction", "merge", "overlap", "point", "avoid", "infer", "connectivity", "give", "output", "from", "most", "depth", "sensor", "3d", "point", "sample", "natural", "reconstruction", "method", "work", "directly", "datum", "example", "include", "in-hand", "scanning", "system", "-lsb-", "Rusinkiewicz", "et", "al.", "2002", "Weise", "et", "al.", "2009", "-rsb-", "which", "support", "reconstruction", "only", "single", "small", "object", "small", "scale", "high-quality", "-lsb-", "Weise", "et", "al.", "2009", "-rsb-", "reconstruction", "have", "be", "achieve", "multilayered", "height-map", "have", "be", "explore", "support", "reconstruction", "more", "complex", "3d", "shape", "balcony", "doorway", "arch", "-lsb-", "Gallup", "et", "al.", "2010", "-rsb-", "alternative", "method", "use", "fully", "volumetric", "datum", "structure", "implicitly", "store", "sample", "continuous", "function", "-lsb-", "Hilton", "et", "al.", "1996", "Curless", "Levoy", "1996", "Wheeler", "et", "al.", "1998", "-rsb-", "method", "depth", "map", "convert", "sign", "distance", "field", "cumulatively", "average", "regular", "voxel", "grid", "while", "demonstrate", "compelling", "scalable", "real-time", "reconstruction", "quality", "on-par", "true", "volumetric", "method", "method", "streaming", "one-way", "lossy", "while", "offer", "simple", "approach", "scalability", "core", "system", "still", "use", "regular", "grid", "structure", "which", "mean", "active", "volume", "must", "remain", "small", "ensure", "fine-quality", "reconstruction", "limit", "regular", "grid", "have", "lead", "researcher", "investigate", "more", "efficient", "volumetric", "datum", "structure", "well", "study", "topic", "volume", "render", "literature", "efficient", "method", "base", "sparse", "voxel", "octree", "-lsb-", "laine", "Karras", "2011", "K?mpe", "et", "al.", "2013", "-rsb-", "simpler", "multi-level", "hierarchy", "adaptive", "datum", "structure", "-lsb-", "Kraus", "Ertl", "2002", "Lefebvre", "et", "al.", "2005", "Bastos", "Celes", "2008", "Reichl", "et", "al.", "2012", "-rsb-", "out-of-core", "streaming", "architecture", "large", "dataset", "-lsb-", "Hadwiger", "et", "al.", "2012", "Crassin", "et", "al.", "2009", "-rsb-", "result", "need", "deep", "tree", "structure", "efficient", "subdivision", "which", "conversely", "impact", "performance", "particular", "gpus", "where", "tree", "traversal", "lead", "thread", "divergence", "render", "literature", "have", "propose", "many", "alternative", "hierarchical", "datum", "structure", "-lsb-", "Lefebvre", "et", "al.", "2005", "Kraus", "Ertl", "2002", "Laine", "Karras", "2011", "K?mpe", "et", "al.", "2013", "Reichl", "et", "al.", "2012", "-rsb-", "-lsb-", "Chen", "et", "al.", "2013", "-rsb-", "hierarchy", "-lsb-", "Lefebvre", "et", "al.", "2005", "-rsb-", "adopt", "3d", "reconstruction", "scale", "optimal", "tree", "depth", "branch", "factor", "be", "empirically", "derive", "-lrb-", "show", "large", "branch", "factor", "shallow", "tree", "optimize", "GPU", "performance", "-rrb-", "Implicit", "Volumetric", "fusion", "curless", "levoy?s", "method", "base", "store", "implicit", "sign", "distance", "field", "-lrb-", "sdf", "-rrb-", "within", "volumetric", "datum", "structure", "reduce", "computational", "cost", "support", "sensor", "motion", "approximate", "sensor", "noise", "Curless", "Levoy", "introduce", "notion", "truncate", "sdf", "-lrb-", "tsdf", "-rrb-", "which", "only", "store", "sign", "distance", "region", "around", "observe", "surface", "only", "tsdf", "value", "store", "voxel", "within", "region", "update", "use", "weighted", "average", "obtain", "estimate", "surface", "removal", "garbage", "collection", "voxel", "block", "without", "require", "costly", "reorganization", "datum", "structure", "Central", "hash", "table", "datum", "structure", "store", "sub-blocks", "contain", "sdf", "call", "voxel", "block", "only", "occupy", "voxel", "allocate", "empty", "space", "store", "each", "voxel", "store", "tsdf", "color", "weight", "require", "byte", "memory", "struct", "Voxel", "-lcb-", "float", "sdf", "uchar", "colorrgb", "-lsb-", "-rsb-", "uchar", "weight", "-rcb-", "exploit", "sparsity", "voxel", "block", "only", "allocate", "around", "reconstructed", "surface", "geometry", "deletion", "delete", "hash", "entry", "similar", "insertion", "however", "large", "fraction", "hash", "table", "empty", "-lrb-", "i.e.", "refer", "any", "voxel", "block", "-rrb-", "color", "also", "update", "accord", "run", "average", "much", "more", "weight", "give", "recent", "color", "sample", "-lrb-", "reduce", "wash", "out", "color", "-rrb-", "fig.", "10", "scene", "capture", "process", "offline", "use", "method", "-lsb-", "Zhou", "Koltun", "2013", "-rsb-", "which", "use", "multi-pass", "global", "optimization", "mitigate", "drift", "compare", "we", "online", "method" ],
  "content" : "Picture/Image\n      CR Categories: I.3.3 [Computer Graphics]: Generation?Digitizing and Scanning  Keywords: real-time reconstruction, scalable, data structure, GPU Since these devices output live but noisy depth maps, a particular focus of recent work is online surface reconstruction using such consumer depth cameras. These however have particular trade-offs in terms of reconstruction speed, scale, and quality. High-quality online scanning of small objects has been demonstrated [Weise et al. 2009], but largerscale reconstructions clearly trade quality and/or speed [Henry et al. 2012; St?ckler and Behnke 2012]. However, these rely on memory inefficient regular voxel grids, in turn restricting scale. Surface data is only stored densely in cells where measurements are observed. While these types of efficient spatial hashing techniques have been proposed for a variety of rendering and collision detection tasks [Teschner et al. 2003; Lefebvre and Hoppe 2006; Bastos and Celes 2008; Alcantara et al. 2009; Pan and Manocha 2011; Garc?a et al. 2011], we describe the use of such data structures for surface reconstruction, where the underlying data needs to be continuously updated. There is over three decades of research on 3D reconstruction. Typically methods first register or align sequential depth maps using variants of the Iterative Closest Point (ICP) algorithm [Besl and McKay 1992; Chen and Medioni 1992]. These methods handle some denoising by local averaging of points, but are fragile in the presence of outliers and areas with high curvature. Point-based methods perform reconstruction by merging overlapping points, and avoid inferring connectivity. Given the output from most depth sensors are 3D point samples, it is natural for reconstruction methods to work directly with such data. Examples include in-hand scanning systems [Rusinkiewicz et al. 2002; Weise et al. 2009], which support reconstruction of only single small objects. At this small scale, high-quality [Weise et al. 2009] reconstructions have been achieved. Multilayered height-maps have been explored to support reconstruction of more complex 3D shapes such as balconies, doorways, and arches [Gallup et al. 2010]. An alternative method is to use a fully volumetric data structure to implicitly store samples of a continuous function [Hilton et al. 1996; Curless and Levoy 1996; Wheeler et al. 1998]. In these methods, depth maps are converted into signed distance fields and cumulatively averaged into a regular voxel grid. While demonstrating compelling scalable real-time reconstructions, the quality is not on-par with true volumetric methods. In these methods the streaming is one-way and lossy. While offering a simple approach for scalability, at their core these systems still use a regular grid structure, which means that the active volume must remain small to ensure fine-quality reconstructions. This limit of regular grids has led researcher to investigate more efficient volumetric data structures. This is a well studied topic in the volume rendering literature, with efficient methods based on sparse voxel octrees [Laine and Karras 2011; K?mpe et al. 2013], simpler multi-level hierarchies and adaptive data structures [Kraus and Ertl 2002; Lefebvre et al. 2005; Bastos and Celes 2008; Reichl et al. 2012] and out-of-core streaming architectures for large datasets [Hadwiger et al. 2012; Crassin et al. 2009]. This results in the need for a deep tree structure for efficient subdivision, which conversely impacts performance, in particular on GPUs where tree traversal leads to thread divergence. The rendering literature has proposed many alternative hierarchical data structures [Lefebvre et al. 2005; Kraus and Ertl 2002; Laine and Karras 2011; K?mpe et al. 2013; Reichl et al. 2012]. In [Chen et al. 2013] an N 3 hierarchy [Lefebvre et al. 2005] was adopted for 3D reconstruction at scale, and the optimal tree depth and branching factor were empirically derived (showing large branching factors and a shallow tree optimizes GPU performance). Implicit Volumetric Fusion Curless and Levoy?s method is based on storing an implicit signed distance field (SDF) within a volumetric data structure. To reduce computational cost, support sensor motion, and approximate sensor noise, Curless and Levoy introduce the notion of a truncated SDF (TSDF) which only stores the signed distance in a region around the observed surface. Only TSDF values stored in voxels within these regions are updated using a weighted average to obtain an estimate of the surface. ? Removal and garbage collection of voxel blocks, without requiring costly reorganization of the data structure. Central is a hash table data structure that stores sub-blocks containing SDFs, called voxel blocks. Only occupied voxels are allocated and empty space is not stored. Each voxel stores a TSDF, color, and weight and requires 8 bytes of memory: struct Voxel { float sdf; uchar colorRGB[3]; uchar weight; }; To exploit sparsity, voxel blocks are only allocated around reconstructed surface geometry. Deletion Deleting a hash entry is similar to insertion. However, a large fraction of the hash table will be empty (i.e., not refer to any voxel blocks). Colors are also updated according to a running average, but with much more weight given to recent color samples (to reduce washing out colors). In Fig. 10 scenes captured and processed offline using the method of [Zhou and Koltun 2013], which uses a multi-pass global optimization to mitigate drift, are compared to our online method.",
  "resources" : [ ]
}