{
  "uri" : "sig2006-p805-irving_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2006/p805-irving_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Efficient Simulation of Large Bodies of Water by Coupling Two and Three Dimensional Techniques",
    "published" : "2006",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Geoffrey-Irving",
      "name" : "Geoffrey",
      "surname" : "Irving"
    }, {
      "uri" : "http://drinventor/Eran-Guendelman",
      "name" : "Eran",
      "surname" : "Guendelman"
    }, {
      "uri" : "http://drinventor/Frank-Losasso",
      "name" : "Frank",
      "surname" : "Losasso"
    }, {
      "uri" : "http://drinventor/Ronald-Fedkiw",
      "name" : "Ronald",
      "surname" : "Fedkiw"
    } ]
  },
  "bagOfWords" : [ "order", "avoid", "limitation", "typically", "associate", "height", "field", "approach", "we", "simulate", "entire", "top", "surface", "water", "volume", "state", "art", "fully", "three-dimensional", "Navier-Stokes", "free", "surface", "solver", "we", "philosophy", "use", "best", "available", "method", "near", "interface", "-lrb-", "three-dimensional", "region", "-rrb-", "coarsen", "mesh", "away", "from", "interface", "efficiency", "scene", "involve", "stormy", "sea", "sudden", "flood", "cascade", "rapid", "provide", "some", "most", "spectacular", "visual", "effect", "shot", "feature", "film", "-lrb-", "e.g.", "day", "after", "tomorrow", "-lsb-", "Iversen", "Sakaguchi", "2004", "-rsb-", "-rrb-", "invariably", "expensive", "whether", "simulated", "via", "computer", "hundred", "thousand", "gallon", "real", "water", "although", "situation", "can", "improve", "significantly", "coarsen", "away", "from", "surface", "octree", "-lsb-", "Losasso", "et", "al.", "2004", "-rsb-", "two", "major", "drawback", "approach", "course", "can", "fix", "coarsen", "octree", "away", "from", "interface", "otherwise", "apply", "standard", "MAC", "solver", "uniform", "cell", "near", "water", "surface", "second", "more", "importantly", "-lrb-", "especially", "since", "we", "propose", "remedy", "-rrb-", "large", "octree", "cell", "can", "represent", "bottom", "topography", "even", "one", "refine", "near", "bottom", "domain", "large", "octree", "cell", "middle", "water", "filter", "out", "horizontal", "detail", "make", "surface", "simulation", "unaware", "any", "rich", "structure", "below", "contrast", "method", "base", "height", "field", "-lrb-", "shallow", "water", "equation", "-lsb-", "Kass", "Miller", "1990", "O?Brien", "Hodgins", "1995", "-rsb-", "-rrb-", "use", "tall", "cell", "detailed", "refinement", "horizontal", "direction", "thus", "capture", "effect", "complex", "bottom", "topography", "rather", "well", "thus", "we", "place", "following", "requirement", "we", "method", "second", "large", "unseen", "region", "liquid", "should", "represent", "efficiently", "possible", "without", "lose", "plausible", "bulk", "motion", "important", "detail", "bottom", "topography", "outside", "surface", "layer", "we", "maintain", "same", "resolution", "horizontal", "direction", "coarsen", "vertical", "direction", "obtain", "tall", "thin", "cell", "reach", "down", "bottom", "domain", "-lrb-", "satisfy", "second", "requirement", "-rrb-", "thus", "method", "improve", "cost", "level", "set", "algorithm", "remove", "need", "store", "check", "grid", "cell", "deep", "inside", "air", "do", "reduce", "time", "spend", "solve", "advection", "pressure", "fluid", "itself", "which", "typically", "most", "computational", "cost", "contrast", "we", "use", "tall", "cell", "water", "which", "greatly", "reduce", "computational", "cost", "outside", "band", "cell", "near", "interface", "however", "we", "do", "require", "method", "advect", "velocity", "field", "solve", "pressure", "order", "make", "velocity", "divergence", "free", "level", "set", "value", "only", "require", "uniform", "cell", "near", "interface", "whereas", "pressure", "velocity", "need", "everywhere", "later", "we", "calculate", "horizontal", "pressure", "derivative", "every", "pressure", "sample", "-lrb-", "figure", "3c", "-rrb-", "thus", "we", "co-locate", "horizontal", "velocity", "they", "-lrb-", "figure", "3e", "-rrb-", "linear", "pressure", "profile", "tall", "cell", "dictate", "all", "uniform", "grid", "vertical", "face", "replace", "face", "center", "cell", "should", "have", "same", "vertical", "velocity", "horizontal", "velocity", "difficulty", "occur", "when", "new", "minimal", "face", "replace", "more", "than", "one", "uniform", "face", "we", "desire", "bottom", "top", "value", "linear", "interpolation", "between", "they", "best", "approximate", "sequence", "some", "subsequence", "-lrb-", "-rrb-", "come", "from", "minimal", "face?s", "linear", "profile", "same", "formula", "can", "compute", "portion", "right-hand", "side", "sum", "constant", "time", "we", "emphasize", "optical", "depth", "require", "give", "problem", "do", "shrink", "under", "refinement", "rather", "true", "length", "scale", "related", "threedimensional", "physics", "we", "wish", "capture", "show", "Figure", "structure", "flux", "profile", "differ", "depend", "which", "component", "be", "advect", "which", "direction", "av", "have", "constant", "sign", "have", "single", "quadratic", "profile", "-lrb-", "up", "linear", "-rrb-", "control", "volume", "face", "do", "before", "make", "velocity", "field", "divergence", "free", "because", "velocity", "interpolation", "do", "preserve", "discrete", "incompressibility", "readily", "generalize", "arbitrary", "configuration", "tall", "cell", "since", "we", "determine", "placement", "structure", "velocity", "pressure", "gradient", "mind", "-lrb-", "figure", "3c", "-rrb-", "we", "divide", "virtual", "uniform", "flux", "use", "same", "fraction", "use", "interpolate", "pressure", "give", "virtual", "uniform", "cell", "order", "ensure", "symmetry", "final", "system", "we", "can", "now", "combine", "discrete", "volume", "weighted", "divergence", "gradient", "operator", "discretize", "Laplacian" ],
  "content" : "In order to avoid the limitations typically associated with a height field approach, we simulate the entire top surface of the water volume with a state of the art, fully three-dimensional Navier-Stokes free surface solver. Our philosophy is to use the best available method near the interface (in the three-dimensional region) and to coarsen the mesh away from the interface for efficiency. Scenes involving stormy seas, sudden floods or cascading rapids provide some of the most spectacular visual effects shots in feature films (e.g. ?The Day After Tomorrow? [Iversen and Sakaguchi 2004]), and are invariably expensive whether they are simulated via computer or hundreds of thousands of gallons of real water. Although the situation can be improved significantly by coarsening away from the surface with an octree as in [Losasso et al. 2004], there are two major drawbacks to this approach. Of course, this can be fixed by coarsening the octree away from the interface, and otherwise applying a standard MAC solver in the uniform cells near the water surface. Second, and more importantly (especially since we propose no remedy), large octree cells cannot represent bottom topography. Even if one refined near the bottom of the domain, the large octree cells in the middle of the water filter out horizontal detail making the surface simulation unaware of any rich structure below. In contrast, methods based on height fields (such as the shallow water equations [Kass and Miller 1990; O?Brien and Hodgins 1995]) use tall cells with detailed refinement in the horizontal directions, thus capturing the effects of complex bottom topography rather well. Thus, we place the following requirements on our method. Second, the large unseen region of the liquid should be represented as efficiently as possible without losing plausible bulk motion and important details such as bottom topography. Outside of this surface layer, we maintain the same resolution in the horizontal directions but coarsen in the vertical direction obtaining tall thin cells that reach down to the bottom of the domain (satisfying the second requirement). Thus, their method improves the cost of the level set algorithm and removes the need to store and check grid cells deep inside the air, but does not reduce the time spent solving for advection and pressure in the fluid itself, which is typically most of the computational cost. In contrast, we use tall cells in the water, which greatly reduces the computational cost outside the band of cells near the interface. However, we do require methods for advecting the velocity field and solving for the pressure in order to make the velocity divergence free. Level set values are only required in uniform cells near the interface, whereas pressure and velocity are needed everywhere. Later, we will calculate horizontal pressure derivatives for every pressure sample ( Figure 3c ), and thus we co-locate horizontal velocities with them ( Figure 3e ). The linear pressure profile in the tall cell dictates that all uniform grid vertical faces replaced by the face at the center of this cell should have the same vertical velocity. For horizontal velocities, the difficulties occur when a new minimal face replaces more than one uniform face. We desire bottom and top values u a and u b such that linear interpolation between them best approximates the sequence. If some subsequence of the u( j)?s come from a minimal face?s linear profile, the same formulas can compute that portion of the right-hand side sum in constant time. We emphasize that the optical depth required for a given problem does not shrink under refinement, rather it is a true length scale related to the threedimensional physics we wish to capture. As shown in Figure 8, the structure of the flux profile differs depending on which component is being advected and in which direction. If u av has constant sign, F u has a single quadratic profile (u up is linear) on the control volume face. This is done before making the velocity field divergence free, because velocity interpolation does not preserve discrete incompressibility. This readily generalizes to arbitrary configurations of tall cells, since we determined the placement and structure of the velocities with pressure gradients in mind ( Figure 3c ,d). We divide the virtual uniform fluxes using the same fractions used to interpolate pressures to the given virtual uniform cell in order to ensure the symmetry of the final system. We can now combine the discrete volume weighted divergence and gradient operators to discretize the Laplacian.",
  "resources" : [ ]
}