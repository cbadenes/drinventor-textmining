{
  "uri" : "sig2011a-a123-bokeloh_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2011a/a123-bokeloh_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Pattern-Aware Shape Deformation Using Sliding Dockers",
    "published" : "2011",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Martin-Bokeloh",
      "name" : "Martin",
      "surname" : "Bokeloh"
    }, {
      "uri" : "http://drinventor/Michael-Wand",
      "name" : "Michael",
      "surname" : "Wand"
    }, {
      "uri" : "http://drinventor/Vladlen-Koltun",
      "name" : "Vladlen",
      "surname" : "Koltun"
    }, {
      "uri" : "http://drinventor/Hans-Peter-Seidel",
      "name" : "Hans-Peter",
      "surname" : "Seidel"
    } ]
  },
  "bagOfWords" : [ "cr", "category", "i.", "3.5", "-lsb-", "Computing", "Methodologies", "-rsb-", "Computer", "Graphics?Computational", "Geometry", "Object", "Modeling", "Keywords", "shape", "deformation", "shape", "analysis", "symmetry", "structural", "regularity", "content", "creation", "one", "main", "bottleneck", "contemporary", "computer", "graphic", "consequently", "recent", "research", "have", "begin", "investigate", "structureaware", "shape", "editing", "tool", "aim", "automate", "detailed", "manipulation", "require", "preserve", "structural", "relationship", "shape", "undergo", "manipulation", "-lsb-", "Kraevoy", "et", "al.", "2008", "Gal", "et", "al.", "2009", "Huang", "et", "al.", "2009", "Wang", "et", "al.", "2011", "Zheng", "et", "al.", "2011", "-rsb-", "algorithm", "analyze", "input", "shape", "extract", "structural", "feature", "use", "learn", "structure", "assist", "interactive", "3d", "modeling", "can", "improve", "efficiency", "content", "creation", "professional", "can", "assist", "inexperienced", "user", "adapt", "exist", "content", "need", "include", "continuous", "symmetry", "straight", "line", "well", "repeat", "discrete", "element", "window", "building", "early", "technique", "use", "smooth", "basis", "function", "interpolation", "-lsb-", "sederberg", "Parry", "1986", "Coquillart", "1990", "-rsb-", "recent", "work", "construct", "basis", "specific", "set", "control", "point", "control", "cage", "-lsb-", "ju", "et", "al.", "2005", "Joshi", "et", "al.", "2007", "Lipman", "et", "al.", "2008", "Ben-Chen", "et", "al.", "2009", "-rsb-", "regularizer", "aim", "maintain", "local", "similarity", "input", "we", "use", "elastic", "deformation", "base", "regularizer", "diffuse", "stretch", "preserve", "geometry", "which", "structural", "information", "could", "infer", "local", "regularizer", "do", "recognize", "higher-level", "structural", "property", "shape", "consequently", "technique", "still", "expose", "large", "number", "degree", "freedom", "user", "who", "have", "manually", "ensure", "important", "structural", "property", "maintain", "influential", "iwire", "system", "-lsb-", "Gal", "et", "al.", "2009", "-rsb-", "maintain", "global", "structural", "property", "shape", "build", "constraint", "preserve", "similarity", "symmetric", "part", "-lsb-", "Mitra", "et", "al.", "2006", "Podolak", "et", "al.", "2006", "Simari", "et", "al.", "2006", "-rsb-", "well", "parallelity", "orthogonality", "salient", "feature", "line", "Huang", "et", "al.", "-lsb-", "2009", "-rsb-", "apply", "similar", "idea", "2d", "vector", "graphic", "Zheng", "et", "al.", "-lsb-", "2011", "-rsb-", "propagate", "editing", "operation", "base", "similarity", "component", "number", "approach", "have", "be", "develop", "recombine", "shape", "out", "part", "approach", "utilize", "manual", "part", "composition", "have", "be", "describe", "-lsb-", "Funkhouser", "et", "al.", "2004", "Pauly", "et", "al.", "2005", "Kraevoy", "et", "al.", "2007", "-rsb-", "well", "automatic", "method", "detect", "structural", "regularity", "-lsb-", "Pauly", "et", "al.", "2008", "-rsb-", "recently", "technique", "have", "appear", "compute", "rule", "discrete", "change", "automatically", "-lsb-", "Mitra", "Pauly", "2008", "Bokeloh", "et", "al.", "2010", "-rsb-", "however", "none", "automatic", "technique", "provide", "free-form", "deformation", "editing", "addition", "structural", "relationship", "treat", "previous", "work", "often", "limited", "technique", "-lsb-", "Bokeloh", "et", "al.", "2010", "-rsb-", "can", "detect", "regular", "pattern", "3d", "geometry", "create", "shape", "variation", "insert", "remove", "piece", "detect", "docker", "must", "partition", "model", "globally", "two", "disjoint", "piece", "symmetric", "cut", "recent", "method", "Wang", "et", "al.", "-lsb-", "2011", "-rsb-", "infer", "scene", "graph", "structure", "unannotated", "3d", "mesh", "allow", "both", "continuous", "discrete", "parameter", "variation", "regular", "pattern", "define", "respect", "group", "admissible", "transformation", "transformation", "let", "group", "bijective", "continuous", "mapping", "we", "now", "use", "ransac", "procedure", "compute", "regular", "pattern", "Random", "pair", "potentially", "corresponding", "basis", "choose", "relative", "transformation", "compute", "continuous", "pattern", "continuous", "symmetry", "detect", "slippage", "analysis", "follow", "algorithm", "-lsb-", "Gelfand", "Guibas", "2004", "-rsb-", "which", "can", "trivially", "restricted", "translational", "motion", "center", "radial", "basis", "function", "around", "they", "define", "deformation", "field", "describe", "user", "constraint", "base-regularizer", "create", "elastic", "behavior", "locally", "we", "would", "like", "geometry", "deform", "way", "preserve", "continuous", "symmetry", "increase", "weight", "could", "principle", "solve", "problem", "would", "lead", "impractically", "ill-conditioned", "numerical", "system", "let", "part", "constant", "slippage", "which", "can", "have", "one", "two", "translational", "degree", "freedom", "-lrb-", "-rrb-", "distance", "vector", "deform", "model", "give", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "continuous", "pattern", "move", "surface", "point", "along", "constraint", "manifold", "usually", "do", "change", "geometry", "substantially", "area", "cover", "discrete", "pattern", "anisotropic", "deformation", "weight", "-lrb-", "equation", "-rrb-", "change", "deformation", "along", "motion", "field", "incur", "minimal", "penalty", "whole", "computation", "attempt", "each", "base", "detect", "pattern", "yield", "large", "number", "slide", "docker", "most", "which", "overlap" ],
  "content" : "CR Categories: I.3.5 [Computing Methodologies]: Computer Graphics?Computational Geometry and Object Modeling; Keywords: shape deformation, shape analysis, symmetry, structural regularity Content creation is one of the main bottlenecks in contemporary computer graphics. Consequently, recent research has begun to investigate structureaware shape editing tools that aim to automate the detailed manipulation required to preserve the structural relationships in a shape as it undergoes manipulation [Kraevoy et al. 2008; Gal et al. 2009; Huang et al. 2009; Wang et al. 2011; Zheng et al. 2011]. Such algorithms analyze the input shape to extract structural features and use the learned structure to assist interactive 3D modeling. They can improve the efficiency of content creation professionals and can assist inexperienced users in adapting existing content to their needs. This includes continuous symmetries such as straight lines as well as repeated discrete elements such as windows in a building. Early techniques use smooth basis functions for interpolation [Sederberg and Parry 1986; Coquillart 1990]. Recent work constructs bases specific to a set of control points or a control cage [Ju et al. 2005; Joshi et al. 2007; Lipman et al. 2008; Ben-Chen et al. 2009]. The regularizers aim to maintain local similarity to the input. We use elastic deformation as a ?base regularizer? to diffuse stretch and to preserve geometry for which no structural information could be inferred. ? Local regularizers do not recognize higher-level structural properties in the shape. Consequently, these techniques still expose a large number of degrees of freedom to the user, who has to manually ensure that important structural properties are maintained. The influential iWires system [Gal et al. 2009] maintains global structural properties of the shape by building constraints that preserve similarity of symmetric parts [Mitra et al. 2006; Podolak et al. 2006; Simari et al. 2006], as well as parallelity and orthogonality of salient feature lines. Huang et al. [2009] apply similar ideas to 2D vector graphics, and Zheng et al. [2011] propagate editing operations based on similarity of components. A number of approaches have been developed for recombining shapes out of parts. Approaches that utilize manual part composition have been described [Funkhouser et al. 2004; Pauly et al. 2005; Kraevoy et al. 2007], as well as automatic methods for detecting structural regularity [Pauly et al. 2008]. Recently, techniques have appeared that compute rules for discrete changes automatically [Mitra and Pauly 2008; Bokeloh et al. 2010]. However, none of the automatic techniques provides free-form deformation editing. In addition, structural relationships treated in previous work are often limited: The technique of [Bokeloh et al. 2010] can detect regular patterns in 3D geometry and create shape variations by inserting or removing pieces, but the detected dockers must partition the model globally into two disjoint pieces by a symmetric cut. The recent method of Wang et al. [2011] infers a scene graph structure for an unannotated 3D mesh to allow for both continuous and discrete parameter variations. Regular patterns are defined with respect to a group of admissible transformations: Transformations: Let G be a group of bijective, continuous mappings R 3 ? R 3 . We now use a RANSAC procedure to compute regular patterns: Random pairs of potentially corresponding bases are chosen and the relative transformation T is computed. Continuous patterns: Continuous symmetries are detected by slippage analysis, following the algorithm of [Gelfand and Guibas 2004], which can be trivially restricted to translational motions. , x k ? R 3 and center radial basis functions b i around them to define the deformation field: E u describes user constraints and E r is the base-regularizer that creates elastic behavior. Locally, we would like geometry to deform in a way that preserves continuous symmetries. Increasing the weights could in principle solve this problem but would lead to an impractically ill-conditioned numerical system. Let P be a part of constant slippage, which can have one or two translational degrees of freedom T 1 , T 2 . The (i) distance vectors in the deformed model are given by f (d j ) := f (q j (i) ) ? f (c (i) ). For continuous patterns, moving surface points along their constraint manifold usually does not change the geometry substantially. In areas covered by discrete patterns, the anisotropic deformation weights (Equation 6) are changed such that deformation along motion field ? x T x incurs minimal penalties. The whole computation is attempted for each base of a detected pattern. This yields a large number of sliding dockers, most of which overlap.",
  "resources" : [ ]
}