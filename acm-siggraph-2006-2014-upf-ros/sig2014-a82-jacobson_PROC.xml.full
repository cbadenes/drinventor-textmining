{
  "uri" : "sig2014-a82-jacobson_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2014/a82-jacobson_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Tangible and Modular Input Device for Character Articulation",
    "published" : "2014",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Alec-Jacobson",
      "name" : "Alec",
      "surname" : "Jacobson"
    }, {
      "uri" : "http://drinventor/Daniele-Panozzo",
      "name" : "Daniele",
      "surname" : "Panozzo"
    }, {
      "uri" : "http://drinventor/Oliver-Glauser",
      "name" : "Oliver",
      "surname" : "Glauser"
    }, {
      "uri" : "http://drinventor/C?dric-Pradalier",
      "name" : "C?dric",
      "surname" : "Pradalier"
    }, {
      "uri" : "http://drinventor/Otmar-Hilliges",
      "name" : "Otmar",
      "surname" : "Hilliges"
    }, {
      "uri" : "http://drinventor/Olga-Sorkine-Hornung",
      "name" : "Olga",
      "surname" : "Sorkine-Hornung"
    } ]
  },
  "bagOfWords" : [ "45c4ff6580b8aa504518b199e186b7120aeda23397736f6e7831d1dfc3e718b6", "p3h", "10.1145", "2601097.2601112", "name", "identification", "possible", "tangible", "modular", "Input", "Device", "Character", "Articulation", "Alec", "Jacobson", "Daniele", "Panozzo", "Oliver", "Glauser", "C?dric", "Pradalier", "Otmar", "Hilliges", "eth", "Zurich", "GeorgiaTech", "Lorraine", "Figure", "assemble", "from", "modular", "interchangeable", "hot-pluggable", "part", "-lrb-", "left", "-rrb-", "we", "novel", "device", "form", "skeletal", "tree", "match", "elephant", "user", "manipulate", "each", "joint", "device", "measure", "bone", "rotation", "animate", "skeletal", "rig", "elephant", "come", "life", "articulation", "3d", "character", "require", "control", "over", "many", "degree", "freedom", "difficult", "task", "standard", "2d", "interface", "we", "present", "tangible", "input", "device", "compose", "interchangeable", "hot-pluggable", "part", "embed", "sensor", "measure", "device?s", "pose", "rate", "suitable", "real-time", "editing", "animation", "splitter", "part", "allow", "branch", "accommodate", "any", "skeletal", "tree", "during", "assembly", "device", "recognize", "topological", "change", "individual", "part", "pre-assembled", "subtree", "plug", "unplugged", "novel", "semi-automatic", "registration", "approach", "help", "user", "quickly", "map", "device?s", "degree", "freedom", "virtual", "skeleton", "inside", "character", "user", "study", "report", "favorable", "comparison", "mouse", "keyboard", "interface", "task", "target", "acquisition", "pose", "replication", "we", "device", "provide", "input", "character", "rigging", "automatic", "weight", "computation", "direct", "skeletal", "deformation", "interaction", "physical", "simulation", "handle-based", "variational", "geometric", "modeling", "cr", "category", "i.", "3.1", "-lsb-", "Computer", "Graphics", "-rsb-", "input", "device", "Keywords", "tangible", "input", "skeletal", "deformation", "animation", "system", "Links", "dl", "pdf", "EB", "IDEO", "introduction", "interactively", "articulate", "virtual", "3d", "character", "lie", "heart", "computer", "animation", "geometric", "modeling", "sophisticated", "technique", "express", "shape", "deformation", "term", "small", "set", "degree", "ACM", "Reference", "Format", "Jacobson", "a.", "Panozzo", "D.", "Glauser", "O.", "Pradalier", "C.", "Hilliges", "O.", "Sorkine-Hornung", "O.", "2014", "tangible", "modular", "Input", "Device", "Character", "Articulation", "ACM", "Trans", "graph", "33", "Article", "82", "-lrb-", "July", "2014", "-rrb-", "12", "page", "dous", "10.1145", "2601097.2601112", "http://doi.acm.org/10.1145/2601097.2601112", "copyright", "Notice", "permission", "make", "digital", "hard", "copy", "all", "part", "work", "personal", "classroom", "use", "grant", "without", "fee", "provide", "copy", "make", "distribute", "profit", "commercial", "advantage", "copy", "bear", "notice", "full", "citation", "fus", "rst", "page", "copyright", "component", "work", "own", "other", "than", "ACM", "must", "honor", "abstract", "credit", "permit", "copy", "otherwise", "republish", "post", "server", "redistribute", "list", "require", "prior", "specific", "permission", "and/or", "fee", "request", "permission", "from", "permissions@acm.org", "copyright", "ACM", "0730-0301/14", "07-art82", "15.00", "DOI", "http://doi.acm.org/10.1145/2601097.2601112", "Olga", "Sorkine-Hornung", "freedom", "most", "often", "joint", "angle", "internal", "skeleton", "yet", "even", "ubiquitous", "skeletal", "deformation", "system", "have", "too", "many", "parameter", "manage", "directly", "traditional", "mouse", "keyboard", "input", "animator", "must", "rely", "indirect", "method", "inverse", "kinematic", "decompose", "complex", "integrate", "motion", "sequential", "manipulation", "small", "subset", "parameters?for", "example", "iteratively", "position", "each", "bone", "skeleton", "hierarchy", "while", "direct", "manipulation", "mouse", "touch", "interface", "successful", "2d", "-lsb-", "Shneiderman", "1997", "-rsb-", "3d", "interaction", "2d", "input", "illpose", "thus", "more", "challenging", "virtual", "3d", "widget", "e.g.", "arcballs", "-lsb-", "Shoemake", "1992", "-rsb-", "map", "2d", "mouse", "input", "3d", "rotation", "interaction", "underlie", "3d", "character", "indirect", "limited", "subset", "overall", "articulation", "parameter", "successful", "commercial", "product", "2d", "interface", "e.g.", "autodesk?s", "aya", "notorious", "steep", "learning", "curve", "require", "interface-specific", "training", "mouse", "keyboard", "interface", "fall", "short", "because", "control", "space", "do", "match", "perceptual", "space", "3d", "interaction", "task", "-lsb-", "Jacob", "et", "al.", "1994", "-rsb-", "so", "instead", "we", "propose", "direct", "physical", "manipulation", "via", "tangible", "interface", "-lsb-", "Ishii", "Ullmer", "1997", "-rsb-", "degree", "freedom", "direct", "correspondence", "3d", "rotation", "skeletal", "joint", "virtual", "character", "device", "compose", "modular", "hot-pluggable", "mechanical", "part", "user", "may", "quickly", "assemble", "custom", "combination", "measurement", "joint", "branch", "splitter", "establish", "one-to-one", "mapping", "between", "physical", "device", "virtual", "skeleton", "-lrb-", "see", "Figure", "-rrb-", "we", "leverage", "modern", "advance", "3d", "printing", "produce", "compact", "ready-to-assemble", "part", "comfortably", "hold", "one", "two", "hand", "exploit", "benefit", "proprioception", "physical", "affordance", "assemble", "device", "allow", "interaction", "physical", "manifestation", "virtual", "object", "without", "need", "literal", "fixed", "replication", "each", "joint", "measure", "three", "rotation", "angle", "accuracy", "frequency", "up", "250", "hz", "make", "device", "only", "suitable", "rapid", "prototyping", "also", "precise", "control", "task", "meticulous", "keyframe", "pose", "real-time", "animation", "capture", "complementary", "physical", "device", "we", "introduce", "algorithm", "facilitate", "device?s", "employment", "standard", "character", "rigging", "animation", "pipeline", "novel", "semi-automatic", "registration", "algorithm", "account", "disparity", "between", "device?s", "physical", "proportion", "those", "give", "virtual", "character", "user", "may", "quickly", "match", "rest", "pose", "character", "immediately", "begin", "animate", "traditional", "animation", "pose", "absolute", "position", "orientation", "often", "specify", "separately", "even", "external", "procedure", "-lrb-", "e.g.", "game", "physics", "engine", "-rrb-", "thus", "we", "device", "only", "measure", "relative", "bone", "orientation", "allow", "user", "move", "device", "around", "she", "desk", "suit", "she", "comfort", "-lrb-", "analogous", "relative", "positioning", "typical", "desktop", "mouse", "-rrb-", "demonstrate", "we", "device?s", "capability", "we", "discuss", "result", "from", "wide", "range", "example", "we", "device", "successfully", "provide", "input", "character", "rigging", "automatic", "weight", "computation", "direct", "skeletal", "deformation", "interaction", "physical", "simulation", "handle-based", "variational", "geometric", "modeling", "user", "studies?testing", "target", "acquisition", "pose", "replication?report", "favorable", "finding", "compare", "traditional", "mouse", "keyboard", "interface", "we", "device", "less", "accurate", "significantly", "more", "efficient", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "82", "publication", "date", "July", "2014", "82:2", "a.", "Jacobson", "et", "al.", "related", "work", "current", "commercial", "modeling", "animation", "package", "mouse", "keyboard", "interface", "favor", "control", "over", "ease", "use", "demand", "high", "level", "expertise", "alleviate", "many", "previous", "system", "devise", "alternative", "user", "interface", "3d", "character", "articulation", "range", "from", "sketch", "-lrb-", "e.g.", "-lsb-", "Lin", "et", "al.", "2012", "-rsb-", "-rrb-", "full-blown", "motion", "capture", "-lrb-", "e.g.", "-lsb-", "Ishigaki", "et", "al.", "2009", "-rsb-", "-rrb-", "we", "briefly", "review", "several", "area", "related", "work", "we", "system", "build", "upon", "extend", "vision-based", "motion", "capture", "system", "among", "most", "prevalent", "method", "create", "life-like", "animation", "anthropomorphic", "humanoid", "character", "field", "widely", "study", "-lrb-", "e.g.", "-lsb-", "Ishigaki", "et", "al.", "2009", "-rsb-", "-rrb-", "while", "produce", "high-quality", "result", "most", "system", "require", "expensive", "equipment", "large", "performance", "space", "often", "require", "body", "suit", "marker", "require", "human", "actor", "wellsuit", "animation", "non-humanoid", "character", "nonetheless", "some", "system", "map", "human", "body", "motion", "non-humanoid", "shape", "create", "casual", "life-like", "animation", "-lsb-", "Seol", "et", "al.", "2013", "Chen", "et", "al.", "2012", "-rsb-", "mapping", "introduce", "ambiguity", "performance", "capture", "still", "require", "large", "space", "actor", "figure", "recent", "development", "handpose", "estimation", "assuage", "space", "requirement", "bring", "motion", "capture", "desktop", "size", "space", "-lsb-", "Romero", "et", "al.", "2010", "Oikonomidis", "et", "al.", "2012", "-rsb-", "Wang", "Popovi", "track", "human", "hand", "pose", "animate", "arbitrary", "shape", "-lsb-", "2009", "-rsb-", "again", "map", "ambiguity", "prevent", "more", "precise", "interaction", "now", "actor?s", "hand", "need", "track", "doll", "avoid", "issue", "need", "actor?s", "body", "hand", "-lsb-", "Feng", "et", "al.", "2008", "Shim", "2010", "-rsb-", "Vision", "system", "suffer", "like", "all", "vision", "system", "from", "occlusion", "problem", "we", "meare", "linger", "issue", "concern", "chanical", "device", "do", "calibration", "camera", "placement", "hold", "comfortably", "both", "hand", "lighting", "most", "relevantly", "hand-held", "input", "device", "especially", "prone", "occlusion", "problem", "-lrb-", "see", "Figure", "-rrb-", "consequence", "issue", "state-of-the-art", "computer", "vision", "technique", "rely", "heavily", "fix", "skeletal", "topology", "prior", "-lsb-", "Shotton", "et", "al.", "2013", "-rsb-", "contrast", "we", "mechanical", "device", "modular", "automatically", "detect", "topology", "change", "its", "internal", "sensor", "function", "accurately", "regardless", "environment", "make", "device", "only", "suitable", "desktop", "tool", "artist", "workstation", "also", "performance", "instrument", "low", "degree", "freedom", "tangible", "ui", "Ishii", "Ullmer", "introduce", "tangible", "user", "interface", "manipulate", "virtual", "object", "-lsb-", "1997", "-rsb-", "vast", "range", "tangible", "ui", "exist", "use", "variety", "method", "track", "physical", "object", "include", "computer", "vision", "electrical", "tag", "visual", "barcode", "character", "animation", "prominently", "appear", "among", "many", "application", "area", "-lsb-", "Johnson", "et", "al.", "1999", "-rsb-", "plush", "toy", "embedded", "sense", "recognize", "discrete", "physical", "input", "event", "trigger", "playback", "pre-recorded", "animation", "more", "recently", "vision-based", "2d", "puppeteering", "system", "let", "user", "perform", "2d", "animation", "real", "time", "use", "hand-drawn", "paper", "cut-out", "character", "-lsb-", "Barnes", "et", "al.", "2008", "-rsb-", "analogously", "3d", "hold", "et", "al.", "animate", "3d", "character", "track", "rigid", "physical", "object", "position", "orientation", "-lsb-", "2012", "-rsb-", "system", "already", "demonstrate", "expressiveness", "tangible", "controller", "animation", "storytelling", "unlike", "we", "approach", "which", "allow", "fine-grained", "control", "over", "character?s", "many", "degree", "freedom", "restricted", "independent", "rigid", "transformation", "nonetheless", "track", "rigid", "object", "independently", "time", "may", "use", "animate", "deformable", "character", "layer", "animation", "-lsb-", "Oore", "et", "al.", "2002", "Dontcheva", "et", "al.", "2003", "Shiratori", "et", "al.", "2013", "-rsb-", "user", "evaluation", "expert", "animator", "show", "benefit", "layered", "animation", "over", "direct", "full-body", "motion", "capture", "-lrb-", "particular", "non-humanoid", "character", "-rrb-", "also", "reveal", "need", "integrated", "motion", "control", "mechanism", "-lrb-", "i.e.", "chain", "joint", "-rrb-", "-lsb-", "Shiratori", "et", "al.", "2013", "-rsb-", "difficult", "achieve", "physical", "controller", "we", "system", "build", "upon", "idea", "due", "its", "modularity", "allow", "seamless", "transition", "between", "layered", "animation", "single", "joint", "skeletal", "subtree", "integrate", "animation", "entire", "skeleton", "mechanical", "system", "number", "system", "directly", "map", "mechanical", "skeleton", "on-screen", "character", "mechanical", "control", "non-humanoid", "custom", "fixed-topology", "character", "perhaps", "originally", "introduce", "Dinosaur", "Input", "Device", "use", "produce", "jurassic", "park", "-lsb-", "Knep", "et", "al.", "1995", "-rsb-", "monkey", "system", "-lsb-", "Esposito", "et", "al.", "1995", "-rsb-", "later", "qumarion", "-lsb-", "Celsys", "Inc.", "2013", "-rsb-", "optimize", "design", "fix", "humanoid", "topology", "cost", "generality", "fix", "humanoid-topology", "robot", "-lsb-", "Yoshizaki", "et", "al.", "2011", "-rsb-", "complement", "rotation", "sensor", "actuate", "motor", "context", "keyframe", "pose", "convenient", "feature", "allow", "device", "reconfigure", "itself", "previous", "pose", "while", "certainly", "useful", "actuation", "come", "serious", "drawback", "limited", "range", "motion", "slower", "response", "time", "bulkier", "design", "limited", "reconfigurability", "fix", "topology", "robot", "become", "particularly", "problematic", "when", "animate", "character", "highlight", "-lsb-", "Yoshizaki", "et", "al.", "2011", "-rsb-", "reconfigurable", "input", "device", "-lsb-", "Weller", "et", "al.", "2008", "-rsb-", "employ", "large", "ball-and-socket", "joint", "though", "ball-and-socket", "intuitive", "many", "scenario", "achieve", "angular", "precision", "20", "insufficient", "direct", "character", "animation", "contrast", "we", "joint", "compact", "measure", "sub-degree", "accurate", "angle", "high", "precision", "solve", "some", "way", "inverse", "problem", "ours", "Topobo", "device", "-lsb-", "Raffle", "et", "al.", "2004", "-rsb-", "assembly", "system", "enable", "construction", "robot", "which", "record", "replay", "motion", "sequence", "each", "piece", "separate", "unit", "measure", "angle", "use", "servo", "motor", "however", "piece", "do", "know", "its", "relationship", "other", "its", "place", "global", "topology", "thus", "may", "readily", "use", "input", "device", "Skeleton", "fitting", "deformation", "transfer", "way", "we", "help", "register", "device", "within", "input", "shape", "bear", "similarity", "exist", "method", "skeleton", "extraction", "registration", "fitting", "geometry", "processing", "technique", "exist", "robustly", "extract", "medial", "axis", "curve", "skeleton", "shape", "-lrb-", "e.g.", "-lsb-", "Tagliasacchi", "et", "al.", "2012", "-rsb-", "-rrb-", "though", "ostensibly", "similar", "animation", "skeleton", "curve", "skeleton", "mean", "compact", "abstract", "representation", "shape", "Skeleton", "fitting", "method", "animation", "do", "exist", "notably", "-lsb-", "Baran", "Popovi", "2007", "-rsb-", "method", "fit", "skeleton", "give", "topology", "upright-oriented", "character", "perform", "best", "humanoid", "expensive", "combina", "torial", "optimization", "would", "easily", "take", "advantage", "real-time", "angle", "measurement", "we", "device", "we", "interactive", "approach", "exactly", "match", "measure", "orientation", "may", "register", "entire", "shape", "part", "update", "device", "topology", "change", "computer", "vision", "skeleton", "fitting", "have", "become", "part", "standard", "motion", "capture", "pose", "recognition", "pipeline", "robust", "fit", "find", "query", "database", "skeleton", "pose", "feature", "key", "base", "depth", "image", "track", "extremity", "-lsb-", "Shotton", "et", "al.", "2013", "Sridhar", "et", "al.", "2013", "-rsb-", "however", "database", "generally", "populate", "example", "pose", "specific", "topology", "tailor", "common", "scenario", "e.g.", "upright", "human", "point", "hand", "gesture", "we", "skeleton", "match", "procedure", "map", "measure", "angle", "preexisting", "animation", "rig?s", "skeleton", "whose", "proportion", "orientation", "may", "differ", "more", "general", "topic", "problem", "transfer", "deformation", "between", "arbitrarily", "different", "skeleton", "shape", "well", "study", "e.g.", "-lsb-", "Sumner", "Popovi", "2004", "Baran", "et", "al.", "2009", "Bharaj", "et", "al.", "2012", "-rsb-", "we", "avoid", "heavy-handed", "method", "utilize", "we", "device?s", "modularity", "instead", "map", "ill-fitting", "device", "user", "may", "simply", "reassemble", "more", "appropriate", "one", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "82", "publication", "date", "July", "2014", "power", "usb", "Figure", "device", "instance", "may", "consist", "joint", "-lrb-", "-rrb-", "splitter", "-lrb-", "-rrb-", "extension", "segment", "-lrb-", "-rrb-", "hardware", "we", "goal", "design", "easy", "use", "input", "device", "general-purpose", "3d", "skeletal", "articulation", "goal", "break", "down", "sub-criterion", "control", "variety", "character", "different", "skeletal", "topology", "-lrb-", "alligator", "centaur", "ostrich", "etc.", "-rrb-", "device", "must", "modular", "reconfigurable", "operate", "comfortably", "desk", "device", "should", "compact", "size", "structurally", "sound", "prevent", "accidental", "deformation", "finally", "device", "must", "measure", "3D", "rotation", "high", "precision", "accuracy", "-lrb-", "see", "Figure", "-rrb-", "user", "construct", "instance", "we", "device", "fly", "from", "modular", "part", "node", "Figure", "show", "typical", "configuration", "legend", "node", "type", "mechanically", "moveable", "joint", "have", "embed", "sensor", "measure", "three", "intrinsic", "Euler", "angle", "static", "splitter", "allow", "branch", "skeletal", "tree", "static", "extension", "segment", "increase", "separation", "between", "joint", "splitter", "passive", "endcap", "cover", "expose", "electronics", "provide", "comfortable", "manipulation", "handle", "entire", "skeletal", "tree", "connect", "host", "computer", "via", "controller", "which", "transmit", "datum", "power", "other", "node", "while", "entire", "device", "custom", "design", "nonetheless", "easy", "reproduce", "we", "provide", "complete", "OpenHardware", "specification", "supplemental", "material", "we", "include", "CAD", "file", "3d", "printing", "circuit", "schematic", "both", "ready", "outsourced", "fabrication", "angular", "measurement", "joint", "skeletal", "deformation", "conduct", "kinematic", "tree", "internal", "rigid", "bone", "skeleton?s", "deformation", "parameterize", "relative", "rotation", "orient", "each", "bone", "respect", "its", "parent", "though", "typically", "fix", "during", "deformation", "bone", "length", "vary", "across", "skeleton", "model", "maximize", "modularity", "facilitate", "design", "we", "joint", "single", "fixed", "size", "general", "match", "length", "virtual", "skeleton", "bone", "we", "alleviate", "disparity", "software", "-lrb-", "see", "Section", "-rrb-", "steer", "skeleton", "we", "device", "report", "relative", "rotation", "each", "corresponding", "bone", "form", "three", "intrinsic", "Euler", "angle", "we", "joint", "compose", "two", "twist", "part", "connect", "via", "bend", "hinge", "-lrb-", "see", "Figure", "leave", "-rrb-", "result", "relative", "rotation", "ith", "joint", "device", "composition", "rotation", "twist", "angle", "bend", "angle", "final", "twist", "angle", "Figure", "leave", "joint", "have", "three", "rotational", "degree", "freedom", "parameterize", "Euler", "angle", "-lrb-", "twist", "-rrb-", "-lrb-", "bend", "-rrb-", "-lrb-", "twist", "-rrb-", "right", "bend", "range", "just", "over", "180", "compare", "visually", "measure", "physical", "angle", "sensor?s", "reveal", "accuracy", "Figure", "undisturbed", "joint", "leave", "desk", "two", "seconds", "measure", "variation", "angle", "0.1", "all", "three", "sensor", "theoretical", "minimum", "jitter", "0.022", "-lsb-", "Melexis", "Sys.", "2013", "-rsb-", "observe", "angle", "10", "minute", "show", "maximum", "variation", "0.066", "mean", "0.005", "standard", "deviation", "0.013", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "where", "-lrb-", "-rrb-", "rotate", "about", "w-axis", "angle", "we", "align", "relative", "z-axis", "lie", "along", "joint", "when", "all", "angle", "read", "sign", "rotation", "angle", "each", "part", "measure", "corresponding", "hall", "sensor", "permanent", "magnet", "pair", "Hall", "sensor", "readily", "available", "very", "small", "form-factor", "-lsb-", "Melexis", "Sys.", "2013", "-rsb-", "measure", "orientation", "we", "magnet", "magnetic", "field", "accuracy", "-lrb-", "see", "Figure", "right", "-rrb-", "precision", "0.1", "-lrb-", "see", "Figure", "-rrb-", "we", "place", "small", "flat", "magnet", "less", "than", "millimeter", "away", "from", "each", "sensor", "ensure", "very", "stable", "magnetic", "field", "affect", "external", "magnetic", "perturbation", "common", "office", "environment", "each", "joint", "consume", "50ma", "Hall", "sensor", "5v", "power", "solely", "usb", "we", "device", "could", "support", "up", "10", "joint", "external", "power-source", "-lrb-", "e.g.", "battery", "wall", "support", "adapter", "-rrb-", "more", "controller", "joint", "can", "magnet", "before", "arrive", "Hall", "sensor", "we", "also", "evaluate", "two", "alternative", "sensor", "type", "potentiometer", "do", "provide", "sufficient", "precision", "suffer", "from", "dead-zone", "combination", "3d", "accelerometer", "3d", "magnetometer", "seem", "promising", "since", "free", "mechanical", "design", "would", "require", "locally", "stable", "magnetic", "field", "within", "range", "10cm", "we", "experiment", "show", "magnetic", "field", "diverge", "wildly", "inside", "office", "environment", "lead", "angular", "error", "above", "40", "we", "final", "hall", "sensor", "magnet", "pairing", "avoid", "magnetic", "field", "entirely", "dominate", "nearby", "magnet", "even", "detectably", "affect", "other", "magnet", "same", "joint", "instead", "we", "twist-bend-twist", "joint", "one", "could", "imagine", "ball-andsocket", "style", "joint", "akin", "human", "shoulder", "joint", "socket", "would", "need", "simultaneously", "hold", "joint", "securely", "place", "limit", "range", "motion", "articulate", "3d-printed", "character", "-lsb-", "B?cher", "et", "al.", "2012", "Cal", "et", "al.", "2012", "-rsb-", "use", "ball-and-socket", "joint", "cite", "friction", "range", "motion", "linger", "challenge", "even", "without", "worry", "about", "embed", "sensor", "electronics", "accurate", "angle", "measurement", "also", "appear", "elusive", "led", "photosensor", "use", "large", "ball-and-socket", "joint", "-lsb-", "Weller", "et", "al.", "2008", "-rsb-", "measure", "rotation", "order", "magnitude", "worse", "accuracy", "than", "we", "twist-bend-twist", "joint", "Hall", "sensor", "we", "rotation", "parameterization", "suffer", "inherently", "from", "gimbal", "lock", "retain", "high", "accuracy", "range", "motion", "easy", "friction", "control", "twist", "angle", "span", "range", "slightly", "less", "than", "360", "bend", "angle", "slightly", "more", "than", "180", "three", "accessible", "screw", "control", "frictional", "stiffness", "each", "joint", "datum", "marshal", "each", "joint", "also", "contain", "dedicated", "microcontroller", "assemble", "instance", "we", "device", "can", "understand", "reconfigurable", "sensor", "network", "each", "joint", "acquire", "angular", "datum", "locally", "communicate", "via", "shared", "bus", "controller", "each", "component", "have", "small", "amount", "persistent", "memory", "store", "information", "its", "unique", "id", "node", "type", "color", "Joints", "store", "three", "calibration", "offset", "angle", "splitter", "store", "additionally", "number", "connected", "child", "relative", "orientation", "its", "outlet", "have", "be", "calibrate", "once", "-lrb-", "see", "Figure", "-rrb-", "Via", "unique", "node", "id", "additional", "information", "may", "associate", "node", "store", "software", "host", "computer", "-lrb-", "e.g.", "positional", "hint", "section", "-rrb-", "memory", "facilitate", "topology", "detection", "screen", "visualization", "also", "allow", "user", "resume", "previously", "assemble", "device", "when", "previous", "configuration", "recognize", "parameter", "may", "restore", "so", "user", "can", "immediately", "resume", "work", "zero", "overhead", "communication", "through", "wire", "bus", "support", "angle", "measurement", "frequency", "inversely", "proportional", "number", "joint", "from", "250hz", "single", "joint", "20hz", "24", "joint", "all", "part", "connect", "electronically", "use", "off-the-shelf", "male-female", "connector", "six", "pin", "two", "power", "two", "datum", "one", "topology", "detection", "-lrb-", "one", "unused", "-rrb-", "inside", "each", "joint", "component", "connect", "flexible", "wire", "shield", "silicon", "prevent", "breakage", "when", "bend", "twist", "mechanical", "linkage", "use", "asymmetric", "hook-and-lock", "prevent", "faulty", "incorrect", "connection", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "82", "publication", "date", "July", "2014", "82:4", "a.", "Jacobson", "et", "al.", "Figure", "splitter", "need", "one-time", "calibration", "outlet", "orientation", "-lrb-", "left", "-rrb-", "easy", "use", "joint", "rotate", "so", "outgoing", "frame", "match", "incoming", "frame", "-lrb-", "right", "-rrb-", "aid", "embossed", "arrow", "-lrb-", "yellow", "-rrb-", "Figure", "we", "splitter", "design", "general", "support", "many", "different", "branch", "valence", "outward", "orientation", "Figure", "two", "joint", "roughly", "match", "proportion", "Mastiff?s", "Donkey?s", "Giraffe", "-rrb-", "we", "equip", "each", "node", "controllable", "multi-color", "led", "default", "indicate", "status", "power", "initialize", "detect", "within", "topology", "software", "we", "replicate", "led", "state", "we", "visualization", "activate", "led", "assist", "user", "example", "select", "node", "screen", "blink", "blue", "led", "corresponding", "physical", "node", "Topology", "detection", "achieve", "pass", "message", "between", "connected", "node", "we", "use", "simple", "distribute", "algorithm", "visit", "node", "depth-first", "order", "every", "joint", "begin", "initialization", "listen", "broadcast", "shared", "bus", "controller", "emit", "topology", "pulse", "first", "connected", "joint", "recursively", "when", "joint", "receive", "pulse", "reserve", "unique", "id", "broadcast", "all", "other", "node", "after", "receive", "confirmation", "from", "controller", "joint", "send", "topology", "pulse", "its", "child", "during", "entire", "process", "controller", "forwards", "message", "contain", "node", "type", "unique", "id", "host", "computer", "which", "reconstruct", "device", "screen", "topology", "discovery", "trigger", "every", "time", "node", "add", "remove", "take", "approximately", "100m", "static", "part", "remain", "part", "we", "device", "have", "moveable", "piece", "aside", "from", "small", "slide", "connection", "lock", "branch", "virtual", "character?s", "skeleton", "general", "arbitrary", "both", "term", "valence", "geometry", "we", "propose", "general", "concept", "radial", "splitter", "which", "support", "many", "outlet", "fit", "without", "overlap", "any", "orientation", "ideally", "we", "would", "manufacture", "splitter", "same", "outlet", "same", "orientation", "give", "character", "practically", "feasible", "we", "wish", "support", "arbitrary", "input", "shape", "instead", "we", "settle", "small", "sufficient", "set", "common", "arrangement", "-lrb-", "see", "Figure", "-rrb-", "Extension", "segment", "intensify", "proprioception", "help", "overcome", "physical-virtual", "size", "disparity", "keep", "electronics", "simple", "refresh", "rate", "high", "power", "consumption", "minimal", "extension", "segment", "unseen", "during", "topology", "detection", "finally", "plastic", "endcap", "purely", "ergonomic", "Method", "we", "now", "discuss", "algorithmic", "contribution", "unleash", "we", "device?s", "full", "potential", "within", "character", "animation", "geometry", "process", "ing", "pipeline", "we", "support", "two", "common", "use", "case", "first", "we", "consider", "animation", "character", "without", "exist", "rig", "just", "triangle", "mesh", "without", "associate", "control", "skeleton", "skin", "weight", "we", "assistance", "user", "may", "use", "we", "device", "define", "skeleton", "compute", "weight", "automatically", "second", "we", "help", "user", "attach", "input", "device", "character", "exist", "rig", "potentially", "manually", "create", "professional", "animator", "case", "we", "match", "device?s", "degree", "freedom", "rig?s", "appropriately", "adjust", "measure", "rotation", "while", "deform", "ensure", "intuitive", "control", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "82", "publication", "date", "July", "2014", "tangible", "modular", "Input", "Device", "Character", "Animation", "82:5", "Figure", "leave", "right", "user", "add", "joint", "position", "hint", "virtual", "device", "snap", "place", "within", "un-rigged", "Dino", "model", "define", "virtual", "skeleton", "form", "which", "we", "may", "automatically", "compute", "skin", "weight", "4.1", "rest", "pose", "registration", "standard", "skeletal", "deformation", "define", "bone", "transformation", "relative", "some", "rest", "pose", "thus", "control", "un-rigged", "character", "we", "must", "first", "infer", "rest-pose", "skeleton", "from", "current", "device", "configuration", "we", "device?s", "joint", "angle", "topology", "fully", "determine", "skeletal", "tree", "space", "up", "global", "rigid", "transformation", "however", "distance", "between", "joint", "physical", "skeleton", "will?in", "general?not", "match", "those", "character", "screen", "-lrb-", "see", "Figure", "-rrb-", "Extension", "segment", "help", "alleviate", "proportion", "also", "fix", "hence", "we", "must", "register", "device?s", "current", "configuration", "character", "find", "appropriate", "length", "between", "each", "pair", "neighbor", "node", "global", "rigid", "transformation", "thus", "create", "virtual", "device", "embed", "on-screen", "character", "-lrb-", "figure", "leave", "-rrb-", "could", "achieve", "manually", "drag", "handle", "virtual", "device", "restrict", "change", "agree", "current", "measure", "angle", "tree", "hierarchy", "propagate", "change", "downstream", "kinematic", "chain", "would", "require", "many", "iteration", "adjustment", "other", "hand", "fully", "automatic", "fitting", "ill-posed", "good", "fit", "require", "heavy", "assumption", "-lsb-", "Baran", "Popovi", "2007", "-rsb-", "semantic", "knowledge", "model", "desire", "output", "animation", "we", "opt", "semi-automatic", "variational", "approach", "give", "sparse", "set", "joint", "position", "hint", "we", "optimization", "continually", "determine", "appropriate", "value", "all", "bone", "length", "global", "rigid", "transformation", "incorporate", "device", "input", "new", "positional", "hint", "interactively", "after", "registration", "skeleton", "infer", "skin", "weight", "compute", "automatically", "-lrb-", "e.g.", "-lsb-", "Jacobson", "et", "al.", "2011", "-rsb-", "see", "Figure", "right", "-rrb-", "user", "can", "begin", "animate", "directly", "assume", "topology", "detect", "let", "current", "device", "configuration", "represent", "list", "non-root", "node", "position", "-lcb-", "...", "-rcb-", "global", "rotation", "SO", "-lrb-", "-rrb-", "translation", "associate", "root", "position", "each", "non-root", "node", "may", "write", "recursively", "use", "forward", "kinematic", "parent", "length", "edge", "between", "node", "its", "parent", "we", "let", "origin", "parent", "non-root", "node", "so", "node", "parent", "node", "we", "may", "rewrite", "explicitly", "where", "directional", "unit-vector", "determine", "up", "rotation", "via", "equation", "-lrb-", "-rrb-", "angle", "read", "from", "device", "Energy", "formulation", "length", "-lcb-", "...", "-rcb-", "global", "rotation", "global", "translation", "span", "node", "position", "exactly", "maintain", "relative", "orientation", "device", "find", "best", "value", "we", "solve", "follow", "non-linear", "optimization", "problem", "argmin", "user", "user", "-lrb-", "-rrb-", "reg", "reg", "-lrb-", "-rrb-", "drag", "drag", "-lrb-", "-rrb-", "subject", "-lcb-", "...", "-rcb-", "-lcb-", "...", "-rcb-", "where", "scalar", "weight", "user", "reg", "drag", "balance", "energy", "term", "though", "fully", "determine", "other", "variable", "via", "linear", "equality", "constraint", "-lrb-", "-rrb-", "we", "simplify", "description", "-lrb-", "implementation", "-rrb-", "treat", "all", "variable", "we", "delegate", "we", "solver", "eliminate", "degree", "freedom", "enforce", "hard", "constraint", "user", "may", "specify", "desire", "location", "any", "node", "i.", "generally", "speak", "current", "measure", "angle", "prohibit", "exactly", "satisfy", "arbitrary", "constellation", "constraint", "therefore", "we", "attempt", "achieve", "each", "location", "least-squares", "sense", "user", "-lrb-", "-rrb-", "only", "few", "user-specified", "hint", "we", "problem", "underdetermine", "e.g.", "single", "constraint", "only", "straight", "chain", "user", "constraint", "either", "end", "ensure", "reasonable", "skeleton", "we", "punish", "unnaturally", "large", "difference", "between", "adjacent", "length", "reg", "-lrb-", "-rrb-", "-lcb-", "-rcb-", "where", "set", "pair", "-lcb-", "-rcb-", "where", "edge", "incident", "node", "share", "common", "node", "edge", "neighbor", "edge-dual", "graph", "skeletal", "tree", "energy", "term", "also", "recognizable", "graph", "laplacian", "regularization", "define", "over", "edge-dual", "graph", "last", "energy", "term", "discourage", "numerical", "drift", "instability", "under-determined", "situation", "important", "realize", "tempo", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "82", "publication", "date", "July", "2014", "82:6", "a.", "Jacobson", "et", "al.", "Figure", "10", "we", "help", "user", "match", "assemble", "device", "exist", "rig", "Knight", "match", "update", "real-time", "-lrb-", "dash", "green", "-rrb-", "while", "user", "position", "virtual", "device", "near", "rig", "skeleton", "once", "close", "we", "bind", "device", "rig", "user", "animate", "immediately", "rally", "smooth", "response", "therefore", "we", "punish", "change", "over", "time", "drag", "-lrb-", "-rrb-", "drag", "-lrb-", "-rrb-", "drag", "-lrb-", "-rrb-", "10", "where", "position", "incident", "edge", "length", "node", "from", "previous", "frame", "respectively", "intuitively", "term", "amount", "introduce", "drag", "during", "optimization", "we", "optimization", "frame", "rate", "fast", "enough", "lag", "noticeable", "yet", "term", "significant", "enough", "eliminate", "instability", "due", "problem", "be", "otherwise", "invariant", "global", "rotation", "scale", "under-determined", "scenario", "finally", "constant", "lower", "bind", "constraint", "-lrb-", "-rrb-", "ensure", "length", "stay", "positive", "otherwise", "edge", "between", "node", "could", "flip", "backwards", "implementation", "we", "solve", "we", "constrain", "optimization", "problem", "block", "coordinate", "descent", "-lrb-", "a.k.a.", "alternate", "optimization", "-rrb-", "style", "-lsb-", "sorkine", "Alexa", "2007", "-rsb-", "fix", "problem", "reduce", "quadratic", "program", "-lrb-", "qp", "-rrb-", "we", "optimize", "use", "open", "source", "active", "set", "qp", "solver", "-lsb-", "Jacobson", "et", "al.", "2013", "-rsb-", "fix", "only", "non-constant", "energy", "term", "user", "drag", "minimize", "respect", "rigid", "transformation", "represent", "variant", "classic", "shape", "matching", "problem", "solve", "singular", "value", "decomposition", "-lsb-", "kabsch", "1976", "-rsb-", "both", "step", "do", "increase", "we", "energy", "we", "may", "alternate", "until", "convergence", "practice", "convergence", "take", "few", "iteration", "warm", "single", "iteration", "-lrb-", "small", "dense", "qp", "solve", "svd", "-rrb-", "take", "less", "than", "one", "microsecond", "so", "we", "simply", "apply", "fixed", "number", "iteration", "per", "frame", "-lrb-", "conservatively", "100", "-rrb-", "we", "interface", "allow", "add", "new", "positional", "constraint", "fly", "drag", "out", "from", "virtual", "node?s", "center", "mouse", "further", "facilitate", "user-interaction", "target", "position", "unprojection", "mouse?s", "coordinate", "depth", "between", "first", "two", "hit", "model", "along", "view", "ray", "simple", "feature", "greatly", "reduce", "number", "necessary", "viewpoint", "change", "allow", "user", "focus", "tuning", "angle", "device", "finally", "we", "note", "weighting", "parameter", "unimportant", "so", "far", "user", "comparatively", "large", "we", "example", "use", "user", "reg", "0.001", "drag", "0.0001", "4.2", "attach", "exist", "rig", "we", "have", "only", "3d", "model", "input", "previous", "algorithm", "help", "embed", "device?s", "skeleton", "inside", "shape", "other", "situation", "complete", "skeletal", "rig", "consist", "model", "internal", "skeleton", "weight", "may", "already", "available", "modularity", "we", "device", "allow", "user", "construct", "device", "closely", "match", "all", "part", "exist", "rig?s", "skeleton", "control", "rig", "we", "need", "mapping", "from", "device?s", "degree", "we", "match", "skeletal", "rig", "without", "precise", "spatial", "alignment", "-lrb-", "left", "-rrb-", "propagate", "device?s", "relative", "rotation", "down", "rig?s", "kinematic", "chain", "produce", "unintuitive", "result", "-lrb-", "top", "right", "-rrb-", "twist", "pink", "joint", "do", "twist", "its", "match", "bone", "rather", "rotate", "about", "axis", "parallel", "joint?s", "initial", "orientation", "matter", "worse", "further", "down", "chain", "we", "adjustment", "fix", "-lrb-", "bottom", "-rrb-", "freedom", "rig?s", "we", "take", "advantage", "fast", "rest-pose", "registration", "help", "determine", "mapping", "first", "user", "guide", "virtual", "device", "near", "rig?s", "skeleton", "meanwhile", "we", "automatically", "determine", "mapping", "between", "each", "rig", "bone", "device", "bone", "-lrb-", "see", "Figure", "10", "-rrb-", "we", "cast", "minimal", "matching", "problem", "over", "complete", "bipartite", "graph", "between", "set", "bone", "rig", "skeleton", "those", "device", "each", "graph", "edge", "give", "cost", "ij", "set", "Hausdorff", "distance", "between", "line", "segment", "bone", "device", "line", "segment", "bone", "rig", "optimal", "matching", "find", "via", "hungarian", "method", "-lsb-", "Kuhn", "1955", "-rsb-", "once", "combinatorially", "match", "positional", "alignment", "may", "iteratively", "refine", "rest-pose", "registration", "procedure", "time", "replace", "user", "constraint", "location", "match", "joint", "location", "rig", "rig", "bone", "virtual", "device", "perfectly", "overlap", "space", "would", "sufficient", "deform", "rig", "directly", "use", "bone", "transformation", "determine", "device?s", "kinematic", "chain", "support", "both", "exact", "casual", "interaction", "we", "assume", "bone", "closely", "perfectly", "align", "bone", "length", "joint", "position", "differ", "directly", "use", "transformation", "from", "device?s", "kinematic", "chain", "effectively", "tear", "rig", "bone?s", "apart", "joint", "rotate", "about", "device?s", "virtual", "joint", "location", "rather", "than", "rig", "joint", "slightly", "better", "would", "propagate", "bone", "rotation", "measure", "device", "down", "rig?s", "kinematic", "chain", "maintain", "center", "rotation", "rig", "joint", "three", "Euler", "angle", "read", "from", "device?s", "joint", "relative", "reference", "frame", "device?s", "bone", "rather", "than", "respective", "bone", "rig", "example", "twist", "joint", "would", "spin", "rig?s", "bone", "about", "axis", "parallel", "device?s", "virtual", "bone", "axis", "rather", "than", "rig", "bone?s", "axis", "-lrb-", "see", "Figure", "11", "-rrb-", "instead", "we", "precompute", "minimal", "rotation", "ij", "transform", "rest", "vector", "device?s", "ith", "bone", "its", "match", "bone", "rig", "use", "rotation", "change", "basis", "we", "apply", "measure", "rotation", "from", "bone", "device", "match", "bone", "rig", "ij", "ij", "align", "device?s", "Euler", "angle", "parameterization", "joint", "rotation", "rig", "bone", "reference", "frame", "before", "apply", "forward", "kinematic", "same", "procedure", "can", "use", "rebind", "previous", "keyframe", "pose", "allow", "user", "pose", "from", "any", "previous", "configuration", "just", "rest", "pose", "adjust", "rotation", "Figure", "11", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "82", "publication", "date", "July", "2014", "tangible", "modular", "Input", "Device", "Character", "Animation", "82:7", "user", "study", "difficult", "measure", "performance", "term", "3d", "character", "articulation", "directly", "end", "what", "make", "good", "animation", "pose", "easily", "capture", "single", "metric", "task", "completion", "time", "joint", "angle", "error", "however", "we", "do", "know", "mouseand", "keyboard-based", "ui", "remain", "most", "prevalent", "character", "articulation", "system", "therefore", "we", "design", "two", "experiment", "allow", "we", "compare", "effect", "we", "input", "device", "user", "performance", "directly", "mouse", "keyboard", "base", "ui", "targeting", "two", "degree", "freedom", "baseline", "experiment", "we", "briefly", "compare", "keyboard", "mouse", "we", "device", "2.5", "target", "acquisition", "task", "useful", "controlled", "comparison", "remove", "complexity", "idiosyncrasy", "full", "3d", "task", "mean", "time", "hit", "target", "we", "detail", "we", "experimental", "design", "seconds", "analysis", "appedix", "term", "task", "keyboard", "completion", "time", "keyboard", "slowest", "-lrb-", "mean", "4.99", "standard", "devi5", "mouse", "ation", "0.3", "-rrb-", "follow", "mouse", "ours", "-lrb-", "4.31", "0.4", "-rrb-", "we", "device", "-lrb-", "3.77", "0.235", "-rrb-", "Inset", "show", "mean", "95", "confidence", "interval", "result", "show", "clear", "advantage", "we", "device", "over", "keyboard", "conservatively", "equal", "performance", "mouse", "particularly", "interesting", "task", "have", "only", "two", "degree", "freedom", "thus", "well-suited", "mouse", "provide", "further", "evidence", "benefit", "direct", "physical", "control", "3d", "object", "often", "theorize", "tangible", "uus", "literature", "3d", "articulation", "follow", "we", "baseline", "result", "we", "exclude", "keyboard", "from", "further", "experiment", "now", "directly", "compare", "mouse", "we", "device", "we", "compare", "effect", "assemble", "device", "against", "mouse-based", "uus", "complex", "character", "pose", "task", "require", "precise", "control", "many", "degree", "freedom", "while", "still", "reasonably", "control", "experiment", "simulate", "reality", "character", "articulation", "therefore", "allow", "we", "draw", "conclusion", "about", "actual", "usability", "similar", "application", "we", "ask", "subject", "replicate", "series", "predefine", "pose", "subject", "attempt", "register", "yellow", "dino", "-lrb-", "see", "Figure", "12", "-rrb-", "top", "target", "pose", "render", "red", "we", "compare", "we", "device", "against", "mouse-based", "uus", "skeletal", "deformation", "identical", "aya", "we", "compare", "forward", "kinematic", "mouse", "interface", "rather", "than", "inverse", "kinematic", "order", "measure", "fine-grained", "full", "character", "pose", "just", "end-effector", "placement", "require", "additional", "parameter", "inverse", "kinematic", "would", "also", "make", "experiment", "less", "control", "both", "condition", "Dino", "rig", "same", "skeleton", "contain", "seven", "articulated", "bone", "sequence", "pose", "identical", "per", "condition", "presentation", "interface", "order", "counterbalance", "exclude", "creative", "element", "pose", "experiment", "perfect", "simulation", "animation", "process", "do", "measure", "some", "aspect", "pose", "spatial", "thinking", "3d", "manipulation", "impact", "input", "device", "accuracy", "task", "completion", "time", "experiment", "we", "recruit", "from", "we", "university", "11", "participant", "-lrb-", "male", "female", "-rrb-", "age", "23", "38", "all", "participant", "report", "intermediate", "experience", "modeling", "tool", "like", "aya", "none", "figure", "12", "screen", "stimulus", "3d", "pose", "reproduction", "user", "study", "time", "minute", "150", "mouse", "100", "ours", "50", "Figure", "13", "two", "typical", "pose", "session", "show", "mouse", "-lrb-", "blue", "-rrb-", "we", "device", "-lrb-", "green", "-rrb-", "decrease", "pose", "distance", "from", "100", "minimal", "value", "completion", "-lrb-", "yellow", "dot", "-rrb-", "we", "take", "maximum", "two", "minimum", "baseline", "-lrb-", "dash", "black", "-rrb-", "compute", "integral", "under", "both", "curve", "up", "time", "reach", "distance", "value", "normalize", "define", "amount", "work", "necessary", "have", "previous", "experience", "we", "device", "Learning", "from", "-lsb-", "Yoshizaki", "et", "al.", "2011", "-rsb-", "we", "refrain", "from", "impose", "hard", "cutoff", "time", "instead", "instruct", "subject", "decide", "when", "close", "enough", "longer", "make", "efficient", "progress", "quantify", "performance", "we", "use", "three", "metric", "time", "completion", "accuracy", "amount", "work", "necessary", "reach", "close", "enough", "pose", "last", "be", "atypical", "metric", "deserve", "some", "elaboration", "when", "pose", "3d", "character", "often", "important", "quickly", "get", "rough", "configuration", "example", "communicate", "idea", "team", "member", "capture", "crucial", "creative", "process", "we", "analyze", "we", "datum", "term", "work", "order", "define", "meaningful", "fair", "measure", "we", "look", "integral", "distance", "each", "interface", "up", "same", "small", "distance", "maximum", "minimal", "distance", "across", "two", "interface", "we", "normalize", "respect", "time", "reach", "point", "order", "compare", "across", "user", "-lrb-", "see", "Figure", "13", "-rrb-", "Distance", "measure", "sum", "absolute", "angle", "smallest", "rotation", "align", "each", "bone?s", "frame", "orientation", "target", "subject?s", "pose", "easily", "compute", "when", "represent", "orientation", "unit", "quaternion", "target", "subject?s", "frame", "orientation", "respectively", "we", "metric", "11", "-lrb-", "-rrb-", "cos", "-lrb-", "Re", "-lrb-", "-rrb-", "-rrb-", "where", "-lrb-", "-rrb-", "-lsb-", "-rsb-", "distance", "normalize", "across", "pose", "we", "report", "measure", "term", "percentage", "distance", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "82", "publication", "date", "July", "2014", "82:8", "a.", "Jacobson", "et", "al.", "completion", "time", "final", "pose", "accuracy", "amount", "work", "minute", "pose", "distance", "pose", "distance", "mouse", "ours", "25", "30", "mouse", "ours", "60", "70", "mouse", "ours", "15", "20", "40", "30", "50", "10", "20", "10", "Figure", "14", "we", "3d", "pose", "replication", "user", "study", "show", "significant", "difference", "between", "aya", "clone", "mouse", "interface", "we", "device", "term", "speed", "long-run", "accuracy", "we", "device", "significantly", "better", "term", "work", "need", "reach", "acceptable", "distance", "Figure", "15", "user", "may", "bind", "small", "device", "subset", "rig", "layer", "animation", "multiple", "subset", "same", "parts?in", "different", "arrangements?first", "animate", "body", "Scorpion", "tail", "claw", "each", "pair", "leg", "between", "initial", "pose", "target", "pose", "each", "pose", "distance", "100", "decrease", "subject", "make", "progress", "toward", "-lrb-", "typically", "perfectly", "reach", "-rrb-", "we", "result", "-lrb-", "summarize", "Figure", "14", "-rrb-", "most", "immediate", "dramatic", "variability", "total", "pose", "time", "across", "subject", "-lrb-", "from", "15", "90", "minute", "-rrb-", "however", "within", "subject", "total", "pose", "time", "similar", "mouse", "have", "-lrb-", "mean", "4.66", "sd", "3.4", "-rrb-", "we", "device", "-lrb-", "mean", "5.08", "sd", "3.2", "-rrb-", "student?s", "t-test", "reveal", "significant", "difference", "between", "means", "-lrb-", "0.768", "-rrb-", "next", "we", "consider", "absolute", "distance", "target", "pose", "task", "completion", "again", "we", "see", "significant", "difference", "-lrb-", "0.465", "-rrb-", "between", "mouse", "we", "device", "mouse", "have", "-lrb-", "mean", "20", "sd", "10.3", "-rrb-", "we", "device", "-lrb-", "mean", "23.0", "sd", "8.2", "-rrb-", "finally", "regard", "amount", "work", "we", "see", "significant", "difference", "-lrb-", "0.008", "-rrb-", "between", "two", "condition", "work", "mouse", "have", "-lrb-", "mean", "64.8", "sd", "9.5", "-rrb-", "we", "device", "-lrb-", "mean", "51.9", "sd", "11.0", "-rrb-", "visualize", "distance", "each", "interface", "function", "time", "illustrate", "pattern", "-lrb-", "see", "Figure", "13", "-rrb-", "we", "device", "typically", "make", "very", "fast", "initial", "progress", "achieve", "close", "enough", "pose", "slow", "down", "mouse", "comparison", "make", "steady", "slow", "progress", "application", "we", "manufacture", "kit", "20", "joint", "nine", "splitter", "four", "extension", "segment", "14", "endcap", "controller", "-lrb-", "inset", "-rrb-", "we", "demonstrate", "effectiveness", "assemble", "device", "instance", "different", "context", "different", "character", "Figure", "16", "we", "design", "generalize", "customize", "splitter", "like", "hand", "friction", "control", "14", "attach", "joint", "allow", "device", "remain", "pose", "user", "pose", "Chimpanzee", "hand", "measure", "bend", "angle", "degree", "time", "seconds", "Figure", "17", "device", "three", "bend", "joint", "-lrb-", "left", "user?s", "hand", "omit", "-rrb-", "raise", "point", "leg", "2d", "character", "-lrb-", "middle", "-rrb-", "animate", "all", "joint", "simultaneously", "-lrb-", "right", "-rrb-", "Figure", "18", "we", "device", "also", "useful", "non-skeletal", "deformation", "paradigm", "like", "handle-based", "variational", "modeling", "main", "application", "we", "device", "interactive", "pose", "animation", "3d", "character", "Figure", "22", "highlight", "some", "pose", "create", "we", "device", "include", "humanoid", "character", "Knight", "Dino", "non-humanoid", "character", "Crocodile", "Ostrich", "Frog", "swedish", "lamp", "noteworthy", "some", "character", "-lrb-", "scorpion", "swedish", "lamp", "-rrb-", "rig", "use", "external", "software", "make", "use", "we", "skeleton", "match", "procedure", "other", "use", "we", "rest-pose", "registration", "very", "complex", "topology", "often", "easier", "layer", "animation", "record", "different", "part", "separately", "rather", "than", "control", "all", "degree", "freedom", "simultaneously", "Figure", "15", "show", "creation", "layered", "animation", "Scorpion", "-lrb-", "re", "-rrb-", "use", "only", "small", "subset", "part", "mouse", "interface", "easily", "allow", "layer", "animation", "up", "forward", "kinematic", "tree", "change", "propagate", "down", "tree", "exploit", "human", "proprioception", "we", "device", "take", "advantage", "full", "hierarchy", "allow", "layer", "both", "order", "kinematic", "tree", "we", "purposefully", "design", "general", "radial", "splitter", "support", "many", "branch", "cardinality", "orientation", "-lrb-", "see", "Figure", "-rrb-", "however", "we", "firmware", "algorithm", "support", "custom", "non-radial", "splitter", "special", "purpose", "-lrb-", "see", "Appedix", "-rrb-", "example", "we", "3d", "print", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "82", "publication", "date", "July", "2014", "tangible", "modular", "Input", "Device", "Character", "Animation", "82:9", "Figure", "19", "user", "interact", "elastic", "simulation", "Basset", "Hound", "real", "time", "use", "single", "joint", "control", "dog?s", "neck", "Figure", "20", "user", "unsatisfied", "limited", "control", "back", "elephant", "Figure", "she", "may", "quickly", "insert", "joint", "along", "spine", "increase", "flexibility", "hand", "shaped", "splitter", "use", "create", "fine-grained", "pose", "Chimpanzee", "hand", "-lrb-", "see", "Figure", "16", "-rrb-", "we", "device", "only", "suitable", "3d", "task", "ignore", "twist", "measurement", "also", "function", "2d", "cartoon", "animation", "control", "Figure", "17", "show", "user", "animate", "one-legged", "2d", "character", "we", "device", "allow", "simultaneous", "manipulation", "multiple", "joint", "simultaneous", "control", "impossible", "mouse", "interface", "Figure", "19", "illustrate", "particularly", "playful", "example", "here", "we", "device", "direct", "dog", "who", "govern", "dynamic", "elastic", "simulation", "we", "device", "may", "also", "provide", "input", "non-skeletal", "deformation", "system", "chain", "joint", "manipulate", "Shark", "Figure", "18", "drive", "handle-based", "deformation", "method", "-lsb-", "sorkine", "Alexa", "2007", "-rsb-", "only", "first", "last", "joint", "map", "handle", "middle", "joint", "while", "its", "measurement", "ignore", "act", "implicitly", "via", "kinematic", "chain", "help", "manage", "distance", "modularity", "we", "device", "allow", "user", "perfect", "refine", "work", "device", "match", "complexity", "desire", "articulation", "Figure", "20", "user", "add", "additional", "joint", "device", "use", "Figure", "we", "registration", "binding", "algorithm", "reduce", "effort", "require", "make", "change", "skeletal", "hierarchy", "resume", "articulation", "Limitations", "future", "work", "future", "work", "we", "would", "like", "optimize", "design", "performance", "we", "device", "arrive", "smaller", "faster", "cheaper", "part", "professional", "character", "rig", "may", "contain", "hundred", "bone", "span", "many", "level", "skeletal", "hierarchy", "we", "device?s", "size", "power", "consumption", "become", "practical", "limitation", "when", "bind", "large", "rig", "though", "partial", "binding", "possible", "any", "level", "rig?s", "hierarchy", "-lrb-", "see", "Figure", "15", "-rrb-", "we", "plan", "construct", "isolate", "twist", "bend", "joint", "which", "would", "reduce", "overall", "size", "situation", "where", "certain", "degree", "freedom", "semantically", "unnecessary", "-lrb-", "e.g.", "figure", "16", "17", "-rrb-", "despite", "aforementioned", "issue", "we", "work", "possible", "ball-and", "Figure", "21", "rig", "two", "joint", "control", "each", "arm", "-lrb-", "left", "-rrb-", "Beast?s", "hand", "make", "contact", "virtually", "despite", "lack", "contact", "device", "-lrb-", "middle", "-rrb-", "similarly", "make", "contact", "between", "end", "effector", "device", "do", "correspond", "same", "contact", "virtually", "socket", "joint", "which", "would", "overcome", "gimbal", "lock", "allow", "trace", "rotational", "geodesic", "we", "device", "accurately", "report", "relative", "orientation", "have", "sense", "its", "absolute", "location", "orientation", "would", "interesting", "combine", "we", "system", "rigid", "tracking", "system", "-lsb-", "hold", "et", "al.", "2012", "-rsb-", "though", "we", "registration", "algorithm", "help", "overcome", "physical-virtual", "disparity", "certain", "semantic", "relationship", "do", "carry", "over", "contact", "collision", "-lrb-", "see", "Figure", "21", "-rrb-", "perhaps", "haptic", "feedback", "could", "useful", "overcome", "though", "motor", "would", "encumber", "design", "increase", "cost", "finally", "we", "precise", "measurement", "would", "complement", "augmented", "reality", "environment", "-lsb-", "Ando", "et", "al.", "2002", "-rsb-", "conclusion", "tangible", "manipulation", "arbitrary", "topology", "skeleton", "prove", "powerful", "interface", "pose", "animation", "modeling", "we", "complementary", "rest-pose", "registration", "rig", "attachment", "algorithm", "lower", "barrier", "entry", "3d", "articulation", "task", "accuracy", "achieve", "first-time", "user", "optimistically", "open", "door", "build", "expert", "skill", "set", "around", "tangible", "manipulation", "device", "ours", "character", "animation", "we", "device", "one", "step", "toward", "greater", "immersion", "tangibility", "context", "pose", "design", "animate", "deformable", "3d", "shape", "display", "make", "advance", "toward", "convincing", "autostereoscopy", "3d", "printing", "become", "more", "commonplace", "we", "see", "potentially", "large", "impact", "from", "tangible", "input", "device", "virtual", "3d", "content", "end", "we", "attach", "complete", "hardware", "blueprint", "-lrb-", "openhardware", "-rrb-", "accompany", "source", "code", "hope", "foster", "future", "research", "direction", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "82", "publication", "date", "July", "2014", "82:10", "a.", "Jacobson", "et", "al.", "acknowledgement", "we", "indebted", "Ladislav", "Kavan", "illuminating", "discussion", "Gilles", "Caprari", "-lrb-", "gctronic.com", "-rrb-", "provide", "electronic", "engineering", "support", "we", "grateful", "hour", "spend", "we", "user", "study", "participant", "we", "thank", "Marco", "Attene", "make", "esh", "ix", "open", "source", "Olga", "Diamanti", "Romain", "Pr?vost", "Christian", "Sch?ler", "Kenshi", "Takayama", "Emily", "Whiting", "proofread", "work", "support", "part", "ERC", "grant", "imodel", "-lrb-", "stg-2012-306877", "-rrb-", "snf", "award", "200021", "137879", "Intel", "Doctoral", "Fellowship", "Knight", "initially", "create", "use", "cosmic", "blob", "software", "develop", "Dassault", "Systemes", "SolidWorks", "Corp.", "reference", "ndo", "Y.", "akahashus", "S.", "HIBAYAMA", "E.", "2002", "3d", "animation", "system", "superimpose", "cg", "physical", "armature", "Proc", "APCHI", "acher", "M.", "ICKEL", "B.", "AMES", "D.", "L.", "fister", "H.", "2012", "fabricate", "articulated", "character", "from", "skin", "mesh", "ACM", "Trans", "graph", "31", "aran", "i.", "opovus", "J.", "2007", "Automatic", "rigging", "animation", "3d", "character", "ACM", "Trans", "graph", "26", "72:1", "72:8", "ARAN", "I.", "LASIC", "D.", "RINSPUN", "E.", "opovus", "J.", "2009", "semantic", "deformation", "transfer", "ACM", "Trans", "graph", "28", "arne", "C.", "ACOBS", "D.", "E.", "ANDERS", "J.", "OLDMAN", "D.", "B.", "USINKIEWICZ", "S.", "inkelstein", "a.", "grawalum", "M.", "2008", "Video", "puppetry", "performative", "interface", "cutout", "animation", "ACM", "Trans", "graph", "27", "124", "haraj", "G.", "HORM", "AHLEN", "T.", "eidel", "h.-p.", "heobalt", "C.", "2012", "automatically", "rig", "multi-component", "character", "Comput", "graph", "Forum", "30", "AL", "J.", "ALIAN", "D.", "A.", "MATI", "C.", "LEINBERGER", "R.", "tee", "a.", "AUTZ", "J.", "EYRICH", "T.", "2012", "3d-printing", "nonassembly", "articulate", "model", "ACM", "Trans", "graph", "31", "elsy", "nc", "2013", "QUMARION", "http://www.clip-studio.com", "hen", "J.", "ZADI", "S.", "itzgibbon", "a.", "2012", "Kinetre", "animate", "world", "human", "body", "Proc", "UIST", "ACM", "Press", "New", "York", "New", "York", "USA", "435", "ontcheva", "M.", "ngve", "G.", "opovus", "Z.", "2003", "layered", "act", "character", "animation", "ACM", "Trans", "graph", "22", "-lrb-", "July", "-rrb-", "SPOSITO", "C.", "ALEY", "W.", "B.", "ng", "J.", "1995", "mouse", "monkey", "specialize", "input", "device", "virtual", "body", "animation", "Proc", "i3d", "ENG", "T.-C.", "UNAWARDANE", "P.", "AVIS", "J.", "IANG", "B.", "2008", "Motion", "capture", "datum", "retrieval", "use", "artist?s", "doll", "Proc", "icpr", "eld", "R.", "UPTA", "A.", "URLESS", "B.", "GRAWALA", "M.", "2012", "3d", "puppetry", "kinect-based", "interface", "3d", "animation", "Proc", "UIST", "ACM", "New", "York", "NY", "USA", "423", "434", "shigaki", "S.", "HITE", "T.", "ORDAN", "V.", "B.", "IU", "C.", "K.", "2009", "performance-based", "control", "interface", "character", "animation", "ACM", "Trans", "graph", "28", "shii", "H.", "LLMER", "B.", "1997", "tangible", "bit", "towards", "seamless", "interface", "between", "people", "bit", "atom", "Proc", "chus", "ACOB", "R.", "J.", "K.", "IBERT", "L.", "E.", "arlane", "D.", "C.", "ULLEN", "M.", "P.", "1994", "integrality", "separability", "input", "device", "ACM", "Trans", "comput.-hum", "interact", "-lrb-", "mar.", "-rrb-", "26", "acobson", "a.", "ARAN", "I.", "opovus", "J.", "ORKINE", "O.", "2011", "bounded", "biharmonic", "weight", "real-time", "deformation", "ACM", "Trans", "graph", "30", "78:1", "78:8", "acobson", "a.", "anozzo", "D.", "ET", "AL", "2013", "libigl", "simple", "C++", "geometry", "processing", "library", "http://igl.ethz.ch/projects/libigl/", "OHNSON", "M.", "P.", "ILSON", "a.", "lumberg", "B.", "LINE", "C.", "obick", "a.", "1999", "sympathetic", "interface", "Proc", "chus", "ABSCH", "W.", "1976", "solution", "best", "rotation", "relate", "two", "set", "vector", "Acta", "Crystallographica", "32", "922", "NEP", "B.", "AYES", "C.", "ayre", "R.", "ILLIAMS", "T.", "1995", "dinosaur", "input", "device", "Proc", "chus", "304", "309", "UHN", "H.", "W.", "1955", "hungarian", "method", "assignment", "problem", "Naval", "research", "logistics", "quarterly", "1-2", "83", "97", "J.", "garashi", "T.", "ITANI", "J.", "IAO", "M.", "Y.", "2012", "sketch", "interface", "sit", "pose", "design", "virtual", "environment", "IEEE", "TVCG", "18", "11", "1979", "1991", "elexi", "y", "2013", "mlx90316", "datasheet", "ikonomidi", "i.", "YRIAZIS", "N.", "RGYROS", "A.", "A.", "2012", "track", "Articulated", "Motion", "two", "strongly", "interact", "hand", "IEEE", "CVPR", "ore", "S.", "erzopoulo", "D.", "inton", "G.", "2002", "desktop", "input", "device", "interface", "interactive", "3d", "character", "animation", "Proc", "Graphics", "Interface", "133", "140", "affle", "H.", "S.", "ARKES", "A.", "J.", "shii", "H.", "2004", "Topobo", "constructive", "assembly", "system", "kinetic", "memory", "Proc", "chus", "omero", "J.", "JELLSTROM", "H.", "RAGIC", "D.", "2010", "hand", "action", "real-time", "3d", "reconstruction", "hand", "interaction", "object", "IEEE", "ICRA", "458", "463", "eol", "Y.", "O?S", "ULLIVAN", "C.", "ee", "J.", "2013", "creature", "feature", "online", "motion", "puppetry", "non-human", "character", "Proc", "SCA", "him", "B.", "2010", "best", "student", "project", "prize", "talk", "wonder", "hospital", "SIGGRAPH", "Computer", "Animation", "Festival", "hiratorus", "T.", "AHLER", "M.", "rezevant", "W.", "odgin", "J.", "K.", "2013", "express", "animated", "performance", "through", "puppeteering", "3duus", "IEEE", "59", "66", "hneiderman", "B.", "1997", "direct", "manipulation", "comprehensible", "predictable", "controllable", "user", "interface", "Proc", "IUI", "33", "39", "hoemake", "K.", "1992", "Arcball", "user", "interface", "specify", "three-dimensional", "orientation", "use", "mouse", "Proc", "cgus", "HOTTON", "J.", "harp", "T.", "IPMAN", "a.", "itzgibbon", "a.", "INOC", "CHIO", "M.", "LAKE", "a.", "ook", "m.", "oore", "R.", "2013", "real-time", "human", "pose", "recognition", "part", "from", "single", "depth", "image", "Commun", "ACM", "56", "orkine", "O.", "LEXA", "M.", "2007", "as-rigid-as-possible", "surface", "modeling", "Proc", "sgp", "109", "116", "ridhar", "S.", "ULASVIRTA", "a.", "heobalt", "C.", "2013", "interactive", "markerless", "articulate", "hand", "motion", "tracking", "use", "rgb", "depth", "datum", "Proc", "iccv", "umner", "R.", "opovus", "J.", "2004", "deformation", "transfer", "triangle", "mesh", "ACM", "Trans", "graph", "23", "399", "405", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "82", "publication", "date", "July", "2014", "tangible", "modular", "Input", "Device", "Character", "Animation", "82:11", "Figure", "22", "we", "test", "we", "device", "wide", "range", "character", "skeleton", "vary", "topological", "geometric", "complexity", "each", "pair", "row", "virtual", "character", "paired", "device", "leftmost", "column", "each", "pair", "show", "device", "character", "rest", "bind", "state", "other", "two", "column", "show", "pose", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "82", "publication", "date", "July", "2014", "82:12", "a.", "Jacobson", "et", "al.", "agliasacchus", "a.", "LHASHIM", "I.", "LSON", "M.", "hang", "H.", "2012", "mean", "curvature", "skeleton", "Comput", "graph", "Forum", "31", "ang", "R.", "Y.", "opovus", "J.", "2009", "real-time", "hand-tracking", "color", "glove", "ACM", "Trans", "graph", "28", "63:1", "63:8", "ELLER", "M.", "P.", "E.", "Y.-L.", "ross", "M.", "D.", "2008", "Posey", "instrument", "poseable", "hub", "strut", "construction", "toy", "Proc", "TEI", "39", "46", "oshizakus", "W.", "ugiura", "Y.", "HIOU", "A.", "C.", "ASHIMOTO", "S.", "nami", "M.", "garashi", "T.", "KAZAWA", "Y.", "AWACHI", "K.", "AGAMI", "S.", "OCHIMARU", "M.", "2011", "actuate", "physical", "puppet", "input", "device", "control", "digital", "manikin", "Proc", "chus", "637", "646", "non-radial", "splitter", "equation", "-lrb-", "-rrb-", "do", "apply", "non-radial", "splitter", "-lrb-", "e.g.", "hand", "splitter", "Figure", "16", "-rrb-", "non-radial", "splitter", "node", "we", "introduce", "auxiliary", "origin", "ij", "outlet", "correspond", "each", "child", "j.", "place", "origin", "accordingly", "we", "may", "redefine", "ij", "so", "ij", "we", "can", "express", "each", "ij", "term", "scale", "term", "original", "splitter", "origin", "12", "ij", "ij", "ij", "where", "ij", "ij", "analogous", "ij", "fix", "indicate", "direction", "offset", "origin", "ij", "account", "stretch", "differently", "from", "before", "we", "now", "must", "change", "all", "scaling", "factor", "associate", "splitter", "uniformly", "can", "model", "additional", "linear", "equality", "constraint", "13", "ij", "ij", "ik", "ik", "where", "ij", "normalize", "-lrb-", "default", "-rrb-", "scale", "each", "origin", "offset", "since", "ratio", "ij", "ik", "fix", "each", "constraint", "linear", "ij", "ik", "similarly", "other", "constraint", "affect", "only", "show", "up", "during", "qp", "solve", "design", "target", "user", "study", "we", "ask", "18", "subject", "-lrb-", "14", "male", "female", "-rrb-", "aim", "cannon", "virtual", "tank", "use", "mouse", "keyboard", "single", "joint", "we", "device", "-lrb-", "see", "inset", "-rrb-", "subject", "again", "from", "we", "university", "keyboard", "subject", "control", "cannon?s", "pitch", "yaw", "angle", "small", "increment", "use", "up", "down", "leave", "right", "key", "mouse", "absolute", "-lrb-", "-rrb-", "coordinate", "hidden", "cursor", "map", "linearly", "angle", "respectively", "we", "device", "first", "twist", "angle", "turn", "left", "right", "bend", "part", "control", "pitch", "cannon", "bullet", "fire", "use", "foot", "pedal", "all", "condition", "repeat", "attempt", "allow", "until", "hit", "new", "target", "appear", "random", "location", "presentation", "order", "condition", "counterbalance", "latin-square", "design", "each", "user", "ask", "hit", "total", "50", "target", "per", "input", "device", "block", "10", "allow", "rest", "between", "block", "two-way", "repeat", "measure", "ANOVA", "interface", "block", "id", "independent", "variable", "reveal", "main", "effect", "block", "slight", "decrease", "mean", "task", "completion", "time", "indicate", "mild", "learning", "effect", "however", "post-hoc", "analysis", "yield", "significant", "difference", "speed", "between", "block", "-lrb-", "all", "0.05", "-rrb-", "term", "interface", "use", "mean", "task", "completion", "time", "keyboard", "slowest", "-lrb-", "mean", "4.99", "standard", "deviation", "0.3", "-rrb-", "follow", "mouse", "-lrb-", "4.31", "0.4", "-rrb-", "we", "device", "-lrb-", "3.77", "0.235", "-rrb-", "main", "effect", "interface", "task", "completion", "time", "exist", "-lrb-", "-lrb-", "2,34", "-rrb-", "22.8", "0.001", "-rrb-", "pairwise", "comparison", "show", "significance", "between", "keyboard", "mouse", "-lrb-", "0.002", "-rrb-", "between", "keyboard", "device", "-lrb-", "0.001", "-rrb-", "while", "we", "device", "score", "slightly", "better", "than", "mouse", "difference", "strictly", "significant", "-lrb-", "0.1", "-rrb-", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "82", "publication", "date", "July", "2014" ],
  "content" : "\n  \n    45c4ff6580b8aa504518b199e186b7120aeda23397736f6e7831d1dfc3e718b6\n    p3h\n    10.1145/2601097.2601112\n    Name identification was not possible. \n  \n  \n    \n      \n        Tangible and Modular Input Device for Character Articulation\n      \n      Alec Jacobson 1 Daniele Panozzo 1 Oliver Glauser 1 C?dric Pradalier 2 Otmar Hilliges 1 1 ETH Zurich 2 GeorgiaTech Lorraine\n      \n        \n        Figure 1: Assembled from modular, interchangeable, and hot-pluggable parts (left), our novel device forms a skeletal tree matching the Elephant. As the user manipulates each joint of the device, measured bone rotations animate a skeletal rig, and the Elephant comes to life.\n      \n      Articulation of 3D characters requires control over many degrees of freedom: a difficult task with standard 2D interfaces. We present a tangible input device composed of interchangeable, hot-pluggable parts. Embedded sensors measure the device?s pose at rates suitable for real-time editing and animation. Splitter parts allow branching to accommodate any skeletal tree. During assembly, the device recognizes topological changes as individual parts or pre-assembled subtrees are plugged and unplugged. A novel semi-automatic registration approach helps the user quickly map the device?s degrees of freedom to a virtual skeleton inside the character. User studies report favorable comparisons to mouse and keyboard interfaces for the tasks of target acquisition and pose replication. Our device provides input for character rigging and automatic weight computation, direct skeletal deformation, interaction with physical simulations, and handle-based variational geometric modeling. CR Categories: I.3.1 [Computer Graphics]: Input devices Keywords: tangible input, skeletal deformation, animation system\n      Links:\n      \n        \n      \n      DL PDF W\n      \n        \n        \n      \n      EB\n      \n        \n      \n      V IDEO\n    \n    \n      \n        1 Introduction\n      \n      Interactively articulating virtual 3D characters lies at the heart of computer animation and geometric modeling. Sophisticated techniques express shape deformation in terms of a small set of degrees\n      \n        ACM Reference Format\n      \n      Jacobson, A., Panozzo, D., Glauser, O., Pradalier, C., Hilliges, O., Sorkine-Hornung, O. 2014. Tangible and Modular Input Device for Character Articulation. ACM Trans. Graph. 33, 4, Article 82 (July 2014), 12 pages. DOI = 10.1145/2601097.2601112 http://doi.acm.org/10.1145/2601097.2601112.\n      \n        Copyright Notice\n      \n      Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the fi rst page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org . Copyright ? ACM 0730-0301/14/07-ART82 $15.00. DOI: http://doi.acm.org/10.1145/2601097.2601112\n      Olga Sorkine-Hornung 1\n      of freedom, most often the joint angles of an internal skeleton. Yet, even the ubiquitous skeletal deformation systems have too many parameters to be managed directly with traditional mouse and keyboard input. Animators must rely on indirect methods such as inverse kinematics or decompose complex and integrated motions into sequential manipulations of a small subset of the parameters?for example, iteratively positioning each bone of a skeleton hierarchy. While direct manipulation mouse and touch interfaces are successful in 2D [Shneiderman 1997], 3D interactions with 2D input are illposed and thus more challenging. Virtual 3D widgets, e.g. Arcballs [Shoemake 1992], map 2D mouse input to 3D rotations, but interaction with the underlying 3D character is indirect and limited to a subset of the overall articulation parameters. Successful commercial products with 2D interfaces, e.g. Autodesk?s M AYA , are notorious for steep learning curves and require interface-specific training. Mouse and keyboard interfaces fall short because their control spaces do not match the perceptual space of the 3D interaction task [Jacob et al. 1994]. So instead, we propose direct physical manipulation via a tangible interface [Ishii and Ullmer 1997] with degrees of freedom in direct correspondence with the 3D rotations at skeletal joints of the virtual character. The device is composed of modular, hot-pluggable mechanical parts. The user may quickly assemble a custom combination of measurement joints and branching splitters to establish a one-to-one mapping between the physical device and virtual skeleton (see Figure 1 ). We leverage modern advances in 3D printing to produce compact, ready-to-assemble parts, comfortably held with one or two hands. Exploiting the benefits of proprioception and physical affordances, an assembled device allows interaction with a physical manifestation of the virtual object, without the need for a literal, fixed replication. Each joint measures three rotation angles with accuracy of ? 1 ? at a frequency up to 250 Hz. This makes the device not only suitable for rapid prototyping, but also precise control tasks such as meticulous keyframe posing and real-time animation capture. Complementary to the physical device, we introduce algorithms to facilitate the device?s employment in the standard character rigging and animation pipelines. A novel semi-automatic registration algorithm accounts for the disparity between the device?s physical proportions and those of the given virtual character. The user may then quickly match the rest pose of a character and immediately begin animating. In traditional animation and posing, absolute positions and orientations are often specified separately or even by an external procedure (e.g. game physics engine). Thus, our device only measures relative bone orientations, allowing the user to move the device around on her desk to suit her comfort (analogous to the relative positioning of a typical desktop mouse). Demonstrating our device?s capabilities, we discuss results from a wide range of examples. Our device successfully provides input for character rigging and automatic weight computation, direct skeletal deformation, interaction with physical simulations, and handle-based variational geometric modeling. User studies?testing target acquisition and pose replication?report favorable findings comparing to traditional mouse and keyboard interfaces. Our device is no less accurate, but significantly more efficient.\n      ACM Transactions on Graphics, Vol. 33, No. 4, Article 82, Publication Date: July 2014\n      82:2\n      ?\n      A. Jacobson et al.\n      \n        2 Related work\n        Current commercial modeling and animation packages with mouse and keyboard interfaces favor control over ease of use and demand a high level of expertise. To alleviate this, many previous systems devise alternative user interfaces for 3D character articulation ranging from sketching (e.g. [Lin et al. 2012]) to full-blown motion capture (e.g. [Ishigaki et al. 2009]). We briefly review several areas of the related work that our system builds upon and extends.  Vision-based motion capture systems are among the most prevalent methods to create life-like animations of anthropomorphic, humanoid characters, and the field is widely studied (e.g. [Ishigaki et al. 2009]). While producing high-quality results, most systems require expensive equipment, large performance spaces, and often require body suits with markers. Requiring a human actor, they are not wellsuited for the animation of non-humanoid characters. Nonetheless, some systems map human body motions to non-humanoid shapes, creating casual, but life-like animations [Seol et al. 2013; Chen et al. 2012]. This mapping introduces ambiguities, and performance capture still requires a large space and an actor.\n        \n          \n          Figure 2:\n        \n        Recent developments in handpose estimation assuage space requirements and bring motion capture to desktop sized spaces [Romero et al. 2010; Oikonomidis et al. 2012]. Wang & Popovi? track human hand poses to animate arbitrary shapes [2009]. Again, mapping ambiguities prevent more precise interactions and now an actor?s hand is needed. Tracking a doll avoids the issue of needing an actor?s body or hand [Feng et al. 2008; Shim 2010], Vision systems suffer but like all vision systems there from occlusion problems. Our meare lingering issues concerning chanical device does not and is calibration, camera placement held comfortably with both hands. and lighting. Most relevantly, a hand-held input device is especially prone to occlusion problems (see Figure 2 ). As a consequence of these issues, state-of-the-art computer vision techniques rely heavily on a fixed skeletal topology as a prior [Shotton et al. 2013]. In contrast, our mechanical device is modular and automatically detects topology changes. Its internal sensors function accurately regardless of the environment, making the device not only suitable as a desktop tool at artist workstations but also as a performance instrument.\n        Low degree of freedom tangible UIs. Ishii & Ullmer introduce tangible user interfaces for manipulating virtual objects [1997]. A vast range of tangible UIs exist using a variety of methods to track physical objects, including computer vision, electrical tags and visual barcodes. Character animation prominently appears among many application areas. In [Johnson et al. 1999], a plush toy with embedded sensing recognizes discrete physical input events and triggers playback of pre-recorded animations. More recently, a vision-based 2D puppeteering system lets users perform 2D animations in real time using hand-drawn paper cut-out characters [Barnes et al. 2008]. Analogously in 3D, Held et al. animate 3D characters by tracking rigid physical objects? positions and orientations [2012]. These systems already demonstrate the expressiveness of tangible controllers for animation and storytelling. But unlike our approach, which allows fine-grained control over a character?s many degrees of freedom, they are restricted to independent rigid transformations.  Nonetheless, tracking rigid objects independently in time may be used to animate deformable characters by layering animations [Oore et al. 2002; Dontcheva et al. 2003; Shiratori et al. 2013]. A user evaluation with expert animators shows benefits of layered animations over direct, full-body motion capture (in particular for non-humanoid characters) but also reveals the need for integrated motion control mechanisms (i.e. chains of joints) [Shiratori et al. 2013]. This is difficult to achieve with their physical controllers. Our system builds upon these ideas and due to its modularity allows for seamless transitions between layered animations of single joints, skeletal subtrees and the integrated animation of the entire skeleton. Mechanical systems. A number of systems directly map a mechanical skeleton to an on-screen character. The mechanical control of non-humanoid, but custom fixed-topology, characters is perhaps originally introduced by the ?Dinosaur Input Device?, used to produce Jurassic Park [Knep et al. 1995]. The Monkey system of [Esposito et al. 1995] and later the Qumarion of [Celsys, Inc. 2013] optimize their designs for fixed humanoid topology at the cost of generality. The fixed humanoid-topology robot of [Yoshizaki et al. 2011] complements rotation sensors with actuating motors. In the context of keyframe posing, this convenient feature allows the device to reconfigure itself to previous poses. While certainly useful, actuation comes with serious drawbacks such as limited range of motion, slower response time and bulkier designs with limited or no reconfigurability. The fixed topology of the robot becomes particularly problematic when animating characters, as highlighted in [Yoshizaki et al. 2011]. The reconfigurable input device of [Weller et al. 2008] employs large, ball-and-socket joints. Though ball-and-sockets are intuitive in many scenarios, the achieved angular precision of 20 ? is insufficient for direct character animation. In contrast, our joints are compact and measure sub-degree accurate angles with high precision. Solving in some ways the inverse problem to ours, the Topobo device of [Raffle et al. 2004] is an assembly system that enables the construction of robots which record and replay motion sequences. Each piece is a separate unit that measures angles using servo motors. However, a piece does not know its relationship with others or its place in the global topology, thus it may not be readily used as an input device. Skeleton fitting and deformation transfer. The way we help register the device within an input shape bears similarity to existing methods for skeleton extraction, registration or fitting. In geometry processing, techniques exist to robustly extract the medial axis or ?curve skeleton? of a shape (e.g. [Tagliasacchi et al. 2012]). Though ostensibly similar to animation skeletons, curve skeletons are meant as a compact, abstract representation of the shape. Skeleton fitting methods for animation do exist, notably [Baran and Popovi? 2007]. The method fits a skeleton with given topology to an upright-oriented character, performing best on humanoids. Their expensive combina- torial optimization would not easily take advantage of the real-time angle measurements of our device. Our interactive approach exactly matches measured orientations. It may register to the entire shape or to parts of it, and it updates as the device topology changes. In computer vision, skeleton fitting has become part of the standard motion capture and pose recognition pipelines. Robust fits are found by querying databases of skeleton poses with feature keys based on depth images or tracked extremities [Shotton et al. 2013; Sridhar et al. 2013]. However, databases are generally populated with example poses of specific topologies tailored for common scenarios, e.g. upright humans or pointing hand gestures. Our skeleton matching procedure maps measured angles to a preexisting animation rig?s skeleton, whose proportions and orientations may differ. The more general topic problem of transferring deformations between arbitrarily different skeletons or shapes is well studied, e.g. [Sumner and Popovi? 2004; Baran et al. 2009; Bharaj et al. 2012]. We avoid such heavy-handed methods by utilizing our device?s modularity: instead of mapping to an ill-fitting device, the user may simply reassemble a more appropriate one.\n        ACM Transactions on Graphics, Vol. 33, No. 4, Article 82, Publication Date: July 2014\n        power 4 1 2 1 5 3 USB 4 1 2 1\n        \n          Figure 3: A device instance may consist of joints (1), splitters (2),\n        \n        extension segments(3),\n        \n          \n        \n      \n      \n        3 Hardware\n        Our goal is to design an easy to use input device for general-purpose 3D skeletal articulation. This goal breaks down into sub-criteria. To control a variety of characters with different skeletal topologies (alligators, centaurs, ostriches, etc.), the device must be modular and reconfigurable. To operate comfortably at a desk, the device should be compact in size and structurally sound to prevent accidental deformation. Finally, the device must measure 3D rotations with high precision and accuracy (see Figure 4 ). A user constructs an instance of our device on the fly from modular parts or nodes. Figure 3 shows a typical configuration with a legend of node types. Mechanically moveable joints have embedded sensors measuring three intrinsic Euler angles. Static splitters allow branching in the skeletal tree. Static extension segments increase separation between joints and splitters. Passive endcaps cover exposed electronics and provide a comfortable manipulation handle. The entire skeletal tree connects to the host computer via the controller which transmits data, and powers the other nodes. While the entire device is a custom design, it is nonetheless easy to reproduce. We provide a complete OpenHardware specification in supplemental material. We include CAD files for 3D printing and circuit schematics, both ready for outsourced fabrication. Angular measurements at joints. Skeletal deformation is conducted with a kinematic tree of internal rigid bones. The skeleton?s deformation is then parameterized by relative rotations orienting each bone with respect to its parent. Though typically fixed during deformation, bone lengths vary across skeletons and models. To maximize modularity and facilitate design, our joints are a single fixed size, in general not matching the lengths of virtual skeletons? bones. We alleviate this disparity in software (see Section 4). To steer such a skeleton, our device reports relative rotations for each corresponding bone in the form of three intrinsic Euler angles. Our joints are composed of two twisting parts connected via a bending hinge (see Figure 4 , left). The resulting relative rotation at the ith joint in the device is the composition of rotations by the twist angle ?, the bend angle ? and the final twist angle ?:\n        \n          Figure 4: Left: A joint has three rotational degrees of freedom parameterized by Euler angles: ? (twist), ? (bend), ? (twist). Right: Bending range is just over 180 ? and comparing visually measured physical angles with the sensor?s reveals an accuracy of ? 1 ? .\n        \n        \n          Figure 5: An undisturbed joint left on a desk for two seconds measures variations in angle < 0.1 ? for all three sensors. The theoretical minimum jitter is 0.022 ? [Melexis Sys. 2013]. Observing these angles for 10 minutes shows maximum variation ?0.066 ? with a mean of 0.005 ? and standard deviation of 0.013 ? .\n        \n        \n          1\n          R i = R z (?)R x (?)R z (?),\n        \n        \n          \n        \n        where R w (?) rotates about the w-axis by angle ?. We align the relative z-axis to lie along the joint when all angles read 0 ? . The signed rotation angle of each part is measured by a corresponding Hall sensor and permanent magnet pair. Hall sensors are readily available in very small form-factors [Melexis Sys. 2013] and measure the orientation of our magnets? magnetic fields with an accuracy of ? 1 ? (see Figure 4 , right) and a precision of < 0.1 ? (see Figure 5 ). We place a small, flat magnet less than a millimeter away from each sensor. This ensures a very stable magnetic field not affected by external magnetic perturbations common in office environments. Each joint consumes 50mA at Hall sensor 5V. Powered solely by USB, our device could support up to 10 joints. With an external power-source (e.g. battery or wall be supported adapter) by more the controller. joints can magnet Before arriving at Hall sensors, we also evaluated two alternative sensor types. Potentiometers do not provide sufficient precision and suffer from a ?dead-zone?. A combination of a 3D accelerometer and a 3D magnetometer seems promising, since it frees mechanical design, but would require a locally stable magnetic field within a range of 10cm. Our experiments show that the magnetic field diverges wildly inside an office environment, leading to angular errors above 40 ? . Our final Hall sensor and magnet pairing avoids this as the magnetic field is entirely dominated by the nearby magnet, not even detectably affected by the other magnets on the same joint. Instead of our twist-bend-twist joints, one could imagine a ball-andsocket style joints akin to the human shoulder joint. The socket would need to simultaneously hold the joint securely in place and not limit the range of motion. The articulated 3D-printed characters of [B?cher et al. 2012; Cal? et al. 2012] use ball-and-socket joints and cite friction and range of motion as lingering challenges, even without worrying about embedding sensor electronics. Accurate angle measurements also appear elusive. The LED and photosensors used for the large ball-and-socket joints in [Weller et al. 2008] measure rotations with orders of magnitude worse accuracy than our twist-bend-twist joints with Hall sensors. Our rotation parameterization suffers inherently from gimbal lock, but retains high accuracy, range of motion and easy friction control. Twisting angles span a range slightly less than 360 ? , the bending angle slightly more than 180 ? . Three accessible screws control the frictional stiffness of each joint. Data marshalling. Each joint also contains a dedicated microcontroller. An assembled instance of our device can be understood as a reconfigurable sensor network. Each joint acquires angular data locally and communicates via a shared bus with the controller. Each component has a small amount of persistent memory and stores information such as its unique ID, node type, and color. Joints store three calibration offset angles. Splitters store additionally the number of connected children and relative orientation of its outlets, having been calibrated once (see Figure 6 ). Via the unique node ID, additional information may be associated to nodes and stored in software on the host computer (e.g. positional hints in Section 4). This memory facilitates topology detection and on screen visualization, but also allows a user to resume previously assembled devices. When a previous configuration is recognized, parameters may be restored so the user can immediately resume working with zero overhead. Communication through a wired bus supports angle measurements at a frequency that is inversely proportional to the number of joints: from 250Hz with a single joint to 20Hz with 24 joints. All parts connect electronically using off-the-shelf male-female connectors with six pins: two for power, two for data and one for topology detection (and one unused). Inside each joint, components are connected with flexible wires, shielded in silicon to prevent breakage when bending or twisting. Mechanical linkage uses an asymmetric hook-and-lock to prevent faulty or incorrect connection.\n        ACM Transactions on Graphics, Vol. 33, No. 4, Article 82, Publication Date: July 2014\n        82:4\n        ?\n        A. Jacobson et al.\n        \n          Figure 6: Splitters need one-time calibration of outlet orientations (left). This is easy using a joint rotated so that outgoing frames match incoming frames (right), aided by embossed arrows (yellow).\n        \n        \n          \n          Figure 7: Our splitter design is general, supporting many different branching valences and outward orientations.\n        \n        \n          Figure 8: Two joints roughly match the proportions of the Mastiff?s\n        \n        the Donkey?s Giraffe, 2)\n        \n          \n        \n        We equip each node with controllable multi-color LEDs. By default, they indicate status: powered, initialized, detected within topology. In software, we replicate LED states in our visualization and activate LEDs to assist the user: for example, selecting a node on screen blinks a blue LED on the corresponding physical node. Topology detection is achieved by passing messages between connected nodes. We use a simple distributed algorithm to visit nodes in depth-first order. Every joint begins initialization by listening to broadcasts on the shared bus. The controller emits a ?topology pulse? to the first connected joint. Recursively, when a joint receives the pulse, it reserves a unique ID and broadcasts it to all other nodes. After receiving confirmation from the controller, the joint sends the topology pulse to its children. During the entire process, the controller forwards messages, containing node types and unique IDs, to the host computer, which then reconstructs the device on screen. The topology discovery is triggered every time a node is added or removed and takes approximately 100ms.  Static parts. The remaining parts in our device have no moveable pieces aside from small sliding connection locks. The branching of the virtual character?s skeleton is in general arbitrary both in terms of valence and geometry. We propose the general concept of a radial splitter which supports as many outlets as will fit without overlap at any orientation. Ideally, we would manufacture a splitter with the same outlets at the same orientation as the given character. But this is not practically feasible if we wish to support arbitrary input shapes. Instead we settle on a small but sufficient set of common arrangements (see Figure 7 ). Extension segments intensify proprioception by helping overcome the physical-virtual size disparity. To keep electronics simple, refresh rates high and power consumption minimal, extension segments are unseen during topology detection. Finally, plastic endcaps are purely ergonomic.\n      \n      \n        4 Method\n        We now discuss algorithmic contributions that unleash our device?s full potential within the character animation and geometry process ing pipelines. We support two common use cases. First, we consider the animation of characters without existing rigs, that is, just a triangle mesh without an associated control skeleton or skinning weights. With our assistance, the user may use our device to define such a skeleton and compute weights automatically. Second, we help the user attach the input device to characters with existing rigs, potentially manually created by a professional animator. In this case, we match the device?s degrees of freedom to the rig?s and appropriately adjust measured rotations while deforming to ensure intuitive control.\n        ACM Transactions on Graphics, Vol. 33, No. 4, Article 82, Publication Date: July 2014\n        Tangible and Modular Input Device for Character Animation\n        ?\n        82:5\n        \n          \n          Figure 9: Left to right: As the user adds joint position hints, the virtual device snaps into place within the un-rigged Dino model. This defines a virtual skeleton form which we may automatically compute skinning weights.\n        \n        \n          4.1 Rest pose registration\n          Standard skeletal deformation defines bone transformations relative to some rest pose. Thus, to control un-rigged characters we must first infer such a rest-pose skeleton from the current device configuration. Our device?s joint angles and topology fully determine a skeletal tree in space up to a global rigid transformation. However, the distances between joints of the physical skeleton will?in general?not match those of the character on screen (see Figure 8 ). Extension segments help alleviate this, but their proportions are also fixed. Hence, we must register the device?s current configuration to the character by finding appropriate lengths between each pair of neighboring nodes and a global rigid transformation. Thus creating a virtual device embedded in the on-screen character ( Figure 9 , left). This could be achieved manually by dragging handles on the virtual device and restricting changes to agree with the current measured angles. As the tree hierarchy propagates changes downstream in the kinematic chain, this would require many iterations of adjustments. On the other hand, fully automatic fitting is ill-posed. A good fit requires heavy assumptions [Baran and Popovi? 2007] or semantic knowledge of the model and desired output animation. We opt for a semi-automatic, variational approach. Given a sparse set of joint position hints, our optimization continually determines appropriate values for all bone lengths and the global rigid transformation, incorporating device input and new positional hints interactively. After registration, a skeleton is inferred and skinning weights computed automatically (e.g. with [Jacobson et al. 2011], see Figure 9 , right), and the user can begin animating directly. Assuming a topology is detected, let the current device configuration be represented by a list of non-root node positions X = {x 1 , x 2 , . . . , x n } for x i ? R 3 and a global rotation Q 0 ? SO(3) and translation x 0 ? R 3 associated with the root. The position of each non-root node i may be written recursively using forward kinematics as ? 0 ?\n          \n            2\n            x i = x j + Q j ? 0 ? , s i\n          \n          with Q j = R i Q k if k is the parent of j, and s i ? R is the length of the edge between node i and its parent j. If we let p i be the origin of the parent of a non-root node i, so that if node j is the parent of node i then p i = x j , then we may rewrite explicitly that\n          \n            3\n            x i = s i Q 0 v i + p i ,\n          \n          where v i is the directional unit-vector, determined ? up to rotation by Q 0 ? via Equation (1) by the angles read from the device.  Energy formulation. The lengths S = {s 1 , s 2 , . . . , s n }, global rotation Q 0 and global translation x 0 span node positions X exactly maintaining the relative orientations of the device. To find the best values, we solve the following non-linear optimization problem:\n          argmin w user E user (X) + w reg E reg (S) + w drag E drag (S, x 0 , X), S,Q 0 ,x 0 ,X\n          \n            5\n            subject to x i = s i Q 0 v i + p i , ?i ? {1, . . . , n},\n          \n          \n            6\n            s i > 0, ?i ? {1, . . . , n},\n          \n          where the scalar weights w user , w reg , and w drag balance energy terms. Though X is fully determined by the other variables via linear equality constraints (5), we simplify the description (and implementation) by treating all S, x 0 , Q 0 and X as variables. We delegate our solver to eliminate degrees of freedom and enforce hard constraints. The user may specify a desired location u i for any node i. Generally speaking, the current measured angles will prohibit exactly satisfying an arbitrary constellation of such constraints. Therefore, we attempt to achieve each location in a least-squares sense:\n          \n            7\n            E user (X) = x i ? u i 2 . i if ?u i\n          \n          With only a few user-specified hints, our problem is underdetermined, e.g. a single constraint only, or a straight chain with user constraints at either end. To ensure a reasonable skeleton, we punish unnaturally large differences between adjacent lengths:\n          \n            8\n            E reg (S) = s e ? s f 2 , {e,f }?E\n          \n          where E is the set of pairs {e, f } where the edges incident on nodes e and f share a common node: that is, edges e and f are neighbors in the edge-dual graph of the skeletal tree. This energy term is also recognizable as a graph Laplacian regularization defined over the edge-dual graph. The last energy term discourages numerical drift and instability in under-determined situations. This is important for realizing tempo-\n          ACM Transactions on Graphics, Vol. 33, No. 4, Article 82, Publication Date: July 2014\n          82:6\n          ?\n          A. Jacobson et al.\n          \n            \n            Figure 10: We help the user match an assembled device to an existing rig of the Knight. Matching updates in real-time (dashed green) while the user positions the virtual device near the rig skeleton. Once close, we bind the device to the rig and the user starts animating immediately.\n          \n          rally smooth response. Therefore, we punish changes over time:\n          \n            9\n            x s E drag (x 0 , X, S) = E drag (x 0 , X) + E drag (S) n n\n          \n          \n            10\n            = x i ? x i 2 + s i ? s i 2 , i=0 i=1\n          \n          where x i and s i are the position and incident edge length of node i from the previous frame respectively. Intuitively, this term amounts to introducing drag during the optimization. Our optimization frame rate is fast enough that no lag is noticeable, yet the term is significant enough to eliminate instabilities due to the problem being otherwise invariant to global rotation and scale in under-determined scenarios. Finally, the constant lower bound constraints (6) ensure that lengths stay positive, otherwise edges between nodes could flip backwards.  Implementation. We solve our constrained optimization problem with a block coordinate descent (a.k.a. alternating optimization) in the style of [Sorkine and Alexa 2007]. If Q 0 and x 0 are fixed, then the problem reduces to a quadratic program (QP). We optimize for S and X using an open source active set QP solver [Jacobson et al. 2013]. If S and X are fixed, then the only non-constant energy terms are E user and E drag x . Minimizing these with respect to the rigid transformation represented by Q 0 and x 0 is a variant of the classic shape matching problem solved by a 3 ? 3 singular value decomposition [Kabsch 1976]. As both steps do not increase our energy we may alternate until convergence. In practice, convergence takes a few iterations with a warm start and a single iteration (small dense QP solve and 3 ? 3 SVD) takes less than one microsecond, so we simply apply a fixed number of iterations per frame (conservatively 100). Our interface allows adding new positional constraints on the fly by dragging out from a virtual node?s center with the mouse. To further facilitate user-interaction, the target position u i is the unprojection of the mouse?s coordinates at a depth between the first two hits on the model along the viewing ray. This simple feature greatly reduces the number of necessary viewpoint changes, allowing the user to focus on tuning the angles of the device. Finally, we note that the weighting parameters w ? are unimportant in so far as w user is comparatively large: our examples use w user = 1, w reg = 0.001, and w drag = 0.0001.\n        \n        \n          4.2 Attaching to an existing rig\n          If we have only a 3D model as input, the previous algorithm helps embed the device?s skeleton inside the shape. In other situations, a complete skeletal rig, consisting of a model, internal skeleton and weights may already be available. The modularity of our device allows the user to construct a device that closely matches all or part of an existing rig?s skeleton. To control such a rig, we need a mapping from the device?s degrees  We match to a skeletal rig without a precise spatial alignment (left). Propagating the device?s relative rotations down the rig?s kinematic chain produces unintuitive results (top right). Twisting the pink joint does not twist its matched bone; rather rotates about an axis parallel to the joint?s initial orientation. Matters are worse further down the chain. Our adjustment fixes this (bottom). of freedom to the rig?s. We take advantage of the fast rest-pose registration to help determine this mapping. First, the user guides the virtual device near the rig?s skeleton. Meanwhile, we automatically determine a mapping between each rig bone and a device bone (see Figure 10 ). We cast this as a minimal matching problem over the complete bipartite graph between the sets of bones in the rig skeleton and those of the device. Each graph edge is given a cost c ij set to the Hausdorff distance between the line segment of bone i of the device and the line segment of bone j in the rig. The optimal matching is found via the Hungarian method [Kuhn 1955]. Once combinatorially matched, the positional alignment may be iteratively refined with the rest-pose registration procedure, this time replacing user constraints with the locations of matched joint locations in the rig. If rig bones and the virtual device perfectly overlap in space, then it would be sufficient to deform the rig directly using bone transformations determined by the device?s kinematic chain. To support both exact and casual interactions, we assume that the bones are closely but not perfectly aligned. If bone lengths and joint positions differ, then directly using transformations from the device?s kinematic chain will effectively tear rig bone?s apart at joints and rotate about the device?s virtual joint locations rather than the rig joints. Slightly better would be to propagate bone rotations measured on the device down the rig?s kinematic chain. This maintains centers of rotation at rig joints, but the three Euler angles read from the device?s joints are relative to the reference frames of the device?s bones rather than the respective bones in the rig. For example, twisting a joint would spin the rig?s bone about an axis parallel to the device?s virtual bone axis rather than rig bone?s axis (see Figure 11 ). Instead, we precompute the minimal rotation W ij that transforms the rest vector of the device?s ith bone to that of its matched bone j in the rig. Using this rotation as a change of basis, we apply the measured rotation R i from bone i on the device to matched bone j on the rig as W ij R i W ij . This aligns the device?s Euler angle parameterization of joint rotations to the rig bones? reference frames before applying forward kinematics. The same procedure can be used to rebind to a previous keyframe pose. This allows the user to start posing from any previous configuration, not just the rest pose.\n          \n            \n            \n            \n            \n          \n          Adjusted rotations\n          \n            Figure 11:\n          \n          ACM Transactions on Graphics, Vol. 33, No. 4, Article 82, Publication Date: July 2014\n          Tangible and Modular Input Device for Character Animation\n          ?\n          82:7\n          T\n        \n      \n      \n        5 User studies\n        It is difficult to measure performance in terms of 3D character articulation directly. In the end what makes for a good animation or pose is not easily captured in a single metric such as task completion time or joint angle error. However, we do know that mouseand keyboard-based UIs remain the most prevalent in character articulation systems. Therefore, we design two experiments that allow us to compare the effect of our input device on user performance directly to that of mouse and keyboard based UIs.  Targeting with two degrees of freedom. As a baseline experiment we briefly compared keyboard, mouse and our device in a 2.5D target acquisition task. This is a useful, controlled comparison as it removes the complexity and idiosyncrasies of a full 3D task. Mean time to hit target We detail our experimental design and Seconds analysis in Appedix B. In terms of task 7 keyboard completion time, the keyboard is the 6 slowest (mean = 4.99s, standard devi5 mouse ation = 0.3s), followed by the mouse 4 ours (4.31s, 0.4s) and our device (3.77s, 3 0.235s). Inset shows means with 95% confidence intervals. These results show 2 a clear advantage of our device over the 1 keyboard and conservatively equal performance to the mouse. This is particularly interesting as the task has only two degrees of freedom and thus is well-suited for the mouse. This provides further evidence that there is a benefit to direct, physical control of 3D objects, as often theorized in the tangible UI literature. 3D articulation. Following our baseline results, we excluded the keyboard from further experiments and now directly compare the mouse and our device. We compared the effect of an assembled device against that of a mouse-based UI in a complex character posing task, requiring precise control of many degrees of freedom. While still reasonably controlled, this experiment simulates the reality of character articulation and therefore allows us to draw conclusions about the actual usability in similar applications. We asked subjects to replicate a series of predefined poses. Subjects will attempt to register the yellow Dino (see Figure 12 ) on top of the target pose rendered in red. We compare our device against a mouse-based UI for skeletal deformation identical to M AYA ?s. We compare to a forward kinematics mouse interface rather than inverse kinematics in order to measure fine-grained full character posing, not just end-effector placement. Requiring additional parameters, inverse kinematics would also make the experiment less controlled. In both conditions, the Dino was rigged with the same skeleton containing seven articulated bones. The sequence of poses was identical per condition. The presentation of interface order was counterbalanced. Excluding the creative element of posing, this experiment is not a perfect simulation of the animation process, but it does measure some aspects of posing: spatial thinking, 3D manipulation and impact of input device on accuracy and task completion time. For this experiment we recruited from our university 11 participants (6 male, 5 female), ages 23 to 38. All participants reported intermediate to no experience with modeling tools like M AYA . None\n        \n          \n        \n        \n          Figure 12: On screen stimuli for 3D pose reproduction user study.\n        \n        0 2 time in minutes 6 8 150 mouse 100 ours 50 0 Figure 13 : Two typical posing sessions show the mouse (blue) and our device (green) decreasing pose distance from 100% to minimal values at completion (yellow dots). We take the maximum of the two minima as a baseline (dashed black) and compute integrals under both curves up to the time they reach this distance. This value is then normalized to define the amount of work necessary.\n        had previous experience with our device. Learning from [Yoshizaki et al. 2011], we refrained from imposing a hard cutoff time, instead instructing subjects to decide when they are ?close enough or no longer making efficient progress?. To quantify performance we use three metrics: time to completion, accuracy and amount of work necessary to reach a ?close enough? pose. The last, being an atypical metric, deserves some elaboration. When posing 3D characters, it is often important to quickly get a rough configuration, for example to communicate an idea to team members. To capture this crucial period in the creative process, we analyze our data in terms of work. In order to define a meaningful and fair measure we look at the integral distance for each interface up to the same small distance: the maximum of the minimal distances across the two interfaces. Then we normalize with respect to the time to reach this point in order to compare across users (see Figure 13 ). Distance is measured as the sum of absolute angles of the smallest rotation aligning each bone?s frame orientation in the target to the subject?s pose. This is easily computed when representing orientations as unit quaternions. With the target and subject?s frame orientation q t and q s respectively, our metric is\n        \n          11\n          ?1 ? d(q t , q s ) = 2 cos (| Re(q t q s )|)\n        \n        where d(q t , q s ) ? [0, ?]. Distances are then normalized across poses and we report measures in terms of percentage of distance\n        ACM Transactions on Graphics, Vol. 33, No. 4, Article 82, Publication Date: July 2014\n        82:8\n        ?\n        A. Jacobson et al.\n        Completion time Final pose accuracy Amount of work minutes % of pose distance % of pose distance 7 6 mouse ours 25 30 mouse ours 60 70 mouse ours 3 5 4 15 20 40 30 50 2 10 20 1 5 10\n        \n          Figure 14: Our 3D pose replication user study shows no significant difference between M AYA -clone mouse interface and our device in terms of speed and long-run accuracy. But our device is significantly better in terms of work needed to reach an acceptable distance.\n          \n        \n        \n          Figure 15:\n        \n        A user may bind a small device to a subset of a rig and then layer animations for multiple subsets. The same parts?in different arrangements?first animate the body of the Scorpion, the tail, claws, and each pair of legs.\n        between initial pose and target pose. For each pose, distance starts at 100% and decrease as the subject makes progress toward (but typically not perfectly reaching) 0%. Of our results (summarized in Figure 14 ), the most immediate is the dramatic variability in total posing time across subjects (from 15 to 90 minutes). However, within subjects total posing times are similar. The mouse has (mean=4.66m, SD=3.4m) and for our device (mean=5.08m, SD=3.2m). A Student?s t-test reveals that no significant difference between these means (p = 0.768). Next we consider absolute distance to the target pose at task completion. Again we see no significant difference (p = 0.465) between mouse and our device. The the mouse has (mean=20%, SD=10.3) and our device (mean=23.0%, SD=8.2%). Finally, regarding the amount of work, we see a significant difference (p = 0.008) between the two conditions. The work for the mouse has (mean=64.8%, SD=9.5%) and our device (mean=51.9%, SD=11.0%). Visualizing distances for each interface as a function of time illustrates this pattern (see Figure 13 ). Our device typically makes very fast initial progress, achieving a close enough pose and then slows down. The mouse by comparison makes steady but slow progress.\n      \n      \n        6 Applications\n        \n          \n        \n        We manufactured a kit of 20 joints, nine splitters, four extension segments, 14 endcaps, and a controller (inset). We demonstrate the effectiveness of assembled device instances in different contexts and with different characters.\n        \n          \n          Figure 16: Our design generalizes to customized splitters like this hand. The friction control of the 14 attached joints allows the device to remain in pose as the user poses the Chimpanzee Hand. Measured bending angles degrees\n        \n        \n          \n        \n        1 2 time in seconds\n        \n          Figure 17: A device with three bending joints (left, user?s hands omitted) raises and points the leg of a 2D character (middle), animating all joints simultaneously (right).\n          \n        \n        \n          Figure 18: Our device is also useful for non-skeletal deformation paradigms like handle-based variational modeling.\n        \n        The main application of our device is the interactive posing and animation of 3D characters. Figure 22 highlights some poses created with our device. These include the humanoid characters such as the Knight or the Dino and non-humanoid characters such as the Crocodile, Ostrich, Frog and the Swedish Lamp. It is noteworthy that some of these characters (Scorpion and Swedish Lamp) are rigged using external software making use of our skeleton matching procedure and the others use our rest-pose registration. For very complex topologies it is often easier to layer animations recorded for different parts separately, rather than control all degrees of freedom simultaneously. Figure 15 shows the creation of a layered animation of the Scorpion, (re-)using only a small subset of parts. Mouse interfaces easily allow layering animations up the forward kinematics tree as changes will propagate down the tree. Exploiting human proprioception, our device takes advantage of the full hierarchy allowing layering both orders on the kinematic tree. We purposefully design a general radial splitter that supports many branching cardinalities and orientations (see Figure 7 ). However, our firmware and algorithms support custom non-radial splitters for special purposes (see Appedix A). For example, we 3D printed\n        ACM Transactions on Graphics, Vol. 33, No. 4, Article 82, Publication Date: July 2014\n        Tangible and Modular Input Device for Character Animation\n        ?\n        82:9\n        \n          \n          Figure 19: A user interacts with an elastic simulation of the Basset Hound in real time using a single joint to control the dog?s neck.\n        \n        \n          \n          Figure 20: If the user is unsatisfied with the limited control in the\n        \n        back of the Elephant in Figure 1 , she may quickly insert a joint along the spine to increase flexibility.\n        a hand shaped splitter used to create a fine-grained pose of the Chimpanzee Hand (see Figure 16 ). Our device is not only suitable for 3D tasks, but by ignoring twist measurements also functions for 2D cartoon animation control. Figure 17 shows a user animating a one-legged 2D character. Our device allows for the simultaneous manipulation of multiple joints. Such simultaneous control is impossible with a mouse interface. Figure 19 illustrates a particularly playful example. Here our device directs the Dog, who is governed by a dynamic elastic simulation, Our device may also provide input for non-skeletal deformation systems. A chain of joints manipulates the Shark in Figure 18 , driving a handle-based deformation method [Sorkine and Alexa 2007]. Only the first and last joints are mapped to handles. The middle joint, while its measurements are ignored, acts implicitly via the kinematics chain, helping to manage distances. The modularity of our device allows users to perfect and refine their working device to match the complexity of the desired articulation. In Figure 20 , the user adds an additional joint to the device used in Figure 1 . Our registration and binding algorithms reduce the effort required to make changes in the skeletal hierarchy and resume articulation. Limitations and future work. In future work, we would like to optimize the design and performance of our device, arriving at smaller faster, and cheaper parts. Professional character rigs may contain hundreds of bones, spanning many levels in the skeletal hierarchy. Our device?s size and power consumption become practical limitations when binding to such large rigs, though partial binding is possible at any level of a rig?s hierarchy (see Figure 15 ). We plan to construct isolated twisting or bending joints, which would reduce the overall size in situations where certain degrees of freedom are semantically unnecessary (e.g. in Figures 16 and 17 ). Despite the aforementioned issues, we are working on a possible ball-and-\n        \n          Figure 21: Rigged with two joints controlling each arm (left), the\n        \n        Beast?s hands make contact virtually despite lack of contact in the device (middle). Similarly, making contact between end effectors of the device does not correspond to the same contact virtually.\n        socket joint which would overcome gimbal locking and allow tracing rotational geodesics.  Our device accurately reports relative orientations but has no sense of its absolute location or orientation. It would be interesting to combine our system with a rigid tracking system [Held et al. 2012]. Though our registration algorithm helps overcome physical-virtual disparities, certain semantic relationships do not carry over such as contact and collisions (see Figure 21 ). Perhaps haptic feedback could be useful to overcome this, though motors would encumber design and increase costs. Finally, our precise measurements would complement an augmented reality environment such as [Ando et al. 2002].\n      \n      \n        7 Conclusion\n        Tangible manipulation of arbitrary topology skeletons proves to be a powerful interface for posing, animation and modeling. Our complementary rest-pose registration and rig attachment algorithms lower the barrier of entry for 3D articulation tasks. The accuracy achieved by first-time users optimistically opens the door to building an expert skill set around tangible manipulation devices such as ours for character animation.  Our device is one step toward greater immersion and tangibility in the context of posing, designing and animating deformable 3D shapes. As displays make advances toward convincing autostereoscopy and 3D printing becomes more commonplace, we see potentially large impact from tangible input devices for virtual 3D content. To this end, we attach the complete hardware blueprints (OpenHardware) and accompanying source code in the hopes of fostering future research in this direction.\n        ACM Transactions on Graphics, Vol. 33, No. 4, Article 82, Publication Date: July 2014\n        82:10\n        ?\n        A. Jacobson et al.\n      \n      \n        Acknowledgements\n        We are indebted to Ladislav Kavan for illuminating discussions and to Gilles Caprari (gctronic.com) for providing electronic and engineering support. We are grateful for the hours spent by our user study participants. We thank Marco Attene for making M ESH F IX open source and Olga Diamanti, Romain Pr?vost, Christian Sch?ler, Kenshi Takayama and Emily Whiting for proofreading. This work was supported in part by the ERC grant iModel (StG-2012-306877), by an SNF award 200021 137879 and the Intel Doctoral Fellowship. The Knight was initially created using Cosmic Blobs R software developed by Dassault Systemes SolidWorks Corp.\n      \n      \n        References\n        \n          A NDO , Y., T AKAHASHI , S., AND S HIBAYAMA , E. 2002. A 3D animation system with superimposing cg on a physical armature. Proc. APCHI.\n          B ACHER  ? , M., B ICKEL , B., J AMES , D. L., AND P FISTER , H. 2012. Fabricating articulated characters from skinned meshes. ACM Trans. Graph. 31, 4.\n          B ARAN , I., AND P OPOVI C  ? , J. 2007. Automatic rigging and animation of 3D characters. ACM Trans. Graph. 26, 3, 72:1?72:8.\n          B ARAN , I., V LASIC , D., G RINSPUN , E., AND P OPOVI ? , J. 2009. Semantic deformation transfer. ACM Trans. Graph. 28, 3.\n          B ARNES , C., J ACOBS , D. E., S ANDERS , J., G OLDMAN , D. B., R USINKIEWICZ , S., F INKELSTEIN , A., AND A GRAWALA , M. 2008. Video puppetry: a performative interface for cutout animation. ACM Trans. Graph. 27, 5, 124.\n          B HARAJ , G., T HORM AHLEN  ? , T., S EIDEL , H.-P., AND T HEOBALT , C. 2012. Automatically rigging multi-component characters. Comput. Graph. Forum 30, 2.\n          C AL ? , J., C ALIAN , D. A., A MATI , C., K LEINBERGER , R., S TEED , A., K AUTZ , J., AND W EYRICH , T. 2012. 3d-printing of nonassembly, articulated models. ACM Trans. Graph. 31, 6.\n          C ELSYS , I NC ., 2013. QUMARION. http://www.clip-studio.com .\n          C HEN , J., I ZADI , S., AND F ITZGIBBON , A. 2012. Kinetre: Animating the world with the human body. In Proc. UIST, ACM Press, New York, New York, USA, 435.\n          D ONTCHEVA , M., Y NGVE , G., AND P OPOVI ? , Z. 2003. Layered acting for character animation. ACM Trans. Graph. 22 (July).\n          E SPOSITO , C., P ALEY , W. B., AND O NG , J. 1995. Of mice and monkeys: a specialized input device for virtual body animation. In Proc. I3D.\n          F ENG , T.-C., G UNAWARDANE , P., D AVIS , J., AND J IANG , B. 2008. Motion capture data retrieval using an artist?s doll. In Proc. ICPR, 1?4.\n          H ELD , R., G UPTA , A., C URLESS , B., AND A GRAWALA , M. 2012. 3d puppetry: A kinect-based interface for 3d animation. In Proc. UIST, ACM, New York, NY, USA, 423?434.\n          I SHIGAKI , S., W HITE , T., Z ORDAN , V. B., AND L IU , C. K. 2009. Performance-based control interface for character animation. ACM Trans. Graph. 28, 3.\n          I SHII , H., AND U LLMER , B. 1997. Tangible bits: Towards seamless interfaces between people, bits and atoms. In Proc. CHI.\n          J ACOB , R. J. K., S IBERT , L. E., M C F ARLANE , D. C., AND M ULLEN , J R ., M. P. 1994. Integrality and separability of input devices. ACM Trans. Comput.-Hum. Interact. 1, 1 (Mar.), 3?26.\n          J ACOBSON , A., B ARAN , I., P OPOVI C  ? , J., AND S ORKINE , O. 2011. Bounded biharmonic weights for real-time deformation. ACM Trans. Graph. 30, 4, 78:1?78:8.\n          J ACOBSON , A., P ANOZZO , D., ET AL ., 2013. libigl: A simple C++ geometry processing library. http://igl.ethz.ch/projects/libigl/.\n          J OHNSON , M. P., W ILSON , A., B LUMBERG , B., K LINE , C., AND B OBICK , A. 1999. Sympathetic interfaces. In Proc. CHI.\n          K ABSCH , W. 1976. A solution of the best rotation to relate two sets of vectors. Acta Crystallographica, 32, 922.\n          K NEP , B., H AYES , C., S AYRE , R., AND W ILLIAMS , T. 1995. Dinosaur input device. In Proc. CHI, 304?309.\n          K UHN , H. W. 1955. The hungarian method for the assignment problem. Naval research logistics quarterly 2, 1-2, 83?97.\n          L IN , J., I GARASHI , T., M ITANI , J., L IAO , M., AND H E , Y. 2012. A sketching interface for sitting pose design in the virtual environment. IEEE TVCG 18, 11, 1979?1991.\n          M ELEXIS S YS ., 2013. MLX90316 DataSheet.\n          O IKONOMIDIS , I., K YRIAZIS , N., AND A RGYROS , A. A. 2012. Tracking the Articulated Motion of Two Strongly Interacting Hands. In IEEE CVPR.\n          O ORE , S., T ERZOPOULOS , D., AND H INTON , G. 2002. A desktop input device and interface for interactive 3D character animation. In Proc. Graphics Interface, 133?140.\n          R AFFLE , H. S., P ARKES , A. J., AND I SHII , H. 2004. Topobo: a constructive assembly system with kinetic memory. In Proc. CHI.\n          R OMERO , J., K JELLSTROM , H., AND K RAGIC , D. 2010. Hands in action: real-time 3D reconstruction of hands in interaction with objects. In IEEE ICRA, 458?463.\n          S EOL , Y., O?S ULLIVAN , C., AND L EE , J. 2013. Creature features: online motion puppetry for non-human characters. In Proc. SCA.\n          S HIM , B. 2010. Best student project prize talk: The wonder hospital. SIGGRAPH Computer Animation Festival.\n          S HIRATORI , T., M AHLER , M., T REZEVANT , W., AND H ODGINS , J. K. 2013. Expressing animated performances through puppeteering. In 3DUI, IEEE, 59?66.\n          S HNEIDERMAN , B. 1997. Direct manipulation for comprehensible, predictable and controllable user interfaces. In Proc. IUI, 33?39.\n          S HOEMAKE , K. 1992. Arcball: A user interface for specifying three-dimensional orientation using a mouse. In Proc. CGI.\n          S HOTTON , J., S HARP , T., K IPMAN , A., F ITZGIBBON , A., F INOC CHIO , M., B LAKE , A., C OOK , M., AND M OORE , R. 2013. Real-time human pose recognition in parts from single depth images. Commun. ACM 56, 1.\n          S ORKINE , O., AND A LEXA , M. 2007. As-rigid-as-possible surface modeling. In Proc. SGP, 109?116.\n          S RIDHAR , S., O ULASVIRTA , A., AND T HEOBALT , C. 2013. Interactive markerless articulated hand motion tracking using rgb and depth data. In Proc. ICCV.\n          S UMNER , R., AND P OPOVI C  ? , J. 2004. Deformation transfer for triangle meshes. ACM Trans. Graph. 23, 3, 399?405.\n        \n        ACM Transactions on Graphics, Vol. 33, No. 4, Article 82, Publication Date: July 2014\n        Tangible and Modular Input Device for Character Animation\n        ?\n        82:11\n        \n          \n          Figure 22: We test our device on a wide range characters with skeletons of varying topological and geometric complexity. Each pair of rows is a virtual character and paired device. The leftmost column for each pair shows the device and character at their rest or bind states. The other two columns show poses. ACM Transactions on Graphics, Vol. 33, No. 4, Article 82, Publication Date: July 2014\n        \n        \n          \n        \n        82:12\n        ?\n        A. Jacobson et al.\n        T AGLIASACCHI , A., A LHASHIM , I., O LSON , M., AND Z HANG , H. 2012. Mean curvature skeletons. Comput. Graph. Forum 31, 5. W ANG , R. Y., AND P OPOVI C  ? , J. 2009. Real-time hand-tracking with a color glove. ACM Trans. Graph. 28, 3, 63:1?63:8. W ELLER , M. P., D O , E. Y.-L., AND G ROSS , M. D. 2008. Posey: instrumenting a poseable hub and strut construction toy. In Proc. TEI, 39?46. Y OSHIZAKI , W., S UGIURA , Y., C HIOU , A. C., H ASHIMOTO , S., I NAMI , M., I GARASHI , T., A KAZAWA , Y., K AWACHI , K., K AGAMI , S., AND M OCHIMARU , M. 2011. An actuated physical puppet as an input device for controlling a digital manikin. In Proc. CHI, 637?646.\n      \n      \n        A Non-radial splitters\n        Equation (5) does not apply to non-radial splitters (e.g. the hand splitter in Figure 16 ). For a non-radial splitter node i we introduce auxiliary origins a ij at the outlets corresponding to each child j. By placing these origins accordingly, we may redefine p j = a ij so that x j = s j v i + a ij . We can express each a ij in terms of a scaling term and the original splitter origin x i :\n        \n          12\n          a ij = t ij u ij + x i ,\n        \n        where t ij and u ij are analogous to s i and v i . That is, u ij is fixed and indicates the direction of the offset origin and t ij accounts for the stretch. Differently from before, we now must change all the scaling factors associated with the splitter uniformly. This can be modeled by additional linear equality constraints:\n        \n          13\n          t ij / t ij = t ik / t ik , ?j = k,\n        \n        where t ij are the normalized (default) scales of each origin offset. Since the ratio t ij /t ik is fixed, each constraint is linear in in t ij and t ik . Similarly to the other constraints, they are not affected by Q 0 and only show up during the QP solve.\n      \n      \n        B Design of targeting user study\n        \n          \n        \n        We asked 18 subjects (14 male, 4 female) to aim the cannon of a virtual tank using mouse, keyboard and a single joint of our device (see inset). The subjects, again from our university. For the keyboard, subjects control the cannon?s pitch and yaw angles in small increments using the up, down, left and right keys. For the mouse, the absolute (x, y) coordinates of the hidden cursor map linearly to these angles, respectively. For our device, the first twist angle turns left and right and the bending part controls pitch of the cannon. Bullets fire using a foot pedal for all conditions. Repeated attempts are allowed until a hit, and a new target appears at a random location. Presentation order of the conditions is counterbalanced in a Latin-Square design. Each user is asked to hit a total of 50 targets per input device in blocks of 10, allowing for rest periods between blocks. A two-way repeated measures ANOVA with the interface and the block id as independent variables reveals a main effect for blocks and a slight decrease in mean task completion time, indicating  a mild learning effect. However, post-hoc analysis yielded no significant differences in speed between blocks (all p > 0.05). In terms of the interface used, the mean task completion time for keyboard was the slowest (mean= 4.99s, standard deviation = 0.3), followed by the mouse (4.31s, 0.4s) and our device (3.77s, 0.235s). A main effect for the interface on task completion time exists (F (2,34) = 22.8, p < 0.001) and pairwise comparisons show significance between keyboard and mouse (p = 0.002) and between keyboard and device (p < 0.001). While our device scores slightly better than the mouse, the difference is not strictly significant (p = 0.1).\n        ACM Transactions on Graphics, Vol. 33, No. 4, Article 82, Publication Date: July 2014\n      \n    \n  ",
  "resources" : [ ]
}