{
  "uri" : "sig2009-a59-liu_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2009/a59-liu_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Dextrous Manipulation from a Grasping Pose",
    "published" : "2009",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/C. Karen-Liu",
      "name" : "C. Karen",
      "surname" : "Liu"
    } ]
  },
  "bagOfWords" : [ "response", "different", "dynamic", "situation", "during", "manipulation", "we", "algorithm", "can", "generate", "range", "possible", "hand", "manipulation", "include", "change", "joint", "configuration", "change", "contact", "point", "change", "grasp", "force", "we", "algorithm", "take", "input", "initial", "grasp", "pose", "desire", "object", "trajectory", "generate", "realistic", "manipulation", "motion", "effect", "response", "different", "dynamic", "situation", "we", "algorithm", "can", "generate", "range", "possible", "hand", "manipulation", "include", "change", "joint", "configuration", "contact", "point", "grasp", "force", "consequently", "we", "view", "we", "algorithm", "important", "miss", "piece", "goal", "fully", "automate", "generation", "end-to-end", "hand", "object", "manipulation", "motion", "complementary", "exist", "algorithm", "focus", "generate", "robust", "grasp", "vastly", "expand", "upon", "range", "motion", "possible", "once", "object", "in-grasp", "we", "formulate", "dextrous", "object", "manipulation", "constrain", "optimization", "problem", "where", "constraint", "derive", "from", "physical", "law", "input", "trajectory", "objective", "function", "penalize", "deviation", "from", "equilibrium", "joint", "torque", "compute", "input", "grasp", "pose", "we", "objective", "function", "prefer", "manipulation", "strategy", "lead", "visibly", "apparent", "we", "result", "show", "realistic", "hand-object", "interaction", "handle", "scale", "optimization", "problem", "generate", "we", "system", "we", "decompose", "large", "nonconvex", "optimization", "sequence", "short-horizon", "optimization", "each", "which", "yield", "hand", "motion", "small", "window", "time", "mitigate", "issue", "we", "algorithm", "inform", "each", "short-horizon", "optimization", "future", "information", "extract", "from", "object", "motion", "second", "process", "use", "project", "contact", "force", "guidance", "solve", "shorthorizon", "optimization", "yield", "current", "hand", "pose", "contact", "position", "we", "algorithm", "work", "well", "various", "type", "manipulation", "include", "move", "rotate", "compress", "object", "under", "arbitrary", "external", "force", "combine", "basic", "manipulation", "we", "method", "can", "produce", "interesting", "bimanual", "manipulation", "task", "twistopen", "bottle", "however", "we", "method", "focus", "continual", "dynamic", "adjustment", "from", "grasp", "pose", "motion", "require", "complex", "path", "planning", "drastic", "contact", "re-planning", "beyond", "scope", "we", "method", "key", "contribution", "work", "synthesis", "hand", "motion", "increasingly", "active", "research", "area", "computer", "animation", "Pollard", "Zordan", "-lsb-", "2005", "-rsb-", "propose", "grasp", "controller", "where", "parameter", "automatically", "determine", "from", "capture", "motion", "sequence", "method", "can", "integrate", "seamlessly", "ours", "we", "focus", "motion", "adjustment", "external", "change", "after", "object", "grasp", "Kry", "Pai", "-lsb-", "2006", "-rsb-", "use", "capture", "hand", "motion", "contact", "force", "extract", "joint", "compliance", "adjust", "joint", "compliance", "same", "capture", "grasp", "motion", "can", "adapt", "new", "object", "different", "property", "we", "method", "do", "explicitly", "compute", "joint", "compliance", "instead", "we", "rely", "equilibrium", "joint", "torque", "compute", "input", "grasp", "pose", "capture", "effect", "joint", "compliance", "set", "pose", "similar", "grasp", "pose", "grasp", "motion", "manipulation", "can", "also", "generate", "via", "forward", "inverse", "kinematic", "approach", "-lsb-", "Aydin", "Nakajima", "1999", "Huang", "et", "al.", "1995", "Koga", "et", "al.", "1994", "-rsb-", "addition", "grasp", "motion", "previous", "work", "have", "explore", "other", "type", "manipulation", "gesture", "play", "musical", "instrument", "-lsb-", "Kim", "et", "al.", "2000", "ElKoura", "Singh", "2003", "Majkowska", "et", "al.", "2006", "-rsb-", "we", "method", "also", "synthesize", "highly", "detailed", "hand", "movement", "consequently", "we", "algorithm", "can", "apply", "larger", "variety", "situation", "without", "need", "any", "tuning", "optimization-based", "approach", "similar", "we", "algorithm", "can", "produce", "physically", "realistic", "motion", "active", "control", "-lsb-", "Witkin", "Kass", "1988", "Safonova", "et", "al.", "2004", "Liu", "et", "al.", "2005", "-rsb-", "we", "work", "resemble", "-lsb-", "Liu", "2008", "-rsb-", "we", "synthesize", "physically", "correct", "hand", "motion", "directly", "from", "sequence", "short-horizon", "optimization", "objective", "often", "conflict", "each", "other", "rely", "careful", "adjustment", "weight", "balance", "kinematic", "goal", "dynamic", "realism", "select", "appropriate", "grasp", "pose", "crucial", "problem", "during", "preshaping", "phase", "grasp", "synthesis", "we", "work", "do", "focus", "grasp", "synthesis", "complementary", "any", "exist", "algorithm", "produce", "physically", "plausible", "grasp", "pose", "previous", "approach", "linearize", "friction", "constraint", "solve", "contact", "force", "use", "various", "optimization", "technique", "-lsb-", "Kerr", "Roth", "1986", "Nguyen", "1986", "Cheng", "Orin", "1990", "Bicchi", "1992", "-rsb-", "we", "contact", "force", "planning", "algorithm", "also", "linearize", "friction", "constraint", "point", "contact", "we", "formulate", "quadratic", "program", "solve", "sequence", "contact", "force", "balance", "external", "force", "object", "during", "manipulation", "we", "work", "provide", "simple", "alternative", "explore", "manipulation", "strategy", "without", "any", "effort", "design", "finetune", "dynamic", "system", "we", "algorithm", "illustrate", "Figure", "take", "input", "initial", "grasp", "pose", "partial", "object", "trajectory", "produce", "output", "physically", "plausible", "hand", "animation", "effect", "desire", "manipulation", "partial", "object", "trajectory", "input", "comprise", "position", "orientation", "object", "possibly", "location", "environment", "contact", "important", "time", "frame", "detail", "level", "trajectory", "can", "range", "from", "few", "keyframe", "object", "entire", "object", "motion", "sequence", "duration", "animation", "input", "grasp", "pose", "can", "provide", "any", "grasp", "synthesis", "algorithm", "manually", "design", "user", "prior", "run", "main", "algorithm", "we", "preprocess", "input", "grasp", "pose", "detect", "initial", "contact", "object", "furthermore", "we", "compute", "require", "joint", "torque", "maintain", "grasp", "pose", "against", "gravity", "equilibrium", "torque", "denote", "use", "later", "synthesize", "hand", "motion", "figure", "illustrate", "how", "main", "algorithm", "produce", "hand", "pose", "iteration", "via", "interleave", "two", "process", "contact", "force", "planning", "hand", "motion", "synthesis", "contact", "force", "planning", "phase", "solve", "small", "window", "contact", "force", "-lrb-", "-rrb-", "achieve", "next", "frame", "object?s", "motion", "assume", "contact", "position", "solve", "previous", "iteration", "remain", "same", "next", "frame", "hand", "motion", "synthesis", "phase", "we", "take", "input", "current", "contact", "force", "possibly", "additional", "contact", "from", "contactplanning", "phase", "synthesize", "hand", "configuration", "current", "time", "step", "we", "formulate", "short-horizon", "optimization", "solve", "hand", "pose", "hand", "torque", "contact", "position", "object", "coordinate", "matching", "position", "hand", "coordinate", "time", "frame", "k.", "along", "geometric", "dynamics", "constraint", "we", "introduce", "objective", "maintain", "same", "torque", "usage", "equilibrium", "torque", "u.", "complete", "iteration", "we", "update", "contact", "position", "new", "next", "contact", "force", "planning", "phase", "advance", "window", "one", "frame", "next", "iteration", "iteration", "contact", "force", "from", "+1", "re-planned", "base", "new", "contact", "location", "furthermore", "hand-object", "contact", "force", "should", "smooth", "possible", "over", "time", "human", "hand", "tend", "avoid", "generate", "abrupt", "change", "manipulative", "force", "each", "iteration", "goal", "contact", "force", "planning", "compute", "contact", "force", "-lrb-", "-rrb-", "realize", "object", "motion", "next", "frame", "-lrb-", "-rrb-", "give", "contact", "position", "object", "coordinate", "from", "previous", "iteration", "-lcb-", "tm", "-rcb-", "consist", "all", "hand-object", "contact", "force", "particular", "time", "instance", "indicate", "number", "contact", "point", "frame", "user", "specify", "some", "environment", "contact", "frame", "we", "also", "include", "object-environment", "contact", "force", "free", "variable", "because", "optimization", "window", "slide", "one", "frame", "forward", "each", "iteration", "contact", "force", "re-planned", "iteration", "re-planning", "contact", "force", "necessary", "because", "new", "event", "occur", "frame", "could", "make", "previously", "plan", "contact", "force", "suboptimal", "equation", "govern", "object", "motion", "show", "equation", "we", "drop", "superscript", "indicate", "time", "frame", "clarity", "first", "two", "term", "combine", "inertial", "gravitational", "force", "apply", "object", "third", "term", "sum", "currently", "active", "contact", "force", "from", "both", "hand", "environment", "jacobian", "matrix", "evaluate", "global", "position", "contact", "we", "implicitly", "enforce", "frictional", "constraint", "represent", "contact", "force", "additive", "function", "basis", "vector", "approximate", "coulomb?s", "friction", "cone", "column", "represent", "basis", "vector", "nonnegative", "matching", "coefficient", "equation", "can", "represent", "free", "variable", "via", "equation", "depend", "whether", "state", "contact", "rest", "slide", "basis", "vector", "can", "span", "pyramidal", "space", "one", "dimensional", "direction", "show", "-lrb-", "figure", "-rrb-", "we", "set", "limit", "can", "generate", "grip", "force", "more", "than", "30n", "we", "use", "follow", "procedure", "determine", "whether", "state", "contact", "rest", "slide", "current", "near", "future", "time", "frame", "environment-object", "contact", "input", "object", "motion", "provide", "full", "information", "about", "contact", "state", "hand-object", "contact", "we", "assume", "slippage", "occur", "next", "frame", "use", "static", "contact", "model", "approximate", "contact", "force", "however", "relative", "velocity", "contact", "nonzero", "iteration", "we", "use", "dynamic", "contact", "model", "compute", "first", "contact", "force", "window", "hand", "motion", "continue", "slide", "after", "motion", "synthesis", "phase", "contact-planning", "iteration", "use", "update", "model", "+1", "slide", "contact", "addition", "physical", "realism", "represent", "equation", "we", "also", "want", "favor", "hand", "motion", "smooth", "over", "time", "reduce", "discontinuity", "contact", "force", "we", "define", "simple", "objective", "function", "minimize", "change", "contact", "force", "over", "time", "since", "equation", "linear", "variable", "we", "can", "formulate", "simple", "convex", "quadratic", "program", "-lrb-", "qp", "-rrb-", "solve", "force", "planning", "problem", "efficiently", "when", "qp", "infeasible", "indicate", "current", "contact", "can", "generate", "enough", "force", "manipulate", "object", "give", "friction", "coefficient", "strength", "hand", "handle", "situation", "we", "rely", "observation", "human", "often", "increase", "contact", "force", "add", "contact", "point", "most", "convenient", "location", "exist", "grasp", "rather", "than", "replan", "entire", "grasp", "configuration", "since", "we", "can", "efficiently", "test", "whether", "give", "set", "contact", "point", "feasible", "solve", "lp", "feasibility", "problem", "-lrb-", "equation", "without", "objective", "function", "-rrb-", "we", "algorithm", "can", "afford", "iteratively", "add", "new", "contact", "until", "problem", "become", "feasible", "we", "consider", "current", "hand", "pose", "contact", "force", "when", "add", "new", "contact", "we", "algorithm", "cycle", "through", "list", "exist", "contact", "point", "sort", "magnitude", "contact", "force", "decrease", "order", "suppose", "exist", "contact", "point", "hand", "link", "hand", "skeleton", "where", "reside", "initial", "position", "new", "contact", "point", "might", "achievable", "hand", "recompute", "subsequent", "hand", "motion", "synthesis", "step", "therefore", "algorithm", "add", "contact", "point", "essentially", "only", "choose", "which", "link", "new", "contact", "point", "reside", "exact", "position", "new", "point", "determine", "hand", "motion", "synthesis", "new", "contact", "usually", "add", "last", "frame", "window", "because", "any", "infeasibility", "previous", "frame", "be", "resolve", "previous", "iteration", "rare", "occasion", "change", "contact", "location", "from", "hand", "synthesis", "might", "cause", "infeasible", "situation", "entire", "window", "frame", "case", "we", "algorithm", "deem", "grasp", "pose", "provide", "user", "unsuitable", "desire", "object", "motion", "although", "each", "optimization", "solve", "independently", "current", "set", "contact", "force", "generate", "from", "prior", "object", "motion", "hand", "motion", "must", "obey", "law", "physics", "when", "interact", "object", "through", "planned", "contact", "force", "we", "allow", "contact", "location", "hand", "object", "change", "long", "proper", "contact", "maintain", "via", "geometric", "constraint", "among", "all", "hand", "motion", "satisfy", "dynamic", "geometric", "requirement", "we", "algorithm", "favor", "solution", "accentuate", "detailed", "hand", "motion", "contact", "change", "dynamic", "equation", "hand", "motion", "generalize", "coordinate", "can", "express", "follow", "first", "two", "term", "compute", "inertial", "gravitational", "force", "apply", "hand", "since", "we", "motion", "have", "very", "little", "acceleration", "inertial", "effect", "relatively", "small", "compare", "other", "force", "third", "term", "compute", "contact", "force", "from", "object", "use", "same", "linearize", "friction", "model", "describe", "equation", "unlike", "equation", "jacobian", "matrix", "now", "depend", "free", "variable", "basis", "vector", "contact", "force", "depend", "free", "variable", "orientation", "friction", "cone", "depend", "normal", "vector", "last", "term", "indicate", "joint", "torque", "apply", "internally", "hand", "many", "way", "balance", "equation", "when", "contact", "force", "change", "due", "manipulation", "external", "perturbation", "most", "straightforward", "way", "simply", "change", "joint", "torque", "within", "define", "range", "we", "accomplish", "through", "objective", "function", "minimize", "deviation", "hand", "torque", "from", "equilibrium", "torque", "compute", "input", "grasp", "pose", "-lrb-", "-rrb-", "5.2", "geometric", "constraint", "addition", "dynamic", "constraint", "each", "contact", "point", "require", "contact", "constraint", "maintain", "geometric", "relation", "between", "hand", "object", "where", "denote", "transformation", "from", "hand", "object", "coordinate", "world", "coordinate", "new", "contact", "add", "next", "frame", "from", "contact", "planning", "phase", "we", "enforce", "equation", "recede", "slack", "reach", "zero", "frame", "when", "contact", "establish", "since", "equation", "allow", "contact", "location", "change", "both", "local", "coordinate", "object", "hand", "we", "algorithm", "allow", "slip", "roll", "surface", "ensure", "slippage", "consistent", "planned", "contact", "force", "we", "constrain", "relative", "velocity", "contact", "accord", "contact", "force", "where", "indicate", "change", "transformation", "between", "current", "frame", "previous", "frame", "-lrb-", "e.g.", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "-rrb-", "matrix", "transform", "vector", "from", "world", "space", "contact", "surface", "coordinate", "whose", "axis", "illustrate", "Figure", "-lrb-", "-rrb-", "equation", "yield", "vector", "indicate", "relative", "velocity", "contact", "surface", "coordinate", "contact", "force", "well", "within", "static", "friction", "cone", "we", "enforce", "constraint", "eliminate", "slippage", "allow", "roll", "set", "tangential", "component", "zero", "previous", "state", "contact", "slide", "contact", "force", "lie", "boundary", "static", "friction", "cone", "we", "relax", "constraint", "slide", "allow", "negative", "direction", "friction", "force", "finally", "we", "impose", "limit", "joint", "angle", "joint", "velocity", "we", "combine", "geometric", "dynamic", "motion", "constraint", "limit", "joint", "angle", "joint", "velocity", "formulate", "optimization", "problem", "current", "time", "frame", "nonconvex", "optimization", "solve", "Sequential", "Quadratic", "Programming", "method", "-lsb-", "Gill", "et", "al.", "1996", "-rsb-", "we", "derive", "limit", "from", "capture", "motion", "sequence", "finger", "exercise", "limit", "approximately", "set", "cover", "entire", "range", "motion", "we", "apply", "we", "method", "variety", "dextrous", "manipulation", "different", "grasp", "pose", "different", "object", "we", "hand", "model", "consist", "35", "degree", "freedom", "-lrb-", "dof", "-rrb-", "six", "shoulder", "two", "elbow", "rest", "wrist", "finger", "-lrb-", "figure", "-lrb-", "-rrb-", "-rrb-", "every", "motion", "sequence", "supplementary", "video", "take", "less", "than", "15", "seconds", "generate", "dof", "shoulder", "dof", "elbow", "27", "dof", "wrist", "finger", "we", "algorithm", "do", "require", "any", "tuning", "parameter", "variability", "output", "motion", "directly", "come", "from", "input", "variable", "different", "grasp", "pose", "desire", "object", "movement", "object", "mass", "surface", "material", "only", "tunable", "parameter", "algorithm", "window", "size", "contact", "force", "plan", "phase", "window", "size", "reflect", "duration", "anticipation", "hand", "motion", "example", "we", "show", "we", "set", "any", "value", "from", "10", "can", "produce", "reasonable", "result", "translate", "basic", "translational", "manipulation", "move", "object", "from", "point", "point", "we", "synthesize", "drag", "lift", "motion", "from", "grasp", "pose", "three", "finger", "contact", "object", "-lrb-", "finger", "-lrb-", "-rrb-", "-rrb-", "when", "drag", "light", "weight", "box", "-lrb-", "0.5", "kg", "-rrb-", "rest", "surface", "hand", "appear", "relax", "similar", "input", "grasp", "pose", "when", "we", "increase", "object", "weight", "1.5", "kg", "hand", "change", "its", "shape", "flex", "mcp", "joint", "-lrb-", "figure", "-lrb-", "-rrb-", "-rrb-", "extend", "pip", "joint", "index", "middle", "finger", "adjustment", "more", "evident", "when", "object", "accelerate", "decelerate", "we", "also", "apply", "same", "input", "pose", "generate", "lifting", "motion", "increase", "contact", "area", "hand", "can", "generate", "more", "grip", "force", "lift", "heavy", "object", "example", "when", "lift", "1.5", "kg", "box", "hand", "have", "add", "additional", "contact", "middle", "phalanx", "index", "finger", "proximal", "phalanx", "both", "index", "finger", "thumb", "-lrb-", "figure", "left", "-rrb-", "we", "can", "also", "synthesize", "hand", "motion", "manipulate", "orientation", "object", "rotate", "lift", "box", "rest", "table", "hand", "apply", "just", "enough", "contact", "force", "pivot", "around", "environment-object", "contact", "because", "we", "algorithm", "favor", "motion", "equilibrium", "torque", "usage", "when", "we", "apply", "two-finger", "pinch", "grasp", "rotate", "small", "circular", "object", "-lrb-", "figure", "-lrb-", "-rrb-", "-rrb-", "hand", "exploit", "roll", "contact", "oppose", "thumb", "index", "finger", "move", "opposite", "direction", "use", "rolling", "contact", "consider", "optimal", "strategy", "we", "objective", "function", "because", "deviation", "torque", "usage", "localized", "thumb", "index", "finger", "while", "rest", "arm", "maintain", "closely", "equilibrium", "torque", "usage", "generate", "repetitive", "rolling", "motion", "we", "disable", "constrain", "describe", "equation", "equation", "when", "object", "rotate", "without", "constraint", "hand", "naturally", "move", "back", "pose", "similar", "input", "grasp", "due", "objective", "function", "we", "algorithm", "allow", "hand", "manipulate", "simple", "deformable", "object", "similar", "other", "type", "manipulation", "require", "contact", "force", "compute", "base", "desire", "deformation", "although", "we", "only", "use", "simple", "linear", "spring", "model", "deformable", "object", "hand", "configuration", "change", "realistically", "when", "attempt", "flatten", "object", "use", "pinch", "grasp", "three", "finger", "-lrb-", "figure", "-lrb-", "-rrb-", "-rrb-", "when", "apply", "large", "contact", "force", "deformable", "object", "index", "middle", "finger", "tend", "align", "distal", "phalanx", "surface", "normal", "direction", "use", "finger", "tip", "contact", "object", "-lrb-", "figure", "right", "-rrb-", "jacobian", "matrix", "form", "hand", "configuration", "allow", "same", "finger", "torque", "generate", "larger", "contact", "force", "withstand", "external", "force", "user", "can", "also", "specify", "external", "force", "apply", "object", "during", "manipulation", "example", "hand", "hold", "down", "bottle", "while", "other", "hand", "twist-open", "lid", "need", "counteract", "external", "force", "torque", "apply", "bottle", "-lrb-", "figure", "middle", "-rrb-", "vary", "direction", "magnitude", "external", "force", "torque", "we", "can", "synthesize", "different", "response", "hand", "from", "single", "grasp", "pose", "without", "maintain", "equilibrium", "torque", "usage", "demonstrate", "importance", "we", "objective", "function", "we", "synthesize", "few", "type", "manipulation", "without", "maintain", "equilibrium", "torque", "usage", "most", "case", "very", "little", "adjustment", "hand", "can", "observe", "visually", "most", "change", "make", "joint", "torque", "internally", "example", "rotate", "small", "circular", "object", "motion", "without", "objective", "function", "prefer", "rotate", "entire", "arm", "along", "object", "rather", "use", "roll", "contact", "we", "introduce", "algorithm", "synthesize", "hand", "motion", "from", "single", "initial", "grasp", "pose", "desire", "object", "trajectory", "we", "optimization-based", "method", "synthesize", "detail", "vary", "hand", "movement", "well", "realistic", "contact", "phenomenon", "roll", "slide", "add", "more", "contact", "addition", "we", "algorithm", "solve", "optimization", "problem", "result", "more", "realistic", "look", "hand", "motion", "due", "ability", "incorporate", "future", "planned", "contact", "force", "desire", "object", "trajectory", "account", "we", "method", "suffer", "from", "few", "limitation", "desire", "manipulation", "require", "significantly", "different", "actuation", "from", "equilibrium", "torque", "usage", "we", "algorithm", "do", "yield", "plausible", "result", "moreover", "unconstrained", "finger", "occasionally", "look", "awkward", "when", "manipulation", "involve", "large", "contact", "force", "since", "we", "do", "take", "account", "interdependency", "among", "finger", "many", "real-world", "manipulation", "involve", "complex", "contact", "planning", "regrasping", "finger", "gaiting", "which", "can", "handle", "we", "current", "algorithm", "simple", "treatment", "additional", "contact", "usually", "result", "increase", "contact", "area", "around", "contact", "point", "largest", "contact", "force", "some", "situation", "better", "solution", "would", "add", "contact", "initially", "unconstrained", "finger", "reposition", "initial", "contact", "we", "current", "algorithm", "require", "all", "variable", "differentiable", "due", "optimization", "method", "we", "choose", "therefore", "optimization", "contact", "location", "confine", "geometry", "continuous", "representation", "example", "solution", "must", "lie", "same", "ellipsoidal", "segment", "hand", "initial", "contact", "extend", "we", "algorithm", "polygonal", "geometry", "discrete", "search", "algorithm", "can", "consider", "when", "current", "point", "boundary", "smooth", "surface", "sampling", "method", "describe", "-lsb-", "Popovi", "et", "al.", "2000", "-rsb-", "can", "promising", "direction", "we", "framework", "rely", "user", "provide", "object", "motion", "achievable", "input", "grasp", "pose", "requirement", "reasonable", "object", "under", "full", "control", "hand", "environment", "during", "manipulation", "dynamic", "scenario", "object", "motion", "subject", "unexpected", "perturbation", "affect", "object?s", "trajectory", "response", "hand", "minor", "modification", "we", "current", "algorithm", "can", "handle", "small", "perturbation", "add", "object", "state", "free", "variable", "minimize", "deviation", "from", "desire", "object", "trajectory", "when", "perturbation", "large", "desire", "object", "trajectory", "might", "become", "completely", "invalid", "we", "would", "like", "explore", "more", "sophisticated", "trajectory", "planning", "algorithm", "expand", "scope", "we", "method", "work", "support", "NSF", "CAREER", "award", "CCF", "0742303" ],
  "content" : "In response to different dynamic situations during manipulation, our algorithm can generate a range of possible hand manipulations including changes in joint configurations, changes in contact points, and changes in the grasping force. Our algorithm takes as input an initial grasp pose and a desired object trajectory, and generates realistic manipulation motion that effects In response to different dynamic situations, our algorithm can generate a range of possible hand manipulations including changes in joint configurations, in contact points, and in the grasping force. Consequently, we view our algorithm as an important missing piece in the goal of fully automated generation of end-to-end hand object manipulation motions. It is complementary to existing algorithms that focus on generating robust grasping, and vastly expands upon the range of motions possible once the object is in-grasp. We formulate dextrous object manipulation as a constrained optimization problem where the constraints derive from physical laws and the input trajectory, and the objective function penalizes deviation from the equilibrium joint torques computed at the input grasping pose. Our objective function prefers manipulation strategies that lead to visibly apparent, and as our results show, realistic hand-object interactions. To handle the scale of optimization problems generated by our system, we decompose the large nonconvex optimization into a sequence of short-horizon optimizations, each of which yields the hand motion for a small window of time. To mitigate this issue, our algorithm informs each short-horizon optimization with the future information extracted from the object motion. The second process then uses these projected contact forces as guidance to solve for a shorthorizon optimization that yields the current hand pose and the contact positions. Our algorithm works well for various types of manipulation including moving, rotating, and compressing objects under arbitrary external forces. By combining these basic manipulations, our method can produce interesting bimanual manipulation tasks, such as twistopening a bottle. However, our method focuses on the continual dynamic adjustments from the grasping pose. Motions that require complex path planning or drastic contact re-planning are beyond the scope of our method. The key contributions of this work are: 1. Synthesis of hand motion is an increasingly active research area in computer animation. Pollard and Zordan [2005] proposed a grasp controller where the parameters are automatically determined from captured motion sequences. Their method can be integrated seamlessly with ours as we focus on motion adjustment to external changes after the object is in grasp. Kry and Pai [2006] used captured hand motion and contact forces to extract joint compliances. By adjusting the joint compliances, the same captured grasping motion can be adapted to new objects with different properties. Our method does not explicitly compute joint compliances. Instead, we rely on the equilibrium joint torques computed at the input grasping pose to capture the effect of joint compliances for a set of poses similar to the grasping pose. Grasping motions for manipulation can also be generated via forward and inverse kinematics approaches [Aydin and Nakajima 1999; Huang et al. 1995; Koga et al. 1994]. In addition to grasping motions, previous work has explored other types of manipulation such as gesturing or playing musical instrument [Kim et al. 2000; ElKoura and Singh 2003; Majkowska et al. 2006]. Our method also synthesizes highly detailed hand movements. Consequently, our algorithm can be applied to a larger variety of situations without needing any tuning. Optimization-based approaches, similar to our algorithm can produce physically realistic motion with active control [Witkin and Kass 1988; Safonova et al. 2004; Liu et al. 2005]. Our work resembles [Liu 2008] in that we synthesize physically correct hand motion directly from a sequence of short-horizon optimizations. These objectives are often conflicting with each other and rely on careful adjustment of weights to balance the kinematic goals and the dynamic realism. Selecting the appropriate grasping pose is a crucial problem during the preshaping phase of grasp synthesis. Our work does not focus on grasp synthesis but is complementary to any existing algorithm that produces physically plausible grasping poses. Previous approaches linearized the friction constraints and solved the contact forces using various optimization techniques [Kerr and Roth 1986; Nguyen 1986; Cheng and Orin 1990; Bicchi 1992]. Our contact force planning algorithm also linearizes the friction constraints on a point contact. We formulate a quadratic program to solve for a sequence of contact forces that balance external forces on the object during manipulation. Our work provides a simple alternative to exploring these manipulation strategies without any effort in designing and finetuning the dynamic system. Our algorithm, illustrated in Figure 1 , takes as input an initial grasping pose and partial object trajectory, and produces as output a physically plausible hand animation that effects the desired manipulation. The partial object trajectory input comprises the position and orientation of the object and possibly location of environment contacts, at important time frames. The detail level of the trajectory can range from a few keyframes of the object, to the entire object motion sequence for the duration of the animation. The input grasping pose can be provided by any grasp synthesis algorithms or manually designed by the user. Prior to running the main algorithm, we preprocess the input grasping pose to detect initial contacts with the object. Furthermore, we compute the required joint torques that maintain the grasping pose against gravity. These equilibrium torques, denoted by u,  ? will be used later in synthesizing the hand motion. Figure 2 illustrates how the main algorithm produces a hand pose for iteration k via interleaving two processes, contact force planning and hand motion synthesis. The contact force planning phase solves for a small window of contact forces (F k , ? ? ? , F k+n?1 ) that achieve the next n frames of the object?s motion, assuming the contact positions p k?1 , solved by the previous iteration, remain the same for the next n frames. In the hand motion synthesis phase, we take as input the current contact forces F k and possibly additional contacts from the contactplanning phase and synthesize the hand configuration for the current time step. We formulate a short-horizon optimization that solves for the hand pose q k , hand torques u k , contact positions in the object coordinates p k , and the matching position in the hand coordinates h k for the time frame k. Along with the geometric and dynamics constraints, we introduce an objective that maintains the same torque usage as the equilibrium torques u. ? To complete the iteration, we update the contact positions with new p k for the next contact force planning phase, and advance the window by one frame to the next iteration. In iteration k + 1, the contact force from F k+1 to F k+n will be re-planned based on the new contact locations p k . Furthermore, the hand-object contact forces should be as smooth as possible over time, as human hand tends to avoid generating abrupt changes in the manipulative forces. At each iteration k, the goal of the contact force planning is to compute the contact forces (F k , ? ? ? , F k+n?1 ) that realize the object motion in the next n frames ( s k , ? ? ? , s k+n?1 ), given the contact positions in the object coordinates , p k?1 , from the previous iteration. F t = {f t 1 , ? ? ? , f tm } consists of all the hand-object contact forces at a particular time instance. m indicates the number of contact points at frame t. If the user specifies some environment contacts at frame t, we also include object-environment contact forces as free variables in F t . Because the optimization window slides one frame forward at each iteration, the contact forces F k , ? ? ? , F k+n?2 are re-planned in iteration k. The re-planning of contact forces is necessary because a new event occurring at frame k + n ? 1 could make the previously planned contact forces suboptimal. The equation governing object motion is shown in equation 1. We drop the superscript indicating the time frame for clarity. The first two terms combine the inertial and the gravitational forces applied on the object. The third term sums the currently active contact forces from both the hand and the environment. J i is a 3 ? 6 Jacobian matrix evaluated at the global positions of contact p i . We implicitly enforce frictional constraints by representing contact forces as an additive function of basis vectors approximating Coulomb?s friction cone. The columns of B i represent the basis vectors with nonnegative matching coefficients ? i . f i in Equation 1 can then be represented by free variables ? i via Equation 2. Depending on whether the state of contact is resting or sliding, the basis vectors can span a pyramidal space or one dimensional direction, as shown in ( Figure 3 ). We set the limits on ? i such that it can not generate gripping force more than 30N. We use the following procedure for determining whether the state of contact is resting or sliding for the current and near future time frames. For the environment-object contacts, the input object motion provides full information about the contact states. For the hand-object contacts, we assume no slippage will occur in the next n frames and use a static contact model to approximate contact forces. However, if the relative velocity at the contact i is nonzero at iteration k ? 1, we use a dynamic contact model to compute f k i , the first contact force in the window. If the hand motion continues to slide after the motion synthesis phase, the contact-planning in iteration k + 1 will use an updated p k i and model f k+1 i as a sliding contact. In addition to physical realism, as represented by Equation 1, we also want to favor hand motions that are smooth over time. To reduce the discontinuity in contact forces, we define a simple objective function that minimizes the changes in contact forces over time: Since Equation 1 is linear in variables ? , we can formulate a simple convex quadratic program (QP) that solves the force planning problem efficiently. When the QP is infeasible, it indicates that the current contacts cannot generate enough forces to manipulate the object with given friction coefficients and the strength of the hand. To handle these situations, we rely on the observation that humans often increase the contact forces by adding contact points at the most convenient location to the existing grasp, rather than replanning the entire grasp configuration. Since we can efficiently test whether a given set of contact points is feasible by solving a LP feasibility problem (Equation 4 without the objective function), our algorithm can afford to iteratively add new contacts until the problem becomes feasible. We consider the current hand pose and the contact forces when adding the new contacts. Our algorithm cycles through the list of existing contact points sorted by the magnitude of their contact forces in a decreasing order. Suppose h i is an existing contact point on the hand and S i is the link of the hand skeleton where h i resides. The initial position of the new contact point might not be achievable by the hand, but it will be recomputed at the subsequent hand motion synthesis step. Therefore, the algorithm for adding contact points is essentially only choosing which link the new contact point resides. The exact position of the new point is determined in the hand motion synthesis. The new contacts are usually added to the last frame of the window because any infeasibility in previous frames were resolved in the  previous iterations. On a rare occasion, the change of contact location from the hand synthesis might cause the infeasible situations for the entire window of frames. In that case, our algorithm deems the grasp pose provided by the user unsuitable for the desired object motion. Although each optimization is solved independently, the current set of contact forces are generated from the prior object motion. The hand motion must obey the laws of physics when interacting with the object through the planned contact forces. We allow the contact locations on the hand and on the object to change as long as proper contact is maintained via geometric constraints. Among all the hand motions that satisfy the dynamic and geometric requirements, our algorithm favors solutions that accentuate detailed hand motion and contact changes. The dynamic equations of hand motion in the generalized coordinates can be expressed as follows. The first two terms compute the inertial and the gravitational forces applied on the hand. Since our motion has very little acceleration, the inertial effect is relatively small comparing to other forces. The third term computes the contact forces from the object using the same linearized friction model as described in Equation 2. Unlike Equation 1, the Jacobian matrix now depends on the free variables q and h. The basis vectors B of contact forces depend on free variables p, as the orientation of the friction cone depends on the normal vector at p. The last term u indicates the joint torques applied internally by the hand. There are many ways to balance Equation 5 when the contact forces change due to the manipulation or external perturbations. The most straightforward way is to simply change the joint torques u within a defined range. We accomplish this through an objective function that minimizes the deviation of\n          the hand torques from the equilibrium torques u,  ? computed at the input grasping pose: G(u) = u ? u  ? 2 . 5.2 Geometric constraints\n          In addition to dynamic constraints, each contact point requires a contact constraint to maintain the geometric relation between the hand and the object. where E denotes the transformation from the hand or the object coordinates to the world coordinates. If new contacts are added to the next n frames from the contact planning phase, we enforce Equation 6 with a receding slack that reaches zero at the frame when the contact is established. Since Equation 6 allows the contact locations to change in both the local coordinates of the object and of the hand, our algorithm allows for slipping and rolling on the surface. To ensure that the slippage is consistent with the planned contact forces, we constrain the relative velocity at the contact according to the contact force. where E  ? indicates the change of the transformation between the current frame and the previous frame (e.g. E  ? = ?t 1 (E(q t ) ? E(q t?1 ))). T ?1 is a matrix that transforms a vector from the world space to the contact surface coordinates whose axes are illustrated in Figure 4(a) . Equation 7 yields a 3 ? 1 vector v r indicating the relative velocity at the contact in the surface coordinates. If the contact force is well within the static friction cone, we enforce constraints that eliminate the slippage but allow for rolling by setting the tangential components of v r to zero: v r 1 = 0, v r 3 = 0. If the previous state of contact is sliding or the contact force lies on the boundary of the static friction cone, we relax the constraints such that sliding is allowed in the negative direction of the friction force: v 1 r ? 0, v r 3 = 0. Finally, we impose limits on the joint angles and the joint velocity. We combine the geometric and dynamic motion constraints with limits on the joint angles and joint velocity to formulate the optimization problem for the current time frame. This nonconvex optimization is solved by Sequential Quadratic Programming method [Gill et al. 1996]: We derive the limits on q and q  ? from a captured motion sequence of finger exercise. The limits are approximately set to cover the entire range of motion. We apply our method to a variety of dextrous manipulations with different grasping poses on different objects. Our hand model consists of 35 degrees of freedom (DOFs): six for the shoulder, two for the elbow, and the rest for the wrist and fingers ( Figure 4(b) ). Every motion sequence in the supplementary video took less than 15 seconds to generate. DOFs for the shoulder, 2 DOFs for the elbow, and 27 DOFs for the wrist and fingers. Our algorithm does not require any tuning of the parameters. The variability of the output motion directly comes from the input variables, such as different grasping poses, desired object movement, object mass, or surface materials. The only tunable parameter in the algorithm is the window size n in the contact forces planning phase. The window size reflects the duration of the anticipation in hand motion. For the examples we showed, we set n = 6, but any value from 5 to 10 can produce reasonable results. Translate. Basic translational manipulation moves the object from point A to point B. We synthesize dragging and lifting motion from a grasping pose with three fingers in contact with the object (Finger 5(a)). When dragging a light weight box (0.5 kg) resting on the surface, the hand appears relaxed and similar to the input grasping pose. When we increase the object weight to 1.5kg, the hand starts to change its shape by flexing the MCP joint ( Figure 4(b) ) and extending the PIP joint of the index and middle fingers. The adjustment is more evident when the object accelerates or decelerates. We also apply the same input pose to generate lifting motion. By increasing the contact area, the hand can generate more grip forces to lift a heavy object. For example, when lifting a 1.5kg box, the hand has to add additional contacts at middle phalanx of the index finger and proximal phalanx of both the index finger and the thumb ( Figure 6 left). We can also synthesize hand motion for manipulating the orientation of the object. To rotate and lift a box resting on the table, the hand applies just enough contact forces to pivot around the environment-object contacts because our algorithm favors the motion with equilibrium torque usage. When we apply a two-finger pinch grasp to rotate a small circular object ( Figure 5(b) ), the hand exploits rolling contacts with the opposed thumb and the index finger moving in the opposite directions. Using rolling contact is considered an optimal strategy by our objective function, because the deviation of torque usage is localized at the thumb and the index finger, while the rest of the arm maintains closely to the equilibrium torque usage. To generate repetitive rolling motion, we disable constrains described in Equation 6 and Equation 7 when the object is not rotating. Without these constraints, the hand will naturally move back to a pose similar to the input grasp due to the objective function. Our algorithm allows the hand to manipulate simple deformable objects. Similar to other types of manipulation, the required contact forces are computed based on the desired deformation. Although we only use a simple linear spring to model the deformable object, the hand configuration changes realistically when it attempts to flatten the object using a pinch grasp with three fingers  ( Figure 5(c) ). When applying large contact forces to the deformable object, the index and the middle fingers tend to align the distal phalanx with the surface normal direction and use the finger tips to contact the object ( Figure 6 right). The Jacobian matrix formed by this hand configuration allows the same finger torques to generate larger contact forces. Withstand external forces. The user can also specify the external forces applied on the object during the manipulation. For example, the hand that holds down the bottle while the other hand is twist-opening the lid needs to counteract external forces and torques applied to the bottle ( Figure 6 middle). By varying the direction or the magnitude of the external forces and torques, we can synthesize different responses of the hand from a single grasping pose. Without maintaining equilibrium torque usage. To demonstrate the importance of our objective function, we synthesize a few types of manipulation without maintaining the equilibrium torque usage. In most cases, very little adjustment of the hand can be observed visually as most changes are made in joint torques internally. In the example of rotating a small circular object, the motion without the objective function prefers to rotate the entire arm along with the object, rather that using rolling contacts. We introduced an algorithm that synthesizes hand motion from a single initial grasping pose and desired object trajectory. Our optimization-based method synthesizes detailed, varied hand movements, as well as realistic contact phenomena, such as rolling, sliding, and adding more contacts. In addition, our algorithm for solving the optimization problem results in more realistic looking hand motions due to the ability to incorporate future planned contact forces and desired object trajectories into account. Our method suffers from a few limitations. If the desired manipulation requires significantly different actuation from the equilibrium torque usage, our algorithm does not yield plausible results. Moreover, the unconstrained fingers occasionally look awkward when  the manipulation involves large contact forces since we do not take into account interdependency among fingers. Many real-world manipulations involve complex contact planning, such as regrasping and finger gaiting, which cannot be handled by our current algorithm. The simple treatment of additional contact usually results in increasing contact area around the contact point with the largest contact force. In some situations, a better solution would be adding contacts on initially unconstrained fingers or repositioning the initial contacts. Our current algorithm requires all the variables to be differentiable due to the optimization methods we chose. Therefore, the optimization of contact locations is confined to a geometry with continuous representation. For example, the solution for h must lie on the same ellipsoidal segment of the hand as the initial contact, h 0 . To extend our algorithm to polygonal geometries, a discrete search algorithm can be considered when the current point is at the boundary of a smooth surface. The sampling method described in [Popovi? et al. 2000] can be a promising direction. Our framework relies on the user to provide an object motion achievable by the input grasping pose. The requirement is reasonable if the object is under full control of the hand and the environment during manipulation. In a dynamic scenario, the object motion is subject to unexpected perturbations that affect the object?s trajectory and the responses of the hand. With minor modification, our current algorithm can handle small perturbations by adding object states as free variables and minimizing the deviation from the desired object trajectory. When the perturbations are large, the desired object trajectory might become completely invalid. We would like to explore more sophisticated trajectory planning algorithms to expand the scope of our method. This work was supported by NSF CAREER award CCF #0742303.",
  "resources" : [ ]
}