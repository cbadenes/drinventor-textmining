{
  "uri" : "sig2011-a105-chen_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2011/a105-chen_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Nonlinear Revision Control for Images",
    "published" : "2011",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Hsiang-Ting-Chen",
      "name" : "Hsiang-Ting",
      "surname" : "Chen"
    }, {
      "uri" : "http://drinventor/Li-Yi-Wei",
      "name" : "Li-Yi",
      "surname" : "Wei"
    }, {
      "uri" : "http://drinventor/Chun-Fa-Chang",
      "name" : "Chun-Fa",
      "surname" : "Chang"
    } ]
  },
  "bagOfWords" : [ "binary", "file", "other", "hand", "have", "receive", "relatively", "less", "attention", "can", "inconvenient", "graphic", "application", "use", "significant", "amount", "binary", "datum", "image", "video", "mesh", "animation", "exist", "strategy", "store", "whole", "file", "individual", "revision", "simple", "binary", "delta", "could", "consume", "significant", "storage", "obscure", "vital", "semantic", "information", "we", "present", "nonlinear", "revision", "control", "system", "image", "design", "common", "digital", "editing", "sketch", "workflow", "mind", "we", "use", "dag", "-lrb-", "direct", "acyclic", "graph", "-rrb-", "core", "structure", "dag", "node", "represent", "editing", "operation", "dag", "edge", "corresponding", "spatial", "temporal", "semantic", "relationship", "we", "visualize", "we", "dag", "revg", "-lrb-", "revision", "graph", "-rrb-", "which", "provide", "only", "meaningful", "display", "revision", "history", "also", "intuitive", "interface", "common", "revision", "control", "operation", "review", "replay", "diff", "addition", "branch", "merge", "conflict", "resolve", "beyond", "revision", "control", "we", "system", "also", "facilitate", "artistic", "creation", "process", "common", "image", "editing", "digital", "painting", "workflow", "Revision", "control", "system", "also", "facilitate", "open-ended", "content", "creation", "-lsb-", "Shneiderman", "2007", "-rsb-", "through", "mechanism", "branch", "merge", "so", "far", "development", "deployment", "revision", "control", "system", "have", "be", "focus", "more", "text", "than", "binary", "file", "understandable", "text", "file", "tend", "more", "frequently", "use", "revise", "easier", "develop", "revision", "control", "mechanism", "they", "-lrb-", "simple", "line", "differencing", "already", "provide", "enough", "information", "text", "file", "-rrb-", "however", "many", "graphic", "project", "binary", "file", "image", "video", "mesh", "animation", "can", "frequently", "use", "revise", "well", "here", "lack", "revision", "control", "binary", "file", "could", "cause", "several", "issue", "most", "exist", "general", "purpose", "re", "dag", "we", "core", "representation", "revision", "control", "directly", "visible", "ordinary", "user", "due", "potential", "complexity", "user", "can", "interact", "revg", "perform", "revision", "control", "function", "node", "border", "color", "denote", "action", "type", "-lrb-", "Table", "-rrb-", "path", "delineate", "action", "dependency", "visualization", "interaction", "design", "user", "action", "history", "have", "long", "be", "popular", "topic", "-lsb-", "Kurlander", "1993", "Klemmer", "et", "al.", "2002", "Heer", "et", "al.", "2008", "Su", "et", "al.", "2009a", "Grossman", "et", "al.", "2010", "-rsb-", "paper", "we", "propose", "nonlinear", "revision", "control", "system", "image", "design", "common", "content", "creation", "workflow", "digital", "editing", "sketch", "mind", "addition", "core", "revision", "control", "we", "system", "also", "facilitate", "open-ended", "content", "creation", "process", "non-linear", "editing", "exploration", "-lsb-", "Kurlander", "1993", "Su", "et", "al.", "2009a", "Terry", "et", "al.", "2004", "-rsb-", "we", "also", "provide", "image", "diff", "tool", "can", "particularly", "handy", "visualization", "prior", "scheme", "primarily", "base", "low", "level", "pixel", "information", "summary", "we", "paper", "have", "follow", "contribution", "idea", "nonlinear", "revision", "control", "system", "image", "prototype", "system", "build", "gimp", "practical", "nonlinear", "revision", "control", "intuitive", "uus", "center", "revg", "common", "revision", "operation", "include", "addition", "branch", "merge", "conflict", "resolve", "diff", "non-linear", "replay", "additional", "application", "we", "system", "facilitate", "open-ended", "content", "creation", "exploration", "issue", "could", "hamper", "adoption", "revision", "control", "system", "manage", "graphic", "asset", "goal", "we", "system", "fill", "gap", "allow", "easy", "revision", "control", "image", "most", "commonly", "use", "graphic", "datum", "type", "linear", "history", "model", "while", "sufficient", "many", "visualization", "interactive", "task", "usually", "do", "provide", "enough", "information", "image", "revision", "control", "where", "predominant", "operation", "nonlinear", "include", "branch", "editing", "replay", "parallel", "information", "representable", "via", "nonlinear", "history", "model", "example", "-lsb-", "Edwards", "Mynatt", "1997", "-rsb-", "timeline", "represent", "tree", "node", "state", "edge", "action", "state-based", "model", "suitable", "revision", "control", "due", "potentially", "large", "storage", "size", "-lsb-", "Heer", "et", "al.", "2008", "-rsb-", "loss", "dependency", "information", "between", "operation", "allow", "only", "single", "global", "timeline", "thus", "can", "handle", "parallel", "revision", "however", "may", "confuse", "report", "user", "study", "however", "we", "could", "identify", "coherent", "datum", "structure", "practical", "revision", "control", "work", "however", "system", "about", "revision", "control", "can", "handle", "non-linear", "history", "graph", "structure", "computational", "task", "many", "computational", "task", "utilize", "certain", "graph", "structure", "modeling", "e.g.", "visualization", "flow", "-lsb-", "Levoy", "1994", "Bavoil", "et", "al.", "2005", "-rsb-", "when", "revg", "node", "select", "its", "corresponding", "spatial", "context", "highlight", "via", "bound", "box", "main", "gimp", "window", "-lrb-", "left", "-rrb-", "although", "gegl", "share", "similar", "graph", "representation", "like", "ours", "mainly", "design", "internal", "infrastructure", "non-destructive", "image", "editing", "GIMP", "revg", "due", "potentially", "high", "complexity", "large", "size", "dag", "we", "do", "directly", "expose", "ordinary", "user", "specifically", "each", "revg", "node", "aggregation", "one", "more", "dag", "node", "revg", "edge", "corresponding", "DAG", "each", "font", "color", "above", "indicate", "border", "color", "revg", "node", "corresponding", "operation", "class", "particular", "even", "linear", "revision", "history", "revg", "can", "still", "exhibit", "non-linear", "parallel", "structure", "due", "spatial", "semantic", "independency", "between", "operation", "editing", "example", "Figure", "first", "one", "revg", "itself", "-lrb-", "figure", "-rrb-", "which", "user", "can", "directly", "interact", "obtain", "visual", "clue", "about", "involve", "editing", "operation", "user", "can", "manually", "drag", "slider", "particular", "state", "click", "play", "button", "automatic", "playback", "Branch", "process", "software", "development", "many", "programmer", "especially", "those", "who", "work", "alone", "few", "other", "people", "might", "use", "branch", "command", "often", "image", "edit", "-lrb-", "gift", "snowman", "-rrb-", "automatically", "merge", "while", "conflict", "one", "-lrb-", "ornamental", "strip", "ball", "-rrb-", "trunk", "version", "choose", "default", "show", "Figure", "5b", "non-conflict", "contents", "automatically", "merge", "while", "conflicted", "one", "content", "from", "trunk", "choose", "default", "when", "automatic", "merged", "result", "satisfactory", "conflicted", "scenario", "can", "automatically", "resolve", "user", "can", "invoke", "we", "merge", "uus", "-lrb-", "figure", "5a", "-rrb-", "user", "can", "interactively", "drag", "zoom", "select", "region", "interest", "-lrb-", "red", "rectangle", "figure", "-rrb-", "other", "hand", "operation", "replay", "can", "easily", "achieve", "through", "procedure", "database", "-lrb-", "pdb", "-rrb-", "architecture", "GIMP", "where", "most", "image", "editing", "function", "register", "can", "however", "generally", "computationally", "expensive", "restricted", "certain", "scenario", "Revision", "diff", "we", "system", "problem", "extract", "difference", "between", "two", "revision", "can", "pose", "graph", "difference", "problem", "underlie", "dag", "graph", "difference", "compute", "one-toone", "correspondence", "between", "node", "from", "scratch", "equivalent", "isomorphism", "np-complete", "problem", "-lsb-", "cook", "1971", "-rsb-", "from", "embedded", "thumbnail", "image", "underlie", "text", "label", "revg", "node", "user", "can", "clearly", "identify", "involve", "operation", "dependency", "common", "artist", "first", "finish", "up", "main", "component", "-lrb-", "character", "example", "-rrb-", "try", "out", "all", "kind", "decoration", "use", "different", "layer", "we", "early", "prototype", "we", "attempt", "expose", "dag", "directly", "relevant", "tool", "semi-auto", "node", "aggregation", "annotation", "well", "ability", "direct", "dag", "manipulation", "other", "hand", "collaborate", "artist", "interested", "fine-grained", "operation", "rather", "than", "deal", "abstract", "dag", "artist", "prefer", "directly", "interact", "image" ],
  "content" : "Binary files, on the other hand, have received relatively less attention. This can be inconvenient for graphics applications that use a significant amount of binary data, such as images, videos, meshes, and animations. Existing strategies such as storing whole files for individual revisions or simple binary deltas could consume significant storage and obscure vital semantic information. We present a nonlinear revision control system for images, designed with the common digital editing and sketching workflows in mind. We use DAG (directed acyclic graph) as the core structure, with DAG nodes representing editing operations and DAG edges the corresponding spatial, temporal and semantic relationships. We visualize our DAG in RevG (revision graph), which provides not only as a meaningful display of the revision history but also an intuitive interface for common revision control operations such as review, replay, diff, addition, branching, merging, and conflict resolving. Beyond revision control, our system also facilitates artistic creation processes in common image editing and digital painting workflows. Revision control systems also facilitate open-ended content creation [Shneiderman 2007] through mechanisms such as branching and merging. So far, the development and deployment of revision control systems have been focused more on text than binary files. This is understandable, as text files tend to be more frequently used and revised, and it is easier to develop revision control mechanisms for them. (Simple line differencing already provides enough information for text files.) However, in many graphics projects, binary files, such as images, videos, meshes, and animations, can be frequently used and revised as well. Here the lack of revision control for binary files could cause several issues. Most existing general purpose re- The DAG is our core representation for revision control but not directly visible to ordinary users due to potential complexity. Users can interact with RevG and perform revision control functions. Node border colors denote the action types ( Table 1 ) and paths delineate the action dependencies. The visualization and interaction design of such user action histories has long been a popular topic [Kurlander 1993; Klemmer et al. 2002; Heer et al. 2008; Su et al. 2009a; Grossman et al. 2010]. In this paper, we propose a nonlinear revision control system for images, designed with the common content creation workflows such as digital editing and sketching in mind. In addition to core revision control, our system also facilitates open-ended content creation processes with non-linear editing and exploration [Kurlander 1993; Su et al. 2009a; Terry et al. 2004]. We also provide an image diff tool that can be particularly handy for visualization as prior schemes are primarily based on low level pixel information. In summary, our paper has the following contributions: ? The idea of a nonlinear revision control system for images. ? A prototype system built with GIMP for practical nonlinear revision control and an intuitive UI centered on RevG for common revision operations including addition, branching, merging, conflict resolving, diff, and non-linear replay. ? Additional applications of our system such as facilitating open-ended content creation and exploration. These issues could hamper the adoption of revision control systems in managing graphics assets. The goal of our system is to fill this gap, allowing easy revision control for images, the most commonly used graphics data type. The linear history model, while sufficient for many visualization and interactive tasks, usually do not provide enough information for image revision control where predominant operations are nonlinear, including branching, editing, and replay. Such parallel information is representable via a nonlinear history model. For example, in [Edwards and Mynatt 1997] the timeline is represented as a tree with nodes as states and edges as actions. Such a state-based model is not suitable for revision control due to potentially large storage size [Heer et al. 2008] and the loss of dependency information between operations. This allows only a single global timeline and thus cannot handle parallel revisions. However, this may be confusing as reported in the user study. However, we could not identify a coherent data structure for practical revision control in their work. However, this system is not about revision control and cannot handle non-linear histories. Graph structure for computational tasks Many computational tasks utilize a certain graph structure for modeling, e.g. visualization flows [Levoy 1994; Bavoil et al. 2005]. When a RevG node is selected, its corresponding spatial context will be highlighted via a bounding box in the main GIMP window (left). Although GEGL shares a similar graph representation like ours, it is mainly designed as the internal infrastructure for non-destructive image editing on GIMP. RevG Due to the potentially high complexity and large size of DAG, we do not directly expose it to ordinary users. Specifically, each RevG node is the aggregation of one or more DAG nodes and RevG edges are the corresponding DAG Each font color above indicates border color of a RevG node with the corresponding operation class. In particular, even for a linear revision history, the RevG can still exhibit non-linear parallel structures due to spatial or semantic independencies between operations, such as the editing example in Figure 1 . The first one is the RevG itself ( Figure 3 ), which users can directly interact with to obtain visual clues about the involved editing operations. Users can manually drag the slider for a particular state or click on the play button for automatic playback. Branch In the process of software development, many programmers, especially those who work alone or with few other people, might not use the branch command that often. Images edits (gift at and snowman) are automatically merged while for conflict ones (ornamental strips and balls) the trunk version is chosen by default. As shown in Figure 5b , the non-conflict contents are automatically merged while, for conflicted ones, the content from the trunk is chosen by default. When automatic merged results are not satisfactory, or there are conflicted scenarios that cannot be automatically resolved, users can invoke our merge UI ( Figure 5a ). The user can interactively drag, zoom, and select the region of interest (the red rectangle in the figure). On the other hand, operation replay can be easily achieved through the procedure database (PDB) architecture in GIMP, where most image editing functions are registered and can However, they are generally computationally expensive and restricted to certain scenarios. Revision diff In our system, the problem of extracting differences between two revisions can be posed as a graph difference problem of the underlying DAGs. For graph difference, computing one-toone correspondence between the nodes from scratch is equivalent  to isomorphism, a NP-complete problem [Cook 1971]. From the embedded thumbnail images and underlying text labels in the RevG nodes, users can clearly identify the involved operations and their dependencies. It is common for artists to first finish up the main components (character in this example) and then to try out all kinds of decorations by using different layers. In our early prototype, we attempted to expose the DAG directly with relevant tools such as semi-auto node aggregation and annotation as well as the ability for direct DAG manipulation. On the other hand, the collaborating artist was not interested in such fine-grained operations; rather than dealing with an abstract DAG, the artist preferred to directly interact with images.",
  "resources" : [ ]
}