{
  "uri" : "sig2008-a34-ben-chen_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2008/a34-ben-chen_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Variational Harmonic Maps for Space Deformation",
    "published" : "2009",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Mirela-Ben-Chen",
      "name" : "Mirela",
      "surname" : "Ben-Chen"
    }, {
      "uri" : "http://drinventor/Ofir-Weber",
      "name" : "Ofir",
      "surname" : "Weber"
    }, {
      "uri" : "http://drinventor/Craig-Gotsman",
      "name" : "Craig",
      "surname" : "Gotsman"
    } ]
  },
  "bagOfWords" : [ "do", "define", "energy", "functional", "mapping", "minimize", "within", "linear", "span", "basis", "function", "cr", "category", "i.", "3.5", "-lsb-", "Computer", "Graphics", "-rsb-", "computational", "geometry", "Object", "Modeling", "Keywords", "space", "deformation", "harmonic", "map", "shape", "editing", "method", "have", "become", "popular", "recent", "year", "-lsb-", "Huang", "et", "al.", "2006", "Lipman", "et", "al.", "2007b", "Joshi", "et", "al.", "2007", "Lipman", "et", "al.", "2008", "Sumner", "et", "al.", "2007", "Botsch", "et", "al.", "2007", "-rsb-", "several", "reason", "permission", "make", "digital", "hard", "copy", "part", "all", "work", "personal", "classroom", "use", "grant", "without", "fee", "provide", "copy", "make", "distribute", "profit", "direct", "commercial", "advantage", "copy", "show", "notice", "fus", "rst", "page", "initial", "screen", "display", "along", "full", "citation", "some", "space", "deformation", "method", "-lsb-", "Lipman", "et", "al.", "2007b", "Joshi", "et", "al.", "2007", "Lipman", "et", "al.", "2008", "-rsb-", "``", "cage-based", "''", "method", "give", "``", "source", "cage", "''", "manipulate", "user", "create", "``", "target", "cage", "''", "optimization", "problem", "generally", "non-linear", "robustness", "efficiency", "algorithm", "depend", "critically", "formulation", "deformation", "optimization", "method", "use", "since", "harmonic", "function", "smooth", "regular", "use", "wide", "range", "application", "from", "parameterization", "-lsb-", "floater", "Hormann", "2005", "-rsb-", "remeshing", "-lsb-", "Dong", "et", "al.", "2005", "-rsb-", "space", "deformation", "-lsb-", "Joshi", "et", "al.", "2007", "Lipman", "et", "al.", "2008", "-rsb-", "we", "generate", "harmonic", "map", "domain", "linear", "combination", "harmonic", "basis", "function", "worth", "note", "we", "harmonic", "basis", "function", "variant", "``", "Green", "coordinate", "''", "Lipman", "et", "al.", "-lsb-", "2008", "-rsb-", "-lrb-", "Weber", "et", "al.", "-lsb-", "2009", "-rsb-", "-rrb-", "however", "we", "give", "simpler", "expression", "they", "also", "provide", "first", "second", "derivative", "second", "we", "have", "closed-form", "expression", "linear", "combination", "basis", "function", "deformation", "continuous", "domain", "thus", "do", "require", "voxelization", "input", "domain", "some", "other", "method", "do", "optimization", "method", "extremely", "efficient", "its", "computational", "complexity", "dominate", "matrix-vector", "multiplication", "use", "pre-computed", "matrix", "thus", "may", "also", "easily", "implement", "GPU", "shape", "deformation", "one", "most", "active", "research", "subject", "computer", "graphic", "thorough", "review", "all", "recent", "work", "outside", "scope", "paper", "cage-based", "method", "closely", "related", "barycentric", "coordinate", "typically", "deformation", "define", "linear", "combination", "vertex", "target", "cage", "set", "barycentric", "coordinate", "function", "define", "input", "cage", "one", "first", "method", "-lsb-", "Huang", "et", "al.", "2006", "-rsb-", "use", "mean-value", "coordinate", "-lsb-", "Floater", "et", "al.", "2005", "Ju", "et", "al.", "2005", "-rsb-", "coordinate", "function", "later", "method", "-lsb-", "Joshi", "et", "al.", "2007", "-rsb-", "suggest", "use", "harmonic", "coordinate", "instead", "guarantee", "positive", "inside", "domain", "recently", "Lipman", "et", "al.", "-lsb-", "2008", "-rsb-", "show", "how", "define", "two", "set", "coordinate", "function", "Green", "coordinate", "which", "have", "closed-form", "expression", "result", "detail-preserving", "mapping", "call", "they", "cauchy-green", "coordinate", "overcome", "problem", "Weber", "et", "al.", "-lsb-", "2009", "-rsb-", "propose", "something", "similar", "spirit", "we", "method", "use", "complex", "Cauchy-Green", "coordinate", "conformal", "basis", "function", "find", "new", "cage", "location", "solve", "optimization", "problem", "derive", "from", "position", "constraint", "supply", "user", "although", "method", "quite", "effective", "complex", "conformal", "formulation", "apply", "only", "planar", "deformation", "we", "use", "harmonic", "mapping", "basis", "function", "instead", "conformal", "function", "since", "complex", "holomorphic", "function", "-lrb-", "which", "two", "dimension", "generate", "conformal", "map", "-rrb-", "do", "have", "simple", "generalization", "three", "dimension", "harmonic", "coordinate", "use", "independent", "harmonic", "function", "each", "coordinate", "thus", "able", "enforce", "exact", "interpolation", "target", "cage", "Green", "coordinate", "three", "dimension", "use", "vertex", "target", "cage", "its", "normal", "coefficient", "linear", "combination", "harmonic", "basis", "function", "two", "other", "recent", "space-deformation", "method", "which", "solve", "nonlinear", "optimization", "problem", "give", "positional", "constraint", "those", "Sumner", "et", "al.", "-lsb-", "2007", "-rsb-", "Botsch", "et", "al.", "-lsb-", "2007", "-rsb-", "Sumner", "et", "al", "-lsb-", "2007", "-rsb-", "deformation", "define", "use", "deformation", "graph", "which", "automatically", "compute", "from", "input", "shape", "two", "disadvantage", "method", "compare", "ours", "first", "deformation", "graph", "cage", "sense", "deformation", "function", "compute", "base", "euclidean", "distance", "BEM", "have", "be", "use", "example", "Martin", "et", "al.", "-lsb-", "2008", "-rsb-", "discretize", "harmonic", "basis", "function", "polyhedral", "finite", "element", "explain", "next", "section", "deformation", "mapping", "uniquely", "define", "two", "function", "define", "vertex", "face", "cage", "respectively", "however", "use", "current", "formulation", "obvious", "how", "find", "mapping", "we", "compare", "performance", "VHM", "two", "state-of-the-art", "deformation", "method", "``", "embed", "deformation", "''", "-lrb-", "ED", "-rrb-", "Sumner", "et", "al.", "-lsb-", "2007", "-rsb-", "``", "adaptive", "rigid", "cell", "''", "-lrb-", "ARC", "-rrb-", "Botsch", "et", "al.", "-lsb-", "2007", "-rsb-", "oppose", "direct", "manipulation", "method", "-lsb-", "Botsch", "et", "al.", "2007", "Sumner", "et", "al.", "2007", "-rsb-", "which", "build", "underlie", "representation", "automatically", "cage", "base", "method", "-lsb-", "Lipman", "et", "al.", "2008", "-rsb-", "usually", "rely", "manually", "model", "cage" ],
  "content" : "This is done by defining an energy functional of the mapping, and minimizing it within the linear span of these basis functions. CR Categories: I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling Keywords: Space deformation, harmonic maps, shape editing Such methods have become popular in recent years [Huang et al. 2006; Lipman et al. 2007b; Joshi et al. 2007, Lipman et al. 2008; Sumner et al. 2007; Botsch et al. 2007], for several reasons. Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or direct commercial advantage and that copies show this notice on the fi rst page or initial screen of a display along with the full citation. Some space deformation methods [Lipman et al. 2007b; Joshi et al. 2007; Lipman et al. 2008] are \"cage-based\". In these methods, a given \"source cage\" is manipulated by the user to create a \"target cage\". As this optimization problem is generally non-linear, the robustness and efficiency of these algorithms depend critically on the formulation of the deformation, and the optimization method used. Since harmonic functions are smooth and regular, they are used for a wide range of applications, from parameterization [Floater and Hormann 2005] and remeshing [Dong et al. 2005] to space deformations [Joshi et al. 2007; Lipman et al. 2008]. We generate harmonic maps on the domain as a linear combination of harmonic basis functions. It is worth noting that our harmonic basis functions are a variant of the \"Green coordinates\" of Lipman et al. [2008] (and Weber et al. [2009]), however, we give simpler expressions for them, and also provide their first and second derivatives. Second, we have a closed-form expression a linear combination of basis functions for the deformation of a continuous domain, thus do not require a voxelization of the input domain, as some other methods do. This optimization method is extremely efficient, as its computational complexity is dominated by matrix-vector multiplications using pre-computed matrices, thus may also be easily implemented on the GPU. Shape deformation is one of the most active research subjects in computer graphics, and a thorough review of all the recent work is outside the scope of this paper. Cage-based methods are closely related to barycentric coordinates, as typically the deformation is defined as a linear combination of the vertices of the target cage with a set of barycentric coordinate functions defined on the input cage. One of the first such methods [Huang et al. 2006] used mean-value coordinates [Floater et al. 2005; Ju et al. 2005] as the coordinate functions. Later methods [Joshi et al. 2007] suggested using harmonic coordinates instead, as these are guaranteed to be positive inside the domain. Recently, Lipman et al. [2008] showed how to define two sets of coordinate functions ? Green coordinates, which have closed-form expressions, and result in detail-preserving mappings. They called them Cauchy-Green coordinates. To overcome this problem, Weber et al. [2009] proposed something similar in spirit to our method: use the complex Cauchy-Green coordinates as conformal basis functions, and find the new cage location by solving an optimization problem derived from position constraints supplied by the user. Although their method is quite effective, the complex conformal formulation applies only to planar deformation. We use harmonic mappings as basis functions instead of conformal functions, since complex holomorphic functions (which in two dimensions generate conformal maps) do not have a simple generalization to three dimensions. Harmonic coordinates use independent harmonic functions for each coordinate, thus are able to enforce an exact interpolation of the target cage. Green coordinates in three dimensions use the vertices of the target cage and its normals as the coefficients of a linear combination of the harmonic basis functions. Two other recent space-deformation methods which solve a nonlinear optimization problem given positional constraints are those of Sumner et al. [2007] and Botsch et al. [2007]. In Sumner et al [2007], the deformation is defined using a deformation graph, which is automatically computed from the input shape. There are two disadvantages of this method compared to ours ? first, the deformation graph is not a cage, in the sense that the deformation function is computed based on Euclidean distances. BEM has been used, for example, by Martin et al. [2008] to discretize harmonic basis functions for polyhedral finite elements. As will be explained in the next section, the deformation mapping is uniquely defined by two functions, a and b, defined on the vertices and faces of the cage, respectively. However, using the current formulation, it is not obvious how to find such a mapping. We compared the performance of VHM to two state-of-the-art deformation methods: \"Embedded Deformation\" (ED) of Sumner et al. [2007] and \"Adaptive Rigid Cells\" (ARC) of Botsch et al. [2007]. As opposed to direct manipulation methods [Botsch et al. 2007, Sumner et al. 2007], which build the underlying representation automatically, cage based methods such as [Lipman et al. 2008] usually rely on a manually modeled cage.",
  "resources" : [ ]
}