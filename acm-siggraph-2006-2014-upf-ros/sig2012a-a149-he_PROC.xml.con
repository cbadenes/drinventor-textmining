{
  "uri" : "sig2012a-a149-he_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2012a/a149-he_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Staggered Meshless Solid-Fluid Coupling",
    "published" : "2012",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Xiaowei-He",
      "name" : "Xiaowei",
      "surname" : "He"
    }, {
      "uri" : "http://drinventor/Ning-Liu",
      "name" : "Ning",
      "surname" : "Liu"
    }, {
      "uri" : "http://drinventor/Guoping-Wang",
      "name" : "Guoping",
      "surname" : "Wang"
    }, {
      "uri" : "http://drinventor/Fengjun-Zhang",
      "name" : "Fengjun",
      "surname" : "Zhang"
    }, {
      "uri" : "http://drinventor/Sheng-Li",
      "name" : "Sheng",
      "surname" : "Li"
    }, {
      "uri" : "http://drinventor/Songdong-Shao",
      "name" : "Songdong",
      "surname" : "Shao"
    }, {
      "uri" : "http://drinventor/Hongan-Wang",
      "name" : "Hongan",
      "surname" : "Wang"
    } ]
  },
  "bagOfWords" : [ "all", "timing", "follow", "case", "give", "single-threaded", "execution", "Intel", "Xeon", "W3550", "workstation", "four", "3.07", "GHz", "processor", "gb", "main", "memory", "part", "convergence", "solve", "pressure", "Poisson", "equation", "discuss", "invoke", "continuity", "equation", "we", "can", "define", "degree", "which", "fluid", "incompressibility", "achieve", "follow", "where", "summation", "take", "over", "inner", "fluid", "particle", "only", "we", "choose", "single", "physical", "update", "step", "0.1", "example", "show", "Figure", "-lrb-", "right", "-rrb-", "aim", "test", "several", "iterative", "strategy", "solve", "most", "commonly", "use", "algorithm", "grid-based", "method", "solve", "symmetric", "positive", "semidefinite", "linear", "system", "conjugate", "gradient", "-lrb-", "cg", "-rrb-", "algorithm", "however", "problem", "cg", "require", "large", "number", "iteration", "converge", "desire", "accuracy", "-lrb-", "40", "iteration", "80", "iteration", "0.1", "show", "Figure", "10", "Table", "-rrb-", "improvement", "accelerate", "convergence", "rate", "use", "precondition", "technique", "among", "which", "incomplete", "Cholesky", "-lrb-", "ic", "-rrb-", "preconditioner", "one", "most", "popular", "preconditioner", "its", "simplicity", "efficiency", "-lsb-", "Benzi", "2002", "-rsb-", "result", "convergence", "rate", "incomplete", "Cholesky", "precondition", "conjugate", "gradient", "-lrb-", "ic", "pcg", "-rrb-", "reach", "nearly", "factor", "speed-up", "over", "cg", "-lrb-", "14", "iteration", "28", "iteration", "0.1", "-rrb-", "nevertheless", "attention", "still", "need", "since", "both", "construction", "application", "ic", "preconditioner", "require", "extra", "computational", "cost", "can", "find", "from", "Table", "enhance", "convergence", "rate", "ic", "pcg", "over", "cg", "fail", "compensate", "extra", "computational", "cost", "result", "even", "longer", "total", "computational", "time", "explore", "more", "efficient", "preconditioner", "we", "refer", "another", "commonly", "use", "algorithm", "which", "call", "symmetric", "successive", "over", "relaxation", "-lrb-", "ssor", "-rrb-", "method", "although", "ssor", "algorithm", "itself", "do", "provide", "sufficient", "amount", "convergence", "rate", "we", "find", "ssor", "precondition", "conjugate", "gradient", "-lrb-", "ssor", "pcg", "-rrb-", "method", "show", "quite", "similar", "convergence", "rate", "ic", "pcg", "additionally", "ssor", "preconditioner", "just", "like", "Jacobi", "preconditioner", "can", "derive", "from", "coefficient", "matrix", "little", "CPU", "effort", "thus", "both", "0.1", "ssor", "pcg", "method", "give", "best", "performance", "among", "all", "mention", "strategy", "implementation", "ssor", "preconditioner", "parameterize", "follow", "-lsb-", "Barrett", "1994", "-rsb-", "-lrb-", "-rrb-", "where", "represent", "diagonal", "lower", "part", "coefficient", "matrix", "respectively", "besides", "set", "1.7", "accord", "variety", "numerical", "test", "which", "give", "best", "performance", "order", "evaluate", "accuracy", "efficiency", "propose", "staggered", "meshless", "coupling", "method", "we", "set", "up", "validation", "test", "case", "use", "symmetric", "wedge", "impact", "free", "water", "surface", "experiment", "have", "be", "carry", "out", "-lsb-", "Zhao", "et", "al.", "1996", "-rsb-", "0", "wedge", "deadrise", "angle", "30", "weigh", "141kg", "drop", "enter", "water", "surface", "6.15", "m/s", "initial", "vertical", "velocity", "during", "experiment", "vertical", "motion", "only", "degree", "freedom", "allow", "wedge", "more", "detail", "refer", "original", "work", "motion", "speed", "experimentally", "record", "plot", "Figure", "11", "numerical", "setup", "particle", "spacing", "0.01", "select", "discretize", "both", "water", "which", "2m", "wide", "1m", "deep", "wedge", "which", "have", "breadth", "0.5", "m.", "different", "simulation", "be", "make", "run", "0.025", "real", "time", "both", "direct", "force", "coupling", "method", "-lsb-", "Becker", "et", "al.", "2009", "-rsb-", "staggered", "coupling", "method", "former", "case", "timestep", "simulation", "restrict", "Courant-Friedrichs-Lewy", "-lrb-", "CFL", "-rrb-", "condition", "besides", "since", "method", "enforce", "non-penetration", "fluid", "particle", "particle?particle", "collision", "detection", "algorithm", "timestep", "should", "further", "restricted", "ensure", "two", "particle", "do", "move", "more", "than", "one", "diameter", "distance", "towards", "each", "other", "each", "step", "contrast", "latter", "method", "free", "above", "mention", "limitation", "due", "use", "implicit", "incompressible", "fluid", "solver", "avoidance", "explicit", "particle-to-particle", "boundary", "handling", "thus", "allow", "significantly", "larger", "time", "step", "simulation", "result", "both", "0.1", "depict", "Figure", "11", "make", "comparison", "experimental", "result", "from", "which", "find", "we", "method", "show", "better", "agreement", "experimental", "datum", "more", "detail", "about", "accuracy", "efficiency", "summarize", "Table", "where", "we", "have", "choose", "maximum", "allowable", "time", "step", "both", "method", "specifically", "can", "also", "note", "from", "table", "deviation", "from", "experimental", "datum", "decrease", "only", "small", "fraction", "-lrb-", "approximately", "0.2", "-rrb-", "compression", "change", "from", "0.1", "therefore", "should", "sufficient", "only", "enforce", "get", "more", "efficiency", "Figure", "12", "illustrate", "one-way", "coupling", "combination", "both", "free-slip", "no-slip", "boundary", "condition", "twodimensional", "scene", "demonstrate", "fluid", "flow", "around", "cylinder", "outer", "boundary", "static", "free-slip", "boundary", "condition", "inner", "cylinder", "no-slip", "boundary", "condition", "impose", "three", "different", "angular", "velocity", "include", "10", "rad/s", "-lrb-", "top", "-rrb-", "rad/s", "-lrb-", "middle", "-rrb-", "-10", "rad/s", "-lrb-", "bottom", "-rrb-", "another", "case", "dam", "break", "three", "dimension", "show", "Figure", "-lrb-", "right", "-rrb-", "where", "darker", "pillar", "rotate", "clockwise", "angular", "velocity", "10", "rad/s", "while", "brighter", "one", "rotate", "anticlockwise", "-10", "rad/s", "although", "we", "have", "discuss", "how", "avoid", "fluid", "stick", "wall", "section", "5.2", "some", "case", "require", "model", "realistic", "cohesion", "liquid", "solid", "impose", "fluid", "stick", "solid", "we", "method", "able", "model", "phenomenon", "fluid", "flow", "around", "ball", "show", "Figure", "13", "-lrb-", "right", "-rrb-", "-lsb-", "Schechter", "Bridson", "2012", "-rsb-", "which", "quite", "difficult", "standard", "sph", "besides", "comparison", "also", "show", "Figure", "13", "-lrb-", "left", "-rrb-", "where", "fluid", "stick", "solid", "have", "be", "avoid", "Figure", "14", "two-way", "coupling", "test", "drop", "elliptical", "stone", "tank", "water", "vary", "initial", "angular", "velocity", "different", "slip", "condition", "non-rotating", "case", "similar", "part", "convergence", "solve", "pressure", "Poisson", "equation", "discuss", "invoke", "continuity", "equation", "we", "can", "define", "degree", "which", "fluid", "incompressibility", "achieve", "follow", "where", "summation", "take", "over", "inner", "fluid", "particle", "only", "we", "choose", "single", "physical", "update", "step", "0.1", "example", "show", "Figure", "-lrb-", "right", "-rrb-", "aim", "test", "several", "iterative", "strategy", "solve", "most", "commonly", "use", "algorithm", "grid-based", "method", "solve", "symmetric", "positive", "semidefinite", "linear", "system", "conjugate", "gradient", "-lrb-", "cg", "-rrb-", "algorithm", "however", "problem", "cg", "require", "large", "number", "iteration", "converge", "desire", "accuracy", "-lrb-", "40", "iteration", "80", "iteration", "0.1", "show", "Figure", "10", "Table", "-rrb-", "improvement", "accelerate", "convergence", "rate", "use", "precondition", "technique", "among", "which", "incomplete", "Cholesky", "-lrb-", "ic", "-rrb-", "preconditioner", "one", "most", "popular", "preconditioner", "its", "simplicity", "efficiency", "-lsb-", "Benzi", "2002", "-rsb-", "result", "convergence", "rate", "incomplete", "Cholesky", "precondition", "conjugate", "gradient", "-lrb-", "ic", "pcg", "-rrb-", "reach", "nearly", "factor", "speed-up", "over", "cg", "-lrb-", "14", "iteration", "28", "iteration", "0.1", "-rrb-", "nevertheless", "attention", "still", "need", "since", "both", "construction", "application", "ic", "preconditioner", "require", "extra", "computational", "cost", "can", "find", "from", "Table", "enhance", "convergence", "rate", "ic", "pcg", "over", "cg", "fail", "compensate", "extra", "computational", "cost", "result", "even", "longer", "total", "computational", "time", "explore", "more", "efficient", "preconditioner", "we", "refer", "another", "commonly", "use", "algorithm", "which", "call", "symmetric", "successive", "over", "relaxation", "-lrb-", "ssor", "-rrb-", "method", "although", "ssor", "algorithm", "itself", "do", "provide", "sufficient", "amount", "convergence", "rate", "we", "find", "ssor", "precondition", "conjugate", "gradient", "-lrb-", "ssor", "pcg", "-rrb-", "method", "show", "quite", "similar", "convergence", "rate", "ic", "pcg", "additionally", "ssor", "preconditioner", "just", "like", "Jacobi", "preconditioner", "can", "derive", "from", "coefficient", "matrix", "little", "CPU", "effort", "thus", "both", "0.1", "ssor", "pcg", "method", "give", "best", "performance", "among", "all", "mention", "strategy", "implementation", "ssor", "preconditioner", "parameterize", "follow", "-lsb-", "Barrett", "1994", "-rsb-", "-lrb-", "-rrb-", "where", "represent", "diagonal", "lower", "part", "coefficient", "matrix", "respectively", "besides", "set", "1.7", "accord", "variety", "numerical", "test", "which", "give", "best", "performance", "order", "evaluate", "accuracy", "efficiency", "propose", "staggered", "meshless", "coupling", "method", "we", "set", "up", "validation", "test", "case", "use", "symmetric", "wedge", "impact", "free", "water", "surface", "experiment", "have", "be", "carry", "out", "-lsb-", "Zhao", "et", "al.", "1996", "-rsb-", "0", "wedge", "deadrise", "angle", "30", "weigh", "141kg", "drop", "enter", "water", "surface", "6.15", "m/s", "initial", "vertical", "velocity", "during", "experiment", "vertical", "motion", "only", "degree", "freedom", "allow", "wedge", "more", "detail", "refer", "original", "work", "motion", "speed", "experimentally", "record", "plot", "Figure", "11", "numerical", "setup", "particle", "spacing", "0.01", "select", "discretize", "both", "water", "which", "2m", "wide", "1m", "deep", "wedge", "which", "have", "breadth", "0.5", "m.", "different", "simulation", "be", "make", "run", "0.025", "real", "time", "both", "direct", "force", "coupling", "method", "-lsb-", "Becker", "et", "al.", "2009", "-rsb-", "staggered", "coupling", "method", "former", "case", "timestep", "simulation", "restrict", "Courant-Friedrichs-Lewy", "-lrb-", "CFL", "-rrb-", "condition", "besides", "since", "method", "enforce", "non-penetration", "fluid", "particle", "particle?particle", "collision", "detection", "algorithm", "timestep", "should", "further", "restricted", "ensure", "two", "particle", "do", "move", "more", "than", "one", "diameter", "distance", "towards", "each", "other", "each", "step", "contrast", "latter", "method", "free", "above", "mention", "limitation", "due", "use", "implicit", "incompressible", "fluid", "solver", "avoidance", "explicit", "particle-to-particle", "boundary", "handling", "thus", "allow", "significantly", "larger", "time", "step", "simulation", "result", "both", "0.1", "depict", "Figure", "11", "make", "comparison", "experimental", "result", "from", "which", "find", "we", "method", "show", "better", "agreement", "experimental", "datum", "more", "detail", "about", "accuracy", "efficiency", "summarize", "Table", "where", "we", "have", "choose", "maximum", "allowable", "time", "step", "both", "method", "specifically", "can", "also", "note", "from", "table", "deviation", "from", "experimental", "datum", "decrease", "only", "small", "fraction", "-lrb-", "approximately", "0.2", "-rrb-", "compression", "change", "from", "0.1", "therefore", "should", "sufficient", "only", "enforce", "get", "more", "efficiency", "Figure", "12", "illustrate", "one-way", "coupling", "combination", "both", "free-slip", "no-slip", "boundary", "condition", "twodimensional", "scene", "demonstrate", "fluid", "flow", "around", "cylinder", "outer", "boundary", "static", "free-slip", "boundary", "condition", "inner", "cylinder", "no-slip", "boundary", "condition", "impose", "three", "different", "angular", "velocity", "include", "10", "rad/s", "-lrb-", "top", "-rrb-", "rad/s", "-lrb-", "middle", "-rrb-", "-10", "rad/s", "-lrb-", "bottom", "-rrb-", "another", "case", "dam", "break", "three", "dimension", "show", "Figure", "-lrb-", "right", "-rrb-", "where", "darker", "pillar", "rotate", "clockwise", "angular", "velocity", "10", "rad/s", "while", "brighter", "one", "rotate", "anticlockwise", "-10", "rad/s", "although", "we", "have", "discuss", "how", "avoid", "fluid", "stick", "wall", "section", "5.2", "some", "case", "require", "model", "realistic", "cohesion", "liquid", "solid", "impose", "fluid", "stick", "solid", "we", "method", "able", "model", "phenomenon", "fluid", "flow", "around", "ball", "show", "Figure", "13", "-lrb-", "right", "-rrb-", "-lsb-", "Schechter", "Bridson", "2012", "-rsb-", "which", "quite", "difficult", "standard", "sph", "besides", "comparison", "also", "show", "Figure", "13", "-lrb-", "left", "-rrb-", "where", "fluid", "stick", "solid", "have", "be", "avoid", "Figure", "14", "two-way", "coupling", "test", "drop", "elliptical", "stone", "tank", "water", "vary", "initial", "angular", "velocity", "different", "slip", "condition", "non-rotating", "case", "similar", "paper", "staggered", "meshless", "method", "present", "overcome", "difficulty", "simulate", "solid-fluid", "coupling", "meshless", "method", "propose", "method", "create", "set", "staggered", "particle", "each", "time", "step", "separate", "velocity", "field", "from", "pressure", "field", "result", "free", "surface", "various", "solid", "wall", "boundary", "condition", "can", "apply", "different", "type", "particle", "avoid", "simulation", "failure", "new", "framework", "enforce", "both", "density", "constraint", "velocity", "constraint", "fluid", "further", "propose", "way", "various", "boundary", "condition", "include", "free-slip", "no-slip", "can", "easily", "implement", "method", "novel", "provide", "powerful", "tool", "implement", "stable", "one-way", "two-way", "coupling", "between", "fluid", "rigid", "body", "however", "method", "do", "have", "some", "limitation", "first", "we", "current", "implementation", "yet", "suitable", "deal", "infinitesimally", "thin", "solid", "cloth", "enable", "fluid", "interaction", "thin", "solid", "either", "very", "small", "timestep", "robust", "collision", "detection", "algorithm", "-lsb-", "Becker", "et", "al.", "2009", "-rsb-", "require", "second", "more", "accurate", "contact", "handle", "technique", "among", "multi-body", "need", "current", "comptuation", "we", "only", "use", "simple", "penalty", "force", "between", "rigid", "body", "avoid", "penetration", "nonetheless", "would", "interesting", "future", "work", "model", "accurate", "behavior", "both", "accurate", "multi-body", "contact", "deformation", "staggered", "particle", "furthermore", "attention", "also", "pay", "achieve", "GPU", "implementation", "method" ],
  "content" : "All the timings in the following cases are given for a single-threaded execution on an Intel Xeon W3550 workstation with four 3.07GHz processors and 6 GB of main memory. In this part, the convergence in solving the pressure Poisson equation 5 is discussed. By invoking the continuity equation, we can define the degree to which the fluid incompressibility is achieved as follows where the summation is taken over the inner fluid particles only. We choose a single physical update step at t = 0.1s in the example shown in Figure 1 (right) and aim to test several iterative strategies for solving p v . The most commonly used algorithm in the grid-based methods for solving the symmetric positive semidefinite linear systems is the conjugate gradient (CG) algorithm. However, the problem with CG is that it requires a large number of iterations to converge to the desired accuracy (40 iterations for E = 1% and 80 iterations for E = 0.1%, as shown in Figure 10 and Table 1 ). An improvement to accelerate the convergence rate is to use the preconditioning techniques, among which the incomplete Cholesky (IC) preconditioner is one of the most popular preconditioners for its simplicity and efficiency [Benzi 2002]. As a result, the convergence rate of incomplete Cholesky preconditioned conjugate gradient (IC PCG) reaches nearly a factor of 3 speed-up over the CG (14 iterations for E = 1% and 28 iterations for E = 0.1%). Nevertheless, attention is still needed since both the construction and application of the IC preconditioner require extra computational costs. For E = 1%, it can be found from Table 1 that the enhanced convergence rate of IC PCG over CG fails to compensate for these extra computational costs, resulting in even longer total computational time. To explore more efficient preconditioners, we refer to another commonly used algorithm which is called the symmetric successive over relaxation (SSOR) method. Although the SSOR algorithm itself does not provide a sufficient amount of convergence rate, we find that the SSOR preconditioned conjugate gradient (SSOR PCG) method shows a quite similar convergence rate as the IC PCG. Additionally, the SSOR preconditioner, just like the Jacobi preconditioner, can be derived from the coefficient matrix with little CPU effort. Thus, for both E = 1% and E = 0.1%, the SSOR PCG method gives the best performance among all the mentioned strategies. In the implementation, the SSOR preconditioner is parameterized by ? as follow [Barrett 1994] 1 1 1 ?1 1 T M (?) = D + L D D + L 2 ? ? ? ? ? where D and L represent the diagonal and lower parts of the coefficient matrix, respectively. Besides, ? is set to 1.7 according to a variety of numerical tests, which gives the best performance. In order to evaluate the accuracy and efficiency of the proposed staggered meshless coupling method, we set up a validation test case using a symmetric wedge impacting on the free water surface. The experiment has been carried out by [Zhao et al. 1996]. At t = 0s, a wedge with a deadrise angle of 30 ? and weighing 141kg was dropped and entered the water surface with a 6.15m/s initial vertical velocity. During the experiment, the vertical motion was the only degree of freedom allowed to the wedge. For more details, refer to their original work. The motion speed was experimentally recorded and plotted in Figure 11 . In the numerical setup, a particle spacing of ?x = 0.01m is selected to discretize both the water, which is 2m wide and 1m deep, and the wedge, which has a breadth of 0.5m. Then, different simulations were made to run 0.025s of real time with both the direct forcing coupling method [Becker et al. 2009] and the staggered coupling method. In the former case, the timestep for the simulation is restricted by the Courant-Friedrichs-Lewy (CFL) condition. Besides, since the method enforces the non-penetration of the fluid particles with the particle?particle collision detection algorithm, the timestep should be further restricted to ensure that two particles do not move more than one diameter distance towards each other in each step. In contrast, the latter method is free of the above mentioned limitations due to the use of an implicit incompressible fluid solver and the avoidance of the explicit particle-to-particle boundary handling, thus allowing significantly larger time steps. The simulation results for both E = 1% and E = 0.1% are depicted in Figure 11 to make a comparison with the experimental results, from which it is found that our method shows a better agreement with the experimental data. More details about the accuracy and efficiency are summarized in Table 2 where we have chosen the maximum allowable time step for both the methods. Specifically, it can also be noted from the table that the deviation from the experimental data decreases only by a small fraction (approximately 0.2%) as the compression is changed from 1% to 0.1%. Therefore, it should be sufficient to only enforce E = 1% to get more efficiency. Figure 12 illustrates the one-way coupling with the combinations of both the free-slip and no-slip boundary conditions in a twodimensional scene demonstrating fluid flowing around a cylinder. The outer boundary is static with free-slip boundary condition. For the inner cylinder, the no-slip boundary condition is imposed with three different angular velocities including 10 rad/s (top), 0 rad/s (middle) and -10 rad/s (bottom). Another case of dam break in three dimensions is shown in Figure 1 (right) where the darker pillars are rotating clockwise with an angular velocity of 10 rad/s while the brighter ones are rotating anticlockwise with -10 rad/s. Although we have discussed how to avoid the fluid sticking to wall in section 5.2, in some cases, it is required to model the realistic cohesion of the liquid to the solids. By imposing the fluid sticking to the solids, our method is able to model the phenomenon of fluid flowing around a ball as shown in Figure 13 (right) [Schechter and Bridson 2012], which is quite difficult for the standard SPH. Besides, a comparison is also shown in Figure 13 (left) where the fluid sticking to the solids has been avoided. In Figure 14 , the two-way coupling is tested by dropping an elliptical stone into a tank of water with varying initial angular velocities and different slip conditions. For the non-rotating case, similar In this part, the convergence in solving the pressure Poisson equation 5 is discussed. By invoking the continuity equation, we can define the degree to which the fluid incompressibility is achieved as follows where the summation is taken over the inner fluid particles only. We choose a single physical update step at t = 0.1s in the example shown in Figure 1 (right) and aim to test several iterative strategies for solving p v . The most commonly used algorithm in the grid-based methods for solving the symmetric positive semidefinite linear systems is the conjugate gradient (CG) algorithm. However, the problem with CG is that it requires a large number of iterations to converge to the desired accuracy (40 iterations for E = 1% and 80 iterations for E = 0.1%, as shown in Figure 10 and Table 1 ). An improvement to accelerate the convergence rate is to use the preconditioning techniques, among which the incomplete Cholesky (IC) preconditioner is one of the most popular preconditioners for its simplicity and efficiency [Benzi 2002]. As a result, the convergence rate of incomplete Cholesky preconditioned conjugate gradient (IC PCG) reaches nearly a factor of 3 speed-up over the CG (14 iterations for E = 1% and 28 iterations for E = 0.1%). Nevertheless, attention is still needed since both the construction and application of the IC preconditioner require extra computational costs. For E = 1%, it can be found from Table 1 that the enhanced convergence rate of IC PCG over CG fails to compensate for these extra computational costs, resulting in even longer total computational time. To explore more efficient preconditioners, we refer to another commonly used algorithm which is called the symmetric successive over relaxation (SSOR) method. Although the SSOR algorithm itself does not provide a sufficient amount of convergence rate, we find that the SSOR preconditioned conjugate gradient (SSOR PCG) method shows a quite similar convergence rate as the IC PCG. Additionally, the SSOR preconditioner, just like the Jacobi preconditioner, can be derived from the coefficient matrix with little CPU effort. Thus, for both E = 1% and E = 0.1%, the SSOR PCG method gives the best performance among all the mentioned strategies. In the implementation, the SSOR preconditioner is parameterized by ? as follow [Barrett 1994] 1 1 1 ?1 1 T M (?) = D + L D D + L 2 ? ? ? ? ? where D and L represent the diagonal and lower parts of the coefficient matrix, respectively. Besides, ? is set to 1.7 according to a variety of numerical tests, which gives the best performance. In order to evaluate the accuracy and efficiency of the proposed staggered meshless coupling method, we set up a validation test case using a symmetric wedge impacting on the free water surface. The experiment has been carried out by [Zhao et al. 1996]. At t = 0s, a wedge with a deadrise angle of 30 ? and weighing 141kg was dropped and entered the water surface with a 6.15m/s initial vertical velocity. During the experiment, the vertical motion was the only degree of freedom allowed to the wedge. For more details, refer to their original work. The motion speed was experimentally recorded and plotted in Figure 11 . In the numerical setup, a particle spacing of ?x = 0.01m is selected to discretize both the water, which is 2m wide and 1m deep, and the wedge, which has a breadth of 0.5m. Then, different simulations were made to run 0.025s of real time with both the direct forcing coupling method [Becker et al. 2009] and the staggered coupling method. In the former case, the timestep for the simulation is restricted by the Courant-Friedrichs-Lewy (CFL) condition. Besides, since the method enforces the non-penetration of the fluid particles with the particle?particle collision detection algorithm, the timestep should be further restricted to ensure that two particles do not move more than one diameter distance towards each other in each step. In contrast, the latter method is free of the above mentioned limitations due to the use of an implicit incompressible fluid solver and the avoidance of the explicit particle-to-particle boundary handling, thus allowing significantly larger time steps. The simulation results for both E = 1% and E = 0.1% are depicted in Figure 11 to make a comparison with the experimental results, from which it is found that our method shows a better agreement with the experimental data. More details about the accuracy and efficiency are summarized in Table 2 where we have chosen the maximum allowable time step for both the methods. Specifically, it can also be noted from the table that the deviation from the experimental data decreases only by a small fraction (approximately 0.2%) as the compression is changed from 1% to 0.1%. Therefore, it should be sufficient to only enforce E = 1% to get more efficiency. Figure 12 illustrates the one-way coupling with the combinations of both the free-slip and no-slip boundary conditions in a twodimensional scene demonstrating fluid flowing around a cylinder. The outer boundary is static with free-slip boundary condition. For the inner cylinder, the no-slip boundary condition is imposed with three different angular velocities including 10 rad/s (top), 0 rad/s (middle) and -10 rad/s (bottom). Another case of dam break in three dimensions is shown in Figure 1 (right) where the darker pillars are rotating clockwise with an angular velocity of 10 rad/s while the brighter ones are rotating anticlockwise with -10 rad/s. Although we have discussed how to avoid the fluid sticking to wall in section 5.2, in some cases, it is required to model the realistic cohesion of the liquid to the solids. By imposing the fluid sticking to the solids, our method is able to model the phenomenon of fluid flowing around a ball as shown in Figure 13 (right) [Schechter and Bridson 2012], which is quite difficult for the standard SPH. Besides, a comparison is also shown in Figure 13 (left) where the fluid sticking to the solids has been avoided. In Figure 14 , the two-way coupling is tested by dropping an elliptical stone into a tank of water with varying initial angular velocities and different slip conditions. For the non-rotating case, similar In this paper, a staggered meshless method is presented to overcome the difficulties in simulating the solid-fluid coupling with the meshless methods. The proposed method creates a set of staggered particles at each time step to separate the velocity field from the pressure field. As a result, the free surface and various solid wall boundary conditions can be applied to different types of the particles. To avoid the simulation failure, a new framework to enforce both the density constraint and the velocity constraint on the fluids is further proposed. In this way, various boundary conditions including the free-slip and no-slip can be easily implemented. The method is novel in that it provides a powerful tool to implement the stable one-way and two-way coupling between the fluids and rigid bodies. However, the method does have some limitations. First, our current implementation is not yet suitable to deal with the infinitesimally thin solids, such as the cloth. To enable the fluid interaction with the thin solids, either very small timestep or robust collision detection algorithm [Becker et al. 2009] is required. Second, more accurate contact handling technique among the multi-bodies is needed. In the current comptuations, we only used the simple penalty forces between the rigid bodies to avoid penetration. Nonetheless, it would be an interesting future work to model the accurate behaviors of both the accurate multi-body contacts and the deformations with the staggered particles. Furthermore, attentions will also be paid to achieve the GPU implementations of the method.",
  "resources" : [ ]
}