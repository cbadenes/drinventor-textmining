{
  "uri" : "sig2010-a39-martin_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2010/a39-martin_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Unified Simulation of Elastic Rods, Shells, and Solids",
    "published" : "2010",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Sebastian-Martin",
      "name" : "Sebastian",
      "surname" : "Martin"
    }, {
      "uri" : "http://drinventor/Peter-Kaufmann",
      "name" : "Peter",
      "surname" : "Kaufmann"
    }, {
      "uri" : "http://drinventor/Mario-Botsch",
      "name" : "Mario",
      "surname" : "Botsch"
    }, {
      "uri" : "http://drinventor/Eitan-Grinspun",
      "name" : "Eitan",
      "surname" : "Grinspun"
    }, {
      "uri" : "http://drinventor/Markus H.-Gross",
      "name" : "Markus H.",
      "surname" : "Gross"
    } ]
  },
  "bagOfWords" : [ "we", "quantitative", "convergence", "analysis", "qualitative", "evaluation", "we", "approach", "follow", "experiment", "demonstrate", "generality", "method", "full", "animation", "example", "show", "accompany", "video", "visualization", "we", "embed", "high-resolution", "triangle", "mesh", "deformation", "field", "which", "could", "however", "replace", "any", "sample-based", "geometry", "representation", "-lrb-", "triangle", "soup", "point", "cloud", "-rrb-", "convergence", "we", "perform", "series", "numerical", "evaluation", "verify", "accuracy", "we", "method", "Figure", "show", "representative", "plot", "solid", "shell", "rod", "which", "subject", "gravitational", "force", "-lrb-", "twist", "lower-right", "rod", "-rrb-", "cube", "constrain", "its", "top", "shell", "rod", "clamp", "left-hand", "side", "depict", "inset", "fig.", "thickness", "shell", "rod", "equal", "one", "percent", "object?s", "side", "length", "limit", "solution", "quadratic", "gml", "show", "good", "correspondence", "we", "reference", "solution", "we", "compare", "hexahedral", "fem", "solid", "Kirchhoff-Love", "shell", "analytic", "solution", "rod", "bend", "twist", "linear", "gml", "appear", "suffer", "from", "lock", "-lrb-", "artificial", "stiffness", "rod", "-rrb-", "convergence", "faster", "than", "simple", "finite", "element", "slower", "than", "highly-specialized", "method", "those", "however", "only", "valid", "specific", "application", "domain", "do", "cover", "same", "range", "different", "geometry", "we", "method", "qualitative", "verification", "we", "also", "verify", "qualitative", "behavior", "we", "model", "couple", "well-known", "test", "case", "shell", "rod", "Figure", "show", "thin", "cylinder", "develop", "expect", "buckle", "pattern", "compress", "Figure", "demonstrate", "we", "able", "reproduce", "characteristic", "dynamic", "behavior", "rod", "build", "plectoneme", "helical", "perversion", "show", "previously", "Spillmann", "Teschner", "-lsb-", "2007", "-rsb-", "Bergou", "et", "al.", "-lsb-", "2008", "-rsb-", "non-manifold", "Connections", "real-world", "object", "often", "consist", "complex", "assembly", "different", "form", "geometry", "we", "method", "able", "handle", "mixed", "case", "unified", "manner", "demonstrate", "fig.", "example", "would", "difficult", "realize", "combine", "several", "specialize", "method", "''", "``", "''", "''", "450.6-7839", "''", "-6", "517839", "''", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "''", "-rrb-", "450.6-7839", "-6", "517839", "''", "figure", "''", "convergence", "we", "method", "compare", "standard", "approach", "''", "analytic", "solution", "clamp", "solid", "shell", "rod", "subject", "''", "gravity", "twist", "plot", "show", "displacement", "value", "furthest", "''", "point", "increase", "-lrb-", "computational", "-rrb-", "complexity", "measure", "number", "non-zero", "stiffness", "matrix", "-rrb-", "-rrb-", "-rrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "plasticity", "object", "can", "only", "transition", "between", "solid", "shell", "rod", "space", "-lrb-", "fig.", "fig.", "-rrb-", "regime", "change", "can", "also", "develop", "over", "time", "-lsb-", "terzopoulo", "Fleischer", "1988", "-rsb-", "plastic", "viscous", "deformation", "instance", "material", "can", "stretch", "thin", "sheet", "strand", "-lrb-", "fig.", "-rrb-", "whose", "elastic", "behavior", "can", "correctly", "capture", "we", "approach", "we", "adapt", "additive", "plasticity", "model", "-lsb-", "O?Brien", "et", "al.", "2002", "M?ller", "et", "al.", "2004", "-rsb-", "we", "approach", "define", "plastic", "membrane", "bend", "strain", "elaston", "incorporate", "plastic", "strain", "we", "representation", "elastic", "energy", "-lrb-", "12", "-rrb-", "yield", "additional", "plastic", "force", "moreover", "order", "allow", "large", "plastic", "deformation", "we", "perform", "periodic", "resampling", "similar", "-lsb-", "Wojtan", "Turk", "2008", "-rsb-", "which", "can", "easily", "integrate", "thanks", "we", "meshless", "framework", "multiplicative", "model", "Gerszewski", "et", "al.", "-lsb-", "2009", "-rsb-", "would", "natural", "next", "step", "cut", "thin", "structure", "can", "also", "show", "up", "dynamically", "due", "cut", "fracture", "we", "handle", "cut", "adapt", "idea", "connectivity", "graph", "-lsb-", "Steinemann", "et", "al.", "2006", "-rsb-", "virtual", "node", "approach", "-lsb-", "Molino", "et", "al.", "2004", "-rsb-", "connectivity", "graph", "material", "point", "implicitly", "define", "connect", "two", "point", "two", "corresponding", "sphere", "-lrb-", "-rrb-", "overlap", "mapping", "material", "point", "elaston", "compute", "during", "Lloyd", "clustering", "define", "connectivity", "elaston", "we", "cut", "disconnect", "material", "point", "consequently", "update", "elaston", "connectivity", "when", "material", "region", "split", "through", "cutting", "we", "generate", "new", "elaston", "each", "result", "connected", "component", "gmls", "basis", "function", "-lrb-", "-rrb-", "resp", "its", "DOF", "position", "value", "duplicated", "its", "region", "influence", "contain", "multiple", "disconnect", "material", "component", "Figure", "show", "block", "material", "be", "cut", "twice", "very", "thin", "slice", "rod", "we", "renderer", "likewise", "cut", "embedded", "triangle", "mesh", "virtual", "node", "also", "enable", "efficient", "simulation", "spatially", "close", "feature", "introduce", "new", "elaston", "splitting", "gml", "sample", "we", "keep", "distinct", "motion", "close", "feature", "while", "avoid", "high", "sampling", "density", "-lrb-", "e.g.", "fish?s", "spike", "fig.", "-rrb-", "more", "detail", "implementation", "plasticity", "cutting", "can", "find", "accompany", "supplementary", "document", "merge", "merge", "object", "we", "simply", "resample", "per", "section", "9.1", "soon", "elaston", "object", "fall", "within", "influence", "another", "object?s", "gml", "basis", "resample", "merge", "object", "when", "merge", "desire", "we", "use", "virtual", "node", "approach", "describe", "above", "fig.", "depict", "four-bunny", "fusion", "Timings", "representative", "selection", "example", "Table", "show", "average", "timing", "matrix", "precomputation", "per-frame", "matrix", "assembly", "per-frame", "solution", "involve", "linear", "system", "can", "observe", "time", "require", "solve", "linear", "system", "depend", "only", "number", "dof", "also", "density", "stiffness", "matrix", "which", "decrease", "from", "solid", "over", "shell", "rod", "while", "measure", "timing", "comparably", "high", "we", "should", "expect", "very", "general", "method", "outperform", "specialized", "method", "sense", "accuracy", "vs.", "computational", "cost", "we", "believe", "when", "unify", "code", "desirable", "simplicity", "generality", "we", "approach", "outweigh", "limitation", "moreover", "note", "matrix", "assembly", "could", "easily", "speed", "up", "parallelize", "strain", "corotation", "over", "all", "elaston", "system", "solve", "-lrb-", "sol", "-rrb-", "take", "Intel", "Core2", "Duo", "2.4", "GHz", "first", "three", "column", "denote", "number", "elaston", "number", "gml", "sample", "number", "dof", "respectively" ],
  "content" : "We start with a quantitative convergence analysis and qualitative evaluations of our approach, followed by experiments that demonstrate the generality of the method. The full animations for these examples are shown in the accompanying video. For visualization we embed a high-resolution triangle mesh into the deformation field, which could, however, be replaced by any sample-based geometry representation (triangle soups, point clouds). Convergence We performed a series of numerical evaluations to verify the accuracy of our method. Figure 3 shows representative plots for solids, shells, and rods, which are subjected to a gravitational force (and twist for the lower-right rod). The cube is constrained at its top, the shell and rod are clamped at their left-hand side as depicted in the insets of Fig. 3 . The thickness of the shell and rod is equal to one percent of the object?s side length. The limit solutions of quadratic GMLS show good correspondence with our reference solutions. We compare to hexahedral FEM for solids, Kirchhoff-Love shells, and analytic solutions for rod bending and twisting. Linear GMLS appears to suffer from locking (artificial stiffness for the rod). Convergence is faster than simple finite elements but slower than highly-specialized methods. Those, however, are only valid in their specific application domain and do not cover the same range of different geometries as our method. Qualitative Verification We also verified the qualitative behavior of our model on a couple of well-known test cases for shells and rods. Figure 4 shows a thin cylinder that develops the expected buckling patterns as it is compressed. Figure 5 demonstrates that we are able to reproduce the characteristic dynamic behavior of rods, building plectonemes and helical perversions as shown previously by Spillmann and Teschner [2007] and Bergou et al. [2008]. Non-manifold Connections Real-world objects often consist of complex assemblies of different forms of geometry. Our method is able to handle these mixed cases in a unified manner as demonstrated in Fig. 6 . These examples would be difficult to realize by combining several specialized methods. % '\"% '\"$ !\" $# '\"# ' -. % 450.6-7839: !\" # ;<6=-6>517839: !\" '()* '()$ '()+ '()% '(), $&'( $&') $&'# $&'* $&'+ !\" 2)3 450.6-7839: ;<6=-6>517839: !\" ' Figure !\" & 3: Convergence of our method compared to standard approaches !\" % or analytic solutions for a clamped solid, shell, and rod, subject !\" $ to gravity and twist. The plots show displacement values of the furthest !\" # point for increasing (computational) complexity, measured as ! the number of non-zeros of the stiffness matrix. #)*% #)*& #)*' #)*( #)*+ #)*,\n        Plasticity Objects can not only transition between solid, shell, and rod in space ( Fig. 6 and Fig. 8), regime changes can also develop over time [Terzopoulos and Fleischer 1988]. In plastic and viscous deformations, for instance, material can be stretched into thin sheets or strands ( Fig. 7 ), whose elastic behavior can correctly be captured by our approach. We adapted the additive plasticity model of [O?Brien et al. 2002; M?ller et al. 2004] to our approach by defining plastic membrane and bending strains at the elastons. Incorporating these plastic strains into our representation of the elastic energy (12) yields additional plastic forces. Moreover, in order to allow for large plastic deformations, we perform a periodic resampling similar to [Wojtan and Turk 2008], which can easily be integrated thanks to our meshless framework. The multiplicative model of Gerszewski et al. [2009] would be a natural next step. Cutting Thin structures can also show up dynamically due to cutting or fracturing. We handle cutting by adapting the idea of a connectivity graph of [Steinemann et al. 2006] and the virtual node approach of [Molino et al. 2004]. The connectivity graph for material points m j is implicitly defined by connecting two points if their two corresponding spheres B(m j , r j ) overlap. The mapping of material points m j to elastons e i computed during Lloyd clustering then defines the connectivity of the elastons. We cut by disconnecting material points, consequently updating elaston connectivity. When a material region M i is split through cutting, we generate new elastons for each of the resulting connected components. A GMLS basis function N i (x), resp. its DOF position x i and value u i , is then duplicated if its region of influence contains multiple disconnected material components. Figure 1 shows a block of material being cut twice into a very thin slice and rod. Our renderer likewise cuts the embedded triangle mesh. Virtual nodes also enable efficient simulation of spatially close features. By introducing new elastons and splitting GMLS samples, we keep distinct the motion of close features while avoiding high sampling density (e.g., the fish?s spikes in Fig. 8). More details on the implementation of plasticity and cutting can be found in the accompanying supplementary document. Merging To merge objects we simply resample as per Section 9.1. As soon as elastons of an object fall within influence of another object?s GMLS basis, resampling merges the objects. When merging is not desired, we use the virtual node approach described above. Fig. 8 depicts four-bunny fusion. Timings For a representative selection of examples, Table 1 shows average timings for matrix precomputation, per-frame matrix assembly, and per-frame solution of the involved linear system. It can be observed that the time required for solving the linear system depends not only on the number of DOFs, but also on the density of the stiffness matrix, which decreases from solids over shells to rods. While the measured timings are comparably high, we should not expect a very general method to outperform specialized methods in the sense of accuracy vs. computational costs. We believe that when a unified code is desirable, the simplicity and generality of our approach outweigh this limitation. Moreover, note that the matrix assembly could easily be sped up by parallelizing the strain corotation over all elastons. system solve (t sol ), taken on an Intel Core2 Duo 2.4 GHz. The first three columns denote the number of elastons, number of GMLS samples and the number of DOFs, respectively.",
  "resources" : [ ]
}