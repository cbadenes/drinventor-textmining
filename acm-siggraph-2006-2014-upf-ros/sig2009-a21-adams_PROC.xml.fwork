{
  "uri" : "sig2009-a21-adams_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2009/a21-adams_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Gaussian KD-Trees for Fast High-Dimensional Filtering",
    "published" : null,
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ ]
  },
  "bagOfWords" : [ "filter", "can", "all", "express", "similar", "way", "First", "assign", "each", "value", "filter", "position", "some", "vector", "space", "replace", "every", "value", "weighted", "linear", "combination", "all", "value", "weight", "determine", "gaussian", "function", "distance", "between", "position", "position", "instead", "-lrb-", "-rrb-", "coordinate", "five-dimensional", "space-color", "volume", "describe", "bilateral", "filter", "we", "use", "algorithm", "implement", "accelerate", "bilateral", "filter", "respect", "full", "3d", "color", "distance", "accelerate", "non-local", "means", "single", "image", "volume", "unaligned", "burst", "image", "denoising", "fast", "adaptation", "non-local", "means", "geometry", "cr", "category", "i.", "4.3", "-lsb-", "image", "processing", "computer", "Vision", "-rsb-", "enhancement?filtering", "i.", "3.5", "-lsb-", "Computer", "Graphics", "-rsb-", "computational", "geometry", "object", "modeling?geometric", "algorithm", "language", "system", "Keywords", "bilateral", "filter", "non-local", "means", "geometry", "filter", "denoising", "ACM", "Reference", "Format", "Adams", "a.", "Gelfand", "N.", "Dolson", "J.", "Levoy", "M.", "2009", "copyright", "Notice", "permission", "make", "digital", "hard", "copy", "part", "all", "work", "personal", "classroom", "use", "grant", "without", "fee", "provide", "copy", "make", "distribute", "profit", "direct", "commercial", "advantage", "copy", "show", "notice", "fus", "rst", "page", "initial", "screen", "display", "along", "full", "citation", "recent", "year", "variety", "related", "non-linear", "filter", "have", "become", "important", "various", "task", "image", "processing", "computational", "photography", "geometry", "processing", "related", "field", "include", "bilateral", "filter", "non-local", "means", "filter", "various", "similar", "ad-hoc", "filter", "use", "particular", "application", "filter", "often", "highly", "computationally", "intensive", "recent", "method", "accelerate", "bilateral", "filter", "respect", "distance", "space", "luminance", "one", "method", "bilateral", "grid", "-lsb-", "Paris", "Durand", "2006", "-rsb-", "do", "embed", "image", "two", "dimensional", "manifold", "coarsely", "voxelize", "three", "dimensional", "spaceluminance", "volume", "perform", "3d", "gaussian", "blur", "sampling", "again", "along", "image", "manifold", "construct", "output", "shortcoming", "technique", "well", "other", "recent", "acceleration", "bilateral", "filter", "-lsb-", "Durand", "Dorsey", "2002", "-rsb-", "-lsb-", "Weiss", "2006", "-rsb-", "do", "respect", "distance", "chrominance", "result", "unwanted", "blur", "neighbouring", "isoluminant", "region", "-lrb-", "figure", "-rrb-", "one", "way", "address", "problem", "expand", "bilateral", "grid", "5d", "space-color", "volume", "describe", "-lsb-", "Paris", "Durand", "2009", "-rsb-", "however", "filter", "small", "grid", "must", "fine", "make", "memory", "time", "requirement", "approach", "impractical", "suggest", "store", "cloud", "point", "represent", "image", "manifold", "kd-tree", "use", "approximate", "nearest", "neighbour", "query", "-lrb-", "describe", "-lsb-", "Arya", "et", "al.", "1998", "-rsb-", "-rrb-", "find", "nearby", "value", "tree", "sparsely", "represent", "high-dimensional", "space", "value", "store", "point", "point", "cloud", "derive", "from", "reduce", "set", "pixel", "from", "original", "image", "so", "unlike", "bilateral", "grid", "we", "only", "ever", "store", "2d", "manifold", "regardless", "size", "dimensionality", "space", "which", "embedded", "tree", "support", "rapid", "montecarlo-sampled", "query", "probabilistically", "scatter", "gather", "from", "point", "use", "stratified", "weighted", "importance", "sampling", "non-local", "means", "mix", "pixel", "value", "other", "pixel", "have", "similar", "local", "neighborhood", "equivalent", "gaussian", "blur", "2d", "manifold", "embed", "space", "much", "higher", "dimensionality", "non-local", "means", "usually", "make", "tractable", "limit", "only", "search", "similar", "neighborhood", "small", "local", "search", "window", "around", "each", "pixel", "finally", "gaussian", "kd-tree", "do", "require", "any", "particular", "order", "structure", "value", "store", "section", "3.3", "we", "apply", "non-local", "means", "noisy", "geometry", "we", "tree", "construction", "gaussian", "query", "algorithm", "dataparallel", "so", "we", "have", "also", "implement", "they", "graphic", "card", "use", "CUDA", "-lsb-", "Buck", "2007", "-rsb-", "significant", "speedup", "over", "CPU", "implementation", "weight", "ij", "commonly", "compute", "associate", "each", "value", "position", "some", "other", "space", "weight", "give", "function", "distance", "between", "two", "position", "weight", "give", "gaussian", "function", "distance", "between", "two", "position", "standard", "devation", "when", "perform", "bilateral", "filter", "weight", "further", "reduce", "gaussian", "function", "distance", "color", "space", "spatial", "standard", "devation", "color", "space", "standard", "deviation", "non-local", "means", "can", "also", "adapt", "geometry", "use", "similar", "formulation", "-lrb-", "section", "3.3", "-rrb-", "equation", "type", "discrete", "Gauss", "transform", "which", "can", "accelerate", "use", "Improved", "fast", "Gauss", "Transform", "-lsb-", "Yang", "et", "al.", "2003", "-rsb-", "secondly", "equation", "replace", "each", "value", "sum", "over", "many", "value", "sum", "can", "importance", "sample", "avoid", "have", "consider", "every", "interaction", "between", "some", "work", "-lsb-", "Chen", "et", "al.", "2007", "-rsb-", "three", "stage", "term", "grid", "construction", "low", "pass", "filter", "slice", "we", "refer", "they", "splatting", "blur", "slice", "-lrb-", "figure", "-rrb-", "we", "typically", "set", "scale", "so", "combined", "effect", "equivalent", "gaussian", "blur", "standard", "deviation", "one", "each", "inner", "node", "tree", "represent", "d-dimensional", "rectangular", "cell", "which", "may", "extend", "infinity", "one", "more", "dimension", "inner", "node", "store", "dimension", "along", "which", "cut", "value", "cut", "dimension", "cut", "along", "bound", "node", "dimension", "min", "max", "pointer", "its", "child", "lef", "right", "Leaf", "node", "contain", "only", "dimensional", "point", "which", "lie", "somewhere", "within", "cell", "represent", "query", "take", "input", "query", "position", "space", "standard", "deviation", "around", "position", "number", "sample", "return", "list", "most", "point", "corresponding", "weight", "Gaussian", "separable", "so", "decision", "already", "make", "node", "split", "other", "dimension", "irrelevant", "recall", "sampling", "constant", "-lrb-", "typically", "256", "-rrb-", "important", "two", "feature", "bind", "neither", "exponential", "-lrb-", "grid", "technique", "-rrb-", "nor", "quadratic", "-lrb-", "naive", "technique", "-rrb-", "although", "each", "thread", "initially", "responsible", "its", "own", "query", "sharing", "pend", "work", "allow", "load", "balancing", "between", "thread", "block", "-lsb-", "Paris", "Durand", "2006", "-rsb-", "introduce", "idea", "express", "filter", "linear", "filter", "higher", "dimensional", "space", "explicitly", "represent", "filter", "higher", "dimensional", "datum", "structure", "-lsb-", "Eisemann", "Durand", "2004", "-rsb-", "-lsb-", "Petschnigg", "et", "al.", "2004", "-rsb-", "introduce", "idea", "cross", "joint", "bilateral", "filter", "where", "image", "can", "filter", "respect", "color", "distance", "different", "image", "while", "grid-based", "acceleration", "have", "superior", "scale", "filter", "size", "have", "disadvantage", "only", "respect", "distance", "luminance", "rather", "than", "full", "color", "distance", "-lrb-", "figure", "-rrb-", "more", "sophisticated", "approach", "-lsb-", "Brox", "et", "al.", "2008", "-rsb-", "have", "focus", "accelerate", "patch", "search", "over", "entire", "domain", "cluster", "patch", "tree", "structure", "various", "kind", "log", "many", "dimension", "over", "which", "splitting", "do", "chance", "point", "store", "cell", "be", "close", "query", "point", "become", "low", "method", "fairly", "brittle", "alternative", "method", "propose", "-lsb-", "Fleishman", "et", "al.", "2003", "-rsb-", "which", "use", "tangent", "plane", "each", "vertex", "build", "local", "parametrization", "geometry" ],
  "content" : "These filters can all be expressed in a similar way: First, assign each value to be filtered a position in some vector space. Then, replace every value with a weighted linear combination of all values, with weights determined by a Gaussian function of distance between the positions. If the positions are instead (x, y, r, g, b) coordinates in a five-dimensional space-color volume, this describes a bilateral filter. We use this algorithm to implement an accelerated bilateral filter that respects full 3D color distance; accelerated non-local means on single images, volumes, and unaligned bursts of images for denoising; and a fast adaptation of non-local means to geometry. CR Categories: I.4.3 [Image Processing and Computer Vision]: Enhancement?Filtering I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling?Geometric algorithms, languages, and systems Keywords: bilateral filter, non-local means, geometry filtering,\n      denoising ACM Reference Format Adams, A., Gelfand, N., Dolson, J., Levoy, M. 2009. Copyright Notice Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or direct commercial advantage and that copies show this notice on the fi rst page or initial screen of a display along with the full citation. In recent years, a variety of related non-linear filters have become important for various tasks in image processing, computational photography, geometry processing, and related fields. These include the bilateral filter, the non-local means filter, and various similar ad-hoc filters used for particular applications. Such filters are often highly computationally intensive. Recent methods for accelerating the bilateral filter respect distance in space and in luminance. One such method, the bilateral grid [Paris and Durand 2006], does this by embedding the image as a two dimensional manifold in a coarsely voxelized three dimensional spaceluminance volume, performing a 3D Gaussian blur, and then sampling again along the image manifold to construct the output. A shortcoming of this technique, as well as other recent accelerations of the bilateral filter by [Durand and Dorsey 2002] and [Weiss 2006], is that they do not respect distance in chrominance, resulting in unwanted blurring of neighbouring isoluminant regions (Figure 2). One way to address this problem is to expand the bilateral grid to a 5D space-color volume, as described in [Paris and Durand 2009]. However, if the filter is small the grid must be fine, making the memory and time requirements of this approach impractical. This suggests storing the cloud of points representing the image manifold in a kd-tree, and using approximate nearest neighbour queries (as described by [Arya et al. 1998]) to find nearby values. The tree sparsely represents the high-dimensional space as values stored at points. This point cloud is derived from a reduced set of the pixels from the original image, so unlike the bilateral grid, we only ever store a 2D manifold, regardless of the size and dimensionality of the space in which it is embedded. The tree supports rapid MonteCarlo-sampled queries to probabilistically scatter to or gather from the points, using stratified weighted importance sampling. Non-local means mixes pixel values with other pixels that have similar local neighborhoods, and is equivalent to a Gaussian blur on a 2D manifold embedded in a space of much higher dimensionality. Non-local means is usually made tractable by limiting it to only search for similar neighborhoods in a small local search window around each pixel. Finally, the Gaussian kd-tree does not require any particular ordering or structure to the values it stores. In Section 3.3 we apply non-local means to noisy geometry. Our tree construction and Gaussian query algorithms are dataparallel, and so we have also implemented them on a graphics card using CUDA [Buck 2007] for a significant speedup over the CPU implementation. Weights w ij are commonly computed by associating each value v i with a position p i in some other space, with the weight then given by a function of distance between the two positions: n The weights are given by a Gaussian function of the distance between two such positions, with standard devation ?: n When performing a bilateral filter, that weight is further reduced by a Gaussian function of distance in color space, with spatial standard devation ? p and color space standard deviation ? c : n Non-local means can also be adapted to geometry using a similar formulation (Section 3.3). Equation 5 is a type of discrete Gauss transform, which can be accelerated using the Improved Fast Gauss Transform of [Yang et al. 2003]. Secondly, Equation 5 replaces each value with a sum over many values. This sum can be importance sampled to avoid having to consider every interaction between v i and some v j . In the work of [Chen et al. 2007], these three stages are termed grid construction, low pass filtering, and slicing. We refer to them as splatting, blurring, and slicing ( Figure 3 ). We typically set ? b = 3? s , and scale ? b and ? s so that their combined effect is equivalent to a Gaussian blur of standard deviation one. Each inner node of the tree ? represents a d-dimensional rectangular cell, which may extend to infinity in one or more dimensions. An inner node stores a dimension ? d along which it cuts, and value ? cut on that dimension to cut along, the bounds of the node in that dimension ? min and ? max , and pointers to its children ? lef t and ? right . Leaf nodes contain only a d dimensional point, which lies somewhere within the cell they represent. A query takes as input a query position q in the space, a standard deviation ? around that position, and a number of samples s, and returns a list of at most s points p i and corresponding weights w i . The Gaussian is separable, so decisions already made by nodes that split in other dimensions are irrelevant. Recall that m < n and s is a sampling constant (typically 4 ? s ? 256). The important two features of this bound are that it is neither exponential in d (as are grid techniques) nor is it quadratic in n (as is the naive technique). Although each thread is initially responsible for its own query, the sharing of pending work allows for load balancing between the threads in a block. [Paris and Durand 2006] then introduced the idea of expressing the filter as a linear filter in a higher dimensional space, by explicitly representing the filter in a higher dimensional data structure. [Eisemann and Durand 2004] and [Petschnigg et al. 2004] introduced the idea of the cross or joint bilateral filter, where an image can be filtered with respect to color distances in a different image. While the grid-based accelerations have superior scaling with filter size, they have the disadvantage of only respecting distance in luminance, rather than full color distance ( Figure 2 ). More sophisticated approaches, such as [Brox et al. 2008] have focused on accelerating the patch search over the entire domain, by clustering the patches in a tree structures of various kinds. If d log m there are many dimensions over which no splitting was done, and the chance of the point stored in the cell being close to the query point becomes low. These methods are fairly brittle. And alternative method was proposed by [Fleishman et al. 2003], which uses tangent planes at each vertex to build a local parametrization of the geometry.",
  "resources" : [ ]
}