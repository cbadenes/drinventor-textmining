{
  "uri" : "sig2010a-a173-narain_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2010a/a173-narain_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Free-Flowing Granular Materials with Two-Way Solid Coupling",
    "published" : "2010",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Rahul-Narain",
      "name" : "Rahul",
      "surname" : "Narain"
    }, {
      "uri" : "http://drinventor/Abhinav-Golas",
      "name" : "Abhinav",
      "surname" : "Golas"
    }, {
      "uri" : "http://drinventor/Ming C.-Lin",
      "name" : "Ming C.",
      "surname" : "Lin"
    } ]
  },
  "bagOfWords" : [ "we", "approach", "fully", "solve", "internal", "pressure", "frictional", "stress", "granular", "material", "thereby", "allow", "visually", "noticeable", "behavior", "granular", "material", "reproduce", "include", "freely", "disperse", "splash", "without", "cohesion", "global", "coupling", "between", "friction", "pressure", "physical", "behavior", "material", "arise", "from", "interplay", "contact", "frictional", "force", "between", "thousand", "million", "tiny", "grain", "continuum-based", "approach", "have", "many", "advantage", "include", "efficient", "numerical", "method", "due", "regular", "computational", "domain", "ability", "user", "choose", "resolution", "simulation", "trade-off", "between", "performance", "quality", "firstly", "allow", "material", "disperse", "freely", "when", "agitate", "maintain", "its", "volume", "when", "rest", "we", "replace", "exist", "fluid-based", "model?s", "assumption", "incompressibility", "unilateral", "variational", "constraint", "secondly", "unlike", "fluid", "viscosity", "friction", "granular", "material", "can", "counteract", "gravity", "maintain", "stable", "pile", "equilibrium", "we", "present", "efficient", "method", "numerical", "problem", "permit", "appropriate", "frictional", "behavior", "solid", "body", "interaction", "be", "distinctive", "form", "matter", "exhibit", "behavior", "rather", "different", "from", "ordinary", "solid", "liquid", "gas", "-lsb-", "Behringer", "et", "al.", "1999", "-rsb-", "granular", "material", "show", "surprisingly", "complex", "behavior", "still", "be", "study", "physics", "engineering", "community", "Lenaerts", "Dutr", "-lsb-", "2009", "-rsb-", "adapt", "method", "setting", "smooth", "particle", "hydrodynamic", "-lrb-", "sph", "-rrb-", "also", "enable", "simulate", "sand-water", "interaction", "setting", "issue", "address", "part", "Aldu?n", "et", "al.", "-lsb-", "2009", "-rsb-", "who", "propose", "post-processing", "step", "interpolate", "fine", "grain", "over", "coarser", "discrete", "simulation", "characteristic", "allow", "qualitatively", "realistic", "compelling", "result", "similar", "fine-scale", "discrete", "method", "far", "lower", "computation", "time", "significantly", "reduce", "memory", "requirement", "we", "method", "we", "assume", "material?s", "grain", "size", "so", "small", "precise", "motion", "individual", "grain", "unimportant", "therefore", "we", "treat", "granular", "material", "instead", "continuous", "fluid", "flow", "under", "action", "external", "force", "internal", "stress", "we", "briefly", "describe", "overall", "simulation", "loop", "illustrate", "fig.", "remainder", "paper", "organize", "follow", "continuum", "model", "describe", "section", "particle-based", "advection", "scheme", "section", "further", "implementation", "detail", "give", "section", "section", "we", "discuss", "result", "we", "method", "several", "example", "scenario", "Dry", "grain", "apply", "attractive", "force", "each", "other", "so", "macroscopic", "term", "material", "display", "little", "cohesion", "mean", "unlike", "liquid", "granular", "material", "motion", "may", "have", "clearly", "define", "surface", "all", "consider", "sand", "pile", "transition", "cloud", "grain", "under", "impact", "where", "do", "pile", "surface", "end", "cloud", "begin", "another", "significant", "difference", "effect", "friction", "can", "transmit", "force", "across", "large", "distance", "unlike", "fluid", "viscosity", "continue", "act", "even", "rest", "result", "stable", "pile", "other", "quasi-rigid", "behavior", "rate", "flow", "constant", "due", "coupling", "between", "pressure", "friction", "right", "simulation", "particle", "use", "advection", "visualize", "from", "continuum", "viewpoint", "we", "represent", "physical", "state", "granular", "material", "through", "its", "mass", "density", "flow", "velocity", "system", "act", "upon", "external", "force", "ext", "internal", "stress", "we", "denote", "lagrangian", "time", "derivative", "d/dt", "-lrb-", "-rrb-", "time", "evolution", "system", "give", "transport", "mass", "effect", "force", "follow", "previous", "work", "-lsb-", "Zhu", "Bridson", "2005", "-rsb-", "we", "employ", "Drucker-Prager", "yield", "criterion", "its", "computational", "simplicity", "when", "cohesion", "negligible", "case", "most", "dry", "granular", "material", "yield", "criterion", "can", "express", "inequality", "where", "qp", "ij", "Frobenius", "norm", "frictional", "coefficient", "we", "use", "impulse-based", "time-stepping", "scheme", "throughout", "we", "simulation", "where", "force", "consider", "act", "instantaneously", "beginning", "each", "time", "step", "we", "make", "two", "simplify", "assumption", "dynamics", "granular", "material", "can", "think", "density", "stable", "pile", "material", "rest", "-lrb-", "reality", "density", "slightly", "higher", "than", "critical", "grain", "rest", "must", "separate", "little", "move", "past", "each", "other", "effect", "visually", "imperceptible", "-rrb-", "secondly", "when", "max", "grain", "pack", "together", "only", "interact", "via", "intermittent", "collision", "we", "neglect", "effect", "interaction", "under", "assumption", "granular", "material", "have", "maximum", "density", "max", "pressure", "act", "prevent", "any", "further", "compression", "material", "however", "contrast", "traditional", "incompressible", "fluid", "where", "both", "positive", "negative", "flow", "divergence", "always", "nullify", "pressure", "absence", "cohesion", "granular", "material", "imply", "material", "undergo", "diverge", "flow", "experience", "internal", "force", "we", "adapt", "same", "numerical", "method", "compute", "corresponding", "pressure", "satisfy", "constraint", "3d", "space", "completeness", "we", "briefly", "describe", "method", "below", "volume", "fraction", "end", "time", "step", "can", "estimate", "discretize", "-lrb-", "-rrb-", "give", "-lrb-", "-rrb-", "imply", "complementarity", "when", "active", "-lrb-", "nonzero", "-rrb-", "+1", "must", "equal", "fall", "below", "denote", "finite", "difference", "matrix", "map", "scalar", "field", "vector", "field", "p.", "boundary", "condition", "treat", "use", "standard", "technique", "ghost", "cell", "which", "we", "set", "+1", "prevent", "any", "flow", "across", "domain", "boundary", "because", "positive", "semidefinite", "simply", "kkt", "condition", "minimize", "quadratic", "function", "all", "non-negative", "component", "therefore", "pressure", "equivalently", "define", "minimization", "problem", "numerical", "error", "advection", "can", "cause", "density", "violate", "-lrb-", "-rrb-", "slightly", "beginning", "time", "step", "which", "would", "cause", "solver", "apply", "spurious", "corrective", "pressure", "those", "cell", "lead", "oscillation", "avoid", "issue", "we", "first", "redistribute", "density", "so", "initial", "state", "valid", "satisfy", "-lrb-", "-rrb-", "beginning", "time", "step", "we", "solve", "update", "-lrb-", "14", "-rrb-", "correspondingly", "we", "also", "store", "use", "during", "advection", "2.3", "friction", "frictional", "stress", "symmetric", "trace-free", "rank-2", "tensor", "xx", "xy", "xz", "xy", "yy", "yz", "xz", "yz", "zz", "xx", "yy", "zz", "subject", "yield", "condition", "-lrb-", "-rrb-", "because", "yield", "constraint", "convex", "can", "linearize", "replace", "constraint", "surface", "set", "hyperplane", "tangent", "take", "hyperplane", "orthogonal", "each", "component", "yield", "bind", "constraint", "-lcb-", "-rcb-", "max", "effect", "different", "value", "show", "Figure", "plastic", "flow", "principle", "maximum", "plastic", "dissipation", "-lsb-", "Simo", "Hughes", "1998", "-rsb-", "state", "among", "all", "possible", "stress", "satisfy", "yield", "criterion", "actual", "stress", "which", "maximize", "rate", "dissipation", "kinetic", "energy", "automatically", "capture", "interplay", "between", "pressure", "friction", "within", "material", "both", "motion", "rest", "eliminate", "need", "additional", "rigidity", "condition", "stable", "pile", "naturally", "generalize", "interaction", "solid", "body", "maximize", "dissipation", "we", "compute", "frictional", "stress", "require", "minimize", "kinetic", "energy", "system", "however", "from", "numerical", "perspective", "directly", "use", "total", "kinetic", "energy", "result", "poorly", "condition", "system", "due", "division", "definition", "can", "ameliorate", "use", "additional", "weighting", "max", "energy", "modification", "make", "problem", "far", "more", "efficient", "because", "hence", "only", "ever", "nonzero", "when", "close", "max", "over", "almost", "entire", "support", "so", "only", "small", "amount", "error", "introduce", "here", "treat", "vector", "compose", "concatenation", "component", "frictional", "stress", "all", "grid", "point", "matrix", "map", "tensor", "field", "vector", "field", "s.", "minimize", "subject", "constraint", "-lrb-", "15", "-rrb-", "determine", "frictional", "stress", "boundary", "condition", "treat", "follow", "correspond", "diagonal", "component", "ii", "ghost", "cell", "so", "fix", "zero", "tangential", "force", "correspond", "off-diagonal", "component", "edge", "along", "boundary", "associate", "finite", "difference", "stencil", "do", "refer", "cell", "outside", "domain", "all", "so", "boundary", "condition", "need", "specify", "here", "solid", "body", "interact", "fluid", "granular", "material", "we", "can", "define", "linear", "operator", "which", "integrate", "stress", "its", "surface", "give", "generalize", "force", "example", "rigid", "body", "we", "can", "represent", "generalize", "force", "6-vector", "component", "force", "follow", "component", "moment", "while", "tensorial", "stress", "term", "fraction", "volume", "cover", "solid", "body", "under", "give", "material", "stress", "external", "force", "ext", "net", "generalize", "force", "body", "simply", "consider", "body", "inertia", "matrix", "initial", "generalize", "velocity", "after", "apply", "impulse", "tf", "move", "update", "velocity", "tm", "F.", "pressure", "coupling", "we", "replace", "volume", "fraction", "constraint", "-lrb-", "-rrb-", "enforce", "constraint", "require", "estimate", "volume", "fraction", "cover", "body", "next", "time", "step", "where", "predict", "volume", "fraction", "without", "pressure", "coupling", "thus", "we", "add", "matrix", "??", "+1", "linear", "term", "-lrb-", "10", "-rrb-", "-lrb-", "11", "-rrb-", "respectively", "friction", "solve", "we", "simply", "need", "add", "kinetic", "energy", "rigid", "body", "give", "thus", "we", "add", "matrix", "tj", "linear", "term", "-lrb-", "18", "-rrb-", "-lrb-", "19", "-rrb-", "also", "necessary", "modify", "velocity", "update", "granular", "material", "account", "reduce", "volume", "occupy", "assume", "body", "force", "distribute", "volumetrically", "partially", "occupy", "cell", "velocity", "update", "rule", "-lrb-", "-rrb-", "become", "problem", "solve", "couple", "minimization", "mirror", "address", "Kaufman", "et", "al.", "-lsb-", "2008", "-rsb-", "who", "treat", "contact", "frictional", "force", "between", "rigid", "body", "same", "way", "solution", "procedure", "use", "staggered", "projection", "each", "minimization", "turn", "extend", "continuous", "case", "we", "consider", "staggered", "projection", "method", "work", "fix", "value", "one", "variable", "say", "find", "through", "-lrb-", "13", "-rrb-", "use", "current", "value", "s.", "result", "fix", "update", "through", "-lrb-", "20", "-rrb-", "pair", "minimization", "form", "one", "iteration", "which", "repeat", "procedure", "solve", "-lrb-", "13", "-rrb-", "-lrb-", "20", "-rrb-", "can", "show", "nonexpansive", "mapping", "which", "couple", "solution", "fixed", "point", "we", "refer", "reader", "supplementary", "document", "proof", "discretized", "setting", "both", "problem", "become", "quadratic", "program", "which", "can", "solve", "efficiently", "we", "describe", "section", "unlike", "traditional", "fluid", "consider", "computer", "graphic", "flow", "granular", "material", "may", "purely", "incompressible", "due", "absence", "cohesion", "consequence", "difficult", "apply", "technique", "base", "semi-lagrangian", "advection", "while", "ensure", "conservation", "mass", "momentum", "furthermore", "granular", "material", "exhibit", "coherent", "surface", "pile", "rest", "may", "transition", "sparse", "cloud", "grain", "very", "dynamic", "event", "splash", "free", "fall", "render", "surface", "tracking", "method", "use", "animate", "liquid", "inapplicable", "we", "therefore", "use", "lagrangian", "approach", "advect", "material", "which", "can", "easily", "handle", "property", "we", "method", "can", "consider", "extension", "fluid-implicit-particle", "-lrb-", "flip", "-rrb-", "method", "-lsb-", "Brackbill", "Ruppel", "1986", "Zhu", "Bridson", "2005", "-rsb-", "Lagrangian", "setting", "granular", "material", "represent", "set", "simulation", "particle", "each", "simulation", "particle", "represent", "single", "grain", "macroscopic", "sample", "material?a", "move", "clump", "matter", "mass", "center", "point", "move", "average", "velocity", "beginning", "time", "step", "continuum", "value", "define", "accumulate", "value", "particle", "near", "each", "grid", "cell", "each", "particle", "treat", "point", "mass", "its", "contribution", "divide", "among", "its", "neighbor", "grid", "node", "use", "standard", "trilinear", "weight", "internal", "stress", "compute", "through", "continuum", "model", "determine", "intermediate", "velocity", "v.", "finally", "advection", "perform", "update", "particle", "use", "velocity", "field", "advection", "step", "we", "update", "each", "particle?s", "position", "base", "grid", "velocity", "particle", "velocity", "update", "add", "change", "grid", "value", "from", "previous", "time", "step", "follow", "flip", "method", "unlike", "fluid", "like", "water", "which", "practically", "incompressible", "granular", "material", "can", "exhibit", "visibly", "diverge", "flow", "disperse", "mass", "sand", "throw", "air", "present", "difficulty", "traditional", "particle-based", "advection", "technique", "design", "incompressible", "flow", "particle", "spread", "farther", "farther", "from", "each", "other", "simulated", "fluid", "eventually", "separate", "clump", "correspond", "individual", "particle", "instead", "spread", "uniformly", "while", "satisfy", "liquid", "wet", "sand", "which", "exhibit", "cohesion", "grain", "disperse", "cloud", "dry", "sand", "often", "smoothly", "distribute", "ensure", "material", "remain", "faithfully", "sample", "case", "necessary", "somehow", "track", "spreading", "simulation", "particle", "insert", "additional", "particle", "where", "necessary", "we", "do", "simply", "attach", "each", "particle", "shape", "center", "around", "particle", "position", "initially", "spherical", "which", "stretch", "squeeze", "flow", "when", "particle", "become", "too", "large", "too", "small", "split", "two", "merge", "adjacent", "particle", "thus", "automatically", "maintain", "good", "distribution", "particle", "-lrb-", "fig.", "-rrb-", "general", "shape", "particle", "ellipsoid", "which", "we", "represent", "region", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "symmetric", "positive", "definite", "matrix", "semi-axis", "ellipsoid", "give", "eigenvector", "square", "root", "eigenvalue", "first", "order", "ellipsoid", "advect", "through", "velocity", "field", "its", "time", "evolution", "give", "where", "-lrb-", "-rrb-", "Jacobian", "velocity", "field", "position", "user-specified", "parameter", "control", "size", "particle", "we", "have", "find", "set", "one-fourth", "grid", "spacing", "generally", "effective", "bound", "axis", "length", "prevent", "particle", "from", "become", "too", "big", "too", "small", "too", "skinny", "so", "can", "treat", "point", "when", "interpolate", "grid", "value", "split", "merge", "operation", "apply", "particle", "become", "invalid", "each", "child", "particle", "have", "half", "axis", "length", "along", "direction", "while", "other", "two", "axis", "remain", "same", "merge", "operation", "replace", "two", "nearby", "particle", "one", "larger", "particle", "center", "center", "mass", "carry", "total", "mass", "momentum", "where", "similarly", "displacement", "old", "particle", "from", "new", "center", "mass", "we", "choose", "rule", "so", "immediately", "merge", "child", "split", "return", "original", "particle", "we", "perform", "split", "merge", "operation", "only", "when", "result", "particle", "-lrb-", "-rrb-", "valid", "practice", "yield", "consistent", "set", "particle", "without", "oscillation", "overview", "all", "step", "we", "method", "show", "Figure", "below", "we", "describe", "some", "detail", "we", "implementation", "each", "time", "step", "Accumulate", "density", "velocity", "onto", "grid", "perform", "density", "correction", "repeat", "until", "convergence", "maximum", "iteration", "-lrb-", "-rrb-", "compute", "friction", "minimize", "-lrb-", "20", "-rrb-", "fix", "-lrb-", "-rrb-", "compute", "pressure", "minimize", "-lrb-", "13", "-rrb-", "fix", "find", "intermediate", "velocity", "through", "-lrb-", "-rrb-", "Update", "solid", "body", "impulse", "tf", "-lrb-", "23", "-rrb-", "Update", "particle", "-lrb-", "-rrb-", "Update", "velocity", "use", "flip", "-lrb-", "-rrb-", "move", "particle", "through", "velocity", "field", "v.", "-lrb-", "-rrb-", "Update", "shape", "use", "-lrb-", "28", "-rrb-", "-lrb-", "-rrb-", "split", "merge", "particle", "spatial", "derivative", "compute", "through", "finite", "difference", "stability", "we", "choose", "time", "step", "so", "particle", "move", "more", "than", "half", "grid", "cell", "single", "time", "step", "impulse-based", "integration", "scheme", "mean", "force", "only", "act", "particle", "beginning", "time", "step", "forward", "euler", "step", "suffice", "perform", "particle", "advection", "discretized", "setting", "-lrb-", "13", "-rrb-", "-lrb-", "20", "-rrb-", "quadratic", "program", "-lrb-", "qp", "-rrb-", "sparse", "symmetric", "positive", "semidefinite", "matrix", "problem", "can", "solve", "efficiently", "use", "recent", "algorithm", "d?stal", "sch?berl", "-lsb-", "2005", "-rsb-", "which", "we", "extend", "incorporate", "mic", "-lrb-", "-rrb-", "preconditioner", "-lsb-", "bridson", "m?ller", "Fischer", "2007", "-rsb-", "support", "two-sided", "bind", "constraint", "however", "na?ve", "approach", "cause", "friction", "solve", "converge", "slowly", "because", "coupling", "between", "different", "component", "s.", "because", "projection", "nevertheless", "repeat", "outer", "loop", "correct", "solution", "remain", "fixed", "point", "procedure", "please", "see", "supplementary", "document", "more", "detail", "convergence", "also", "greatly", "accelerate", "warm-start", "solver", "use", "pressure", "friction", "value", "compute", "previous", "time", "step", "initialization", "we", "find", "practice", "perform", "just", "few", "iteration", "staggered", "projection", "suffice", "give", "stable", "convincing", "result", "only", "iteration", "be", "use", "all", "we", "result", "we", "method", "can", "easily", "extend", "handle", "multiple", "granular", "material", "different", "property", "interact", "single", "scene", "-lrb-", "fig.", "-rrb-", "account", "material", "vary", "density", "friction", "coefficient", "we", "associate", "each", "simulation", "particle", "its", "own", "value", "max", "pressure", "solve", "give", "-lrb-", "black", "-rrb-", "medium", "density", "friction", "-lrb-", "sandy", "-rrb-", "low", "density", "friction", "-lrb-", "white", "-rrb-", "instead", "-lrb-", "10", "-rrb-", "-lrb-", "11", "-rrb-", "here", "treat", "diagonal", "matrix", "friction", "solve", "weighting", "now", "simply", "equal", "lead", "similarly", "replace", "-lrb-", "18", "-rrb-", "-lrb-", "19", "-rrb-", "since", "coupling", "matrix", "section", "2.4", "compute", "independently", "material", "remain", "exactly", "same", "particlebased", "advection", "part", "we", "only", "merge", "two", "particle", "have", "identical", "material", "property", "ensure", "each", "simulation", "particle", "associate", "only", "one", "distinct", "material", "facilitate", "render", "desire", "simulate", "material", "property", "vary", "continuously", "over", "space", "condition", "can", "relax", "we", "have", "apply", "we", "method", "several", "scenario", "show", "many", "characteristic", "behavior", "granular", "material", "include", "stable", "pile", "formation", "freely", "disperse", "cloud", "grain", "two-way", "rigid", "body", "interaction", "absence", "cohesion", "Figure", "several", "rigid", "body", "place", "top", "sand", "pile", "explosion", "go", "off", "inside", "pile", "send", "sand", "body", "air", "we", "model", "explosion", "instantaneous", "outward", "impulse", "apply", "particle", "small", "sphere", "interior", "pile", "incompressible", "fluid", "divergence", "would", "immediately", "nullify", "pressure", "projection", "we", "cohesionless", "pressure", "solve", "allow", "sand", "disperse", "realistic", "manner", "pressure/friction", "interaction", "Figure", "show", "sand", "fall", "hourglass", "friction", "play", "central", "role", "here", "maintain", "constant", "rate", "flow", "sand", "through", "neck", "hourglass", "unlike", "traditional", "liquid", "whose", "rate", "flow", "would", "depend", "height", "liquid", "above", "solid", "coupling", "Figure", "demonstrate", "two-way", "coupling", "between", "rigid", "body", "granular", "material", "note", "accurate", "coupling", "frictional", "stress", "necessary", "material", "able", "support", "weight", "body", "much", "denser", "than", "itself", "friction", "also", "cause", "lighter", "sphere", "roll", "without", "slip", "sand", "surface", "another", "example", "rotate", "paddle", "wheel", "show", "Figure", "multiple", "material", "Figure", "show", "different", "kind", "granular", "material", "collide", "interact", "single", "scene", "differ", "density", "friction", "material", "give", "rise", "different", "interaction", "comparison", "previous", "work", "Figure", "11", "we", "compare", "behavior", "we", "simulator", "result", "Zhu", "Bridson", "-lsb-", "2005", "-rsb-", "due", "incompressibility", "assumption", "approach", "work", "well", "modeling", "cohesive", "material", "like", "wet", "sand", "while", "ours", "behave", "more", "like", "dry", "granular", "material", "zero", "cohesion", "real-world", "comparison", "Figure", "10", "show", "impact", "scenario", "fast-moving", "metal", "sphere", "we", "model", "real", "experiment", "from", "Discovery", "Channel", "viewable", "http://dsc.discovery.com/", "videos/time-warp-deep", "impact.html", "we", "result", "qualitatively", "consistent", "real-world", "behavior", "sand", "scenario", "some", "anisotropy", "visible", "splash", "due", "linearization", "friction", "constraint", "-lrb-", "15", "-rrb-", "can", "avoid", "add", "more", "constraint", "hyperplane", "cost", "higher", "simulation", "time", "render", "granular", "material", "from", "continuum-based", "simulation", "pose", "its", "own", "challenge", "fine", "grain", "render", "must", "sample", "from", "simulation", "temporally", "coherent", "manner", "previous", "method", "either", "simulated", "cohesive", "material", "which", "maintain", "well-defined", "surface", "render", "-lsb-", "Zhu", "Bridson", "2005", "-rsb-", "attach", "grain", "rigidly", "simulation", "particle", "-lsb-", "lenaert", "Dutr", "2009", "-rsb-", "lead", "visible", "clump", "neither", "applicable", "we", "technique", "so", "we", "have", "develop", "heuristic", "approach", "we", "find", "perform", "well", "many", "situation", "we", "render", "sand", "cloud", "point", "produce", "granular", "appearance", "each", "simulation", "particle", "we", "associate", "number", "render", "point", "sample", "within", "particle?s", "ellipsoid", "passively", "advect", "flow", "point", "reassign", "new", "simulation", "particle", "upon", "split", "merge", "event", "resample", "fall", "outside", "parent", "ellipsoid", "we", "also", "reduce", "number", "point", "be", "render", "detect", "connected", "region", "high", "density", "avoid", "sampling", "point", "inside", "they", "illumination", "point", "normal", "take", "gradient", "density", "plus", "per-particle", "random", "jitter", "all", "scene", "be", "render", "use", "Pixar?s", "RenderMan", "performance", "we", "single-threaded", "implementation", "measure", "3.33", "GHz", "Intel", "Core", "i7", "machine", "5.8", "gb", "RAM", "detailed", "performance", "number", "show", "Table", "average", "time", "per", "frame", "spend", "follow", "17", "pressure", "35", "friction", "33", "particle", "update", "remainder", "other", "step", "all", "we", "simulation", "take", "between", "33", "seconds", "per", "frame", "average", "which", "comparable", "performance", "-lsb-", "Zhu", "Bridson", "2005", "-rsb-", "similar", "pc", "simulation", "time", "per", "frame", "proportional", "both", "number", "occupied", "grid", "cell", "speed", "motion", "scene", "due", "adaptive", "timestepping", "comparison", "-lsb-", "Bell", "et", "al.", "2005", "-rsb-", "hourglass", "scenario", "110k", "particle", "rigid", "body", "impact", "-lrb-", "splash", "-rrb-", "187k", "particle", "both", "take", "roughly", "200", "seconds", "per", "frame", "accounting", "scaling", "factor", "number", "particle", "we", "method", "run", "similar", "scene", "hardware", "about", "one", "order", "magnitude", "faster", "we", "have", "present", "efficient", "method", "simulate", "free-flowing", "dynamic", "granular", "material", "use", "continuum", "model", "we", "method", "support", "very", "general", "diverse", "set", "granular", "behavior", "include", "disperse", "flow", "two-way", "interaction", "solid", "object", "we", "achieve", "through", "novel", "mathematical", "treatment", "granular", "flow", "robustly", "handle", "complex", "interplay", "internal", "stress", "granular", "material", "addition", "we", "develop", "generalization", "particle-in-cell", "method", "maintain", "good", "distribution", "particle", "general", "compressible", "flow", "we", "method", "model", "purely", "cohesionless", "behavior", "which", "assumption", "satisfy", "most", "dry", "granular", "material", "however", "certain", "material", "wet", "sand", "soil", "show", "finite", "amount", "cohesion", "which", "prevent", "material", "from", "disperse", "under", "small", "force", "exist", "continuum", "model", "-lsb-", "Zhu", "Bridson", "2005", "Lenaerts", "Dutr", "2009", "-rsb-", "which", "assume", "incompressibility", "can", "model", "material", "extent", "do", "handle", "case", "when", "cohesive", "force", "overcome", "material", "break", "apart", "approach", "can", "faithfully", "model", "granular", "material", "vary", "amount", "cohesion", "remain", "open", "challenge", "currently", "we", "do", "model", "detailed", "effect", "inter-grain", "interaction", "include", "subgrid-scale", "variation", "motion", "interaction", "between", "grain", "widely", "differ", "size", "addition", "model", "subgrid-scale", "interaction", "would", "allow", "simulation", "even", "more", "complex", "scene", "avalanche", "involve", "object", "many", "different", "shape", "size", "approach", "could", "also", "useful", "engineering", "application", "derive", "tractable", "model", "granular", "material", "dynamics", "we", "have", "adopt", "critical", "state", "assumption", "neglect", "inter-particle", "interaction", "collisional", "regime", "lower", "density", "assumption", "allow", "many", "scenario", "interest", "graphic", "application", "simulated", "efficiently", "preclude", "modeling", "more", "counterintuitive", "behavior", "formation", "convection", "layer", "surface", "wave", "upon", "shake", "Brazil", "nut", "reverse", "Brazil", "nut", "effect", "surprising", "phenomenon", "beyond", "scope", "we", "current", "work", "remain", "puzzling", "challenging", "effect", "model", "physics", "mathematics", "community", "finally", "issue", "sampling", "render", "million", "grain", "from", "continuum", "representation", "granular", "material", "interesting", "research", "problem", "itself", "can", "further", "enhance", "visual", "appearance", "we", "key", "contribution", "simulation", "further", "independent", "investigation", "problem", "valuable", "acknowledgment", "work", "support", "part", "Army", "Research", "Office", "National", "Science", "Foundation", "RDECOM", "first", "author", "support", "Intel", "PhD", "fellowship" ],
  "content" : "Our approach fully solves the internal pressure and frictional stresses in a granular material, thereby allows visually noticeable behaviors of granular materials to be reproduced, including freely dispersing splashes without cohesion, and a global coupling between friction and pressure. The physical behavior of such materials arises from the interplay of contact and frictional forces between thousands to millions of tiny grains. Continuum-based approaches have many advantages, including efficient numerical methods due to a regular computational domain, and the ability for the user to choose the resolution of the simulation as a trade-off between performance and quality. Firstly, to allow the material to disperse freely when agitated but maintain its volume when at rest, we replace the existing fluid-based model?s assumption of incompressibility with a unilateral variational constraint. Secondly, unlike fluid viscosity, friction in granular materials can counteract gravity to maintain stable piles in equilibrium. We present an efficient method for this numerical problem, permitting appropriate frictional behavior and solid body interaction. Being ?a distinctive form of matter that exhibits behavior rather different from that of ordinary solids, liquids, or gases? [Behringer et al. 1999], granular materials show surprisingly complex behavior that is still being studied in the physics and engineering communities. Lenaerts and Dutr? [2009] adapted this method to the setting of smoothed particle hydrodynamics (SPH), and also enabled simulating sand-water interaction in this setting. This issue was addressed in part by Aldu?n et al. [2009], who proposed a post-processing step that interpolates fine grains over a coarser discrete simulation. These characteristics allow qualitatively realistic, compelling results similar to fine-scale discrete methods at a far lower computation time and significantly reduced memory requirements. In our method, we assume that the material?s grain size is so small that the precise motion of individual grains is unimportant. Therefore, we treat the granular material instead as a continuous fluid flowing under the action of external forces and internal stresses. We briefly describe the overall simulation loop, illustrated in Fig. 2 . The remainder of the paper is organized as follows. The continuum model is described in Section 2, and the particle-based advection scheme in Section 3. Further implementation details are given in Section 4. In Section 5, we discuss the results of our method on several example scenarios. Dry grains apply no attractive forces on each other, so in macroscopic terms the material displays little cohesion. This means that unlike a liquid, a granular material in motion may not have a clearly defined surface at all! Consider a sand pile transitioning to a cloud of grains under impact: where does the pile surface end and the cloud begin? Another significant difference is the effect of friction. It can transmit forces across large distances, and unlike fluid viscosity, it continues to act even at rest, resulting in stable piles and other quasi-rigid behaviors. The rate of flow is constant due to the coupling between pressure and friction. On the right, the simulation particles used for advection are visualized. From a continuum viewpoint, we represent the physical state of a granular material through its mass density ? and flow velocity v. The system is acted upon by external forces f ext and internal stress ?. If we denote the Lagrangian time derivative by D/Dt = ?/?t + (v ? ), the time evolution of the system is given by the transport of mass, and the effect of forces, Following previous work [Zhu and Bridson 2005], we employ the Drucker-Prager yield criterion for its computational simplicity. When the cohesion is negligible, as is the case for most dry granular materials, the yield criterion can be expressed by the inequality where s F = qP s 2 ij is the Frobenius norm of s, and ? is the frictional coefficient. We use an impulse-based time-stepping scheme throughout our simulation, where forces are considered to act instantaneously at the beginning of each time step. We make two simplifying assumptions to the dynamics of granular materials. This can be thought of as the density of a stable pile of material at rest. (In reality, this density is slightly higher than critical, as grains at rest must separate a little to move past each other, but this effect is visually imperceptible.) Secondly, when ? < ? max , grains are not packed together and only interact via intermittent collisions, and we neglect the effect of these interactions. Under these assumptions, the granular material has a maximum density ? max , and the pressure p acts to prevent any further compression of the material. However, in contrast to traditional incompressible fluids, where both positive and negative flow divergence are always nullified by the pressure, an absence of cohesion in granular material implies that a material undergoing diverging flow experiences no internal forces. We adapt the same numerical method for computing the corresponding pressure p to satisfy the constraint in 3D space. For completeness, we briefly describe this method below. The volume fraction at the end of a time step ?t can be estimated by discretizing (2) with v = v. This gives\n        (7) This implies a complementarity That is, when p is active (nonzero), ? n+1 must equal 1, not fall below it. D 1 denotes the finite difference matrix mapping a scalar field p to  the vector field p. Boundary conditions are treated using the standard technique of ghost cells, on which we set ? n+1 | p=0 = 1 to prevent any flow across domain boundaries. Because A 1 is positive semidefinite, these are simply the KKT conditions for minimizing a quadratic function for p with all non-negative components. Therefore, the pressure p is equivalently defined by the minimization problem Numerical error in advection can cause the density to violate (6) slightly at the beginning of a time step, which would cause the solver to apply spurious corrective pressure at those cells and lead to oscillations. To avoid this issue, we first redistribute the density so the initial state is valid. satisfies (6). At the beginning of the time step, we solve this and update ? n with (14) and ? n correspondingly. We also store ?x for use during advection. 2.3 Friction The frictional stress s is a symmetric, trace-free, rank-2 tensor, 2 s xx s xy s xz 3 s = 4 s xy s yy s yz 5 , s xz s yz s zz s xx + s yy + s zz = 0,\n          subject to the yield condition (4). Because the yield constraint is convex, it can be linearized by replacing the constraint surface with a set of hyperplanes tangent to it. Taking the hyperplanes orthogonal to each component of s yields bound constraints for i, j ? {x, y, z}, and with s max = ?p. The effect of different values of ? is shown in Figure 4 . For plastic flow, the principle of maximum plastic dissipation [Simo and Hughes 1998] states that among all possible stresses satisfying the yield criterion, the actual stress is that which maximizes the rate of dissipation of kinetic energy. This automatically captures the interplay between pressure and friction within the material both in motion and at rest, eliminates the need for an additional rigidity condition for stable piles, and naturally generalizes to interaction with solid bodies. To maximize dissipation, we compute the frictional stress by requiring that it minimize the kinetic energy of the system. However, from a numerical perspective, directly using the total kinetic energy results in a poorly conditioned system due to the division by ? n in the definition of v. This can be ameliorated by using an additional weighting w = ? n /? max on the energy: This modification makes the problem far more efficient, and because p and hence s are only ever nonzero when ? n is close to ? max , w is 1 over almost the entire support of s so only a small amount of error is introduced. Here s is treated as the vector composed of the concatenation of the components of frictional stress at all grid points, and D 2 is the matrix mapping a tensor field s to the vector field ? s. Minimizing E subject to the constraints (15) determines the frictional stress: Boundary conditions are treated as follows. This corresponds to the diagonal components s ii on the ghost cells, so these are fixed at zero. The tangential force corresponds to the off-diagonal components on edges along the boundary; the associated finite difference stencil does not refer to cells outside the domain at all, so no boundary conditions need to be specified here. For a solid body interacting with a fluid or granular material, we can define a linear operator J which integrates stresses on its surface to give generalized forces. For example, for rigid bodies, we can represent generalized forces as 6-vectors with 3 components of force followed by 3 components of moment. while that for tensorial stresses is in terms of the fraction of volume ? s covered by the solid body. Under given material stresses p and s and external forces F ext , the net generalized force on the body is simply Consider a body with inertia matrix M and initial generalized velocity V n . After applying the impulse ?tF, it moves with the updated velocity V  ? = V n + ?tM ?1 F. For the pressure coupling, we replace the volume fraction constraint (6) with Enforcing this constraint requires estimating the volume fraction covered by the body at the next time step. where ? s p=0 is the predicted volume fraction without pressure coupling. Thus we add ?t 2 J T 1 M ?1 J 1 to the matrix A 1 , and ?? n+1 s | p=0 to the linear term b 1 in (10) and (11) respectively. In the friction solve, we simply need to add the kinetic energy of the rigid body to E. This is given by Thus, we add ?t 2 J 2 T M ?1 J 2 to the matrix A 2 and ?tJ T 2 V|  ? s=0 to the linear term b 2 in (18) and (19). It is also necessary to modify the velocity updates of the granular material to account for the reduced volume occupied by it. Assuming that the body forces are distributed volumetrically in a partially occupied cell, the velocity update rule (5) becomes The problem of solving these coupled minimizations mirrors that addressed by Kaufman et al. [2008], who treated the contact and frictional forces between rigid bodies in the same way. This solution procedure, using staggered projections on each minimization in turn, extends to the continuous case we consider. The staggered projection method works by fixing the value of one variable, say s, and finding p through (13) using the current value of s. Then, the resulting p is fixed and s is updated through (20). This pair of minimizations forms one iteration, which is repeated. This procedure of solving (13) and (20) can be shown to be a nonexpansive mapping, of which the coupled solution is a fixed point; we refer the reader to the supplementary document for the proof. In the discretized setting, both problems become quadratic programs which can be solved efficiently, as we describe in Section 4. Unlike traditional fluids considered in computer graphics, the flow of a granular material may not be purely incompressible due to the absence of cohesion. As a consequence, it is difficult to apply techniques based on semi-Lagrangian advection while ensuring the conservation of mass and momentum. Furthermore, a granular material that exhibits a coherent surface in a pile at rest may transition into a sparse cloud of grains in very dynamic events such as splashes or free fall, rendering surface tracking methods used for animating liquids inapplicable. We therefore use a Lagrangian approach for advecting the material, which can easily handle these properties. Our method can be considered as an extension of the fluid-implicit-particle (FLIP) method [Brackbill and Ruppel 1986; Zhu and Bridson 2005]. In the Lagrangian setting, the granular material is represented as a set of simulation particles. Each simulation particle represents not a single grain but a macroscopic sample of the material?a moving ?clump? of matter with mass m i centered at a point x i and moving with average velocity v i . At the beginning of a time step, the continuum values of ? n and v n are defined by accumulating the values of particles near each grid cell. Each particle is treated as a point mass, and its contribution is divided among its neighboring 8 grid nodes using standard trilinear weights. The internal stresses are then computed through the continuum model to determine the intermediate velocity v. Finally, advection is performed by updating the particles using this velocity field. In the advection step, we update each particle?s position based on the grid velocity. Particle velocities are updated by adding the change in grid values from the previous time step, following the FLIP method. Unlike fluids like water which are practically incompressible, granular materials can exhibit visibly diverging flow, such as a dispersing mass of sand thrown into the air. This presents a difficulty for traditional particle-based advection techniques designed for incompressible flow: particles spread farther and farther from each other, and the simulated fluid eventually separates into clumps corresponding to individual particles instead of spreading uniformly. While this is satisfying for liquids, or for wet sand which exhibits cohesion, grains in a dispersing cloud of dry sand are often smoothly distributed. To ensure that the material remains faithfully sampled in such cases, it is necessary to somehow track the spreading of simulation particles, and insert additional particles where necessary. We do this simply by attaching to each particle a shape centered around the particle position, initially spherical, which is stretched  and squeezed by the flow. When the particle becomes too large or too small, it is split into two or merged with an adjacent particle, thus automatically maintaining a good distribution of particles ( Fig. 7 ). In general, the shape of a particle is an ellipsoid, which we represent as the region (x ? x i ) T A ?1 i (x ? x i ) ? 1 for a symmetric positive definite matrix A i . The semi-axes of the ellipsoid are given by the eigenvectors and square roots of eigenvalues of A i . To first order, as this ellipsoid is advected through the velocity field v, its time evolution is given by where J v (x i ) is the Jacobian of the velocity field at position x i . A user-specified parameter r controls the size of particles. We have found that setting r to one-fourth the 2 grid spacing is generally effective. The bounds on the axis lengths prevent particles from becoming too big, too small, or too skinny, so that they can be treated as points when interpolating grid values. Split and merge operations are applied to particles that become invalid. Each child particle has half the axis length along this direction, while the other two axes remain the same. A merge operation replaces two nearby particles with one larger particle centered at their center of mass, carrying their total mass and momentum. where ?x i = x i ?x k , and similarly ?x j , are the displacements of the old particles from the new center of mass. We chose this rule so that immediately merging the children of a split returns the original particle. We perform split and merge operations only when the resulting particle(s) are valid. In practice, this yields a consistent set of particles without oscillations. An overview of all the steps of our method is shown in Figure 8 . Below we describe some details of our implementation. For each time step: 1. Accumulate density ? n and velocity v n onto grid. Perform density correction on ? n . Repeat until convergence or maximum iterations: (a) Compute friction s by minimizing (20) for fixed (b) Compute pressure p by minimizing (13) for fixed 4. Find intermediate velocity v through (5). Update solid bodies with an impulse ?tF (23). Update particles: (a) Update velocities using FLIP. (b) Move particles through the velocity field v. (c) Update shapes using (28). (d) Split and merge particles. Spatial derivatives are computed through finite differences. For stability, we choose time steps so that no particle moves more than half of a grid cell in a single time step. As the impulse-based integration scheme means that forces only act on particles at the beginning of a time step, a forward Euler step suffices to perform particle advection. In the discretized setting, (13) and (20) are quadratic programs (QPs) with sparse, symmetric, positive semidefinite matrices. These problems can be solved efficiently using the recent algorithm of D?stal and Sch?berl [2005], which we extended to incorporate an MIC(0) preconditioner [Bridson and M?ller-Fischer 2007] and support two-sided bound constraints. However, a na?ve approach causes the friction solve to converge slowly, because of the coupling between different components of s. Because the projections are nevertheless repeated in an outer loop, the correct solution remains the fixed point of the procedure. Please see the supplementary document for more details. Convergence is also greatly accelerated by warm-starting the solver using the pressure and friction values computed at the previous time step as initialization. We found that in practice, performing just a few iterations of staggered projections sufficed to give stable and convincing results; only 2 iterations were used in all our results. Our method can easily be extended to handle multiple granular materials with different properties interacting in a single scene ( Fig. 9 ). To account for materials of varying densities and friction coefficients, we associate each simulation particle i with its own values of ? max,i and ? i . The pressure solve is then given by (black), medium density and friction (sandy), low density and friction (white). instead of (10) and (11). ? n /? n here is treated as a diagonal matrix. In the friction solve, the weighting w now simply equals ?. This leads similarly to replacing (18) and (19) with Since the coupling matrices of Section 2.4 are computed independently of the material, they remain exactly the same. In the particlebased advection part, we only merge two particles if they have identical material properties. This ensures that each simulation particle is associated with only one distinct material, and facilitates rendering. If it is desired to simulate materials with properties that vary continuously over space, this condition can be relaxed. We have applied our method to several scenarios, showing many characteristic behaviors of granular materials including stable pile formation, freely dispersing clouds of grains, and two-way rigid body interaction. Absence of cohesion: In Figure 1 , several rigid bodies are placed on top of a sand pile, and an explosion goes off inside the pile, sending the sand and the bodies into the air. We modeled the explosion as an instantaneous outward impulse applied to particles in a small sphere in the interior of the pile. In an incompressible fluid, this divergence would be immediately nullified by the pressure projection, but our cohesionless pressure solve allows the sand to disperse in a realistic manner. Pressure/friction interaction: Figure 3 shows sand falling in an hourglass. Friction plays a central role here, as it maintains a constant rate of flow of sand through the neck of the hourglass, unlike a traditional liquid whose rate of flow would depend on the height of the liquid above it. Solid coupling: Figure 5 demonstrates two-way coupling between rigid bodies and granular material. Note that an accurate coupling of frictional stress is necessary for the material to be able to support the weight of bodies much denser than itself. Friction also causes the lighter spheres roll without slipping on the sand surface. Another example with rotating paddle wheels is shown in Figure 6 . Multiple materials: Figure 9 shows different kinds of granular materials colliding and interacting in a single scene. The differing densities and friction of the materials give rise to different interactions. Comparison with previous work: In Figure 11 , we compare the behavior of our simulator with the results of Zhu and Bridson [2005]. Due to their incompressibility assumption, their approach works well for modeling cohesive materials like wet sand, while ours behaves more like a dry granular material with zero cohesion. Real-world comparison: Figure 10 shows an impact scenario with a fast-moving metal sphere. We modeled this on a real experiment from the Discovery Channel, viewable at http://dsc.discovery.com/ videos/time-warp-deep-impact.html. Our result is qualitatively consistent with the real-world behavior of sand in this scenario. Some anisotropy visible in the splash is due to the linearization of the friction constraint (15). This can be avoided by adding more constraint hyperplanes, at the cost of higher simulation time. Rendering granular materials from a continuum-based simulation poses its own challenges, as fine grains for rendering must be sampled from the simulation in a temporally coherent manner. Previous methods either simulated a cohesive material which maintained a well-defined surface for rendering [Zhu and Bridson 2005], or attached grains rigidly to simulation particles [Lenaerts and Dutr? 2009] leading to visible clumps. Neither of these is applicable to our technique, so we have developed a heuristic approach that we found to perform well for many situations. We render sand as a cloud of points, producing a granular appearance. To each simulation particle, we associate a number of render points sampled within the particle?s ellipsoid, that are passively advected with the flow. Points are reassigned to new simulation particles upon split and merge events, and resampled if they fall outside their parent ellipsoid. We also reduce the number of points being rendered by detecting connected regions of high density and avoiding sampling points inside them. For illumination, the point normal is taken to be the gradient of the density plus a per-particle random jitter. All scenes were rendered using Pixar?s RenderMan R . The performance of our single-threaded implementation was measured on a 3.33 GHz Intel Core i7 machine with 5.8 GB of RAM. The detailed performance numbers are shown in Table 1 . On average, the time per frame was spent as follows: 17% pressure, 35% friction, 33% particle update, and the remainder in other steps. All of our simulations took between 6 and 33 seconds per frame on average, which is comparable to the performance of [Zhu and Bridson 2005] on similar PCs. The simulation time per frame is proportional to both the number of occupied grid cells and the speed of motion in the scene due to adaptive timestepping. In comparison to [Bell et al. 2005], their hourglass scenario with 110k particles and rigid body impact (?splash?) with 187k particles both take roughly 200 seconds per frame. Accounting for the scaling factor in the number of particles, our method running on the similar scenes and hardware is about one order of magnitude faster. We have presented an efficient method for simulating free-flowing, dynamic granular materials using a continuum model. Our method supports a very general, diverse set of granular behaviors, including dispersing flow and two-way interaction with solid objects. We achieved this through a novel mathematical treatment of granular flow that robustly handles the complex interplay of internal stresses in the granular material. In addition, we developed a generalization of the particle-in-cell method that maintains a good distribution of particles in general compressible flows. Our method models purely cohesionless behavior, which is an assumption satisfied by most dry granular materials. However, certain materials such as wet sand and soil show a finite amount of cohesion, which prevents the material from dispersing under small forces. Existing continuum models [Zhu and Bridson 2005; Lenaerts and Dutr? 2009] which assume incompressibility can model such materials to an extent, but do not handle cases when  cohesive forces are overcome and the material breaks apart. An approach that can faithfully model granular materials with varying amounts of cohesion remains an open challenge. Currently, we do not model the detailed effects of inter-grain interaction. These include subgrid-scale variations in motion, and interactions between grains of widely differing sizes. The addition of a model for such subgrid-scale interactions would allow for the simulation of even more complex scenes such as avalanches involving objects of many different shapes and sizes. Such an approach could also be useful in engineering applications. To derive a tractable model for granular material dynamics, we have adopted a critical state assumption and neglected inter-particle interactions in the collisional regime of lower density. These assumptions allow many scenarios of interest to graphics applications to be simulated efficiently, but preclude modeling the more counterintuitive behaviors such as formation of convection layers and surface waves upon shaking, and the Brazil nut and reverse Brazil nut effects. These surprising phenomena are beyond the scope of our current work, and remain as puzzling, challenging effects to model for the physics and mathematics communities. Finally, the issue of sampling and rendering millions of grains from a continuum representation of granular material is an interesting research problem in itself, and can further enhance the visual appearance of our key contribution on simulation. Further independent investigation of this problem is valuable. Acknowledgments: This work is supported in part by the Army Research Office, National Science Foundation, and RDECOM. The first author was supported by an Intel PhD fellowship.",
  "resources" : [ ]
}