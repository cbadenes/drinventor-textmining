{
  "uri" : "sig2014a-a200-wu_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2014a/a200-wu_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Real-time Shading-based Refinement for Consumer Depth Cameras",
    "published" : "2014",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Shahram-Izadi",
      "name" : "Shahram",
      "surname" : "Izadi"
    } ]
  },
  "bagOfWords" : [ "b6d72581d31b03b1917e8ab32c5750bf873d0b6f6ba509150152cd2311f050bf", "p7a", "10.1145", "2661229.2661232", "name", "identification", "possible", "real-time", "shading-based", "refinement", "Consumer", "Depth", "Cameras", "Chenglei", "Wu", "Michael", "Zollh?fer", "Matthias", "Nie?ner", "Marc", "Stamminger", "Shahram", "Izadi", "Max-Planck-Institute", "Informatics", "University", "Erlangen-Nuremberg", "Stanford", "University", "Figure", "we", "method", "take", "input", "depth", "align", "RGB", "image", "from", "any", "consumer", "depth", "camera", "-lrb-", "here", "PrimeSense", "Carmine", "1.09", "-rrb-", "per-frame", "real-time", "we", "approximate", "incident", "lighting", "albedo", "use", "geometry", "refinement", "from", "left", "example", "input", "depth", "rgb", "image", "raw", "depth", "input", "prior", "refinement", "-lrb-", "render", "normal", "phong", "shading", "respectively", "-rrb-", "we", "refined", "result", "note", "detail", "eye", "-lrb-", "top", "right", "-rrb-", "compare", "original", "depth", "map", "-lrb-", "bottom", "right", "-rrb-", "full", "3d", "reconstruction", "use", "we", "refine", "depth", "map", "real-time", "scan", "integration", "method", "-lsb-", "nie?ner", "et", "al.", "2013", "-rsb-", "-lrb-", "far", "right", "-rrb-", "we", "present", "first", "real-time", "method", "refinement", "depth", "datum", "use", "shape-from-shading", "general", "uncontrolled", "scene", "per", "frame", "we", "real-time", "algorithm", "take", "raw", "noisy", "depth", "datum", "align", "RGB", "image", "input", "approximate", "time-varying", "incident", "lighting", "which", "use", "geometry", "refinement", "lead", "dramatically", "enhance", "depth", "map", "30Hz", "we", "algorithm", "make", "few", "scene", "assumption", "handle", "arbitrary", "scene", "object", "even", "under", "motion", "enable", "type", "real-time", "depth", "map", "enhancement", "we", "contribute", "new", "highly", "parallel", "algorithm", "reformulate", "inverse", "render", "optimization", "problem", "prior", "work", "allow", "we", "estimate", "lighting", "shape", "temporally", "coherent", "way", "video", "frame-rate", "we", "optimization", "problem", "minimize", "use", "new", "regular", "grid", "gauss-newton", "solver", "implement", "fully", "GPU", "we", "demonstrate", "result", "show", "enhance", "depth", "map", "which", "comparable", "offline", "method", "computed", "order", "magnitude", "faster", "well", "baseline", "comparison", "online", "filtering-based", "method", "we", "conclude", "application", "we", "higher", "quality", "depth", "map", "improve", "real-time", "surface", "reconstruction", "performance", "capture", "cr", "category", "i.", "3.7", "-lsb-", "Computer", "Graphics", "-rsb-", "digitization", "image", "capture?applications", "i.", "4.8", "-lsb-", "image", "processing", "computer", "Vision", "-rsb-", "scene", "Analysis?Range", "Data", "Keywords", "shading-based", "refinement", "real-time", "depth", "camera", "Links", "dl", "pdf", "EB", "IDEO", "ODE", "ACM", "Reference", "Format", "Wu", "C.", "Zollh?fer", "M.", "Nie?ner", "M.", "Stamminger", "M.", "Izadi", "S.", "Theobalt", "C.", "2014", "real-time", "shading-based", "refinement", "Consumer", "Depth", "Cameras", "ACM", "Trans", "graph", "33", "Article", "200", "-lrb-", "November", "2014", "-rrb-", "10", "page", "dous", "10.1145", "2661229.2661232", "http://doi.acm.org/10.1145/2661229.2661232", "copyright", "Notice", "permission", "make", "digital", "hard", "copy", "all", "part", "work", "personal", "classroom", "use", "grant", "without", "fee", "provide", "copy", "make", "distribute", "profit", "commercial", "advantage", "copy", "bear", "notice", "full", "citation", "fus", "rst", "page", "copyright", "component", "work", "own", "other", "than", "ACM", "must", "honor", "abstract", "credit", "permit", "copy", "otherwise", "republish", "post", "server", "redistribute", "list", "require", "prior", "specific", "permission", "and/or", "fee", "request", "permission", "from", "permissions@acm.org", "copyright", "ACM", "0730-0301/14", "11-art200", "15.00", "DOI", "http://doi.acm.org/10.1145/2661229.2661232", "christian", "theobalt", "Microsoft", "Research", "introduction", "consumer", "depth", "camera", "have", "open", "up", "many", "new", "real-time", "application", "field", "computer", "graphic", "vision", "robotic", "human-computer", "interaction", "include", "gestural", "interface", "live", "3d", "scanning", "augment", "reality", "robot", "navigation", "however", "noise", "resolution", "limitation", "even", "recent", "depth", "camera", "result", "only", "coarse", "geometry", "acquisition", "per", "frame", "ability", "capture", "higher", "fidelity", "geometry", "real-time", "could", "open", "up", "many", "new", "scenario", "track", "detailed", "feature", "user", "-lrb-", "e.g.", "facial", "expression", "clothing", "etc.", "-rrb-", "real-time", "performance", "capture", "other", "interactive", "scenario", "well", "ability", "scan", "higher", "quality", "3d", "model", "real-world", "object", "show", "previously", "input", "from", "stereo", "camera", "shape-fromshading", "-lrb-", "sf", "-rrb-", "can", "use", "capture", "detailed", "model", "result", "approach", "laser", "scan", "quality", "-lsb-", "Wu", "et", "al.", "2011", "Han", "et", "al.", "2013", "Yu", "et", "al.", "2013", "Beeler", "et", "al.", "2010", "-rsb-", "raise", "question", "can", "type", "shading-based", "refinement", "use", "improve", "depth", "camera", "datum", "only", "leverage", "additional", "RGB", "camera", "which", "most", "sensor", "typically", "provide", "unfortunately", "shading-based", "refinement", "technique", "require", "information", "about", "incident", "lighting", "surface", "material", "scene", "most", "case", "requirement", "fulfil", "make", "assumption", "about", "albedo", "work", "control", "lighting", "-lsb-", "hern?ndez", "et", "al.", "2008", "Fanello", "et", "al.", "2014", "-rsb-", "studio", "setup", "-lsb-", "Ghosh", "et", "al.", "2011", "Debevec", "2012", "Bermano", "et", "al.", "2014", "-rsb-", "when", "move", "general", "uncontrolled", "scene", "sf", "method", "thus", "need", "estimate", "albedo", "illumination", "along", "geometry", "solve", "complex", "inverse", "rendering", "problem", "-lsb-", "Wu", "et", "al.", "2011", "Wu", "et", "al.", "2013", "Han", "et", "al.", "2013", "Yu", "et", "al.", "2013", "-rsb-", "so", "far", "possible", "real", "time", "refinement", "technique", "have", "yet", "use", "interactively", "due", "performance", "bottleneck", "researcher", "have", "develop", "alternative", "heuristic", "fusion", "strategy", "enhance", "depth", "camera", "datum", "real", "time", "-lsb-", "Richardt", "et", "al.", "2012", "-rsb-", "many", "they", "use", "variant", "joint", "bilateral", "upsampling", "-lsb-", "Kopf", "et", "al.", "2007", "-rsb-", "lift", "depth", "datum", "pixel", "grid", "resolution", "concurrently", "acquire", "align", "RGB", "image", "while", "computation", "fast", "result", "base", "purely", "heuristic", "assumption", "about", "co-occurrence", "discontinuity", "RGB", "depth", "datum", "consequence", "reconstruction", "may", "look", "plausible", "estimated", "detail", "may", "metrically", "accurate", "further", "heuristic", "underpinning", "lead", "commonly", "know", "artifact", "texture", "copying", "where", "spatial", "albedo", "variation", "mistake", "geometric", "detail", "paper", "we", "propose", "new", "real-time", "method", "enhancement", "depth", "datum", "use", "sf", "general", "uncontrolled", "scene", "start", "from", "raw", "depth", "datum", "align", "RGB", "image", "algorithm", "estimate", "real", "time", "time-varying", "incident", "lighting", "distribution", "which", "use", "considerably", "enhance", "reconstruct", "geometric", "detail", "contrast", "previous", "fusion-based", "enhancement", "approach", "we", "reconstruction", "only", "plausible", "more", "metrically", "faithful", "avoid", "some", "texture-copy", "artifact", "see", "previously", "order", "refine", "depth", "map", "base", "shade", "real-time", "order", "magnitude", "faster", "than", "state-of-the-art", "offline", "system", "-lsb-", "Wu", "et", "al.", "2011", "-rsb-", "we", "must", "redesign", "shading-based", "energy", "function", "well", "its", "optimization", "method", "we", "rephrase", "shadingbased", "refinement", "problem", "fully", "exploit", "regular", "connectivity", "image", "grid", "instead", "use", "off-the-shelf", "conventional", "solver", "we", "introduce", "novel", "patch-based", "gauss-newton", "solver", "run", "GPU", "which", "specifically", "design", "we", "energy", "function", "careful", "design", "choice", "enable", "refinement", "depth", "map", "real-time", "make", "ideally", "suit", "modern", "commodity", "range", "sensor", "run", "30Hz", "specifically", "we", "algorithm", "provide", "follow", "contribution", "rephrase", "inverse", "render", "optimization", "problem", "use", "offline", "method", "-lsb-", "Wu", "et", "al.", "2011", "-rsb-", "highly", "parallelized", "manner", "enable", "real-time", "lighting", "estimation", "through", "spherical", "harmonic", "direct", "solve", "refine", "depth", "rather", "than", "displacement", "3d", "mesh", "space-time", "coherent", "estimation", "shape", "lighting", "use", "temporal", "correspondence", "derive", "from", "real-time", "alignment", "depth", "map", "adaptive", "shape", "refinement", "strategy", "reduce", "texture-copy", "artifact", "analyze", "approximate", "albedo", "image", "novel", "patch-based", "gauss-newton", "solver", "GPU", "compute", "metrically", "faithful", "geometry", "real-time", "frame-rate", "beyond", "technical", "contribution", "we", "show", "versatility", "we", "method", "reconstruct", "arbitrary", "scene", "even", "under", "motion", "demonstrate", "improve", "accuracy", "compare", "filter", "base", "refinement", "method", "we", "show", "integration", "real-time", "scanning", "framework", "akin", "kinectfusion", "-lsb-", "Newcombe", "et", "al.", "2011", "Izadi", "et", "al.", "2011", "Nie?ner", "et", "al.", "2013", "-rsb-", "show", "improved", "quality", "during", "realtime", "capture", "finally", "we", "demonstrate", "how", "we", "method", "enable", "improvement", "spatio-temporal", "reconstruction", "recent", "live", "non-rigid", "performance", "capture", "system", "-lsb-", "zollh?fer", "et", "al.", "2014a", "-rsb-", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "200", "publication", "date", "November", "2014", "200:2", "C.", "Wu", "et", "al.", "related", "work", "Range", "image", "enhancement", "sensor", "fusion", "several", "method", "denoise", "enhance", "depth", "datum", "leverage", "higher", "pixel", "resolution", "one", "two", "concurrently", "capture", "rgb", "image", "most", "method", "rely", "heuristic", "assumption", "about", "correlation", "color", "depth", "e.g.", "edge", "both", "channel", "likely", "coincide", "Diebel", "Thrun", "-lsb-", "2006", "-rsb-", "compute", "upsampled", "depth", "use", "Markov-Random", "Field", "Park", "et", "al.", "-lsb-", "2011", "-rsb-", "formulate", "depth", "upsampling", "color", "image", "resolution", "optimization", "problem", "enforce", "discontinuity", "similarity", "mention", "earlier", "well", "additional", "regularization", "term", "implement", "above", "heuristic", "through", "filter", "also", "feasible", "-lsb-", "Lindner", "et", "al.", "2007", "-rsb-", "instance", "use", "joint", "bilateral", "upsampling", "-lsb-", "Kopf", "et", "al.", "2007", "-rsb-", "Yang", "et", "al", "-lsb-", "2007", "-rsb-", "create", "cost", "space", "from", "depth", "map", "filter", "joint-bilaterally", "use", "stereo", "image", "raise", "resolution", "similar", "idea", "have", "be", "explore", "joint", "reconstruction", "use", "stereo", "image", "depth", "datum", "where", "photometric", "constraint", "from", "stereo", "can", "exploit", "further", "datum", "refinement", "-lsb-", "Beder", "et", "al.", "2007", "Zhu", "et", "al.", "2008", "gudmundsson", "et", "al.", "2008", "-rsb-", "while", "above", "method", "run", "offline", "variant", "joint-bilateral", "multilateral", "filter", "depth", "upsampling", "can", "run", "real-time", "-lsb-", "Chan", "et", "al.", "2008", "Dolson", "et", "al.", "2010", "Richardt", "et", "al.", "2012", "-rsb-", "result", "however", "merely", "plausible", "metrically", "accurate", "texture-copy", "artifact", "frequently", "occur", "when", "texture", "variation", "mistake", "geometric", "detail", "multi-frame", "superresolution", "technique", "estimate", "higher", "resolution", "depth", "image", "from", "stack", "align", "low", "resolution", "image", "capture", "under", "slight", "lateral", "displacement", "-lsb-", "Cui", "et", "al.", "2013", "-rsb-", "real-time", "computation", "have", "be", "possible", "so", "far", "one", "final", "set", "method", "increase", "resolution", "single", "depth", "image", "offline", "use", "learn", "database", "local", "patch", "-lsb-", "Aodha", "et", "al.", "2012", "-rsb-", "shape-from-shade", "Photometric", "Stereo", "related", "topic", "acquire", "3d", "shape", "object", "use", "shape-from-shading", "-lrb-", "sf", "-rrb-", "where", "naturally", "occur", "intensity", "pattern", "across", "image", "use", "extract", "3d", "geometry", "from", "single", "image", "-lsb-", "Horn", "1975", "Zhang", "et", "al.", "1999", "-rsb-", "mathematics", "sf", "well-understood", "particularly", "when", "surface", "reflectance", "light", "source", "position", "know", "Prados", "Faugeras", "-lsb-", "2005", "-rsb-", "Fanello", "et", "al.", "-lsb-", "2014", "-rsb-", "reconstruct", "various", "object", "include", "face", "use", "controlled", "light", "source", "near", "camera", "center", "Ahmed", "Farag", "-lsb-", "2007", "-rsb-", "demonstrate", "geometry", "estimation", "non-lambertian", "surface", "vary", "illumination", "condition", "make", "strong", "scene", "assumption", "B?hme", "et", "al.", "-lsb-", "2008", "-rsb-", "use", "near", "infrared", "image", "available", "time-of-flight", "-lrb-", "tof", "-rrb-", "camera", "relate", "depth", "intensity", "filter", "however", "unlike", "we", "method", "approach", "limit", "only", "tof", "camera", "collocation", "light", "source", "camera", "run", "offline", "do", "increase", "x/y", "resolution", "image", "recent", "method", "have", "show", "sf", "can", "refine", "coarse", "image-based", "shape", "model", "-lsb-", "Beeler", "et", "al.", "2012", "-rsb-", "even", "be", "capture", "under", "general", "uncontrolled", "lighting", "several", "camera", "-lsb-", "Wu", "et", "al.", "2011", "Wu", "et", "al.", "2013", "-rsb-", "rgb-d", "camera", "-lsb-", "Han", "et", "al.", "2013", "Yu", "et", "al.", "2013", "-rsb-", "end", "illumination", "albedo", "distribution", "well", "refine", "geometry", "find", "via", "inverse", "render", "optimization", "while", "physics", "sf", "well", "know", "problem", "inherently", "ill-posed", "achieve", "compelling", "result", "require", "strong", "scene", "lighting", "assumption", "computationally", "complex", "algorithm", "particularly", "solve", "hard", "inverse", "rendering", "optimization", "real-time", "performance", "have", "rarely", "be", "demonstrate", "have", "lead", "work", "photometric", "stereo", "where", "multiple", "image", "scene", "capture", "under", "different", "controlled", "illumination", "compute", "geometry", "photometric", "stereo", "have", "demonstrate", "compelling", "reconstruction", "surface", "complex", "reflectance", "property", "-lsb-", "Mulligan", "Brolly", "2004", "Hern?ndez", "et", "al.", "2008", "Ghosh", "et", "al.", "2011", "Tunwattanapong", "et", "al.", "2013", "Debevec", "2012", "Bermano", "et", "al.", "2014", "Nehab", "et", "al.", "2005", "-rsb-", "however", "approach", "require", "complex", "control", "lighting", "setup", "which", "available", "many", "standard", "scenario", "more", "data-driven", "approach", "solve", "sf", "problem", "have", "also", "be", "propose", "Barron", "Malik", "-lsb-", "2013b", "-rsb-", "jointly", "solve", "reflectance", "shape", "illumination", "base", "prior", "derive", "statistically", "from", "image", "similar", "concept", "be", "also", "use", "offline", "intrinsic", "image", "decomposition", "rgb-d", "datum", "-lsb-", "Barron", "Malik", "2013a", "-rsb-", "zollh?fer", "et", "al.", "-lsb-", "2014b", "-rsb-", "use", "sf", "fit", "morphable", "face", "model", "rgb", "input", "stream", "we", "approach", "do", "impose", "strong", "prior", "shape", "recovery", "Khan", "et", "al.", "-lsb-", "2009", "-rsb-", "learn", "weighting", "parameter", "complex", "sf", "model", "aid", "facial", "reconstruction", "Wei", "Hirzinger", "-lsb-", "1996", "-rsb-", "use", "deep", "neural", "network", "learn", "aspect", "physical", "model", "sf", "demonstrate", "moderate", "result", "very", "constrain", "scene", "again", "none", "approach", "achieve", "real-time", "performance", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "200", "publication", "date", "November", "2014", "real-time", "shading-based", "refinement", "Consumer", "Depth", "Cameras", "200:3", "figure", "overview", "we", "main", "pipeline", "from", "leave", "right", "input", "we", "algorithm", "noisy", "low", "resolution", "depth", "map", "-lrb-", "-rrb-", "align", "RGB", "image", "-lrb-", "-rrb-", "from", "initial", "estimate", "illumination", "find", "-lrb-", "-rrb-", "subsequently", "albedo", "image", "compute", "-lrb-", "-rrb-", "which", "use", "detect", "albedo", "edge", "map", "-lrb-", "-rrb-", "thereafter", "coarse", "geometry", "refine", "use", "shade", "information", "-lrb-", "-rrb-", "high-dimensional", "non-linear", "optimization", "solve", "use", "new", "gpu-based", "iterative", "gauss-newton", "solver", "overview", "we", "work", "we", "demonstrate", "real-time", "shading-based", "refinement", "rgb-d", "datum", "capture", "general", "scene", "unknown", "timevarying", "lighting", "use", "only", "commodity", "hardware", "achieve", "goal", "we", "reformulate", "complex", "inverse", "problem", "estimate", "illumination", "albedo", "refine", "geometry", "which", "so", "far", "have", "only", "be", "solve", "offline", "highly", "parallelized", "non-linear", "optimization", "problem", "which", "we", "solve", "efficiently", "GPU", "use", "new", "patch-based", "gauss-newton", "solver", "we", "further", "employ", "new", "effective", "approximation", "parameterization", "well", "fast", "geometric", "correspondence", "search", "GPU", "which", "enable", "we", "even", "enforce", "temporal", "prior", "we", "reconstruction", "input", "we", "algorithm", "noisy", "low", "resolution", "depth", "map", "from", "depth", "camera", "align", "RGB", "image", "i.", "unlike", "previous", "offline", "method", "use", "multi-camera", "input", "refine", "full", "3d", "mesh", "we", "rephrase", "shading-based", "refinement", "depth", "map", "enhancement", "process", "we", "solve", "inverse", "rendering", "problem", "use", "effective", "parameterization", "shade", "equation", "-lrb-", "sect", "-rrb-", "from", "coarse", "depth", "RGB", "datum", "initial", "estimate", "illumination", "find", "-lrb-", "Sect", "4.1", "-rrb-", "subsequently", "albedo", "image", "compute", "thereafter", "coarse", "geometry", "refine", "use", "shade", "information", "-lrb-", "sect", "4.2", "-rrb-", "high-dimensional", "non-linear", "optimization", "problem", "depth", "refinement", "solve", "use", "new", "gpu-based", "iterative", "gauss-newton", "solver", "-lrb-", "sect", "-rrb-", "fig.", "highlight", "main", "step", "pipeline", "shading-based", "refinement", "RGB-D", "Data", "real-time", "estimation", "illumination", "refine", "geometry", "necessitate", "efficient", "formulation", "light", "transport", "model", "i.e.", "shade", "equation", "similar", "previous", "offline", "method", "we", "assume", "surface", "scene", "Lambertian", "we", "parameterize", "incident", "lighting", "spherical", "harmonic", "-lrb-", "sh", "-rrb-", "-lsb-", "Wu", "et", "al.", "2011", "-rsb-", "fact", "we", "estimate", "incident", "irradiance", "function", "surface", "normal", "incident", "light", "filter", "cosine", "normal", "lambertian", "reflectance", "incident", "irradiance", "function", "know", "smooth", "can", "represent", "only", "little", "error", "use", "first", "nine", "spherical", "harmonic", "basis", "function", "up", "2nd", "order", "-lsb-", "ramamoorthus", "Hanrahan", "2001", "-rsb-", "previous", "approach", "we", "henceforth", "estimate", "lighting", "from", "grayscale", "version", "thus", "assume", "gray", "lighting", "equal", "value", "each", "RGB", "channel", "some", "step", "full", "rgb", "image", "use", "which", "we", "denote", "unlike", "offline", "multi-view", "method", "we", "employ", "triangulated", "depth", "map", "geometry", "parameterization", "mean", "fixed", "depth", "pixel", "mesh", "vertex", "relation", "we", "can", "express", "reflect", "irradiance", "-lrb-", "-rrb-", "depth", "pixel", "-lrb-", "-rrb-", "normal", "-lrb-", "-rrb-", "albedo", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "where", "nine", "2nd", "order", "spherical", "harmonic", "coefficient", "incident", "illumination", "note", "we", "real-time", "setting", "we", "can", "afford", "local", "visibility", "computation", "so", "illumination", "depend", "only", "normal", "direction", "spherical", "harmonic", "basis", "function", "-lrb-", "-rrb-", "take", "unit", "surface", "normal", "-lrb-", "-rrb-", "input", "evaluate", "1.0", "2n", "solve", "geometry", "lighting", "albedo", "from", "single", "rgbd", "image", "highly", "underconstrained", "during", "light", "estimation", "-lrb-", "sect", "4.1", "-rrb-", "we", "therefore", "initially", "assume", "scene", "have", "uniform", "albedo", "subsequently", "dense", "albedo", "image", "compute", "divide", "rgb", "value", "through", "lighting", "term", "high-frequency", "detail", "depth", "map", "compute", "shading-based", "refinement", "per-pixel", "depth", "value", "-lrb-", "Sect", "4.2", "-rrb-", "unlike", "previous", "sf", "method", "solve", "surface", "normal", "orientation", "we", "directly", "optimize", "depth", "link", "depth", "normal", "only", "computationally", "much", "more", "efficient", "also", "allow", "we", "implicitly", "enforce", "surface", "integrability", "during", "depth", "optimization", "4.1", "Lighting", "Estimation", "illumination", "coefficient", "compute", "minimize", "difference", "between", "render", "image", "-lrb-", "give", "we", "current", "lighting", "estimate", "geometry", "-rrb-", "capture", "RGB", "image", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "i?n", ",1", "j?n", "where", "-lrb-", "-rrb-", "image", "size", "solve", "least-square", "problem", "equivalent", "solve", "follow", "system", "linear", "equation", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "...", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "...", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "i.", "...", "...", "...", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "...", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "surface", "normal", "-lrb-", "-rrb-", "compute", "from", "depth", "map", "after", "apply", "gaussian", "filter", "remove", "noise", "we", "exclude", "pixel", "grazing", "angle", "light", "estimation", "both", "shade", "depth", "unreliable", "region", "we", "detect", "check", "angle", "between", "normal", "view", "direction", "greater", "than", "78", "performance", "reason", "when", "input", "RGB", "image", "resolution", "higher", "than", "640", "480", "we", "downsample", "image", "factor", "three", "lighting", "estimation", "stage", "sh", "lighting", "coefficient", "obtain", "-lrb-", "-rrb-", "i.", "calculation", "we", "use", "parallel", "reduction", "solve", "CPU", "order", "stabilize", "lighting", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "200", "publication", "date", "November", "2014", "200:4", "C.", "Wu", "et", "al.", "Figure", "leave", "Albedo", "estimation", "input", "image", "estimate", "albedo", "map", "right", "spatial", "neighborhood", "geometric", "regularizer", "Figure", "adaptive", "refinement", "help", "reduce", "texture-copy", "artifact", "input", "frame", "-lrb-", "-rrb-", "refine", "texture", "geometry", "shirt", "may", "lead", "erroneous", "detail", "use", "high", "-lrb-", "-rrb-", "low", "-lrb-", "-rrb-", "threshold", "albedo", "edge", "detection", "control", "reduction", "artifact", "estimation", "we", "optionally", "add", "temporal", "prior", "term", "-lrb-", "-rrb-", "Eq", "-lrb-", "-rrb-", "weight", "which", "constrain", "estimate", "lighting", "similar", "lighting", "previous", "frame", "linear", "system", "we", "need", "solve", "follow", "where", "identity", "matrix", "example", "illumination", "environment", "map", "correspond", "show", "fig.", "give", "estimate", "dense", "albedo", "image", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "compute", "GPU", "divide", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "see", "eq", "-lrb-", "-rrb-", "example", "albedo", "image", "show", "fig.", "give", "estimate", "lighting", "albedo", "image", "we", "refine", "coarse", "depth", "through", "second", "error", "minimization", "use", "shade", "cue", "from", "intensity", "image", "previous", "method", "shading-based", "rgbd", "refinement", "-lsb-", "Han", "et", "al.", "2013", "-rsb-", "follow", "traditional", "two-step", "sf", "strategy", "i.e.", "first", "estimate", "normal", "field", "use", "refine", "depth", "normal", "field", "computation", "image", "pixel", "require", "optimize", "energy", "2n", "unknown", "refine", "depth", "base", "normal", "constraint", "mean", "solve", "another", "sparse", "linear", "system", "variable", "achieve", "real-time", "performance", "we", "choose", "more", "efficient", "strategy", "directly", "optimize", "depth", "value", "each", "pixel", "enable", "we", "use", "regular", "image", "structure", "efficient", "parallelism", "we", "optimization", "note", "depend", "camera", "physical", "depth", "resolution", "may", "lower", "than", "RGB", "resolution", "we", "always", "sample", "depth", "color", "same", "higher", "resolution", "obtain", "refined", "depth", "map", "we", "minimize", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "where", "vector", "depth", "value", "shade", "gradient", "constraint", "smoothness", "constraint", "depth", "constraint", "temporal", "smoothness", "prior", "break", "down", "follow", "four", "term", "shade", "gradient", "constraint", "we", "datum", "term", "penalize", "difference", "between", "render", "shade", "gradient", "intensity", "image", "gradient", "-lrb-", "-rrb-", "-lsb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "-rsb-", "-lsb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "-rsb-", "-lrb-", "-rrb-", "gradient-based", "metric", "more", "robust", "against", "inaccuracy", "we", "approximate", "shade", "model", "which", "do", "account", "all", "lighting", "effect", "real", "scene", "order", "evaluate", "shade", "constraint", "w.r.t.", "-lrb-", "-rrb-", "we", "first", "establish", "link", "between", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "3d", "position", "-lrb-", "-rrb-", "-lrb-", "camera", "coordinate", "-rrb-", "depth", "point", "distance", "-lrb-", "-rrb-", "from", "camera", "-lrb-", "-rrb-", "4.2", "shading-based", "Depth", "map", "refinement", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "where", "-lrb-", "-rrb-", "camera?s", "principal", "point", "focal", "length", "direction", "unnormalized", "surface", "normal", "-lrb-", "-rrb-", "can", "compute", "from", "3d", "point", "neighbor", "depth", "pixel", "-lrb-", "fig.", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "after", "substitute", "eq", "-lrb-", "-rrb-", "evaluate", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "10", "-rrb-", "smoothness", "constraint", "shading-based", "refinement", "from", "single", "image", "ill-posed", "we", "employ", "geometric", "regularization", "constrain", "solution", "we", "enforce", "laplacian", "smoothness", "constraint", "each", "pixel", "which", "compute", "11", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "11", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "where", "0.25", "Graph", "Laplacian", "weight", "1-ring", "neighborhood", "regular", "image", "triangle", "grid", "-lrb-", "fig.", "-rrb-", "-lrb-", "-rrb-", "compute", "accord", "eq", "-lrb-", "-rrb-", "fig.", "show", "neighborhood", "geometric", "regularizer", "depth", "constraint", "we", "also", "define", "depth", "constraint", "which", "enforce", "refined", "depth", "stay", "close", "initial", "depth", "before", "refinement", "12", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "temporal", "constraint", "reduce", "temporal", "aliasing", "we", "reconstruction", "static", "scene", "we", "employ", "temporal", "constraint", "stabilize", "refined", "depth", "use", "normal", "from", "previous", "frame", "constrain", "depth", "current", "frame", "define", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "-rrb-", "13", "-lrb-", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "-rrb-", "-lrb-", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "-rrb-", "where", "refine", "normal", "previous", "frame", "-lrb-", "-rrb-", "pixel", "previous", "frame", "correspond", "pixel", "-lrb-", "-rrb-", "current", "frame", "unlike", "offline", "model-based", "reconstruction", "approach", "where", "pixel", "correspondence", "implicitly", "give", "through", "track", "template", "-lsb-", "Wu", "et", "al.", "2013", "-rsb-", "we", "correspondence", "-lrb-", "-rrb-", "compute", "use", "gpu-based", "iterative", "closest", "point", "-lrb-", "icp", "-rrb-", "-lsb-", "Besl", "McKay", "1992", "-rsb-", "alignment", "between", "current", "previous", "depth", "map", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "200", "publication", "date", "November", "2014", "real-time", "shading-based", "refinement", "Consumer", "Depth", "Cameras", "200:5", "4.3", "adaptive", "refinement", "we", "image", "formation", "model", "have", "take", "albedo", "variation", "account", "we", "method", "may", "interpret", "albedo", "change", "shade", "variation", "produce", "artificial", "detail", "around", "albedo", "boundary", "order", "reduce", "texture-copy", "artifact", "we", "modify", "we", "shade", "energy", "term", "eq", "-lrb-", "-rrb-", "weight", "binary", "mask", "which", "decide", "corresponding", "image", "gradient", "come", "from", "shade", "variation", "albedo", "change", "so", "modify", "shading", "energy", "define", "-lrb-", "-rrb-", "ij", "-lsb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "-rsb-", "ij", "-lsb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "-rsb-", "-lrb-", "14", "-rrb-", "where", "ij", "ij", "-lcb-", "-rcb-", "binary", "weight", "each", "row", "column", "which", "set", "zero", "albedo", "boundary", "edge", "albedo", "change", "usually", "result", "large", "difference", "RGB", "color", "space", "-lsb-", "Horn", "1974", "-rsb-", "therefore", "we", "detect", "apply", "user-defined", "threshold", "edge", "map", "compute", "albedo", "image", "fig.", "show", "example", "how", "strategy", "can", "reduce", "texture-copy", "artifact", "vary", "threshold", "shade", "constraint", "reliable", "along", "silhouette", "we", "also", "search", "depth", "discontinuity", "set", "corresponding", "weight", "zero", "solve", "non-linear", "energy", "-lrb-", "eq", "-rrb-", "its", "high", "number", "unknown", "real-time", "challenge", "next", "section", "we", "describe", "how", "solve", "optimization", "use", "novel", "gpu-based", "gaussnewton", "solver", "work", "patch", "subdivision", "image", "space", "parallel", "Energy", "Minimization", "we", "refinement", "energy", "-lrb-", "-rrb-", "-lrb-", "eq", "-rrb-", "non-linear", "give", "image", "formation", "model", "its", "dependence", "orientation", "surface", "normal", "we", "use", "row-major", "order", "pixel", "depth", "image", "target", "resolution", "obtain", "parameter", "vector", "unknown", "per-pixel", "depth", "value", "follow", "15", "...", "-lrb-", "-rrb-", "...", "even", "moderate", "resolution", "objective", "have", "considerable", "amount", "parameter", "-lrb-", "i.e.", "307k", "resolution", "640", "480", "-rrb-", "optimize", "non-linear", "objective", "high", "number", "unknown", "real-time", "rate", "we", "exploit", "massively", "parallel", "architecture", "modern", "gpus", "minimize", "respect", "unknown", "parameter", "non-linear", "least", "square", "problem", "can", "rewrite", "16", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "total", "number", "-lrb-", "9n", "-rrb-", "residual", "term", "depend", "shade", "gradient", "-lrb-", "2n", "term", "-rrb-", "depth", "-lrb-", "term", "-rrb-", "temporal", "-lrb-", "3n", "term", "-rrb-", "smoothness", "constraint", "-lrb-", "3n", "term", "-rrb-", "next", "section", "describe", "we", "efficient", "parallel", "patch-based", "gauss-newton", "solver", "allow", "we", "minimize", "energy", "more", "than", "500,000", "parameter", "real-time", "rate", "we", "reformulate", "we", "objective", "term", "its", "residual", "vector", "obtain", "classical", "Gauss-Newton", "form", "17", "17", "refine", "depth", "value", "compute", "minimize", "5.1", "parallel", "Gauss-Newton", "Solver", "we", "reformulate", "we", "objective", "term", "its", "residual", "vector", "obtain", "classical", "Gauss-Newton", "form", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "...", "-lrb-", "-rrb-", "-lrb-", "17", "-rrb-", "5.2", "patch-wise", "Optimization", "Refined", "depth", "value", "compute", "minimize", "argmin", "-lrb-", "-rrb-", "figure", "solve", "we", "problem", "efficiently", "we", "subdivide", "we", "domain", "patch", "-lrb-", "left", "-rrb-", "each", "patch", "optimize", "locally", "which", "require", "two-pixel", "wide", "boundary", "-lrb-", "center", "-rrb-", "we", "can", "further", "optimize", "procedure", "only", "process", "patch", "foreground", "information", "-lrb-", "right", "-rrb-", "Figure", "each", "patch", "thread", "block", "start", "many", "thread", "patch", "have", "pixel", "first", "all", "thread", "read", "patch", "datum", "include", "two-pixel", "size", "boundary", "share", "memory", "we", "perform", "multiple", "pcg", "step", "within", "share", "memory", "write", "result", "back", "global", "memory", "explicit", "linearization", "vector", "field", "-lrb-", "-rrb-", "use", "Taylor", "expansion", "yield", "18", "-lrb-", "+1", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "+1", "-lrb-", "-rrb-", "Jacobian", "evaluate", "solution", "after", "iteration", "result", "optimization", "problem", "linear", "least", "square", "problem", "argmin", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "unknown", "optimal", "update", "we", "compute", "solution", "corresponding", "normal", "equation", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "can", "solve", "jointly", "complete", "domain", "use", "iterative", "solution", "technique", "like", "preconditioned", "conjugate", "gradient", "-lrb-", "pcg", "-rrb-", "previous", "work", "-lsb-", "Weber", "et", "al.", "2013", "Zollh?fer", "et", "al.", "2014a", "-rsb-", "demonstrate", "feasibility", "strategy", "GPU", "optimization", "framework", "dynamics", "simulation", "non-rigid", "registration", "respectively", "one", "important", "observation", "switch", "kernel", "have", "significant", "impact", "performance", "aforementioned", "method", "optimize", "require", "kernel", "call", "initialization", "3-4", "kernel", "call", "inner", "pcg", "loop", "depend", "whether", "system", "matrix", "explicitly", "evaluate", "sequentially", "apply", "result", "even", "several", "thousand", "variable", "optimization", "problem", "can", "solve", "interactive", "rate", "however", "we", "problem", "we", "should", "able", "optimize", "more", "than", "half", "million", "value", "real", "time", "which", "possible", "approach", "solve", "we", "develop", "approach", "can", "cope", "larger", "number", "variable", "exploit", "implicit", "topology", "depth", "mesh", "we", "error", "term", "computation", "single", "pixel", "only", "depend", "image", "neighborhood", "thus", "we", "can", "subdivide", "domain", "square", "patch", "-lrb-", "cp", "fig.", "-rrb-", "perform", "optimization", "patchwise", "use", "variant", "Schwarz", "Alternating", "Procedure", "optimization", "single", "patch", "happen", "per", "thread", "block", "where", "all", "datum", "can", "keep", "shared", "GPU", "memory", "procedure", "exploit", "locality", "optimization", "constraint", "uniform", "tessellation", "optimization", "domain", "scale", "well", "higher", "number", "unknown", "reduce", "kernel", "call", "overhead", "global", "memory", "access", "exploit", "fast", "shared", "memory", "optimization", "domain", "-lrb-", "see", "Fig.", "-rrb-", "partition", "small", "rectangular", "sub-region", "-lrb-", "patch", "-rrb-", "linear", "system", "correspond", "sub-region", "-lrb-", "without", "boundary", "-rrb-", "solve", "independently", "impose", "Neumann", "constraint", "boundary", "??", "able", "perform", "all", "computation", "share", "memory", "include", "shade", "gradient", "energy", "smoothness", "energy", "we", "additionally", "have", "read", "two-pixel", "wide", "depth", "datum", "each", "patch", "boundary", "so", "computation", "can", "efficiently", "perform", "from", "local", "datum", "optimization", "only", "happen", "inner", "variable", "boundary", "value", "remain", "unchanged", "each", "Schwarz", "iteration", "inner", "boundary", "variable", "patch", "first", "read", "store", "share", "memory", "inner", "variable", "optimize", "keep", "boundary", "value", "fix", "finally", "inner", "variable", "write", "back", "global", "memory", "decouple", "patch", "split", "set", "parameter", "unconstrained", "inner", "-lrb-", "-rrb-", "constrain", "boundary", "-lrb-", "-rrb-", "variable", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "200", "publication", "date", "November", "2014", "200:6", "C.", "Wu", "et", "al.", "5.3", "patch-based", "Preconditioned", "Conjugate", "Gradient", "since", "boundary", "variable", "consider", "fix", "corresponding", "block", "entry", "can", "move", "right-hand", "side", "each", "local", "sub-problem", "sub-region", "-lrb-", "patch", "-rrb-", "assign", "one", "thread", "block", "solve", "parallel", "use", "one", "thread", "per", "variable", "patch", "size", "set", "base", "GPU", "l-1", "cache", "thus", "we", "hardware", "setup", "we", "use", "16", "16", "patch", "include", "boundary", "value", "result", "20", "20", "grid", "have", "keep", "share", "memory", "per-patch", "problem", "solve", "use", "iterative", "pcg", "solver", "which", "explain", "next", "section", "process", "repeat", "time", "until", "convergence", "entire", "algorithm", "show", "pseudocode", "algorithm", "illustrate", "Fig.", "note", "Gauss-Newton", "Schwarz", "iteration", "happen", "concurrently", "after", "each", "Schwarz", "iteration", "we", "also", "apply", "delta", "update", "so", "each", "Schwarz", "iteration", "step", "implicitly", "perform", "gauss-newton", "step", "do", "incur", "any", "additional", "computation", "because", "pcg", "solver", "have", "re-evaluate", "Jacobian", "residual", "anyway", "result", "faster", "convergence", "fig.", "show", "convergence", "behavior", "depend", "number", "pcg", "step", "figure", "we", "use", "20", "outer", "GaussNewton/Schwarz", "iteration", "10", "inner", "pcg", "iteration", "10", "we", "observe", "further", "improvement", "note", "we", "use", "synchronization", "when", "write", "depth", "value", "result", "some", "patch", "might", "already", "read", "update", "boundary", "value", "which", "lead", "mixture", "multiplicative", "additive", "Schwarz", "term", "convergence", "problem", "however", "approach", "become", "non-deterministic", "other", "hand", "avoid", "synchronization", "improve", "performance", "we", "shift", "initial", "patch", "grid", "each", "iteration", "sub-patch", "step", "base", "Halton", "sequence", "improve", "convergence", "avoid", "patch", "structure", "from", "become", "visible", "solution", "algorithm", "share", "memory", "pcg", "Kernel", "...", "do", "all", "patch", "parallel", "do", "Fetch", "Data", "share", "memory", "-lrb-", "-rrb-", "compute", "RHS", "Preconditioner", "-lrb-", "-rrb-", "...", "do", "PCG", "step", "-lrb-", "-rrb-", "end", "Write", "result", "global", "memory", "-lrb-", "-rrb-", "end", "end", "figure", "convergence", "we", "optimization", "procedure", "20", "10", "four", "successive", "rgb-d", "image", "640", "480", "pixel", "abscissa", "show", "outer", "iteration", "per", "patch", "we", "solve", "result", "linear", "optimization", "problem", "use", "fast", "shared", "memory", "pcg", "solver", "all", "per-patch", "pcg", "correspond", "one", "Schwarz", "iteration", "launch", "single", "kernel", "call", "can", "see", "algorithm", "include", "shared", "memory", "initialization", "well", "run", "pcg", "iteration", "write", "back", "local", "patch", "result", "global", "memory", "pcg", "solver", "we", "use", "simple", "Jacobi", "preconditioner", "can", "readily", "parallelize", "we", "exploit", "memory", "hierarchy", "cache", "all", "per-pixel", "datum", "register", "load", "all", "datum", "have", "access", "neighbor", "thread", "share", "memory", "each", "pcg", "iteration", "per-patch", "scalar", "product", "require", "which", "we", "use", "fast", "block", "reduction", "share", "memory", "exclude", "block", "reduction", "inner", "pcg", "loop", "require", "synchronization", "point", "system", "matrix", "apply", "efficiently", "on-the-fly", "each", "pcg", "step", "optimize", "kernel", "exploit", "sparsity", "J.", "5.4", "hierarchical", "Optimization", "Strategy", "we", "run", "propose", "rgb-d", "shading-based", "refinement", "strategy", "hierarchical", "coarse-to-fine", "manner", "allow", "faster", "convergence", "we", "method", "end", "we", "build", "image", "pyramid", "successively", "restrict", "input", "rgb-d", "datum", "coarser", "level", "after", "we", "sweep", "from", "coarse-to-fine", "-lrb-", "nested", "iteration", "-rrb-", "through", "hierarchy", "alternate", "between", "we", "patch-based", "gauss-newton", "solver", "apply", "prolongation", "operator", "prolongation", "restriction", "we", "use", "bi-linear", "interpolation", "sample", "currently", "we", "use", "hierarchy", "three", "level", "5.5", "Foreground", "Segmentation", "aside", "from", "refinement", "complete", "depth", "map", "we", "perform", "we", "optimization", "only", "block", "contain", "foreground", "pixel", "-lrb-", "cp", "fig.", "-rrb-", "base", "input", "depth", "we", "mark", "all", "patch", "contain", "foreground", "pixel", "compute", "linear", "order", "use", "fast", "prefix", "sum", "execute", "refinement", "only", "foreground", "block", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "200", "publication", "date", "November", "2014", "real-time", "shading-based", "refinement", "Consumer", "Depth", "Cameras", "200:7", "sequence", "Camera", "Resolution", "Foreground", "#Variables", "Preprocess", "Light", "Est.", "refinement", "Augustus", "PrimeSense", "1280", "1024", "yes", "525k", "7.0", "m", "2.5", "m", "26.4", "m", "35.9", "m", "Face", "PrimeSense", "1280", "1024", "yes", "245k", "7.1", "m", "2.3", "m", "13.7", "m", "23.1", "m", "body", "PrimeSense", "1280", "1024", "yes", "500k", "6.9", "m", "2.4", "m", "25.6", "m", "34.9", "m", "talk", "Asus", "640", "480", "307k", "2.4", "m", "1.1", "m", "14.4", "m", "17.9", "m", "Vase", "Asus", "640", "480", "yes", "140k", "2.6", "m", "1.0", "m", "7.2", "m", "10.8", "m", "Lucy", "PrimeSense", "640", "480", "307k", "2.3", "m", "1.2", "m", "14.5", "m", "18.0", "m", "Flower", "KinectOne", "1920", "1080", "yes", "880k", "19.5", "m", "3.7", "m", "43.2", "m", "66.4", "m", "Socrates", "Asus", "640", "480", "yes", "107k", "2.5", "m", "0.9", "m", "6.2", "m", "9.6", "m", "Upper", "Body", "PrimeSense", "1280", "1024", "yes", "510k", "6.8", "m", "2.5", "m", "25.8", "m", "35.0", "m", "sequence", "Camera", "Resolution", "Foreground", "#Variables", "Preprocess", "Light", "Est.", "refinement", "Augustus", "PrimeSense", "1280", "1024", "yes", "525k", "7.0", "m", "2.5", "m", "26.4", "m", "35.9", "m", "Face", "PrimeSense", "1280", "1024", "yes", "245k", "7.1", "m", "2.3", "m", "13.7", "m", "23.1", "m", "body", "PrimeSense", "1280", "1024", "yes", "500k", "6.9", "m", "2.4", "m", "25.6", "m", "34.9", "m", "talk", "Asus", "640", "480", "307k", "2.4", "m", "1.1", "m", "14.4", "m", "17.9", "m", "Vase", "Asus", "640", "480", "yes", "140k", "2.6", "m", "1.0", "m", "7.2", "m", "10.8", "m", "Lucy", "PrimeSense", "640", "480", "307k", "2.3", "m", "1.2", "m", "14.5", "m", "18.0", "m", "Flower", "KinectOne", "1920", "1080", "yes", "880k", "19.5", "m", "3.7", "m", "43.2", "m", "66.4", "m", "Socrates", "Asus", "640", "480", "yes", "107k", "2.5", "m", "0.9", "m", "6.2", "m", "9.6", "m", "Upper", "Body", "PrimeSense", "1280", "1024", "yes", "510k", "6.8", "m", "2.5", "m", "25.8", "m", "35.0", "m", "Table", "overview", "test", "sequence", "parameter", "achieve", "performance", "see", "Sec", "detail", "effective", "frame", "rate", "we", "algorithm", "thus", "range", "from", "15", "fp", "full", "hd", "93", "fp", "SVGA", "result", "we", "test", "we", "real-time", "enhancement", "software", "datum", "from", "PrimeSense", "Carmine", "1.09", "short", "Range", "-lrb-", "RGB", "re", "1280", "1024", "depth", "re", "640", "480", "framerate", "12", "fp", "-rrb-", "Kinect", "one", "-lrb-", "rgb", "re", "1920", "1080", "depth", "re", "512", "424", "frame", "rate", "30", "fp", "-rrb-", "well", "Asus", "Xtion", "pro", "-lrb-", "RGB", "re", "640", "480", "depth", "re", "640", "480", "framerate", "30", "fp", "-rrb-", "camera", "since", "video", "RGB", "datum", "frame", "synchronize", "Kinect", "one", "camera", "need", "move", "slowly", "order", "prevent", "artifact", "we", "approach", "run", "real-time", "rate", "excess", "30", "fp", "both", "static", "dynamic", "scene", "all", "rgb-d", "sensor", "significant", "enhancement", "detail", "compare", "raw", "depth", "datum", "achieve", "see", "Fig.", "12", "fig.", "supplemental", "video", "document", "which", "show", "screen", "capture", "visualization", "reconstruction", "before", "after", "refinement", "total", "qualitative", "test", "be", "do", "scene", "see", "Tab", "we", "always", "enable", "prior", "term", "lighting", "estimation", "set", "10", "we", "set", "empirically", "find", "weight", "depth", "refinement", "follow", "400", "10", "100", "all", "static", "scene", "100", "10", "all", "dynamic", "scene", "please", "refer", "Tab", "detail", "sequence", "timing", "individual", "step", "measure", "Intel", "Core", "i7-3770", "cpu", "3.4", "ghz", "-lrb-", "16gb", "Ram", "-rrb-", "Nvidia", "Geforce", "GTX", "780", "list", "preprocessing", "step", "include", "depth-to-color", "alignment", "filter", "depth", "color", "resampling", "image", "foreground", "segmentation", "those", "result", "gauss-newton", "optimizer", "run", "follow", "parameter", "hierarchy", "level", "10", "outer", "iteration", "pcg", "iteration", "-lrb-", "coarse-to-fine", "-rrb-", "we", "enable", "temporal", "smoothness", "prior", "term", "capture", "static", "scene", "i.e.", "vase", "sequence", "Lucy", "sequence", "Socrates", "sequence", "require", "icp", "alignment", "add", "3.5", "m", "three", "sequence", "total", "computation", "time", "yield", "effective", "frame", "rate", "between", "15", "fp", "full", "hd", "93", "fp", "SVGA", "6.1", "evaluation", "quantitative", "evaluation", "we", "quantitatively", "evaluate", "accuracy", "we", "method", "two", "synthetic", "sequence", "400", "frame", "long", "we", "use", "ground", "truth", "detailed", "performance-captured", "face", "geometry", "-lsb-", "valgaert", "et", "al.", "2012", "-rsb-", "ground", "truth", "lighting", "from", "St.", "Peter?s", "basilica", "-lsb-", "Debevec", "1998", "-rsb-", "render", "two", "rgb-d", "sequence", "first", "one", "-lrb-", "coa", "-rrb-", "albedo", "uniform", "second", "one", "-lrb-", "da", "-rrb-", "we", "use", "dense", "albedo", "map", "obtain", "from", "one", "capture", "face", "image", "synthesize", "depth", "map", "sequence", "we", "first", "obtain", "quantize", "depth", "map", "from", "stereo", "result", "-lsb-", "Valgaerts", "et", "al.", "2012", "-rsb-", "add", "gaussian", "noise", "mimic", "noise", "from", "depth", "sensor", "we", "compare", "we", "method", "space-time", "multi-lateral", "rgbd", "filter", "method", "-lsb-", "Richardt", "et", "al.", "2012", "-rsb-", "-lrb-", "stfilt", "-rrb-", "reconstruction", "coa", "da", "use", "single-frame", "shade", "base", "refinement", "algorithm", "offline", "method", "-lsb-", "Valgaerts", "et", "al.", "2012", "-rsb-", "-lrb-", "sbrol", "-rrb-", "error", "metric", "we", "employ", "average", "pixel-wise", "euclidean", "distance", "mm", "per", "frame", "-lrb-", "-rrb-", "well", "average", "angular", "difference", "normal", "degree", "-lrb-", "-rrb-", "distance", "normal", "error", "average", "over", "all", "frame", "summarize", "Tab", "compare", "stfilt", "we", "method", "produce", "result", "much", "lower", "distance", "normal", "error", "obtain", "metrically", "faithful", "reconstruction", "oppose", "only", "plausible", "result", "-lrb-", "see", "Fig.", "-rrb-", "comparison", "more", "involved", "offline", "method", "-lsb-", "Valgaerts", "et", "al.", "2012", "-rsb-", "we", "result", "exhibit", "comparable", "distance", "error", "we", "real-time", "capability", "come", "price", "slightly", "higher", "error", "reconstruct", "normal", "orientation", "respective", "error", "curve", "over", "time", "both", "DA", "-lrb-", "Fig.", "-rrb-", "coa", "-lrb-", "additional", "material", "-rrb-", "further", "confirm", "above", "conclusion", "qualitative", "comparison", "we", "also", "compare", "we", "method", "stfilt", "real-world", "datum", "-lrb-", "talk", "sequence", "see", "Tab", "-rrb-", "use", "same", "hardware", "previously", "describe", "we", "approach", "only", "have", "runtime", "advantage", "-lrb-", "55.8", "fp", "against", "8.5", "fp", "-rrb-", "also", "produce", "much", "more", "detailed", "result", "-lrb-", "see", "Fig.", "10", "video", "-rrb-", "Figure", "evaluation", "one", "frame", "synthetic", "coa", "sequence", "-lrb-", "-rrb-", "we", "result", "-lrb-", "-rrb-", "result", "stfilt", "-lsb-", "Richardt", "et", "al.", "2012", "-rsb-", "-lrb-", "-rrb-", "result", "sbrol", "-lsb-", "valgaert", "et", "al.", "2012", "-rsb-", "-lrb-", "-rrb-", "distance", "error", "heat", "map", "we", "result", "-lrb-", "red", "high", "-rrb-", "-lrb-", "-rrb-", "much", "higher", "error", "stfilt", "-lrb-", "-rrb-", "offline", "sbrol", "method", "similar", "error", "ours", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "200", "publication", "date", "November", "2014", "200:8", "C.", "Wu", "et", "al.", "Seq.", "coa", "da", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "Ours", "0.43", "-lrb-", "0.24", "-rrb-", "5.75", "-lrb-", "5.31", "-rrb-", "0.43", "-lrb-", "0.23", "-rrb-", "7.08", "-lrb-", "6.31", "-rrb-", "stfilt", "1.41", "-lrb-", "1.02", "-rrb-", "10.32", "-lrb-", "11.22", "-rrb-", "1.36", "-lrb-", "0.99", "-rrb-", "10.28", "-lrb-", "10.65", "-rrb-", "sbrol", "0.43", "-lrb-", "0.27", "-rrb-", "5.26", "-lrb-", "4.85", "-rrb-", "0.42", "-lrb-", "0.22", "-rrb-", "6.94", "-lrb-", "5.76", "-rrb-", "Seq.", "coa", "da", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "Ours", "0.43", "-lrb-", "0.24", "-rrb-", "5.75", "-lrb-", "5.31", "-rrb-", "0.43", "-lrb-", "0.23", "-rrb-", "7.08", "-lrb-", "6.31", "-rrb-", "stfilt", "1.41", "-lrb-", "1.02", "-rrb-", "10.32", "-lrb-", "11.22", "-rrb-", "1.36", "-lrb-", "0.99", "-rrb-", "10.28", "-lrb-", "10.65", "-rrb-", "sbrol", "0.43", "-lrb-", "0.27", "-rrb-", "5.26", "-lrb-", "4.85", "-rrb-", "0.42", "-lrb-", "0.22", "-rrb-", "6.94", "-lrb-", "5.76", "-rrb-", "Table", "quantitative", "comparison", "against", "related", "method", "we", "online", "approach", "perform", "significantly", "better", "term", "distance", "normal", "error", "-lrb-", "stddv", "bracket", "-rrb-", "than", "compete", "state-of-the-art", "online", "method", "-lrb-", "stfilt", "-lsb-", "Richardt", "et", "al.", "2012", "-rsb-", "-rrb-", "even", "come", "close", "offline", "shading-based", "refinement", "method", "-lrb-", "sbrol", "-lsb-", "valgaert", "et", "al.", "2012", "-rsb-", "-rrb-", "Figure", "Distance", "normal", "error", "synthetic", "sequence", "da", "over", "all", "frame", "we", "method", "rgb-d", "upsampling", "method", "stfilt", "-lsb-", "Richardt", "et", "al.", "2012", "-rsb-", "offline", "approach", "sbrol", "-lsb-", "valgaert", "et", "al.", "2012", "-rsb-", "6.2", "application", "real-time", "3d", "reconstruction", "we", "use", "we", "algorithm", "together", "real-time", "voxel-hashing-based", "hand-held", "scanning", "approach", "depth", "camera", "propose", "-lsb-", "nie?ner", "et", "al.", "2013", "-rsb-", "we", "drastically", "enhance", "depth", "map", "quality", "full", "3d", "model", "more", "detail", "can", "reconstruct", "-lrb-", "voxel", "size", "0.5", "mm", "-rrb-", "see", "fig.", "Fig.", "11", "deformable", "3d", "reconstruction", "we", "also", "integrate", "we", "algorithm", "real-time", "deformable", "tracking", "approach", "-lsb-", "zollh?fer", "et", "al.", "2014a", "-rsb-", "which", "lead", "improve", "space-time", "coherent", "reconstruction", "non-rigidly", "deform", "template", "see", "Fig.", "13", "6.3", "Limitations", "we", "approach", "enable", "leap", "forward", "real-time", "scene", "reconstruction", "depth", "camera", "still", "subject", "several", "well-known", "shape", "from", "shade", "limitation", "instance", "texture-copy", "artifact", "introduce", "high-frequency", "albedo", "change", "cause", "problem", "both", "online", "offline", "method", "-lsb-", "Richardt", "et", "al.", "2012", "Han", "et", "al.", "2013", "Yu", "et", "al.", "2013", "-rsb-", "we", "adaptive", "refinement", "-lrb-", "sect", "4.2", "-rrb-", "efficient", "mitigate", "visual", "presence", "artifact", "however", "we", "still", "can", "completely", "prevent", "they", "instance", "see", "fig.", "Fig.", "12", "-lrb-", "top", "left", "-rrb-", "generally", "we", "believe", "underconstrained", "nature", "Figure", "10", "real-datum", "we", "approach", "-lrb-", "right", "-rrb-", "generate", "more", "detailed", "result", "higher", "frame", "rate", "than", "stfilt", "-lsb-", "Richardt", "et", "al.", "2012", "-rsb-", "-lrb-", "middle", "-rrb-", "Figure", "11", "we", "enhance", "depth", "map", "use", "voxel-hashingbased", "framework", "-lsb-", "nie?ner", "et", "al.", "2013", "-rsb-", "reconstruction", "-lrb-", "white", "-rrb-", "without", "-lrb-", "blue", "-rrb-", "refinement", "problem", "inspire", "future", "research", "direction", "contrast", "some", "offline", "method", "we", "real-time", "constraint", "allow", "only", "simplify", "light", "transport", "model", "we", "initial", "constant", "albedo", "assumption", "may", "exacerbate", "texture", "copying", "general", "scene", "however", "we", "result", "show", "practice", "very", "faithful", "surface", "reconstruction", "spatially-varying", "albedo", "feasible", "due", "second", "order", "spherical", "harmonic", "representation", "non-diffuse", "surface", "still", "challenge", "we", "method", "addition", "we", "able", "improve", "depth", "map", "around", "silhouette", "since", "normal", "undefined", "we", "further", "assume", "one-bounce", "local", "illumination", "ignore", "lighting", "visibility", "which", "may", "lead", "error", "some", "case", "example", "hard", "shadow", "may", "result", "artificial", "detail", "around", "boundary", "interesting", "future", "direction", "would", "incorporation", "screen-space", "ambient", "occlusion", "term", "account", "local", "visibility", "conclusion", "we", "present", "first", "method", "real-time", "shading-based", "refinement", "rgb-d", "datum", "capture", "commodity", "depth", "camera", "general", "uncontrolled", "scene", "enable", "new", "real-time", "inverse", "rendering", "framework", "approximate", "time-varying", "incident", "lighting", "well", "albedo", "scene", "algorithm", "refine", "raw", "depth", "camera", "optimize", "complex", "non-linear", "energy", "use", "new", "highly", "parallel", "Gauss-Newton", "solver", "GPU", "result", "superior", "previous", "online", "depth", "map", "enhancement", "algorithm", "par", "offline", "shape-from-shading", "approach", "we", "experiment", "further", "show", "approach", "enable", "new", "level", "accuracy", "handheld", "3d", "scanning", "well", "deformable", "surface", "tracking", "acknowledgement", "research", "co-fund", "German", "Research", "Foundation", "-lrb-", "DFG", "-rrb-", "grant", "grk-1773", "heterogeneous", "image", "Systems", "ERC", "start", "Grant", "335545", "CapReal", "Max", "Planck", "Center", "Visual", "Computing", "Communication", "we", "would", "also", "like", "thank", "Angela", "Dai", "video", "voice", "over", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "200", "publication", "date", "November", "2014", "real-time", "shading-based", "refinement", "Consumer", "Depth", "Cameras", "200:9", "Figure", "12", "from", "raw", "depth", "map", "align", "RGB", "image", "we", "approach", "generate", "rich", "detail", "real-world", "datum", "we", "method", "capture", "far", "more", "detail", "than", "raw", "depth", "map", "static", "scene", "i.e.", "Socrates", "sequence", "Lucy", "sequence", "Flower", "sequence", "besides", "we", "per-frame", "refinement", "method", "can", "readily", "apply", "dynamic", "scene", "e.g.", "human", "performance", "show", "body", "sequence", "Upper", "body", "sequence", "closeup", "scarf", "region", "demonstrate", "amount", "small-scale", "detail", "capture", "we", "method", "Figure", "13", "we", "enhance", "depth", "map", "-lrb-", "middle", "gray", "-rrb-", "use", "non-rigid", "tracking", "framework", "-lsb-", "zollh?fer", "et", "al.", "2014a", "-rsb-", "note", "increase", "amount", "small-scale", "detail", "reconstruction", "-lrb-", "middle", "blue", "-rrb-", "reference", "hmed", "a.", "H.", "arag", "a.", "A.", "2007", "shape", "from", "shade", "under", "various", "imaging", "condition", "Proc", "CVPR", "odha", "O.", "M.", "AMPBELL", "N.", "D.", "F.", "AIR", "a.", "rostow", "G.", "J.", "2012", "Patch", "base", "synthesis", "single", "depth", "image", "superresolution", "Proc", "eccv", "71", "84", "ARRON", "J.", "T.", "ALIK", "J.", "2013", "intrinsic", "scene", "property", "from", "single", "rgb-d", "image", "Proc", "CVPR", "IEEE", "17", "24", "ARRON", "J.", "T.", "ALIK", "J.", "2013", "shape", "illumination", "reflectance", "from", "shade", "Tech", "rep.", "eec", "uc", "Berkeley", "May", "eder", "C.", "ARTCZAK", "B.", "OCH", "R.", "2007", "combined", "approach", "estimate", "patchlet", "from", "pmd", "depth", "image", "stereo", "intensity", "image", "Proc", "DAGM", "11", "20", "eeler", "T.", "ICKEL", "B.", "EARDSLEY", "P.", "umner", "B.", "ross", "M.", "2010", "high-quality", "single-shot", "capture", "facial", "geometry", "Proc", "SIGGRAPH", "29", "eeler", "T.", "RADLEY", "D.", "IMMER", "H.", "ross", "M.", "2012", "improve", "reconstruction", "deform", "surface", "cancel", "ambient", "occlusion", "Proc", "eccv", "30", "43", "ermano", "a.", "radley", "D.", "UND", "T.", "B.", "F.", "OWROUZEZAHRAI", "D.", "ARAN", "I.", "orkine", "ornung", "O.", "fister", "H.", "umner", "R.", "ICKEL", "B.", "ross", "M.", "2014", "facial", "performance", "enhancement", "use", "dynamic", "shape", "space", "analysis", "ACM", "transaction", "Graphics", "33", "appear", "ESL", "P.", "J.", "ay", "N.", "D.", "1992", "method", "registration", "3-d", "shape", "robotics-dl", "tentative", "International", "Society", "Optics", "Photonics", "586", "606", "ohme", "M.", "AKER", "M.", "ARTINETZ", "T.", "ARTH", "E.", "2008", "shade", "constraint", "improve", "accuracy", "time-of-flight", "measurement", "Proc", "CVPR", "Workshop", "HAN", "D.", "UISMAN", "H.", "heobalt", "C.", "hrun", "S.", "2008", "noise-aware", "filter", "real-time", "depth", "upsampling", "ECCV", "Workshop", "multi-camera", "multi-modal", "sensor", "fusion", "uus", "Y.", "CHUON", "S.", "hrun", "S.", "tricker", "D.", "heobalt", "C.", "2013", "algorithm", "3d", "shape", "scanning", "depth", "camera", "IEEE", "Trans", "PAMI", "35", "1039", "1050", "ebevec", "P.", "1998", "render", "synthetic", "object", "real", "scene", "bridge", "traditional", "image-based", "graphic", "global", "illumination", "high", "dynamic", "range", "photography", "Proc", "SIGGRAPH", "189", "198", "ebevec", "P.", "2012", "light", "stage", "application", "photoreal", "digital", "actor", "SIGGRAPH", "Asia", "Technical", "Briefs", "iebel", "J.", "hrun", "S.", "2006", "application", "Markov", "Random", "Fields", "range", "sense", "Proc", "nip", "291", "298", "olson", "J.", "AEK", "J.", "lagemann", "C.", "hrun", "S.", "2010", "upsample", "range", "datum", "dynamic", "environment", "Proc", "cvpr", "ANELLO", "S.", "ESKIN", "C.", "ZADI", "S.", "OHLI", "P.", "ET", "AL", "2014", "learn", "depth", "camera", "close-range", "human", "capture", "interaction", "ACM", "Trans", "graph", "33", "hosh", "a.", "yffe", "G.", "unwattanapong", "B.", "USCH", "J.", "X.", "EBEVEC", "P.", "2011", "multiview", "face", "capture", "use", "polarize", "spherical", "gradient", "illumination", "ACM", "Trans", "graph", "30", "udmundsson", "S.", "A.", "ANAES", "H.", "ARSEN", "R.", "2008", "fusion", "stereo", "vision", "time-of-flight", "imaging", "improve", "3d", "estimation", "int", "J.", "Intell", "Syst", "Technol", "appl", "425", "433", "Y.", "EE", "J.-Y.", "WEON", "I.", "S.", "2013", "high", "quality", "shape", "from", "single", "rgb-d", "image", "under", "uncalibrated", "natural", "illumination", "Proc", "iccv", "ern", "andez", "C.", "OGIATZIS", "G.", "ipollum", "R.", "2008", "multiview", "photometric", "stereo", "IEEE", "PAMI", "30", "548", "554", "orn", "B.", "K.", "1974", "determine", "lightness", "from", "image", "computer", "graphic", "image", "processing", "277", "299", "orn", "B.", "K.", "1975", "obtain", "shape", "from", "shade", "information", "psychology", "computer", "vision", "115", "155", "zadi", "S.", "IM", "D.", "ILLIGES", "O.", "OLYNEAUX", "D.", "EW", "COMBE", "R.", "OHLI", "P.", "HOTTON", "J.", "ODGES", "S.", "reeman", "D.", "AVISON", "a.", "itzgibbon", "a.", "2011", "Kinectfusion", "real-time", "3d", "reconstruction", "interaction", "use", "move", "depth", "camera", "Proc", "UIST", "ACM", "559", "568", "HAN", "N.", "ran", "L.", "appen", "M.", "2009", "train", "manyparameter", "shape-from-shading", "model", "use", "surface", "database", "Proc", "ICCV", "Workshop", "OPF", "J.", "OHEN", "M.", "F.", "ISCHINSKI", "D.", "YTTENDAELE", "M.", "2007", "Joint", "bilateral", "upsampling", "ACM", "Trans", "graph", "26", "indner", "M.", "OLB", "a.", "artmann", "K.", "2007", "datafusion", "pmd-based", "distance-information", "high-resolution", "rgb-image", "Proc", "ISSCS", "121", "124", "ulligan", "J.", "ROLLY", "X.", "2004", "surface", "determination", "photometric", "range", "Proc", "CVPR", "Workshop", "ehab", "D.", "USINKIEWICZ", "S.", "AVIS", "J.", "AMAMOORTHI", "R.", "2005", "efficiently", "combine", "position", "normal", "precise", "3d", "geometry", "Proc", "SIGGRAPH", "24", "ewcombe", "R.", "A.", "ZADI", "S.", "ET", "AL", "2011", "Kinectfusion", "Realtime", "dense", "surface", "mapping", "tracking", "mixed", "augmented", "reality", "-lrb-", "ismar", "-rrb-", "ieee", "international", "symposium", "127", "136", "iessner", "m.", "OLLH", "OFER", "M.", "ZADI", "S.", "TAMMINGER", "M.", "2013", "real-time", "3d", "reconstruction", "scale", "use", "voxel", "hash", "ACM", "transaction", "graphic", "-lrb-", "tog", "-rrb-", "32", "169", "ark", "J.", "IM", "H.", "aus", "y.-w.", "rown", "M.", "S.", "WEON", "I.S.", "2011", "high", "quality", "depth", "map", "upsampling", "3d-tof", "camera", "iccv", "IEEE", "1623", "1630", "rado", "E.", "augera", "O.", "2005", "shape", "from", "shade", "well-posed", "problem", "Proc", "cvpr", "amamoorthus", "R.", "ANRAHAN", "P.", "2001", "signalprocessing", "framework", "inverse", "rendering", "Proc", "SIGGRAPH", "117", "128", "ichardt", "C.", "toll", "C.", "ODGSON", "N.", "A.", "eidel", "h.-p.", "heobalt", "C.", "2012", "coherent", "spatiotemporal", "filter", "upsampling", "rendering", "rgbz", "video", "Computer", "Graphics", "Forum", "-lrb-", "Proceedings", "Eurographics", "-rrb-", "31", "-lrb-", "May", "-rrb-", "unwattanapong", "B.", "yffe", "G.", "RAHAM", "P.", "USCH", "J.", "X.", "HOSH", "a.", "ebevec", "P.", "2013", "acquire", "reflectance", "shape", "from", "continuous", "spherical", "harmonic", "illumination", "ACM", "transaction", "graphic", "-lrb-", "tog", "-rrb-", "32", "109", "ALGAERTS", "L.", "C.", "RUHN", "a.", "eidel", "h.-p.", "heobalt", "C.", "2012", "lightweight", "binocular", "facial", "performance", "capture", "under", "uncontrolled", "lighting", "ACM", "Trans", "graph", "31", "eber", "D.", "ENDER", "J.", "CHNOES", "M.", "tork", "a.", "ell", "ner", "D.", "2013", "efficient", "gpu", "datum", "structure", "method", "solve", "sparse", "linear", "system", "dynamics", "application", "Computer", "Graphics", "Forum", "32", "16", "26", "eus", "g.-q.", "irzinger", "G.", "1996", "Learning", "shape", "from", "shade", "multilayer", "network", "IEEE", "Trans", "neural", "Networks", "C.", "ARANASI", "K.", "IU", "Y.", "eidel", "h.-p.", "heobalt", "C.", "2011", "shading-based", "dynamic", "shape", "refinement", "from", "multiview", "video", "under", "general", "illumination", "Proc", "iccv", "C.", "toll", "C.", "ALGAERTS", "L.", "heobalt", "C.", "2013", "on-set", "performance", "capture", "multiple", "actor", "stereo", "camera", "ACM", "transaction", "graphic", "-lrb-", "tog", "-rrb-", "32", "161", "ang", "Q.", "ang", "R.", "AVIS", "J.", "istr", "D.", "2007", "spatialdepth", "super", "resolution", "range", "image", "Proc", "CVPR", "IEEE", "l.-f.", "EUNG", "S.-K.", "aus", "y.-w.", "S.", "2013", "shading-based", "shape", "refinement", "rgb-d", "image", "Proc", "cvpr", "hang", "Z.", "SA", "P.-S.", "RYER", "J.", "E.", "HAH", "M.", "1999", "shape", "from", "shade", "survey", "IEEE", "PAMI", "21", "690", "706", "hu", "J.", "ang", "L.", "ang", "R.", "AVIS", "J.", "2008", "fusion", "time-of-flight", "depth", "stereo", "high", "accuracy", "depth", "map", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "200", "publication", "date", "November", "2014", "200:10", "C.", "Wu", "et", "al.", "Proc", "cvpr", "OLLH", "OFER", "M.", "IESSNER", "M.", "ZADI", "S.", "EHMANN", "C.", "ach", "C.", "ISHER", "M.", "C.", "itzgibbon", "a.", "oop", "C.", "heobalt", "C.", "TAMMINGER", "M.", "2014", "real-time", "non-rigid", "reconstruction", "use", "rgb-d", "camera", "ACM", "TOG", "-lrb-", "Proc", "SIGGRAPH", "-rrb-", "33", "OLLH", "OFER", "M.", "hie", "J.", "OLAIANNI", "M.", "tamminger", "m.", "reiner", "G.", "2014", "interactive", "model-based", "reconstruction", "human", "head", "use", "rgb-d", "sensor", "computer", "animation", "virtual", "world", "25", "3-4", "213", "222", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "200", "publication", "date", "November", "2014" ],
  "content" : "\n  \n    b6d72581d31b03b1917e8ab32c5750bf873d0b6f6ba509150152cd2311f050bf\n    p7a\n    10.1145/2661229.2661232\n    Name identification was not possible. \n  \n  \n    \n      \n        Real-time Shading-based Refinement for Consumer Depth Cameras\n      \n      Chenglei Wu 1 Michael Zollh?fer 2 Matthias Nie?ner 3 Marc Stamminger 2 Shahram Izadi 4 1 Max-Planck-Institute for Informatics 2 University of Erlangen-Nuremberg 3 Stanford University\n      \n        \n        Figure 1: Our method takes as input depth and aligned RGB images from any consumer depth camera (here a PrimeSense Carmine 1.09). Per-frame and in real-time we approximate the incident lighting and albedo, and use these for geometry refinement. From left: Example input depth and RGB image; raw depth input prior to refinement (rendered with normals and phong shading, respectively); our refined result, note detail on the eye (top right) compared to original depth map (bottom right); full 3D reconstruction using our refined depth maps in the real-time scan integration method of [Nie?ner et al. 2013] (far right)\n      \n      We present the first real-time method for refinement of depth data using shape-from-shading in general uncontrolled scenes. Per frame, our real-time algorithm takes raw noisy depth data and an aligned RGB image as input, and approximates the time-varying incident lighting, which is then used for geometry refinement. This leads to dramatically enhanced depth maps at 30Hz. Our algorithm makes few scene assumptions, handling arbitrary scene objects even under motion. To enable this type of real-time depth map enhancement, we contribute a new highly parallel algorithm that reformulates the inverse rendering optimization problem in prior work, allowing us to estimate lighting and shape in a temporally coherent way at video frame-rates. Our optimization problem is minimized using a new regular grid Gauss-Newton solver implemented fully on the GPU. We demonstrate results showing enhanced depth maps, which are comparable to offline methods but are computed orders of magnitude faster, as well as baseline comparisons with online filtering-based methods. We conclude with applications of our higher quality depth maps for improved real-time surface reconstruction and performance capture. CR Categories: I.3.7 [Computer Graphics]: Digitization and Image Capture?Applications I.4.8 [Image Processing and Computer Vision]: Scene Analysis?Range Data Keywords: shading-based refinement, real-time, depth camera\n      Links:\n      \n        \n      \n      DL PDF W\n      \n        \n        \n      \n      EB\n      \n        \n      \n      V IDEO\n      \n        \n      \n      C ODE\n      ACM Reference Format Wu, C., Zollh?fer, M., Nie?ner, M., Stamminger, M., Izadi, S., Theobalt, C. 2014. Real-time Shading-based Refinement for Consumer Depth Cameras. ACM Trans. Graph. 33, 6, Article 200 (November 2014), 10 pages. DOI = 10.1145/2661229.2661232 http://doi.acm.org/10.1145/2661229.2661232. Copyright Notice Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the fi rst page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org . Copyright ? ACM 0730-0301/14/11-ART200 $15.00. DOI: http://doi.acm.org/10.1145/2661229.2661232\n      Christian Theobalt 1 4 Microsoft Research\n    \n    \n      \n        1 Introduction\n      \n      Consumer depth cameras have opened up many new real-time applications in the field of computer graphics and vision, robotics and human-computer interaction; including gestural interfaces, live 3D scanning, augmented reality, and robot navigation. However, the noise and resolution limitations of even recent depth cameras, result in only coarse geometry acquisition per frame. The ability to capture higher fidelity geometry in real-time could open up many new scenarios, such as tracking detailed features of the user (e.g., facial expressions, clothing etc.) for real-time performance capture or other interactive scenarios, as well as the ability to scan higher quality 3D models of real-world objects.  As shown previously, input from a stereo camera and shape-fromshading (SfS) can be used to capture detailed models with results approaching laser scan quality [Wu et al. 2011; Han et al. 2013; Yu et al. 2013; Beeler et al. 2010]. This raises the question: can this type of shading-based refinement be used to improve depth camera data, only by leveraging an additional RGB camera, which most sensors typically provide. Unfortunately, shading-based refinement techniques require information about the incident lighting and surface material in the scene. In most cases this requirement is fulfilled by making assumptions about albedo, and by working with controlled lighting [Hern?ndez et al. 2008; Fanello et al. 2014], and studio setups [Ghosh et al. 2011; Debevec 2012; Bermano et al. 2014]. When moving to general uncontrolled scenes, SfS methods thus need to estimate albedo and illumination along with the geometry by solving a complex inverse rendering problem [Wu et al. 2011; Wu et al. 2013; Han et al. 2013; Yu et al. 2013]. So far, this was not possible in real time, and as such refinement techniques have yet to be used interactively. Due to this performance bottleneck, researchers have developed alternative heuristic fusion strategies to enhance depth camera data in real time [Richardt et al. 2012]. Many of them use variants of joint bilateral upsampling [Kopf et al. 2007] to lift the depth data to the pixel grid resolution of a concurrently acquired and aligned RGB image. While computation is fast, the results are based on a purely heuristic assumption about the co-occurrence of discontinuities in RGB and depth data. In consequence, reconstructions may look plausible but estimated detail may not be metrically accurate. Further, the heuristic underpinning leads to commonly known artifacts, such as texture copying, where spatial albedo variations are mistaken for geometric detail. In this paper, we propose a new real-time method for enhancement of depth data using SfS in general uncontrolled scenes. Starting from the raw depth data and an aligned RGB image, the algorithm estimates ? in real time ? the time-varying incident lighting distribution, which is then used to considerably enhance the reconstructed geometric detail. In contrast to previous fusion-based enhancement approaches, our reconstructions are not only plausible but more metrically faithful, and avoid some of the texture-copy artifacts seen previously. In order to refine a depth map based on the shading in real-time, orders of magnitude faster than state-of-the-art offline systems [Wu et al. 2011], we must redesign the shading-based energy function as well as its optimization method. As such, we rephrase the shadingbased refinement problem to fully exploit the regular connectivity of image grids. Instead of using an off-the-shelf conventional solver, we introduce a novel patch-based Gauss-Newton solver running on the GPU, which is specifically designed for our energy function. This careful design choice enables the refinement of depth maps in real-time, making it ideally suited to modern commodity range sensors that run at ? 30Hz. Specifically, our algorithm provides the following contributions: ? rephrasing the inverse rendering optimization problems used in offline methods [Wu et al. 2011] in a highly parallelized manner to enable real-time lighting estimation through spherical harmonics, and direct solving for refined depth rather than displacements on 3D meshes. ? space-time coherent estimation of shape and lighting using temporal correspondences derived from a real-time alignment of depth maps. ? an adaptive shape refinement strategy that reduces texture-copy artifacts by analyzing an approximate albedo image. ? a novel patch-based Gauss-Newton solver on the GPU to compute metrically faithful geometry at real-time frame-rates. Beyond these technical contributions, we show the versatility of our method for reconstructing arbitrary scenes, even under motion, and demonstrate improved accuracy compared to filtering based refinement methods. We show integration into a real-time scanning framework akin to KinectFusion [Newcombe et al. 2011; Izadi et al. 2011; Nie?ner et al. 2013], and show improved quality during realtime capture. Finally, we demonstrate how our method enables improvement of the spatio-temporal reconstructions of a recent live non-rigid performance capture system [Zollh?fer et al. 2014a].\n      ACM Transactions on Graphics, Vol. 33, No. 6, Article 200, Publication Date: November 2014\n      200:2\n      ?\n      C. Wu et al.\n      \n        2 Related Work\n        Range Image Enhancement and Sensor Fusion Several methods to denoise and enhance depth data leverage the higher pixel resolution of one or two concurrently captured RGB images. Most of these methods rely on heuristic assumptions about the correlation of color and depth, e.g., that edges in both channels likely coincide. Diebel and Thrun [2006] compute the upsampled depth using a Markov-Random Field. Park et al. [2011] formulate depth upsampling to color image resolution as an optimization problem enforcing the discontinuity similarity mentioned earlier, as well as additional regularization terms. Implementing the above heuristics through filtering is also feasible [Lindner et al. 2007], for instance by using joint bilateral upsampling [Kopf et al. 2007]. Yang et al [2007] create  a cost space from the depth map, and filter it joint-bilaterally using a stereo image to raise resolution. Similar ideas have been explored for joint reconstruction using stereo images and depth data, where photometric constraints from stereo can be exploited for further data refinement [Beder et al. 2007; Zhu et al. 2008; Gudmundsson et al. 2008]. While the above methods run offline, variants of joint-bilateral or multilateral filtering for depth upsampling can run in real-time [Chan et al. 2008; Dolson et al. 2010; Richardt et al. 2012]. Their results, however, are merely plausible and not metrically accurate, and texture-copy artifacts frequently occur when texture variations are mistaken for geometric detail. Multi-frame superresolution techniques estimate higher resolution depth images from a stack of aligned low resolution images captured under slight lateral displacement [Cui et al. 2013], but real-time computation has not been possible so far. One final set of methods increases the resolution of a single depth image offline using a learned database of local patches [Aodha et al. 2012]. Shape-from-Shading and Photometric Stereo A related topic acquires the 3D shape of an object using shape-from-shading (SfS) where the naturally occurring intensity patterns across an image are used to extract the 3D geometry from a single image [Horn 1975; Zhang et al. 1999]. The mathematics of SfS is well-understood, particularly when surface reflectance and light source positions are known. Prados and Faugeras [2005] and Fanello et al. [2014] reconstruct various objects including faces, using controlled light sources near the camera center. Ahmed and Farag [2007] demonstrate geometry estimation for non-Lambertian surfaces and varying illumination conditions, but make strong scene assumptions. B?hme et al. [2008] use the near infrared image available on time-of-flight (ToF) cameras to relate depth to intensity for filtering. However, unlike our method, their approach is limited to only ToF cameras with collocation of light source and camera, runs offline, and does not increase the X/Y resolution of images. Recent methods have shown that SfS can refine coarse image-based shape models [Beeler et al. 2012], even if they were captured under general uncontrolled lighting with several cameras [Wu et al. 2011; Wu et al. 2013] or an RGB-D camera [Han et al. 2013; Yu et al. 2013]. To this end, illumination and albedo distributions, as well as refined geometry are found via inverse rendering optimization. While the physics of SfS is well known, the problem is inherently ill-posed, and achieving compelling results requires strong scene and lighting assumptions, and computationally complex algorithms, particularly to solve hard inverse rendering optimizations. As such, real-time performance has rarely been demonstrated. This has led to work on photometric stereo where multiple images of a scene are captured under different controlled illumination to compute geometry. Photometric stereo has demonstrated compelling reconstructions of surfaces with complex reflectance properties [Mulligan and Brolly 2004; Hern?ndez et al. 2008; Ghosh et al. 2011; Tunwattanapong et al. 2013; Debevec 2012; Bermano et al. 2014; Nehab et al. 2005]. However, these approaches require complex controlled lighting setups, which are not available in many standard scenarios. More data-driven approaches for solving the SfS problem have also been proposed. Barron and Malik [2013b] jointly solve for reflectance, shape and illumination, based on priors derived statistically from images. Similar concepts were also used for offline intrinsic image decomposition of RGB-D data [Barron and Malik 2013a]. Zollh?fer et al. [2014b] use SfS to fit a morphable face model to an RGB input stream. Our approach does not impose strong priors on shape recovery. Khan et al. [2009] learn weighting parameters for complex SfS models to aid facial reconstruction. Wei and Hirzinger [1996] use deep neural networks to learn aspects of the physical model for SfS, demonstrating moderate results for very constrained scenes. Again, none of these approaches achieves real-time performance.\n        ACM Transactions on Graphics, Vol. 33, No. 6, Article 200, Publication Date: November 2014\n        Real-time Shading-based Refinement for Consumer Depth Cameras\n        ?\n        200:3\n        \n          \n          Figure 2: Overview of our main pipeline. From left to right: Input to our algorithm is a noisy low resolution depth map (A) and an aligned RGB image (B). From these, an initial estimate of illumination is found (C), and subsequently an albedo image is computed (D), which is then used to detect an albedo edge map (E). Thereafter, the coarse geometry is refined using shading information (F). The high-dimensional non-linear optimization is solved using a new GPU-based iterative Gauss-Newton solver.\n        \n      \n      \n        3 Overview\n        In our work, we demonstrate real-time shading-based refinement of RGB-D data, captured in general scenes with unknown and timevarying lighting, using only commodity hardware. To achieve this goal, we reformulate the complex inverse problem for estimating illumination, albedo and refined geometry, which so far has only been solved offline, into a highly parallelized non-linear optimization problem, which we solve efficiently on the GPU using a new patch-based Gauss-Newton solver. We further employ new effective approximations and parameterizations, as well as fast geometric correspondence search on the GPU, which enables us to even enforce temporal priors in our reconstructions. Input to our algorithm is a noisy low resolution depth map D r from a depth camera and an aligned RGB image I. Unlike previous offline methods that used multi-camera input to refine full 3D meshes, we rephrase shading-based refinement as a depth map enhancement process. We solve the inverse rendering problem using an effective parameterization of the shading equation (Sect. 4). From the coarse depth and the RGB data, an initial estimate of illumination is found (Sect. 4.1), and subsequently an albedo image is computed. Thereafter, the coarse geometry is refined using shading information (Sect. 4.2). The high-dimensional non-linear optimization problem for depth refinement is solved using a new GPU-based iterative Gauss-Newton solver (Sect. 5). Fig. 2 highlights these main steps in the pipeline.\n      \n      \n        4 Shading-based Refinement of RGB-D Data\n        Real-time estimation of illumination and refined geometry necessitates an efficient formulation of the light transport model, i.e., the shading equation. Similar to previous offline methods, we assume that surfaces in a scene are Lambertian, and we parameterize the incident lighting with spherical harmonics (SH) [Wu et al. 2011]. In fact, we estimate incident irradiance as a function of the surface normal, that is the incident light, filtered by the cosine with the normal. For Lambertian reflectance, the incident irradiance function is known to be smooth, and can be represented with only little error using the first nine spherical harmonics basis functions up to 2nd order [Ramamoorthi and Hanrahan 2001].  As with previous approaches, we henceforth estimate lighting from a grayscale version of I, and thus assume gray lighting with equal values in each RGB channel. In some steps, full RGB images are used, which we denote I c . Unlike offline multi-view methods, we employ a triangulated depth map as geometry parameterization. This means there is a fixed depth pixel to mesh vertex relation, and we can express the reflected irradiance B(i, j) of a depth pixel (i, j) with normal n(i, j) and albedo k(i, j) as:\n        \n          1\n          8 B(i, j) = k(i, j) l k H k (n(i, j)), k=0\n        \n        where l k are the nine 2nd order spherical harmonics coefficients of the incident illumination. Note that in our real-time setting, we cannot afford local visibility computation, so illumination depends only on the normal direction. The spherical harmonics basis functions H k (n) take a unit surface normal n = (n x , n y , n z ) as input, and evaluate to:\n        \n          2\n          H 0 = 1.0, H 1 = n y , H 2 = n z , H 3 = n x , H 4 = n x n y , H 5 = n y n z , H 6 = ?n x n x ? n y n y + 2n z n z , H 7 = n z n x , H 8 = n x n x ? n y n y .\n        \n        Solving for geometry, lighting, and albedo from a single RGBD image is highly underconstrained. During lighting estimation (Sect. 4.1), we therefore initially assume that the scene has uniform albedo. Subsequently, a dense albedo image is computed by dividing the RGB values through the lighting term. High-frequency detail in the depth map is then computed by shading-based refinement of the per-pixel depth values (Sect. 4.2). Unlike previous SfS methods that solve for surface normal orientations, we directly optimize the depth by linking the depth to the normal. This is not only computationally much more efficient, but also allows us to implicitly enforce surface integrability during depth optimization.\n        \n          4.1 Lighting Estimation\n          The illumination coefficients l k are computed by minimizing the difference between the rendered image B (given our current lighting estimate and geometry) and the captured RGB image I:\n          \n            3\n            E L (l) = (B(i, j) ? I(i, j)) 2 , 1?i?N x ,1?j?N y\n          \n          where (N x , N y ) is the image size. Solving this least-squares problem is equivalent to solving the following system of linear equations:\n          \n            4\n            ? H 0 (n(1, 1)) ... H 8 (n(1, 1)) ? ? H 0 (n(1, 2)) ... H 8 (n(1, 2)) ? ? l = A ? l = I. ? ... ... ... ? H 0 (n(N x , N y )) ... H 8 (n(N x , N y ))\n          \n          The surface normals n(i, j) are computed from the depth map after applying a Gaussian filter to remove noise. We exclude pixels at grazing angles for lighting estimation, as both shading and depth are unreliable in these regions. We detect these by checking if the angle between normal and viewing direction is greater than 78 ? . For performance reasons, when the input RGB image resolution is higher than 640 ? 480, we downsample the image by a factor of three in the lighting estimation stage. The SH lighting coefficients are then obtained as l = (A T A) ?1 A T I. For the calculation of A T A and A T I, we use a parallel reduction and solve for the l k on the CPU. In order to stabilize the lighting\n          ACM Transactions on Graphics, Vol. 33, No. 6, Article 200, Publication Date: November 2014\n          200:4\n          ?\n          C. Wu et al.\n          \n            \n            Figure 3: Left: Albedo estimation.\n          \n          input image and estimated albedo map. Right: spatial neighborhood of geometric regularizer.\n          \n            \n            Figure 4: Adaptive refinement helps to reduce texture-copy artifacts: the input frame (a) is refined and texture in the geometry of the shirt may lead to erroneous detail. Using a high (b) or low (c) threshold for albedo edge detection controls the reduction of this artifact.\n          \n          estimation, we optionally add a temporal prior term ? L (l ? l p ) 2 to Eq. (3), weighted by ? L , which constrains the estimated lighting l to be similar to the lighting l p in the previous frame. Then, the linear system we need to solve is as follows:\n          \n            5\n            A T A ? l + ? L M I = A T ? I + ? L l p ,\n          \n          where M I ? R 9?9 is an identity matrix. An example illumination environment map corresponding to l is shown in Fig. 2 . Given l, an estimate of a dense albedo image I a with I a (i, j) = k(i, j) is 8 computed on the GPU by dividing I c (i, j) by k=0 l k H k (n(i, j)), see Eq. (1). Example albedo images are shown in Fig. 3 . Given the estimated lighting and albedo image, we refine the coarse depth through a second error minimization that uses shading cues from the intensity image. Previous methods for shading-based RGBD refinement [Han et al. 2013] follow the traditional two-step SfS strategy, i.e., they first estimate the normal field, and then use it to refine the depth. Normal field computation for an image with N pixels requires optimizing an energy in 2N unknowns, and refining the depth based on the normal constraint means solving another sparse linear system with N variables. To achieve real-time performance we choose a more efficient strategy, and directly optimize for the depth value of each of the N pixels in I. This enables us to use the regular image structure for efficient parallelism of our optimization. Note that, depending on the camera, the physical depth resolution may be lower than the RGB resolution; we always sample depth and color at the same higher resolution. To obtain the refined depth map D ? , we minimize: E(D) = w g E g (i, j)+w s E s (i, j)+w p E p (i, j)+w r E r (i, j), (i,j) (6) where D is the vector of depth values. E g is the shading gradient constraint, E s is the smoothness constraint, E p is the depth constraint, and E r is a temporal smoothness prior. This is broken down into the following four terms: Shading Gradient Constraint Our data term penalizes differences between rendered shading gradients and intensity image gradients: E g (i, j) = [B(i, j) ? B(i + 1, j) ? (I(i, j) ? I(i + 1, j))] 2 +[B(i, j) ? B(i, j + 1) ? (I(i, j) ? I(i, j + 1))] 2 , (7) This gradient-based metric is more robust against inaccuracies of our approximate shading model which does not account for all lighting effects in a real scene. In order to evaluate the shading constraint w.r.t. D(i, j), we first establish the link between D(i, j) and n(i, j). The 3D position p(i, j) (in camera coordinates) of a depth point at distance D(i, j) from the camera is: ? (i ? u x )/f x ?\n          4.2 Shading-based Depth Map Refinement\n          \n            8\n            p(i, j) = ? (j ? u y )/f y ? D(i, j), 1\n          \n          where (u x , u y ) is the camera?s principal point, and f x and f y are the focal lengths in x and y direction. The unnormalized surface normal at (i, j) can be computed from the 3D points of the neighboring depth pixels ( Fig. 3 ):\n          \n            9\n            n(i,  ? j) = (p(i, j ? 1) ? p(i, j)) ? (p(i ? 1, j) ? p(i, j)).\n          \n          After substituting Eq. (8), this evaluates to: ? D(i,j?1)(D(i,j)?D(i?1,j)) ? f y D(i?1,j)(D(i,j)?D(i,j?1)) n(i,  ? j) = ? ? . ? f x ? n x (i,j)(u x ?i) + n y (i,j)(u y ?j) ? D(i?1,j)D(i,j?1) f x f y f x f y (10)\n          Smoothness Constraint As shading-based refinement from a single image is ill-posed, we employ geometric regularization to constrain the solution. We enforce a Laplacian smoothness constraint for each pixel, which is computed as:\n          \n            11\n            E s (i, j) = p(i, j) ? w s (p(i ? 1, j) + p(i, j ? 1)+\n          \n          \n            11\n            2 p(i + 1, j) + p(i, j + 1)) 2 ,\n          \n          where w s = 0.25 is the Graph Laplacian weight for the 1-ring neighborhood on the regular image triangle grid ( Fig. 3 ), and p(i, j) is computed according to Eq. (8). Fig. 3 shows the neighborhood of this geometric regularizer. Depth Constraint We also define a depth constraint, which enforces that the refined depth stays close to the initial depth before refinement D i :\n          \n            12\n            E p (i, j) = (D(i, j) ? D i (i, j)) 2 ,\n          \n          Temporal Constraint To reduce temporal aliasing in our reconstructions, for static scenes we employ a temporal constraint to stabilize the refined depth. This uses the normals from the previous frame to constrain the depth in the current frame, and is defined as: E r (i, j) = (n p (c(i, j)) ? (p(i, j) ? p(i ? 1, j))) 2\n          \n            13\n            + (n p (c(i, j)) ? (p(i, j) ? p(i, j ? 1))) 2 + (n p (c(i, j)) ? (p(i ? 1, j) ? p(i, j ? 1))) 2 , p\n          \n          where n is the refined normal in the previous frame, and c(i, j) is the pixel in the previous frame corresponding to pixel (i, j) in the current frame. Unlike offline model-based reconstruction approaches, where pixel correspondences are implicitly given through a tracked template [Wu et al. 2013], our correspondences c(i, j) are computed using a GPU-based iterative closest point (ICP) [Besl and McKay 1992] alignment between current and previous depth maps.\n          ACM Transactions on Graphics, Vol. 33, No. 6, Article 200, Publication Date: November 2014\n          Real-time Shading-based Refinement for Consumer Depth Cameras\n          ?\n          200:5\n        \n        \n          4.3 Adaptive Refinement\n          As our image formation model has not taken albedo variation into account, our method may interpret albedo changes as shading variation and produce artificial details around albedo boundaries. In order to reduce these texture-copy artifacts, we modified our shading energy term in Eq. (7) to be weighted by a binary mask, which decides if the corresponding image gradient comes from shading variation or albedo change. So the modified shading energy is defined as: E g (i, j) = w ij r [B(i, j) ? B(i + 1, j) ? (I(i, j) ? I(i + 1, j))] 2 +w ij c [B(i, j) ? B(i, j + 1) ? (I(i, j) ? I(i, j + 1))] 2 , (14) where w ij r , w ij c ? {0, 1} are binary weights for each row and column, which are set to zero for albedo boundary edges. Albedo changes usually result in large difference in RGB color space [Horn 1974]. Therefore, we detect these by applying a user-defined threshold to an edge map computed on the albedo image I a . Fig. 4 shows an example of how this strategy can reduce the texture-copy artifacts with varying thresholds. As the shading constraint is not reliable along silhouettes, we also search for depth discontinuities and set the corresponding weights to zero. Solving the non-linear energy (Eq. 6) with its high number of unknowns in real-time is challenging. In the next section, we describe how to solve this optimization using a novel GPU-based GaussNewton solver that works on a patch subdivision in image space.\n        \n      \n      \n        5 Parallel Energy Minimization\n        Our refinement energy E(d) : R N ? R (Eq. 6) is non-linear given the image formation model and its dependence on the orientation of the surface normal. We use a row-major ordering of the pixels in the depth image D at the target resolution to obtain the parameter vector of the N unknown per-pixel depth values as follows:\n        \n          15\n          T d = ..., D(i, j), ... .\n        \n        Even at moderate resolutions, the objective has a considerable amount of parameters (i.e., ? 307k at a resolution of 640 ? 480). To optimize a non-linear objective with such a high number of unknowns at real-time rates, we exploit the massively parallel architecture of modern GPUs. Minimizing E with respect to the unknown parameters is a non-linear least squares problem that can be rewritten as: M\n        \n          16\n          2 E(d) = r k (d) . k=1\n        \n        The total number (M = 9N ) of residual terms r k depends on the shading gradient (2N terms), depth (N terms), temporal (3N terms) and smoothness constraints (3N terms). The next sections describe our efficient parallel patch-based Gauss-Newton solver, that allows us to minimize this energy for more than 500,000 parameters at real-time rates.\n        We reformulate our objective E in terms of its residual vector N ? M to obtain the classical Gauss-Newton form:\n        \n          17\n          T\n        \n        \n          17\n          1 M\n        \n        Refined depth values are then computed by minimizing:\n        \n          5.1 Parallel Gauss-Newton Solver We reformulate our objective E in terms of its residual vector F : R N ? R M to obtain the classical Gauss-Newton form: E(d) = ||F (d)|| 2 , F (d) = r (d), ..., r (d) . (17) 5.2 Patch-wise Optimization Refined depth values d ? are then computed by minimizing: d ? = argmin ||F (d)|| .\n          2\n          d\n          \n            \n            Figure 5: To solve our problem efficiently, we subdivide our domain into patches (left). Each patch is optimized locally, which requires a two-pixel wide boundary (center). We can further optimize this procedure by only processing patches with foreground information (right).\n          \n          \n            \n            Figure 6: For each patch p, a thread block is started with as many threads as the patch has pixels. First, all threads read patch data including a two-pixel size boundary to shared memory. Then, we perform multiple PCG steps within shared memory, and write the result back to global memory.\n          \n          Explicit linearization of the vector field F (d) using Taylor expansion yields:\n          \n            18\n            F (d k+1 ) ? F (d k ) + J(d k )?, ? = d k+1 ? d k .\n          \n          J(d k ) is the Jacobian of F evaluated at the solution after k iterations. The resulting optimization problem is a linear least squares problem ? ? = argmin ||F (d k ) + J(d k )?|| 2 , ? in the unknown optimal updates ? ? . We compute the ? ? as the solution of the corresponding normal equations: J(d k ) T J(d k )? = ?J(d k ) T F (d k ). These can be solved jointly on the complete domain using iterative solution techniques like preconditioned conjugate gradient (PCG). Previous work [Weber et al. 2013; Zollh?fer et al. 2014a] demonstrated the feasibility of this strategy in a GPU optimization framework for dynamics simulation and non-rigid registration, respectively. One important observation is that switching kernels has a significant impact on performance. The aforementioned methods are optimized such that they require 2 kernel calls for initialization and 3-4 kernel calls in the inner PCG loop, depending on whether the system matrix J T J is explicitly evaluated or by sequentially applying J T and J. As a result, even for several thousands of variables, the optimization problem can be solved at interactive rates. However, for our problem we should be able to optimize more than half a million values in real time, which is not possible with these approaches. To solve this, we develop an approach that can cope with the larger number of variables by exploiting the implicit topology of the depth mesh.  With our error term, the computation for a single pixel only depends on a 5 ? 5 image neighborhood. Thus, we can subdivide the domain into square patches (cp. Fig. 5 ), and perform the optimization patchwise using a variant of the Schwarz Alternating Procedure. The optimization of a single patch happens per thread block, where all data can be kept in shared GPU memory. This procedure exploits the locality of the optimization constraints and the uniform tessellation of the optimization domain. It scales well to a higher number of unknowns and reduces kernel call overhead and global memory accesses by exploiting fast shared memory. The optimization domain ? (see Fig. 5 ) is partitioned into small rectangular sub-regions (patches) The linear systems corresponding to the sub-regions (without boundary) are solved independently by imposing Neumann constraints on the boundaries ?? i . To be able to perform all computations in shared memory, including the shading gradient energy and the smoothness energy, we additionally have to read a two-pixel wide depth data for each patch boundary, so that the computation can be efficiently performed from local data. Optimization only happens on the inner variables; boundary values remain unchanged. In each Schwarz iteration, inner, and boundary variables of a patch are first read and stored to shared memory. Then the inner variables are optimized, keeping the boundary values fixed. Finally, the inner variables are written back to global memory. This decouples the patches and splits the set of parameters into unconstrained inner (d i ) and constrained boundary (d b ) variables:\n          ACM Transactions on Graphics, Vol. 33, No. 6, Article 200, Publication Date: November 2014\n          200:6\n          ?\n          C. Wu et al.\n          ?= ? i , ? i ? ? j = ?. i\n          i\n          A i,i A i,b A b,i A b,b\n        \n        \n          5.3 Patch-based Preconditioned Conjugate Gradient d i b = . d b b b\n          Since the boundary variables are considered to be fixed, the corresponding block entries can be moved to the right-hand side: A i,i d i = b i ? A i,b d b .  Each local sub-problem on a sub-region (or patch) ? i is assigned to one thread block and solved in parallel using one thread per variable. The patch size is set based on the GPU L-1 cache; thus for our hardware setup, we use 16 ? 16 patches. Including the boundary values, this results in a 20 ? 20 grid that has to be kept in shared memory. The per-patch problem is solved using an iterative PCG solver, which is explained in the next section. The process is repeated N e times or until convergence. The entire algorithm is shown as pseudocode in Algorithm 1 and illustrated in Fig. 6 . Note that Gauss-Newton and Schwarz iterations happen concurrently. After each Schwarz iteration, we also apply the delta updates, so each Schwarz iteration step implicitly performs a Gauss-Newton step. This does not incur any additional computation, because the PCG solver has to re-evaluate the Jacobian and the residuals anyway, but results in faster convergence. Fig. 7 shows the convergence behavior depending on the number K of PCG steps. For the figure, we used N e = 20 outer GaussNewton/Schwarz iterations, and K = 1, 3, 5, 10 inner PCG iterations. For K > 10 we observed no further improvement. Note that we use no synchronization when writing depth values. As a result, some patches might already read updated boundary values, which leads to a mixture of Multiplicative and Additive Schwarz. In terms of convergence, this is not a problem; however, the approach becomes non-deterministic. On the other hand, avoiding synchronization improves performance. We shift the initial patch grid in each iteration by sub-patch steps based on a Halton sequence to improve convergence and to avoid patch structures from becoming visible in the solution.\n          Algorithm 1 Shared Memory PCG Kernel for i = 1 . . . N e do for all patches p in parallel do Fetch Data To Shared Memory(p); Compute RHS And Preconditioner(p); for k = 1 . . . K do PCG Step(p); end for Write Result To Global Memory(p); end for end for\n          \n            \n            Figure 7: Convergence of our optimization procedure for N e = 20 and K = 1, 3, 5, 10 for four successive RGB-D images at 640 by 480 pixels. The abscissa shows the outer iterations.\n          \n          Per patch, we solve the resulting linear optimization problem using a fast shared memory PCG solver. All per-patch PCGs corresponding to one Schwarz iteration are launched with a single kernel call. As can be seen in Algorithm 1, this includes shared memory initialization as well as running K PCG iterations and writing back the local patch results to global memory. In the PCG solver, we use a simple Jacobi preconditioner that can be readily parallelized. We exploit the memory hierarchy by caching all per-pixel data to registers and loading all data that has to be accessed by neighboring threads to shared memory. In each PCG iteration, a per-patch scalar product is required, for which we use a fast block reduction in shared memory. Excluding the block reductions, the inner PCG loop requires 6 synchronization points. The system matrix J T J is applied efficiently on-the-fly in each PCG step in an optimized kernel exploiting the sparsity of J.\n        \n        \n          5.4 Hierarchical Optimization Strategy\n          We run the proposed RGB-D shading-based refinement strategy in a hierarchical coarse-to-fine manner to allow for a faster convergence of our method. To this end, we build an image pyramid by successively restricting the input RGB-D data to the coarser levels. After, we sweep from coarse-to-fine (nested iteration) through the hierarchy and alternate between our patch-based Gauss-Newton solver and applying the prolongation operator. For prolongation and restriction, we use a bi-linear interpolation of the samples. Currently, we use a hierarchy with three levels.\n        \n        \n          5.5 Foreground Segmentation\n          Aside from the refinement of complete depth maps, we perform our optimization only on blocks containing foreground pixels (cp. Fig. 5 ). Based on the input depth, we mark all patches containing foreground pixels, compute a linear ordering of these using a fast prefix sum, and execute the refinement only on these foreground blocks.\n          ACM Transactions on Graphics, Vol. 33, No. 6, Article 200, Publication Date: November 2014\n          Real-time Shading-based Refinement for Consumer Depth Cameras\n          ?\n          200:7\n          \n            \n              \n                \n                  \n                     Sequence\n                     Camera\n                     Resolution\n                     Foreground\n                     #Variables\n                     Preprocess\n                     Light Est.\n                     Refinement\n                     ?\n                  \n                \n                \n                  \n                     Augustus\n                     PrimeSense\n                     1280 ? 1024\n                     Yes\n                     525k\n                     7.0ms\n                     2.5ms\n                     26.4ms\n                     35.9ms\n                  \n                  \n                     Face\n                     PrimeSense\n                     1280 ? 1024\n                     Yes\n                     245k\n                     7.1ms\n                     2.3ms\n                     13.7ms\n                     23.1ms\n                  \n                  \n                     Body\n                     PrimeSense\n                     1280 ? 1024\n                     Yes\n                     500k\n                     6.9ms\n                     2.4ms\n                     25.6ms\n                     34.9ms\n                  \n                  \n                     Talking\n                     Asus\n                     640 ? 480\n                     No\n                     307k\n                     2.4ms\n                     1.1ms\n                     14.4ms\n                     17.9ms\n                  \n                  \n                     Vase\n                     Asus\n                     640 ? 480\n                     Yes\n                     140k\n                     2.6ms\n                     1.0ms\n                     7.2ms\n                     10.8ms\n                  \n                  \n                     Lucy\n                     PrimeSense\n                     640 ? 480\n                     No\n                     307k\n                     2.3ms\n                     1.2ms\n                     14.5ms\n                     18.0ms\n                  \n                  \n                     Flower\n                     KinectOne\n                     1920 ? 1080\n                     Yes\n                     880k\n                     19.5ms\n                     3.7ms\n                     43.2ms\n                     66.4ms\n                  \n                  \n                     Socrates\n                     Asus\n                     640 ? 480\n                     Yes\n                     107k\n                     2.5ms\n                     0.9ms\n                     6.2ms\n                     9.6ms\n                  \n                  \n                     Upper Body\n                     PrimeSense\n                     1280 ? 1024\n                     Yes\n                     510k\n                     6.8ms\n                     2.5ms\n                     25.8ms\n                     35.0ms\n                  \n                \n              \n            \n            Sequence Camera Resolution Foreground #Variables Preprocess Light Est. Refinement ? Augustus PrimeSense 1280 ? 1024 Yes 525k 7.0ms 2.5ms 26.4ms 35.9ms Face PrimeSense 1280 ? 1024 Yes 245k 7.1ms 2.3ms 13.7ms 23.1ms Body PrimeSense 1280 ? 1024 Yes 500k 6.9ms 2.4ms 25.6ms 34.9ms Talking Asus 640 ? 480 No 307k 2.4ms 1.1ms 14.4ms 17.9ms Vase Asus 640 ? 480 Yes 140k 2.6ms 1.0ms 7.2ms 10.8ms Lucy PrimeSense 640 ? 480 No 307k 2.3ms 1.2ms 14.5ms 18.0ms Flower KinectOne 1920 ? 1080 Yes 880k 19.5ms 3.7ms 43.2ms 66.4ms Socrates Asus 640 ? 480 Yes 107k 2.5ms 0.9ms 6.2ms 9.6ms Upper Body PrimeSense 1280 ? 1024 Yes 510k 6.8ms 2.5ms 25.8ms 35.0ms\n            Table 1: Overview of test sequences, parameters and achieved performance see Sec. 6 for details. Effective frame rates of our algorithm thus range from 15 fps at full HD to 93 fps at SVGA.\n          \n        \n      \n      \n        6 Results\n        We tested our real-time enhancement software on data from a PrimeSense Carmine 1.09 Short Range (RGB res. 1280 ? 1024, depth res 640 ? 480, framerate 12 fps), a Kinect One (RGB res 1920 ? 1080, depth res. 512 ? 424, frame rate 30 fps), as well as an Asus Xtion Pro (RGB res. 640 ? 480, depth res 640 ? 480, framerate 30 fps) camera. Since video and RGB data are not frame synchronized in the Kinect One, the camera needs to be moved slowly in order to prevent artifacts. Our approach runs at real-time rates in excess of 30 fps. On both static and dynamic scenes and for all RGB-D sensors, a significant enhancement of detail compared to the raw depth data was achieved, see Fig. 12 , Fig. 1 , and the supplemental video and document, which show screen captured visualizations of the reconstructions before and after refinement. In total, qualitative tests were done on 9 scenes, see Tab. 1. We always enable the prior term in lighting estimation by setting ? l = 10. We set the empirically found weights for depth refinement as follows: w g = 1, w s = 400, w p = 10, w r = 100 for all static scenes; w g = 1, w s = 100, w p = 10, w r = 0 for all dynamic scenes. Please refer to Tab. 1 for details of the sequences and timings of the individual steps measured on an Intel Core i7-3770 CPU with 3.4GHz (16GB Ram) and an Nvidia Geforce GTX 780. The listed preprocessing steps include: depth-to-color alignment, filtering of depth and color, resampling of images, and foreground segmentation. For those results, the Gauss-Newton optimizer ran with the following parameters: 3 hierarchy levels, N e = 10, 8, 6 outer iterations, and K = 5, 5, 5 PCG iterations (coarse-to-fine). We enable the temporal smoothness prior term for capturing static scenes, i.e., the Vase sequence, Lucy sequence and Socrates sequence. The required ICP alignment adds 3.5 ms for these three sequences to the total computation time. This yields effective frame rates between 15 fps at full HD and 93 fps at SVGA.\n        \n          6.1 Evaluation\n          Quantitative Evaluation We quantitatively evaluate the accuracy of our method on two synthetic sequences that are 400 frames long. We use ground truth, detailed performance-captured face geometry [Valgaerts et al. 2012], and the ground truth lighting from St. Peter?s Basilica [Debevec 1998] and render two RGB-D sequences. In the first one (CoA) the albedo is uniform, and in the second one (DA) we use a dense albedo map obtained from one of the captured face images. To synthesize the depth map sequences, we first obtain a quantized depth map from the stereo results of [Valgaerts et al. 2012], and then add Gaussian noise to mimic the noise from a depth sensor. We compare our method with the space-time multi-lateral RGBD filtering method of [Richardt et al. 2012] (STFilt), and with reconstructions of CoA and DA using the single-frame shading based refinement algorithm in the offline method of [Valgaerts et al. 2012](SBRol). As an error metric, we employ the average pixel-wise Euclidean distance in mm per frame (d e ), as well as the average angular difference of normals in degrees (d n ). The distance and normal errors averaged over all frames are summarized in Tab. 2. Compared to STFilt, our method produces results with much lower distance and normal errors, as it obtains metrically faithful reconstructions as opposed to only plausible results (see Fig. 8 ). In comparison to the more involved offline method by [Valgaerts et al. 2012], our results exhibit comparable distance error, but our real-time capability comes at the price of a slightly higher error in reconstructed normal orientation. The respective error curves over time on both DA ( Fig. 9 ) and CoA (additional material) further confirm the above conclusions. Qualitative Comparison We also compared our method with STFilt on real-world data (talking sequence, see Tab. 1). Using the same hardware as previously described, our approach not only has a runtime advantage (55.8 fps against 8.5 fps), but also produces much more detailed results (see Fig. 10 and video).\n          \n            \n            Figure 8: Evaluation on one frame of synthetic CoA sequence : (a) our result, (b) results with STFilt [Richardt et al. 2012], (c) result with SBRol [Valgaerts et al. 2012]; (d) distance error heat map of our result (red=high), (e) of the much higher error of STFilt, and (f) the offline SBRol method with similar error to ours.\n          \n          ACM Transactions on Graphics, Vol. 33, No. 6, Article 200, Publication Date: November 2014\n          200:8\n          ?\n          C. Wu et al.\n          \n            \n               Seq. CoA DA\n              \n                \n                  \n                    \n                     d e (?)\n                     d n (?)\n                     d e (?)\n                     d n (?)\n                  \n                \n                \n                  \n                     Ours\n                     0.43(0.24)\n                     5.75(5.31)\n                     0.43(0.23)\n                     7.08(6.31)\n                  \n                  \n                     STFilt\n                     1.41(1.02)\n                     10.32(11.22)\n                     1.36(0.99)\n                     10.28(10.65)\n                  \n                  \n                     SBRol\n                     0.43(0.27)\n                     5.26(4.85)\n                     0.42(0.22)\n                     6.94(5.76)\n                  \n                \n              \n            \n            Seq. CoA DA d e (?) d n (?) d e (?) d n (?) Ours 0.43(0.24) 5.75(5.31) 0.43(0.23) 7.08(6.31) STFilt 1.41(1.02) 10.32(11.22) 1.36(0.99) 10.28(10.65) SBRol 0.43(0.27) 5.26(4.85) 0.42(0.22) 6.94(5.76)\n            Table 2: Quantitative comparison against related methods. Our online approach performs significantly better in terms of distance d e and normal error d n (stddv. ? in brackets) than a competing\n          \n          state-of-the-art online method (STFilt [Richardt et al. 2012]), and even comes close to an offline shading-based refinement method (SBRol [Valgaerts et al. 2012]).\n          \n            \n            Figure 9: Distance and normal error on synthetic sequence DA over all frames for our method, the RGB-D upsampling method STFilt [Richardt et al. 2012], and the offline approach SBRol [Valgaerts et al. 2012].\n          \n        \n        \n          6.2 Applications\n          Real-time 3D reconstruction We used our algorithm together with the real-time voxel-hashing-based hand-held scanning approach for depth cameras proposed by [Nie?ner et al. 2013]. With our drastically enhanced depth map quality, full 3D models with more detail can be reconstructed (voxel size of 0.5mm); see Fig. 1 and Fig. 11 . Deformable 3D reconstruction We also integrated our algorithm into the real-time deformable tracking approach by [Zollh?fer et al. 2014a], which leads to improved space-time coherent reconstructions of a non-rigidly deforming template, see Fig. 13 .\n        \n        \n          6.3 Limitations\n          Our approach enables a leap forward in real-time scene reconstruction with depth cameras, but is still subject to several well-known shape from shading limitations. For instance, texture-copy artifacts are introduced by high-frequency albedo changes, causing problems for both online and offline methods [Richardt et al. 2012; Han et al. 2013; Yu et al. 2013]. Our adaptive refinement (Sect. 4.2) is efficient to mitigate the visual presence of these artifacts. However, we still cannot completely prevent them; for instance see Fig. 4 and Fig. 12 (top left). Generally, we believe that the underconstrained nature of\n          \n            \n            Figure 10: On real-data, our approach (right) generates more detailed results at higher frame rates than STFilt [Richardt et al. 2012] (middle).\n          \n          \n            \n            Figure 11: Our enhanced depth maps used in the voxel-hashingbased framework of [Nie?ner et al. 2013]. Reconstruction with (white) and without (blue) refinement.\n          \n          this problem will inspire future research directions.\n          In contrast to some offline methods, our real-time constraint allows only for a simplified light transport model. That is, our initial constant albedo assumption may exacerbate texture copying on general scenes; however, our results show that in practice, very faithful surface reconstructions with spatially-varying albedo are feasible. Due to the second order spherical harmonics representation, non-diffuse surfaces are still challenging for our method. In addition, we are not able to improve depth maps around silhouettes since the normal is undefined. We further assume a one-bounce local illumination and ignore lighting visibility, which may lead to errors in some cases. For example, hard shadows may result in artificial detail around their boundaries. An interesting future direction would be the incorporation of a screen-space ambient occlusion term to account for local visibility.\n        \n      \n      \n        7 Conclusion\n        We presented the first method for real-time shading-based refinement of RGB-D data captured with commodity depth cameras in general uncontrolled scenes. This is enabled by a new real-time inverse rendering framework that approximates time-varying incident lighting as well as albedo in the scene. The algorithm then refines the raw depth of the camera by optimizing a complex non-linear energy using a new highly parallel Gauss-Newton solver on the GPU. The results are superior to previous online depth map enhancement algorithms, and on par with offline shape-from-shading approaches. Our experiments further show that the approach enables a new level of accuracy in handheld 3D scanning as well as deformable surface tracking.\n      \n      \n        Acknowledgements\n        This research was co-funded by the German Research Foundation (DFG), grant GRK-1773 Heterogeneous Image Systems, the ERC Starting Grant 335545 CapReal, and the Max Planck Center for Visual Computing and Communication. We would also like to thank Angela Dai for the video voice over.\n        ACM Transactions on Graphics, Vol. 33, No. 6, Article 200, Publication Date: November 2014\n        Real-time Shading-based Refinement for Consumer Depth Cameras\n        ?\n        200:9\n        \n          \n          Figure 12: From a raw depth map and an aligned RGB image, our approach generates rich details on real-world data. Our method captures far more details than the raw depth map on static scenes, i.e., Socrates sequence, Lucy sequence and Flower sequence. Besides, our per-frame refinement method can be readily applied to dynamic scenes, e.g. human performances, as shown on Body sequence and Upper Body sequence. The closeup of the scarf region demonstrates the amount of small-scale detail captured by our method.\n        \n        \n          \n          Figure 13: Our enhanced depth maps (middle, gray) used in the non-rigid tracking framework of [Zollh?fer et al. 2014a]. Note the increased amount of small-scale detail in the reconstruction (middle, blue).\n        \n      \n      \n        References\n        \n          A HMED , A. H., AND F ARAG , A. A. 2007. Shape from shading under various imaging conditions. In Proc. CVPR, 1?8.\n          A ODHA , O. M., C AMPBELL , N. D. F., N AIR , A., AND B ROSTOW , G. J. 2012. Patch based synthesis for single depth image superresolution. In Proc. ECCV, 71?84.\n          B ARRON , J. T., AND M ALIK , J. 2013. Intrinsic scene properties from a single rgb-d image. In Proc. CVPR, IEEE, 17?24.\n          B ARRON , J. T., AND M ALIK , J. 2013. Shape, illumination, and reflectance from shading. Tech. rep., EECS, UC Berkeley, May.\n          B EDER , C., B ARTCZAK , B., AND K OCH , R. 2007. A combined approach for estimating patchlets from PMD depth images and stereo intensity images. In Proc. DAGM, 11?20.\n          B EELER , T., B ICKEL , B., B EARDSLEY , P., S UMNER , B., AND G ROSS , M. 2010. High-quality single-shot capture of facial geometry. Proc. SIGGRAPH 29, 3.\n          B EELER , T., B RADLEY , D., Z IMMER , H., AND G ROSS , M. 2012. Improved reconstruction of deforming surfaces by cancelling ambient occlusion. In Proc. ECCV, 30?43.\n          B ERMANO , A., B RADLEY , D., Z UND , T. B. F., N OWROUZEZAHRAI , D., B ARAN , I., S ORKINE -H ORNUNG , O., P FISTER , H., S UMNER , R., B ICKEL , B., AND G ROSS , M. 2014. Facial performance enhancement using dynamic shape space analysis. ACM Transactions on Graphics 33. to appear.\n          B ESL , P. J., AND M C K AY , N. D. 1992. Method for registration of 3-d shapes. In Robotics-DL tentative, International Society for Optics and Photonics, 586?606.\n          B OHME  ? , M., H AKER , M., M ARTINETZ , T., AND B ARTH , E. 2008. Shading constraint improves accuracy of time-of-flight measurements. In Proc. CVPR Workshop.\n          C HAN , D., B UISMAN , H., T HEOBALT , C., AND T HRUN , S. 2008. A noise-aware filter for real-time depth upsampling. In ECCV\n        \n      \n      \n        Workshop on multi-camera & multi-modal sensor fusion.\n        C UI , Y., S CHUON , S., T HRUN , S., S TRICKER , D., AND T HEOBALT , C. 2013. Algorithms for 3d shape scanning with a depth camera. IEEE Trans. PAMI 35, 5, 1039?1050. D EBEVEC , P. 1998. Rendering synthetic objects into real scenes: Bridging traditional and image-based graphics with global illumination and high dynamic range photography. In Proc. SIGGRAPH, 189?198. D EBEVEC , P. 2012. The light stages and their applications to photoreal digital actors. In SIGGRAPH Asia Technical Briefs. D IEBEL , J., AND T HRUN , S. 2006. An application of Markov Random Fields to range sensing. In Proc. NIPS, 291?298.  D OLSON , J., B AEK , J., P LAGEMANN , C., AND T HRUN , S. 2010. Upsampling range data in dynamic environments. In Proc. CVPR. F ANELLO , S., K ESKIN , C., I ZADI , S., K OHLI , P., ET AL . 2014. Learning to be a depth camera for close-range human capture and interaction. ACM Trans. Graph. 33, 4. G HOSH , A., F YFFE , G., T UNWATTANAPONG , B., B USCH , J., Y U , X., AND D EBEVEC , P. 2011. Multiview face capture using polarized spherical gradient illumination. ACM Trans. Graph. 30. G UDMUNDSSON , S. A., A ANAES , H., AND L ARSEN , R. 2008. Fusion of stereo vision and time-of-flight imaging for improved 3d estimation. Int. J. Intell. Syst. Technol. Appl. 5, 425?433. H AN , Y., L EE , J.-Y., AND K WEON , I. S. 2013. High quality shape from a single rgb-d image under uncalibrated natural illumination. In Proc. ICCV. H ERN ANDEZ  ? , C., V OGIATZIS , G., AND C IPOLLA , R. 2008. Multiview photometric stereo. IEEE PAMI 30, 3, 548?554. H ORN , B. K. 1974. Determining lightness from an image. Computer graphics and image processing 3, 4, 277?299. H ORN , B. K. 1975. Obtaining shape from shading information. The psychology of computer vision, 115?155. I ZADI , S., K IM , D., H ILLIGES , O., M OLYNEAUX , D., N EW COMBE , R., K OHLI , P., S HOTTON , J., H ODGES , S., F REEMAN , D., D AVISON , A., AND F ITZGIBBON , A. 2011. Kinectfusion: Real-time 3d reconstruction and interaction using a moving depth camera. In Proc. UIST, ACM, 559?568. K HAN , N., T RAN , L., AND T APPEN , M. 2009. Training manyparameter shape-from-shading models using a surface database. In Proc. ICCV Workshop. K OPF , J., C OHEN , M. F., L ISCHINSKI , D., AND U YTTENDAELE , M. 2007. Joint bilateral upsampling. ACM Trans. Graph. 26, 3. L INDNER , M., K OLB , A., AND H ARTMANN , K. 2007. Datafusion of PMD-based distance-information and high-resolution RGB-images. In Proc. ISSCS, 121?124. M ULLIGAN , J., AND B ROLLY , X. 2004. Surface determination by photometric ranging. In Proc. CVPR Workshop. N EHAB , D., R USINKIEWICZ , S., D AVIS , J., AND R AMAMOORTHI , R. 2005. Efficiently combining positions and normals for precise 3D geometry. Proc. SIGGRAPH 24, 3. N EWCOMBE , R. A., I ZADI , S., ET AL . 2011. Kinectfusion: Realtime dense surface mapping and tracking. In Mixed and augmented reality (ISMAR), IEEE international symposium on, 127? 136. N IESSNER , M., Z OLLH OFER  ? , M., I ZADI , S., AND S TAMMINGER , M. 2013. Real-time 3d reconstruction at scale using voxel hashing. ACM Transactions on Graphics (TOG) 32, 6, 169. P ARK , J., K IM , H., T AI , Y.-W., B ROWN , M. S., AND K WEON , I.S. 2011. High quality depth map upsampling for 3d-tof cameras. In ICCV, IEEE, 1623?1630. P RADOS , E., AND F AUGERAS , O. 2005. Shape from shading: a well-posed problem? In Proc. CVPR. R AMAMOORTHI , R., AND H ANRAHAN , P. 2001. A signalprocessing framework for inverse rendering. In Proc. SIGGRAPH, 117?128. R ICHARDT , C., S TOLL , C., D ODGSON , N. A., S EIDEL , H.-P., AND T HEOBALT , C. 2012. Coherent spatiotemporal filtering, upsampling and rendering of RGBZ videos. Computer Graphics Forum (Proceedings of Eurographics) 31, 2 (May). T UNWATTANAPONG , B., F YFFE , G., G RAHAM , P., B USCH , J., Y U , X., G HOSH , A., AND D EBEVEC , P. 2013. Acquiring reflectance and shape from continuous spherical harmonic illumination. ACM Transactions on Graphics (TOG) 32, 4, 109. V ALGAERTS , L., W U , C., B RUHN , A., S EIDEL , H.-P., AND T HEOBALT , C. 2012. Lightweight binocular facial performance capture under uncontrolled lighting. ACM Trans. Graph. 31, 6. W EBER , D., B ENDER , J., S CHNOES , M., S TORK , A., AND F ELL NER , D. 2013. Efficient gpu data structures and methods to solve sparse linear systems in dynamics applications. Computer Graphics Forum 32, 1, 16?26. W EI , G.-Q., AND H IRZINGER , G. 1996. Learning shape from shading by a multilayer network. IEEE Trans. Neural Networks. W U , C., V ARANASI , K., L IU , Y., S EIDEL , H.-P., AND T HEOBALT , C. 2011. Shading-based dynamic shape refinement from multiview video under general illumination. In Proc. ICCV. W U , C., S TOLL , C., V ALGAERTS , L., AND T HEOBALT , C. 2013. On-set performance capture of multiple actors with a stereo camera. ACM Transactions on Graphics (TOG) 32, 6, 161. Y ANG , Q., Y ANG , R., D AVIS , J., AND N ISTR , D. 2007. Spatialdepth super resolution for range images. In Proc. CVPR, IEEE. Y U , L.-F., Y EUNG , S.-K., T AI , Y.-W., AND L IN , S. 2013. Shading-based shape refinement of rgb-d images. In Proc. CVPR. Z HANG , Z., T SA , P.-S., C RYER , J. E., AND S HAH , M. 1999. Shape from shading: A survey. IEEE PAMI 21, 8, 690?706. Z HU , J., W ANG , L., Y ANG , R., AND D AVIS , J. 2008. Fusion of time-of-flight depth and stereo for high accuracy depth maps. In\n        ACM Transactions on Graphics, Vol. 33, No. 6, Article 200, Publication Date: November 2014\n        200:10\n        ?\n        C. Wu et al.\n      \n      \n        Proc. CVPR.\n        Z OLLH OFER  ? , M., N IESSNER , M., I ZADI , S., R EHMANN , C., Z ACH , C., F ISHER , M., W U , C., F ITZGIBBON , A., L OOP , C., T HEOBALT , C., AND S TAMMINGER , M. 2014. Real-time non-rigid reconstruction using an rgb-d camera. ACM TOG (Proc. SIGGRAPH) 33, 4. Z OLLH OFER  ? , M., T HIES , J., C OLAIANNI , M., S TAMMINGER , M., AND G REINER , G. 2014. Interactive model-based reconstruction of the human head using an rgb-d sensor. Computer Animation and Virtual Worlds 25, 3-4, 213?222.\n        ACM Transactions on Graphics, Vol. 33, No. 6, Article 200, Publication Date: November 2014\n      \n    \n  ",
  "resources" : [ ]
}