{
  "uri" : "sig2014-a51-hamalainen_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2014/a51-hamalainen_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Online Motion Synthesis Using Sequential Monte Carlo",
    "published" : null,
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ ]
  },
  "bagOfWords" : [ "7f8b5f8feed9bcfcf37a4fe862120e1cb11a75918c556dc9e04ce74b49aa92a0", "p74", "10.1145", "2601097.2601218", "name", "identification", "possible", "Online", "Motion", "synthesis", "use", "sequential", "Monte", "Carlo", "Perttu", "h?m?l?inen", "Sebastian", "Eriksson", "Esa", "Tanskanen", "Aalto", "University", "Figure", "example", "synthesize", "animation", "-lrb-", "downsample", "from", "original", "30", "fp", "-rrb-", "frame", "balancing", "user-specified", "ready", "stance", "frame", "2,3", "character", "anticipate", "ball", "would", "hit", "dodge", "down", "frame", "anticipation", "pose", "get", "enough", "leg", "swing", "momentum", "frame", "5,6,7", "swing", "leg", "around", "follow", "rest", "body", "end", "up", "again", "ready", "stance", "ready", "stance", "face", "direction", "give", "goal", "we", "present", "Model-Predictive", "Control", "-lrb-", "MPC", "-rrb-", "system", "online", "synthesis", "interactive", "physically", "valid", "character", "motion", "we", "system", "enable", "complex", "-lrb-", "36-dof", "-rrb-", "3d", "human", "character", "model", "balance", "give", "pose", "dodge", "projectile", "improvise", "get", "up", "strategy", "force", "lose", "balance", "all", "dynamic", "unpredictable", "environment", "contact-rich", "predictive", "reactive", "motion", "have", "previously", "only", "be", "generate", "offline", "use", "handcrafted", "state", "machine", "dataset", "reference", "motion", "which", "we", "system", "do", "require", "each", "animation", "frame", "we", "system", "generate", "trajectory", "character", "control", "parameter", "near", "future", "few", "seconds", "use", "sequential", "Monte", "Carlo", "sampling", "we", "main", "technical", "contribution", "multimodal", "tree-based", "sampler", "simultaneously", "explore", "multiple", "different", "near-term", "control", "strategy", "represent", "parameter", "spline", "strategy", "represent", "each", "sample", "evaluate", "parallel", "use", "causal", "physics", "engine", "best", "strategy", "determine", "objective", "function", "measure", "goal", "achievement", "fluidity", "motion", "etc.", "use", "control", "signal", "current", "frame", "maintain", "multiple", "hypothesis", "crucial", "adapt", "dynamically", "change", "environment", "cr", "category", "i.", "3.7", "-lsb-", "Computer", "Graphics", "-rsb-", "three-dimensional", "graphic", "realism?animation", "keyword", "animation", "motion", "synthesis", "motion", "planning", "sequential", "Monte", "Carlo", "particle", "filter", "optimization", "Links", "dl", "pdf", "EB", "IDEO", "e-mail", "first.last@aalto.fi", "ACM", "Reference", "Format", "H?m?l?inen", "P.", "Eriksson", "S.", "Tanskanen", "E.", "Kyrki", "V.", "Lehtinen", "J.", "2014", "Online", "Motion", "synthesis", "use", "Sequential", "Monte", "Carlo", "ACM", "Trans", "graph", "33", "Article", "51", "-lrb-", "July", "2014", "-rrb-", "12", "page", "dous", "10.1145", "2601097.2601218", "http://doi.acm.org/10.1145/2601097.2601218", "copyright", "Notice", "permission", "make", "digital", "hard", "copy", "all", "part", "work", "personal", "classroom", "use", "grant", "without", "fee", "provide", "copy", "make", "distribute", "profit", "commercial", "advantage", "copy", "bear", "notice", "full", "citation", "fus", "rst", "page", "copyright", "component", "work", "own", "other", "than", "author", "-lrb-", "-rrb-", "must", "honor", "abstract", "credit", "permit", "copy", "otherwise", "republish", "post", "server", "redistribute", "list", "require", "prior", "specific", "permission", "and/or", "fee", "request", "permission", "from", "permissions@acm.org", "2014", "copyright", "hold", "Owner/Author", "publication", "rights", "license", "ACM", "0730-0301/14", "07-art51", "15.00", "DOI", "http://dx.doi.org/10.1145/2601097.2601218", "Ville", "Kyrki", "Jaakko", "Lehtinen", "1,2", "NVIDIA", "introduction", "production", "3d", "character", "animation", "slow", "laborious", "process", "further", "one", "aim", "expressive", "interaction", "realism", "amount", "animation", "require", "interactive", "software", "like", "game", "practically", "infinite", "long", "line", "research", "address", "problem", "seek", "transform", "animator", "game", "designer", "choreographer", "who", "command", "virtual", "agent", "algorithmically", "synthesize", "desire", "motion", "base", "high-level", "goal", "successful", "synthesis", "result", "physical", "validity", "-lrb-", "realistic", "body", "part", "mass", "muscle", "force", "respect", "non-penetrating", "contact", "friction", "-rrb-", "lead", "naturally", "movement", "quality", "like", "squash-and-stretch", "anticipation", "-lsb-", "Witkin", "Kass", "1988", "Lasseter", "1987", "-rsb-", "follow", "seminal", "work", "e.g.", "Witkin", "Kass", "-lsb-", "1988", "-rsb-", "sim", "-lsb-", "1994", "-rsb-", "basic", "behavior", "balancing", "locomotion", "can", "now", "generate", "real-time", "offline", "system", "exist", "synthesize", "more", "complex", "motion", "-lsb-", "Geijtenbeek", "et", "al.", "2011", "Al", "Borno", "et", "al.", "2013", "Erez", "et", "al.", "2013", "-rsb-", "however", "online", "interactive", "synthesis", "difficult", "contact-rich", "movement", "acrobatics", "remain", "challenge", "particularly", "unpredictable", "dynamic", "environment", "where", "prior", "animation", "motion", "capture", "datum", "unavailable", "paper", "tackle", "problem", "use", "novel", "approach", "base", "sequential", "Monte", "Carlo", "-lrb-", "SMC", "-rrb-", "method", "multimodal", "tracking", "here", "apply", "trajectory", "optimization", "Model-Predictive", "Control", "-lrb-", "MPC", "-rrb-", "we", "present", "trajectory", "optimization", "system", "two", "key", "design", "goal", "-rrb-", "result", "movement", "should", "creative", "interesting", "minimal", "input", "datum", "i.e.", "goal", "constraint", "instead", "pre-made", "animation", "motion", "capture", "datum", "-rrb-", "system", "should", "operate", "interactive", "frame", "rate", "design", "time", "enable", "rapid", "iteration", "goal", "constraint", "output", "we", "system", "time-varying", "control", "strategy", "drive", "character", "towards", "specify", "goal", "while", "account", "change", "environment", "furthermore", "output", "can", "map", "more", "lightweight", "runtime", "controller", "use", "standard", "machine", "learning", "technique", "we", "score", "potential", "control", "strategy", "objective", "function", "-lrb-", "fitness", "function", "-rrb-", "measure", "goal", "attainment", "physical", "property", "motion", "function", "highly", "non-convex", "multimodal", "reflect", "fact", "many", "strategy", "may", "lead", "desire", "goal", "naturally", "some", "better", "than", "other", "smoother", "use", "less", "energy", "more", "natural", "however", "find", "global", "maximum", "use", "standard", "nonlinear", "optimization", "robust", "approach", "since", "change", "environment", "may", "unpredictably", "change", "objective", "function", "attain", "robustness", "face", "uncertainty", "we", "maintain", "discrete", "family", "potential", "control", "strategy", "formally", "treat", "each", "control", "strategy", "point", "high-dimensional", "space", "-lrb-", "make", "explicit", "below", "-rrb-", "we", "evolve", "population", "sample", "use", "sequential", "Monte", "Carlo", "sampling", "so", "ensemble", "remain", "well-distributed", "even", "when", "fitness", "landscape", "change", "allow", "optimizer", "switch", "strategy", "change", "environment", "so", "dictate", "we", "formulation", "also", "allow", "straightforward", "parallelization", "objective", "function", "value", "sample", "can", "compute", "arbitrary", "order", "we", "further", "exploit", "temporal", "coherence", "form", "sample", "generation", "prior", "current", "frame", "base", "previous", "frame", "we", "contribution", "introduction", "smc", "online", "synthesis", "physically", "valid", "character", "motion", "novel", "sequential", "sampling", "method", "allow", "easy", "integration", "machine", "learning", "sampler", "utilize", "kd-tree", "adaptive", "sampling", "online", "near-real-time", "synthesis", "complex", "get", "up", "strategy", "e.g.", "plant", "hand", "ground", "lean", "hand", "allow", "move", "foot", "closer", "finally", "shift", "weight", "foot", "rise", "up", "example", "motion", "generate", "we", "system", "show", "Figure", "we", "character", "able", "balance", "give", "pose", "dodge", "projectile", "improvise", "variety", "complex", "get", "up", "strategy", "force", "lose", "balance", "all", "without", "precomputation", "training", "datum", "figure", "give", "overview", "main", "component", "we", "system", "include", "multimodal", "sampler/optimizer", "generate", "motion", "plan", "parallelized", "physics", "engine", "use", "simulate", "movement", "result", "from", "each", "motion", "plan", "optional", "machine", "learn", "system", "generate", "one", "more", "prediction", "use", "seed", "adaptive", "sampling", "each", "frame", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "51", "publication", "date", "July", "2014", "51:2", "P.", "H?m?l?inen", "et", "al.", "current", "control", "state", "Optimizer", "result", "simulation", "physics", "goal", "prediction", "machine", "training", "datum", "learn", "figure", "high-level", "system", "architecture", "related", "work", "physically", "valid", "Procedural", "Character", "Animation", "vast", "research", "procedural", "character", "animation", "challenge", "review", "thoroughly", "within", "scope", "paper", "central", "work", "spacetime", "constraint", "Witkin", "Kass", "-lsb-", "1988", "-rsb-", "have", "hundred", "cite", "papers", "more", "complete", "review", "we", "refer", "Geijtenbeek", "et", "al.", "-lsb-", "2011", "-rsb-", "we", "focus", "optimization", "base", "animation", "active", "character", "-lrb-", "e.g.", "locomotion", "jump", "dodge", "-rrb-", "instead", "passive", "ragdoll", "trivial", "implement", "use", "off-the-shelf", "physics", "engine", "like", "Open", "Dynamics", "Engine", "Bullet", "we", "do", "discuss", "procedural", "animation", "technique", "parametric", "motion", "graph", "-lsb-", "heck", "Gleicher", "2007", "-rsb-", "enable", "goal-driven", "behavior", "base", "library", "animation", "datum", "do", "enforce", "physical", "constraint", "non-penetrating", "contact", "technique", "cover", "e.g.", "review", "Pejsa", "pandzic", "-lsb-", "2010", "-rsb-", "Offline", "Optimization", "problem", "synthesize", "diverse", "physically", "valid", "motion", "base", "spacetime", "constraint", "-lrb-", "e.g.", "jump", "land", "specific", "pose", "specify", "time", "while", "minimize", "energy", "expenditure", "-rrb-", "have", "largely", "be", "solve", "offline", "case", "much", "work", "have", "focus", "extension", "quadratic", "programming", "-lrb-", "qp", "-rrb-", "formulation", "Witkin", "Kass", "-lsb-", "Witkin", "Kass", "1988", "Cohen", "1992", "Fang", "Pollard", "2003", "Safonova", "et", "al.", "2004", "-rsb-", "where", "optimize", "variable", "include", "root", "position", "rotation", "joint", "rotation", "each", "animation", "frame", "qp", "well", "suit", "spacetime", "optimization", "target", "pose", "can", "define", "equality", "constraint", "contact", "inequality", "constraint", "energy", "minimization", "smoothness", "can", "include", "quadratic", "cost", "however", "synthesize", "motion", "have", "be", "limit", "need", "prior", "knowledge", "contact", "information", "what", "frame", "character", "should", "touch", "ground", "which", "body", "part", "limitation", "overcome", "Mordatch", "et", "al.", "-lsb-", "2012", "-rsb-", "who", "introduce", "auxiliary", "optimize", "variable", "specify", "contact", "information", "who", "use", "l-bfg", "optimization", "Motion", "synthesis", "control", "Problem", "Spacetime", "optimization", "can", "also", "approach", "control", "problem", "case", "optimize", "variable", "describe", "evolution", "control", "parameter", "joint", "torque", "over", "time", "result", "motion", "compute", "forward", "dynamics", "simulation", "-lsb-", "ngo", "mark", "1993", "Wampler", "Popovi", "2009", "Al", "Borno", "et", "al.", "2013", "-rsb-", "way", "problem", "fall", "domain", "MPC", "control", "optimization", "have", "benefit", "physics", "constraint", "continuity", "contact", "handle", "frame-by-frame", "physics", "engine", "do", "have", "include", "optimization", "approach", "also", "handle", "additional", "dynamic", "object", "whereas", "direct", "Witkin", "Kass", "style", "spacetime", "formulation", "need", "additional", "variable", "each", "move", "object", "other", "hand", "symbolic", "expression", "Jacobians", "Hessians", "available", "which", "motivate", "use", "stochastic", "derivative-free", "optimization", "method", "dynamics", "simulation", "evaluate", "each", "sample", "control", "vector", "costly", "straightforward", "parallelize", "light", "recent", "work", "Mordatch", "et", "al.", "-lsb-", "2012", "-rsb-", "Al", "Borno", "et", "al.", "-lsb-", "2013", "-rsb-", "both", "deterministic", "spacetime", "optimization", "stochastic", "derivative-free", "control", "optimization", "appear", "equally", "suitable", "offline", "synthesis", "contact-rich", "complex", "acrobatic", "motion", "Online", "Optimization", "Control", "use", "prior", "datum", "consider", "online", "synthesis", "physically", "valid", "motion", "interactive", "frame", "rate", "various", "approach", "offline", "optimization", "have", "be", "use", "learn", "parameter", "neural", "network", "other", "controller", "type", "can", "use", "real-time", "physics", "simulation", "-lsb-", "sim", "1994", "Reil", "Husbands", "2002", "Geijtenbeek", "et", "al.", "2013", "-rsb-", "have", "drawback", "limited", "generalization", "novel", "situation", "Reference", "motion", "can", "track", "under", "disturbance", "e.g.", "use", "mpc", "approach", "short-horizon", "qp", "controller", "run", "intermittently", "augment", "proportional-derivate", "-lrb-", "pd", "-rrb-", "controller", "each", "simulation", "step", "-lsb-", "da", "silva", "et", "al.", "2008", "-rsb-", "preprocessing", "motion", "datum", "spacetime", "optimization", "use", "nonlinear", "quadratic", "regulator", "-lsb-", "Muico", "et", "al.", "2009", "-rsb-", "sampling-based", "optimization", "time-varying", "pose", "displacement", "relative", "reference", "trajectory", "-lsb-", "Liu", "et", "al.", "2010", "-rsb-", "exist", "controller", "can", "also", "combine", "form", "novel", "controller", "new", "goal", "-lsb-", "da", "Silva", "et", "al.", "2009", "-rsb-", "Online", "Optimization", "without", "prior", "datum", "operate", "without", "reference", "motion", "controller", "complicate", "online", "synthesis", "we", "work", "fall", "category", "we", "draw", "inspiration", "from", "two", "main", "prior", "system", "Jain", "et", "al.", "-lsb-", "2009", "-rsb-", "have", "implement", "balancing", "step", "other", "behavior", "use", "frame-by-frame", "qp", "optimizer", "augment", "state", "machine", "break", "movement", "down", "subgoal", "can", "implement", "planning", "horizon", "single", "frame", "subgoal", "quite", "detailed", "move", "lift", "foot", "so", "ground", "projection", "character?s", "center", "mass", "lie", "midway", "between", "foot", "raise", "concern", "about", "robustness", "e.g.", "obstacle", "foot", "placement", "decrease", "probability", "creative", "emergent", "movement", "general", "trade-off", "between", "minimize", "computational", "cost", "-lrb-", "short", "planning", "horizon", "-rrb-", "minimize", "amount", "prior", "information", "assumption", "need", "form", "motion", "datum", "state", "machine", "definition", "we", "system", "do", "need", "motion", "datum", "we", "optimizer", "automatically", "generate", "balancing", "footstep", "without", "predefined", "state", "thanks", "planning", "horizon", "up", "seconds", "which", "enough", "complete", "rebalance", "step", "even", "roll", "ground", "bounce", "back", "up", "we", "approach", "also", "inherently", "predictive", "character", "can", "anticipate", "event", "without", "hand-coded", "prediction", "algorithm", "we", "work", "perhaps", "closest", "Tassa", "et", "al.", "-lsb-", "2012", "-rsb-", "who", "also", "study", "action", "balancing", "get", "up", "use", "multithreaded", "physics", "engine", "forward-simulate", "candidate", "trajectory", "we", "extend", "approach", "three", "key", "area", "we", "use", "longer", "planning", "horizon", "-lrb-", "up", "seconds", "vs.", "0.5", "-rrb-", "simultaneously", "track", "multiple", "mode", "fitness", "function", "-lrb-", "ilqg", "method", "unimodal", "-rrb-", "use", "more", "complex", "character", "model", "include", "3-dof", "joint", "result", "we", "system", "add", "ability", "plan", "movement", "several", "phase", "e.g.", "get", "up", "plant", "hand", "push", "hand", "allow", "move", "foot", "closer", "shift", "weight", "foot", "show", "Figure", "14", "character", "Tassa", "et", "al.", "able", "get", "up", "from", "lie", "position", "single", "bounce", "imply", "rather", "loose", "limit", "control", "torque", "which", "simplify", "planning", "problem", "later", "work", "problem", "spring", "straight", "up", "solve", "design", "state", "machine", "explicitly", "break", "down", "task", "sequence", "subtask", "-lsb-", "Erez", "et", "al.", "2013", "-rsb-", "sequential", "Monte", "Carlo", "Sampling", "SMC", "have", "be", "use", "widely", "various", "tracking", "problem", "-lsb-", "Arulampalam", "et", "al.", "2002", "Doucet", "Johansen", "2009", "-rsb-", "body", "tracking", "use", "computer", "vision", "especially", "close", "we", "work", "many", "tracking", "system", "feature", "both", "particle", "filter", "-lrb-", "form", "smc", "-rrb-", "articulate", "human", "body", "model", "-lsb-", "Deutscher", "et", "al.", "2000", "Schmidt", "et", "al.", "2006", "-rsb-", "SMC", "have", "also", "be", "recently", "introduce", "control", "optimization", "-lsb-", "Stahl", "Hauth", "2011", "Kantas", "et", "al.", "2009", "de", "villiers", "et", "al.", "2011", "-rsb-", "best", "we", "knowledge", "have", "be", "apply", "motion", "synthesis", "complex", "articulate", "character", "although", "we", "sampler", "bear", "similarity", "e.g.", "particle", "filter", "variant", "discuss", "Arulampalam", "et", "al.", "-lsb-", "2002", "-rsb-", "more", "precisely", "sequential", "version", "mutate", "kd-tree", "importance", "sampling", "H?m?l?inen", "et", "al.", "-lsb-", "2006", "-rsb-", "which", "turn", "base", "hierarchical", "subdivision", "sampling", "Kajiya", "-lsb-", "1986", "-rsb-", "compare", "particle", "filter", "we", "apply", "similar", "prediction", "weight", "update", "resample", "operation", "sample", "formula", "differ", "tree", "structure", "use", "compute", "sample", "weight", "adaptive", "exploration", "variance", "addition", "h?m?l?inen", "Kajiya", "many", "other", "have", "combine", "kd-tree", "sampling", "example", "Thrun", "et", "al.", "-lsb-", "2000", "-rsb-", "describe", "bayesian", "mobile", "robot", "localization", "use", "kd-tree", "sample", "weight", "computing", "conditional", "sampling", "from", "precomputed", "model", "joint", "distribution", "pose", "observation", "Rudoy", "Wolfe", "-lsb-", "2006", "-rsb-", "building", "Ihler", "et", "al.", "-lsb-", "2003", "-rsb-", "describe", "efficient", "tree-based", "sampling", "from", "product", "gaussian", "mixture", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "51", "publication", "date", "July", "2014", "Online", "Motion", "synthesis", "use", "sequential", "Monte", "Carlo", "51:3", "Figure", "illustration", "basic", "principle", "smc", "track", "probability", "density", "-lrb-", "-rrb-", "approximate", "set", "sample", "which", "iteratively", "weighted", "resampled", "sample", "sampling", "step", "new", "sample", "draw", "from", "proposal", "density", "base", "previous", "sample", "analogous", "how", "many", "stochastic", "optimization", "method", "mutate", "sample", "explore", "parameter", "space", "during", "resampling", "step", "sample", "peak", "-lrb-", "-rrb-", "produce", "more", "offspring", "while", "other", "may", "die", "out", "note", "weight", "depict", "here", "only", "exemplary", "exact", "weighting", "formula", "vary", "between", "method", "adaptive", "sequential", "importance", "sample", "3.1", "overview", "we", "seek", "control", "physical", "character", "towards", "attain", "goal", "we", "formulate", "find", "global", "maximum", "real-valued", "non-negative", "objective", "function", "-lrb-", "fitness", "function", "-rrb-", "-lrb-", "-rrb-", "where", "vector", "define", "control", "strategy", "represent", "timevary", "target", "joint", "angle", "other", "parameter", "explain", "detail", "section", "4.2", "Time", "parameter", "rather", "than", "domain", "variable", "account", "dynamic", "environment", "search", "space", "consist", "approximation", "all", "possible", "way", "drive", "actuator", "over", "couple", "seconds", "easy", "appreciate", "objective", "function", "multimodal", "mode", "shift", "appear", "vanish", "time", "multimodality", "objective", "function", "motivate", "sequential", "Monte", "Carlo", "-lrb-", "SMC", "-rrb-", "approach", "core", "idea", "smc", "method", "sequence", "target", "probability", "density", "approximate", "use", "evolve", "set", "weighted", "sample", "illustrate", "Figure", "sample", "set", "can", "use", "estimate", "mode", "density", "function", "thorough", "mathematical", "treatment", "can", "find", "e.g.", "-lsb-", "Arulampalam", "et", "al.", "2002", "Doucet", "Johansen", "2009", "-rsb-", "although", "term", "particle", "filter", "smc", "sometimes", "use", "interchangeably", "we", "use", "latter", "sense", "Doucet", "Johansen", "-lsb-", "2009", "-rsb-", "denote", "general", "class", "algorithm", "sampling", "all", "we", "parameter", "have", "minimum", "maximum", "value", "problem", "thus", "inequality-constrained", "axis-aligned", "plane", "i.e.", "space", "possible", "solution", "hypercube", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "51", "publication", "date", "July", "2014", "51:4", "P.", "H?m?l?inen", "et", "al.", "from", "sequence", "target", "probability", "density", "contrary", "particle", "filter", "approach", "we", "simply", "treat", "objective", "function", "-lrb-", "-rrb-", "sequence", "unnormalized", "target", "probability", "density", "instead", "modeling", "posterior", "density", "-lrb-", "-rrb-", "marginal", "likelihood", "-lrb-", "-rrb-", "where", "denote", "observation", "relate", "x.", "Doucet", "Johansen", "-lsb-", "2009", "-rsb-", "show", "particle", "filter", "can", "interpret", "special", "case", "generic", "smc", "algorithm", "which", "however", "require", "all", "sample", "draw", "from", "known", "proposal", "density", "we", "sampler", "avoid", "requirement", "allow", "insertion", "additional", "arbitrarily", "obtain", "candidate", "sample", "e.g.", "initial", "guess", "from", "machine", "learn", "component", "figure", "whereas", "typical", "smc", "weighting", "comprise", "division", "proposal", "density", "we", "use", "kd-tree-based", "estimate", "realize", "sample", "density", "provide", "unified", "way", "weighting", "random", "sample", "known", "proposal", "density", "initial", "guess", "proposal", "density", "additionally", "kd-tree", "provide", "means", "adapt", "search", "variance", "so", "sample", "low", "fitness", "region", "perturb", "more", "Algorithm", "Overview", "we", "maintain", "population", "-lcb-", "-lrb-", "-rrb-", "-rcb-", "sample", "associate", "fitness", "evolve", "over", "time", "each", "frame", "algorithm", "perform", "follow", "step", "prune", "sample", "set", "keep", "only", "best", "draw", "set", "new", "sample", "optional", "heuristic", "machine", "learning", "prediction", "may", "depend", "current", "state", "construct", "sampling", "prior", "-lrb-", "-rrb-", "base", "sample", "insert", "sample", "kd-tree", "construct", "adaptive", "pdf", "until", "budget", "sample", "reach", "draw", "new", "sample", "from", "-lrb-", "-rrb-", "use", "each", "new", "sample", "adaptively", "update", "prior", "-lrb-", "-rrb-", "pick", "best", "sample", "use", "drive", "simulation", "forward", "current", "time", "step", "construction", "sampling", "prior", "-lrb-", "-rrb-", "its", "adaptive", "refinement", "describe", "section", "3.3", "detail", "outer", "loop", "present", "section", "3.4", "heuristic", "machine", "learning", "component", "detail", "section", "4.5", "3.2", "2d", "example", "provide", "visualization", "intuition", "we", "sampler", "apply", "motion", "optimization", "we", "present", "2d", "problem", "nonlinearity", "multimodality", "arise", "from", "physical", "contact", "Figure", "give", "example", "objective", "function", "2d", "ball", "throw", "optimization", "optimize", "parameter", "-lsb-", "-rsb-", "where", "throw", "speed", "throw", "angle", "aim", "get", "ball", "close", "specify", "target", "possible", "Figure", "4A", "illustrate", "physical", "setup", "show", "two", "trajectory", "result", "from", "different", "target", "show", "black", "circle", "we", "illustrate", "two", "different", "objective", "function", "first", "illustrated", "Figure", "4B", "compute", "closest", "point", "-lrb-", "-rrb-", "trajectory", "target", "without", "regard", "timing", "i.e.", "-lrb-", "-rrb-", "exp", "-lcb-", "-lrb-", "-rrb-", "-rcb-", "produce", "landscape", "ridge", "each", "iteration", "sampling", "from", "model", "update", "model", "base", "sample", "also", "central", "some", "other", "optimization", "method", "Covariance", "Matrix", "Adaptation", "Evolution", "Strategy", "-lrb-", "cma-e", "-rrb-", "which", "have", "be", "gain", "popularity", "motion", "synthesis", "literature", "however", "whereas", "cma-e", "update", "unimodal", "model", "-lrb-", "single", "gaussian", "-rrb-", "we", "model", "multimodal", "Figure", "-rrb-", "2d", "ball", "throw", "test", "scene", "black", "circle", "denote", "throw", "target", "two", "example", "ball", "trajectory", "show", "red", "green", "-rrb-", "objective", "function", "map", "image", "intensity", "respect", "throw", "angle", "-lrb-", "horizontal", "axis", "-rrb-", "throw", "speed", "-lrb-", "vertical", "axis", "-rrb-", "green", "red", "circle", "show", "location", "example", "trajectory", "parameter", "space", "-rrb-", "objective", "function", "landscape", "when", "time", "hit", "target", "constrain", "-rrb-", "example", "100", "sample", "hypercube", "-lrb-", "rectangle", "2d", "case", "-rrb-", "generate", "one", "time", "step", "algorithm", "algorithm", "Adaptive", "Importance", "sample", "use", "kd-tree", "draw", "uniformly", "parameter", "space", "evaluate", "-lrb-", "-rrb-", "root", "-lcb-", "-lrb-", "-rrb-", "-rcb-", "repeat", "randomly", "select", "leaf", "node", "probability", "draw", "sample", "new", "-lrb-", "-rrb-", "evaluate", "-lrb-", "new", "-rrb-", "-lcb-", "-rcb-", "nsert", "ree", "-lrb-", "new", "-rrb-", "new", "leaf", "-lrb-", "new", "-rrb-", "where", "new", "end", "up", "-lrb-", "-rrb-", "contain", "previous", "sample", "10", "until", "#samples", "ridge", "correspond", "e.g.", "different", "number", "bounce", "two", "example", "trajectory", "mark", "red", "green", "circle", "second", "goal", "illustrate", "Figure", "4C", "aim", "hit", "target", "specify", "point", "time", "corresponding", "objective", "function", "simply", "evaluate", "distance", "target", "time", "trajectory", "now", "some", "ridge", "become", "peak", "landscape", "still", "multimodal", "ball", "can", "still", "reach", "target", "use", "variety", "different", "bounce", "sequence", "Figure", "4d", "illustrate", "adaptive", "kd-tree", "define", "sampling", "prior", "-lrb-", "-rrb-", "whose", "construction", "detail", "next", "section", "3.3", "adaptive", "importance", "sample", "use", "kd-tree", "we", "first", "describe", "adaptive", "importance", "sampler", "timeinvariant", "multimodal", "unnormalized", "objective", "function", "-lrb-", "-rrb-", "method", "propose", "-lsb-", "h?m?l?inen", "et", "al.", "2006", "-rsb-", "we", "repeat", "completeness", "extend", "sequential", "timevarying", "case", "process", "outline", "algorithm", "illustrate", "Figure", "Figure", "process", "draw", "sample", "approximately", "follow", "-lrb-", "-rrb-", "allocate", "more", "sample", "region", "where", "-lrb-", "-rrb-", "high", "approximation", "-lrb-", "-rrb-", "gradually", "improve", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "51", "publication", "date", "July", "2014", "Online", "Motion", "synthesis", "use", "sequential", "Monte", "Carlo", "51:5", "Figure", "1d", "illustration", "sampling", "from", "-lrb-", "-rrb-", "accord", "Algorithm", "generate", "sample", "inside", "select", "hypercube", "instead", "draw", "they", "from", "normal", "distribution", "circle", "denote", "sample", "rectangle", "illustrate", "adaptive", "space", "subdivision", "hypercube", "1d", "rectangle", "width", "hypercube", "volume", "rectangle", "area", "correspond", "sample", "weight", "algorithm", "step", "sample", "fall", "valley", "-lrb-", "-rrb-", "which", "bias", "sampling", "right", "side", "step", "D.", "each", "sample", "basic", "idea", "store", "sample", "coordinate", "objective", "function", "value", "-lcb-", "-lrb-", "-rrb-", "-rcb-", "kd-tree", "build", "over", "domain", "tree", "adaptively", "subdivide", "parameter", "space", "hypercube", "each", "leaf", "node", "hypercube", "volume", "each", "leaf", "give", "approximate", "measure", "local", "density", "sample", "weight", "-lrb-", "-rrb-", "give", "single-sample", "estimate", "integral", "-lrb-", "-rrb-", "over", "leaf", "hypercube", "one", "can", "interpret", "tree", "piecewise", "constant", "approximation", "-lrb-", "-rrb-", "from", "which", "one", "may", "draw", "sample", "first", "randomly", "select", "hypercube", "selection", "probability", "generate", "sample", "uniformly", "inside", "hypercube", "however", "show", "Figure", "na?ve", "kd-tree", "sampling", "easily", "lead", "bias", "value", "-lrb-", "-rrb-", "evaluate", "sample", "representative", "whole", "hypercube", "solution", "treat", "kd-tree", "mixture", "Gaussians", "illustrate", "Figure", "select", "hypercube", "sample", "draw", "from", "-lrb-", "-rrb-", "covariance", "diagonal", "element", "jj", "-lrb-", "ij", "-rrb-", "where", "scaling", "parameter", "-lrb-", "we", "use", "0.5", "-rrb-", "ij", "width", "leaf", "hypercube", "along", "dimension", "gaussian", "tail", "overlap", "neighbor", "hypercube", "which", "make", "more", "likely", "sampling", "cross", "valley", "recover", "from", "bias", "until", "sampling", "budget", "meet", "we", "draw", "new", "sample", "from", "mixture", "add", "sample", "tree", "split", "leaf", "node", "where", "new", "sample", "land", "between", "new", "old", "sample", "recompute", "weight", "two", "new", "leaf", "-lrb-", "equation", "-rrb-", "Figure", "treat", "kd-tree", "mixture", "Gaussians", "mixture", "component", "show", "black", "curve", "step", "Gaussians", "center", "sample", "standard", "deviation", "proportional", "hypercube", "width", "each", "dimension", "blur", "distribution", "model", "adaptively", "less", "blur", "where", "sample", "densely", "concentrated", "increase", "chance", "sample", "cross", "valley", "illustrate", "step", "B.", "-lrb-", "-rrb-", "sample", "tree", "tree", "average", "100", "tree", "figure", "Random", "tree", "leave", "function", "random", "sample", "middle", "two", "different", "kd-tree", "build", "from", "sample", "left", "right", "average", "100", "random", "tree", "3.4", "sequential", "kd-tree", "Sampler", "we", "application", "fitness", "landscape", "vary", "from", "frame", "frame", "environment", "change", "phenomenon", "illustrate", "Figure", "where", "change", "throw", "target", "change", "objective", "support", "change", "landscape", "we", "now", "construct", "sequential", "Monte", "Carlo", "sampler", "-lrb-", "algorithm", "-rrb-", "base", "adaptive", "sampler", "describe", "above", "build", "sampling", "distribution", "out", "sample", "take", "during", "previous", "frame", "allow", "we", "exploit", "temporal", "coherence", "frame", "set", "sample", "from", "previous", "frame", "first", "prune", "sample", "retain", "sample", "whose", "leaf", "node", "have", "largest", "weight", "-lrb-", "line", "2-5", "-rrb-", "large", "mean", "old", "sample", "get", "select", "re-evaluate", "often", "which", "may", "affect", "convergence", "rapidly", "change", "situation", "whereas", "low", "value", "make", "track", "multiple", "mode", "difficult", "little", "information", "retain", "between", "frame", "we", "use", "0.1", "all", "we", "result", "after", "pruning", "tree", "rebuild", "insert", "remain", "sample", "random", "order", "-lrb-", "line", "6-10", "-rrb-", "crucial", "avoid", "persistent", "spatial", "bias", "sampling", "tree", "building", "order", "affect", "hypercube", "volume", "consequently", "sample", "weight", "however", "randomization", "average", "bias", "out", "temporally", "figure", "show", "function", "sample", "three", "different", "kd-tree", "model", "build", "from", "same", "set", "sample", "average", "100", "tree", "we", "have", "also", "experiment", "build", "ensemble", "tree", "each", "time", "step", "further", "reduce", "variance", "volume", "estimate", "each", "sample", "we", "do", "so", "far", "have", "conclusive", "evidence", "benefit", "after", "rebuild", "we", "introduce", "new", "sample", "draw", "from", "set", "heuristic", "-lrb-", "line", "11-15", "see", "section", "4.5", "-rrb-", "after", "sampling", "prior", "complete", "tree", "contain", "best", "sample", "from", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "51", "publication", "date", "July", "2014", "51:6", "P.", "H?m?l?inen", "et", "al.", "Figure", "Tracking", "objective", "function", "landscape", "100", "sample", "ball", "throw", "target", "move", "red", "circle", "gray", "trajectory", "show", "sample", "generate", "each", "time", "step", "green", "trajectory", "green", "circle", "show", "select", "best", "sample", "benefit", "multimodality", "evident", "old", "mode", "vanish", "new", "one", "appear", "first", "frame", "-lrb-", "-rrb-", "sample", "initialize", "uniformly", "algorithm", "kD-Tree", "Sequential", "Importance", "sample", "each", "time", "step", "do", "prune", "tree", "sample", "while", "#samples", "do", "find", "leaf", "minimum", "emove", "ree", "-lrb-", "-rrb-", "end", "while", "randomly", "shuffle", "rebuild", "tree", "use", "old", "fitness", "lear", "ree", "-lrb-", "-rrb-", "-lcb-", "...", "-rcb-", "andom", "ermute", "-lrb-", "-lcb-", "...", "-rcb-", "-rrb-", "...", "do", "nsert", "ree", "-lrb-", "-rrb-", "10", "end", "draw", "guess", "from", "heuristic", "ml", "predictor", "11", "...", "do", "12", "raw", "uess", "-lrb-", "-rrb-", "13", "evaluate", "-lrb-", "-rrb-", "14", "nsert", "ree", "-lrb-", "-rrb-", "15", "end", "16", "-lcb-", "...", "-rcb-", "PDATE", "EAF", "EIGHTS", "-lrb-", "-rrb-", "perform", "adaptive", "sampling", "17", "repeat", "18", "randomly", "select", "leaf", "node", "probability", "19", "node", "contain", "old", "fitness", "-lrb-", "-rrb-", "20", "compute", "current", "fitness", "-lrb-", "-rrb-", "21", "-lrb-", "-rrb-", "update", "weight", "22", "else", "Sample", "algorithm", "23", "draw", "sample", "new", "-lrb-", "-rrb-", "24", "evaluate", "-lrb-", "new", "-rrb-", "25", "-lcb-", "-rcb-", "nsert", "ree", "-lrb-", "new", "-rrb-", "26", "-lrb-", "new", "-rrb-", "27", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "known", "28", "end", "29", "until", "#samples", "30", "end", "previous", "frame", "along", "new", "sample", "generate", "heuristic", "remainder", "algorithm", "perform", "adaptive", "sampling", "much", "like", "algorithm", "-lrb-", "line", "17-29", "-rrb-", "only", "difference", "when", "leaf", "contain", "stale", "fitness", "value", "from", "previous", "frame", "select", "recompute", "weight", "update", "new", "sample", "generate", "-lrb-", "line", "20-21", "-rrb-", "when", "node", "up-to-date", "fitness", "select", "refinement", "sampling", "proceeds", "algorithm", "-lrb-", "line", "23-27", "-rrb-", "when", "budget", "sample", "reach", "current", "sample", "set", "approximately", "distribute", "accord", "new", "fitness", "-lrb-", "-rrb-", "Figure", "show", "how", "algorithm", "track", "objective", "function", "mode", "2d", "example", "when", "ball", "throw", "target", "move", "3.5", "Greedy", "Sampling", "after", "nearly", "exhausting", "we", "sample", "budget", "we", "further", "opportunistically", "explore", "region", "around", "current", "best", "sample", "we", "modify", "algorithm", "so", "last", "sample", "time", "step", "selection", "-lrb-", "line", "18", "-rrb-", "always", "choose", "leaf", "best", "sample", "so", "far", "lower", "scaling", "factor", "use", "computing", "adjust", "allow", "one", "tune", "balance", "between", "local", "global", "search", "we", "use", "0.005", "section", "present", "result", "from", "we", "character", "motion", "synthesis", "different", "value", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "51", "publication", "date", "July", "2014", "Online", "Motion", "synthesis", "use", "sequential", "Monte", "Carlo", "51:7", "Figure", "character", "model", "-lrb-", "left", "-rrb-", "heavy", "light", "version", "physics", "skeleton", "use", "simulation", "System", "description", "4.1", "Character", "Model", "Figure", "show", "we", "character", "physics", "model", "we", "test", "we", "use", "two", "physics", "model", "one", "light-boned", "another", "considerably", "heavier", "torso", "thus", "higher", "center", "mass", "-lrb-", "com", "-rrb-", "which", "make", "balancing", "acrobatics", "more", "difficult", "physics", "object", "have", "constant", "density", "character", "have", "30", "actuate", "dof", "unactuated", "root", "dof", "physics", "model", "consist", "15", "bone", "-lrb-", "rigid", "body", "-rrb-", "connect", "use", "3-dof", "ball", "1-dof", "hinge", "joint", "latter", "use", "elbow", "knee", "ankle", "we", "do", "model", "clavicle", "toe", "finger", "simulation", "we", "use", "Open", "Dynamics", "Engine", "-lrb-", "ODE", "-rrb-", "0.12", "use", "ode?s", "direct", "big", "matrix", "lcp", "solver", "time", "step", "1/30", "seconds", "CFM", "erp", "parameter", "10", "0.2", "respectively", "note", "ode", "also", "have", "iterative", "solver", "which", "faster", "less", "stable", "approximately", "similar", "quality", "iterative", "solver", "require", "timestep", "1/120s", "which", "result", "slower", "operation", "we", "case", "direct", "solver", "only", "take", "approximately", "much", "CPU", "time", "collision", "handling", "4.2", "optimization", "parameterization", "we", "represent", "control", "strategy", "time-varying", "target", "joint", "angle", "encode", "sequence", "control", "point", "interpolate", "cubic", "spline", "we", "use", "control", "point", "all", "we", "experiment", "we", "spline", "non-uniform", "i.e.", "position", "control", "point", "along", "temporal", "axis", "-lrb-", "knot", "-rrb-", "subject", "optimization", "specifically", "-lsb-", "...", "-rsb-", "-lsb-", "-rsb-", "where", "denote", "30", "target", "joint", "angle", "time", "time", "coordinate", "express", "offset", "from", "previous", "control", "point", "from", "current", "time", "first", "control", "point", "limit", "maximum", "allowable", "torque", "actuated", "joint", "allow", "they", "vary", "instead", "use", "fix", "maximum", "allow", "character", "e.g.", "soften", "landing", "from", "high", "jump", "we", "use", "sampling", "bound", "50n", "150n", "lightweight", "model", "50n", "200n", "heavier", "one", "torque", "limit", "specify", "three", "group", "bone", "torso", "arm", "leg", "non-uniform", "knot", "sequence", "allow", "fine-grained", "control", "fast", "movement", "jump", "total", "number", "optimize", "variable", "136", "-lrb-", "i.e.", "136", "-rrb-", "consist", "30", "target", "angle", "torque", "limit", "time", "coordinate", "each", "control", "point", "4.3", "evaluate", "strategy", "forward", "simulation", "-lrb-", "-rrb-", "max", "-lrb-", "-rrb-", "-lsb-", "...", "-rsb-", "spline", "define", "give", "continuous-time", "target", "joint", "angle", "-lrb-", "-rrb-", "limit", "maximum", "torque", "-lrb-", "-rrb-", "evaluate", "objective", "function", "we", "feed", "target", "physics", "simulation", "record", "what", "happen", "total", "duration", "simulation", "each", "sample", "vary", "depend", "control", "point", "however", "we", "only", "run", "simulation", "up", "predefined", "planning", "horizon", "section", "present", "result", "different", "planning", "horizon", "default", "use", "supplementary", "video", "seconds", "each", "time", "step", "we", "evaluate", "target", "angle", "-lrb-", "-rrb-", "torque", "limit", "-lrb-", "-rrb-", "feed", "they", "ODE", "physics", "simulator", "ODE", "motor", "control", "target", "velocity", "ode", "try", "make", "motor", "reach", "we", "compute", "target", "velocity", "ith", "motor", "from", "target", "pose", "-lrb-", "target", "current", "-rrb-", "denote", "joint", "angle", "see", "motor", "simulator", "step", "forward", "time", "step", "internally", "drive", "motor", "try", "match", "target", "velocity", "while", "respect", "torque", "limit", "simulation", "produce", "time", "series", "realize", "3d", "position", "velocity", "all", "15", "rigid", "body", "skeleton", "represent", "what", "happen", "when", "we", "try", "control", "character", "use", "strategy", "we", "denote", "series", "-lrb-", "-rrb-", "-lcb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rcb-", "-lrb-", "-rrb-", "where", "-lrb-", "-rrb-", "number", "simulated", "time", "step", "sample", "denote", "current", "time", "step", "we", "also", "use", "shorthand", "notation", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "give", "sequence", "objective", "function", "measure", "fitness", "value", "realization", "use", "formula", "give", "section", "4.4", "time", "index", "-lrb-", "-rrb-", "from", "-1", "we", "also", "include", "history", "past", "two", "frame", "evaluation", "which", "allow", "objective", "function", "evaluation", "prefer", "continuity", "previously", "select", "control", "strategy", "reduce", "movement", "jitter", "which", "could", "otherwise", "problem", "stochastic", "sampling", "system", "like", "ours", "note", "lcp", "solver", "adapt", "torque", "base", "e.g.", "contact", "force", "we", "scheme", "provide", "slightly", "higher", "level", "control", "than", "use", "pd", "controller", "human", "motor", "system", "comprise", "both", "motion-inducing", "stabilizer", "muscle", "stabilize", "character", "give", "pose", "easier", "motor", "than", "pd", "controller", "especially", "large", "we", "use", "appendix", "describe", "important", "implementation", "detail", "relate", "obtain", "causal", "reproducible", "simulation", "4.4", "Objective", "function", "objective", "function", "drive", "character", "towards", "desire", "goal", "paper", "we", "goal", "balance", "character", "upright", "predetermine", "ready", "stance", "define", "pose", "vector", "show", "first", "frame", "figure", "corresponding", "objective", "function", "formulate", "-lrb-", "-rrb-", "max", "-lsb-", "-rsb-", "where", "denote", "damage", "avoidance", "smoothness", "balancing", "get", "up", "objective", "respectively", "adjust", "priority", "get", "up", "objective", "we", "use", "0.0001", "all", "component", "objective", "function", "function", "follow", "we", "omit", "dependence", "brevity", "damage", "avoidance", "damage", "avoidance", "objective", "try", "avoid", "high-velocity", "impact", "important", "body", "part", "we", "include", "head", "pelvis", "objective", "allow", "versatile", "movement", "prevent", "character", "from", "fall", "its", "head", "bottom", "objective", "formulate", "-lrb-", "-rrb-", "where", "number", "all", "important", "body", "contact", "during", "realize", "plan", "relative", "velocity", "contact", "normal", "ith", "contact", "respectively", "function", "soft", "threshold", "function", "-lrb-", "-rrb-", "0.5", "0.5", "tanh", "-lsb-", "-lrb-", "-rrb-", "-rsb-", "where", "threshold", "steepness", "parameter", "we", "use", "2.2", "2.5", "smoothness", "smoothness", "objective", "consist", "minimize", "acceleration", "jerk", "-lrb-", "time-derivative", "acceleration", "-rrb-", "which", "have", "be", "find", "help", "produce", "natural", "movement", "-lsb-", "Van", "Welbergen", "et", "al.", "2010", "-rsb-", "objective", "give", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "51", "publication", "date", "July", "2014", "51:8", "P.", "H?m?l?inen", "et", "al.", "where", "mean", "square", "acceleration", "jerk", "respectively", "compute", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "...", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "+1", "-rrb-", "...", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "+1", "-rrb-", "-lrb-", "-rrb-", "we", "use", "value", "5.0", "13.7", "jerk", "term", "affect", "history", "last", "two", "frame", "-lrb-", "-rrb-", "avoid", "acceleration", "jitter", "from", "frame", "frame", "balance", "balance", "objective", "most", "complex", "one", "comprise", "desire", "target", "pose", "desire", "up-vector", "direction", "velocity", "minimization", "com", "displacement", "minimization", "penalization", "base", "other", "body", "part", "than", "foot", "touch", "ground", "we", "define", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "max", "where", "denote", "jth", "frame", "here", "penalize", "term", "get", "value", "any", "body", "part", "other", "than", "foot", "touch", "ground", "otherwise", "vector", "define", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "com", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "up", "-lrb-", "-rrb-", "vel1", "vel2", "disp", "up", "pose", "velocity", "minimization", "do", "follow", "term", "-lrb-", "-rrb-", "velocity", "center", "mass", "project", "ground", "plane", "-lrb-", "-rrb-", "concatenation", "velocity", "all", "body", "-lrb-", "-rrb-", "com", "displacement", "com", "compute", "relative", "com", "target", "balancing", "pose", "character-centric", "coordinate", "system", "define", "global", "up", "vector", "character", "face", "direction", "vector", "project", "ground", "plane", "origin", "midway", "-lrb-", "-rrb-", "tween", "foot", "similarly", "up", "vector", "difference", "up", "compute", "character", "centric", "coordinate", "up", "root", "balanced", "where", "root", "up-vector", "root", "bone", "balanced", "corresponding", "vector", "target", "balancing", "pose", "finally", "denote", "difference", "between", "local", "joint", "angle", "simulated", "target", "pose", "use", "angle", "see", "ODE", "motor", "value", "we", "use", "scale", "multiplier", "vel1", "0.05", "m/s", "vel2", "0.75", "m/s", "disp", "0.05", "up", "0.1", "pose", "15.0", "degree", "balance", "objective", "compute", "each", "frame", "between", "specify", "minimum", "time", "length", "planning", "horizon", "best", "score", "frame", "use", "evaluate", "whole", "sample", "we", "use", "0.5", "minimum", "many", "MPC", "system", "objective", "function", "partition", "run", "cost", "terminal", "cost", "terminal", "cost", "only", "evaluate", "fix", "planning", "horizon", "contrast", "we", "system", "allow", "optimizer", "some", "slack", "term", "when", "reach", "goal", "which", "should", "make", "objective", "function", "mode", "larger", "thus", "easier", "find", "track", "get-up", "get", "up", "objective", "same", "balance", "objective", "omit", "pose", "term", "have", "less", "strict", "velocity", "multiplier", "vel1", "1.0", "m/s", "vel2", "15.0", "m/s", "max", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "where", "jth", "frame", "10", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "com", "-lrb-", "-rrb-", "up", "-lrb-", "-rrb-", "vel1", "vel2", "disp", "up", "where", "term", "compute", "similar", "COM", "displacement", "term", "also", "include", "y-component", "clamp", "min", "-lrb-", "-lrb-", "target", "-rrb-", "-rrb-", "where", "0.1", "denote", "offset", "COM", "higher", "than", "target", "balancing", "pose", "penalize", "motion", "where", "COM", "temporarily", "above", "balancing", "pose", "e.g.", "when", "take", "step", "leap", "main", "difference", "previous", "work", "objective", "function", "formulation", "multimodal", "due", "max", "function", "practice", "we", "have", "find", "when", "character", "have", "fall", "down", "sampler", "have", "difficulty", "maximize", "all", "component", "balance", "objective", "however", "maximize", "much", "easier", "very", "often", "lead", "situation", "where", "consequence", "easier", "maximize", "effect", "similar", "how", "Jain", "et", "al.", "-lsb-", "2009", "-rsb-", "define", "balancing", "sequence", "state", "include", "balancing", "take", "step", "however", "we", "do", "need", "define", "explicit", "state", "transition", "target", "location", "foot", "placement", "sampler", "may", "freely", "pick", "best", "strategy", "each", "situation", "component", "also", "allow", "character", "take", "step", "regain", "balance", "dodge", "projectile", "do", "penalize", "deviation", "from", "target", "pose", "Roll", "heavier", "model", "middle", "Figure", "even", "get", "up", "strategy", "sometimes", "difficult", "find", "when", "character", "have", "fall", "its", "back", "case", "we", "add", "third", "alternative", "objective", "inside", "max", "function", "equation", "make", "character", "roll", "away", "from", "its", "back", "11", "20", "-lrb-", "-rrb-", "+1", "max", "where", "y-coordinate", "character?s", "normalize", "forward", "vector", "compute", "from", "torso", "priority", "rolling", "we", "use", "small", "10", "40", "because", "we", "want", "character", "keep", "improvise", "alternative", "get", "up", "strategy", "possible", "4.5", "heuristic", "machine", "Learning", "Heuristics", "each", "frame", "we", "generate", "20", "sample", "uniformly", "within", "parameter", "space", "we", "also", "add", "guess", "where", "each", "control", "point", "spline", "equal", "target", "balancing", "pose", "where", "joint", "torque", "limit", "constant", "finally", "we", "add", "best", "sample", "previous", "frame", "after", "step", "its", "parameter", "one", "time", "step", "forward", "i.e.", "shift", "spline", "backward", "time", "when", "evaluate", "last", "heuristic", "important", "ensure", "interpolate", "result", "from", "original", "shift", "spline", "match", "machine", "precision", "over", "entire", "horizon", "we", "achieve", "write", "spline", "evaluator", "recursively", "spline", "only", "ever", "evaluate", "step", "forward", "handle", "change", "knot", "control", "point", "machine", "Learning", "we", "system", "support", "optional", "generation", "guess", "-lrb-", "line", "11-15", "algorithm", "-rrb-", "from", "arbitrary", "machine", "learn", "component", "idea", "draw", "previous", "experience", "infer", "good", "strategy", "current", "situation", "we", "use", "approximate", "nearest", "neighbor", "query", "use", "FLANN", "library", "-lsb-", "muja", "Lowe", "2009", "-rsb-", "map", "feature", "vector", "set", "control", "strategy", "inject", "guess", "line", "12", "feature", "vector", "consist", "current", "pose", "angle", "up", "direction", "root", "node", "rotation", "velocity", "root", "node", "optionally", "relative", "position", "velocity", "closest", "projectile", "dodge", "training", "set", "normalize", "respect", "norm", "feature", "variable", "we", "train", "mapping", "during", "online", "optimization", "-lrb-", "ball", "evade", "test", "explain", "section", "-rrb-", "store", "feature", "vector", "best", "sample", "all", "frame", "where", "-lrb-", "-rrb-", "10", "10", "while", "simple", "ANN", "search", "probably", "optimal", "machine", "learning", "method", "we", "case", "section", "5.2", "show", "few", "approximate", "nearest", "neighbor", "improve", "get-up", "performance", "considerably", "we", "consider", "we", "implementation", "proof-of-concept", "integrate", "machine", "learning", "smc", "sampling", "control", "strategy", "development", "evaluation", "more", "efficient", "expressive", "learning", "component", "leave", "future", "work", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "51", "publication", "date", "July", "2014", "Online", "Motion", "synthesis", "use", "sequential", "Monte", "Carlo", "51:9", "result", "we", "have", "test", "we", "method", "three", "way", "-rrb-", "throw", "sphere", "character", "-rrb-", "add", "sudden", "impulse", "body", "part", "disturb", "balance", "throw", "character", "around", "-rrb-", "trigger", "simulated", "explosion", "add", "impulse", "all", "body", "part", "figure", "10", "11", "14", "illustrate", "test", "test", "character", "able", "avoid", "sphere", "avoidance", "behavior", "implicitly", "cause", "jerk", "minimization", "goal", "recover", "lose", "balance", "creative", "way", "roll", "over", "shoulder", "land", "back", "its", "foot", "get", "up", "when", "throw", "ground", "we", "describe", "result", "both", "qualitatively", "-lrb-", "section", "5.1", "-rrb-", "quantitatively", "-lrb-", "section", "5.2", "-rrb-", "follow", "we", "refer", "supplemental", "video", "use", "time", "parenthesis", "-lrb-", "mm", "ss", "-rrb-", "Performance", "supplemental", "video", "capture", "real-time", "-lrb-", "use", "Fraps", "www.fraps.com", "-rrb-", "Windows", "pc", "Intel", "Core", "i7-4930k", "3.40", "GHz", "CPU", "-lrb-", "12", "logical", "core", "-rrb-", "NVIDIA", "GeForce", "GTX", "480", "GPU", "computer", "optimizer", "run", "approximately", "20", "fp", "1/30s", "physics", "time", "step", "25", "sample", "per", "frame", "planning", "horizon", "seconds", "2012", "MacBook", "pro", "laptop", "2.4", "GHz", "processor", "same", "setting", "yield", "6-10", "fp", "enough", "interactive", "experiment", "parameter", "tuning", "which", "we", "consider", "one", "best", "aspect", "system", "show", "video", "25", "sample", "enough", "synthesize", "variety", "movement", "whereas", "use", "100", "sample", "-lrb-", "01:39", "-rrb-", "slow", "simulation", "down", "considerably", "other", "hand", "use", "fewer", "sample", "per", "frame", "shorter", "planning", "horizon", "yield", "fully", "real-time", "unreliable", "result", "-lrb-", "01:21", "-rrb-", "5.1", "qualitative", "evaluation", "system", "show", "considerable", "creativity", "adapt", "surprising", "situation", "utilize", "environment", "example", "character", "dodge", "sphere", "use", "pirouette", "jump", "-lrb-", "02:22", "-rrb-", "slide", "dodge", "rolling", "sphere", "use", "hand", "keep", "sphere", "away", "-lrb-", "00:32", "-rrb-", "when", "character?s", "head", "punch", "ground", "continue", "movement", "cartwheel", "sort", "rise", "up", "-lrb-", "00:49", "-rrb-", "take", "step", "emerge", "avoidance", "strategy", "-lrb-", "02:42", "Figure", "11", "-rrb-", "although", "always", "successfully", "-lrb-", "01:48", "-rrb-", "character", "also", "often", "land", "its", "foot", "when", "throw", "air", "-lrb-", "00:00", "00:38", "-rrb-", "top", "left", "corner", "video", "show", "which", "alternative", "objective", "function", "component", "give", "highest", "score", "best", "score", "sample", "balance", "correspond", "get", "up", "use", "2", "plan", "horizon", "sampler", "often", "able", "find", "balancing", "strategy", "while", "still", "roll", "ground", "after", "impact", "-lrb-", "01:02", "01:12", "-rrb-", "main", "drawback", "system", "movement", "sometimes", "stiff", "have", "unnecessary", "joint", "contortion", "-lrb-", "02:18", "-rrb-", "stiffness", "probably", "cause", "we", "parameterization", "use", "target", "angle", "instead", "joint", "torque", "torque", "limit", "optimization", "do", "help", "e.g.", "soften", "landing", "however", "sampling", "and/or", "goal", "able", "relax", "character?s", "hand", "many", "case", "character", "also", "often", "keep", "hand", "greedily", "close", "target", "pose", "even", "when", "nearly", "balanced", "we", "experiment", "shoulder", "elbow", "torque", "minimization", "goal", "easily", "lead", "other", "extreme", "hand", "hang", "limp", "which", "do", "look", "natural", "we", "fighter", "character", "heuristic", "balancing", "initial", "guess", "can", "also", "cause", "character", "assume", "target", "pose", "prematurely", "while", "still", "move", "-lrb-", "02:03", "-rrb-", "sometimes", "appear", "almost", "unphysical", "character", "uncannily", "know", "although", "sway", "ultimately", "end", "up", "balanced", "without", "heuristic", "machine", "learning", "guess", "however", "character", "keep", "hower", "about", "target", "pose", "illustrate", "typically", "slow", "final", "convergence", "global", "sampling", "method", "combine", "global", "sampling", "local", "refinement", "clearly", "topic", "future", "work", "future", "one", "easy", "way", "improve", "naturalness", "movement", "could", "script", "learn", "control", "gaze", "head", "orientation", "example", "real", "human", "typically", "follow", "fly", "object", "gaze", "try", "look", "expect", "landing", "spot", "while", "airborne", "hand", "foot", "contact", "ground", "could", "also", "fine-tuned", "e.g.", "so", "character", "always", "exert", "force", "ground", "use", "palm", "instead", "fingertip", "we", "expect", "can", "do", "use", "purely", "visual", "correction", "base", "inverse", "kinematic", "instead", "modify", "optimization", "remain", "future", "work", "we", "have", "also", "test", "two", "other", "balance", "pose", "asymmetric", "Taido", "-lrb-", "martial", "art", "-rrb-", "ready", "stance", "regular", "standing", "position", "both", "pose", "work", "although", "regular", "standing", "appear", "more", "difficult", "less", "stable", "support", "polygon", "smaller", "COM", "higher", "5.2", "quantitative", "evaluation", "system", "stochastic", "hence", "may", "occasionally", "provide", "good", "result", "even", "just", "few", "sample", "ensure", "we", "result", "representative", "we", "have", "run", "quantitative", "balancing", "avoidance", "test", "vary", "parameter", "each", "test", "100", "sphere", "throw", "character", "from", "random", "direction", "sphere", "3x", "heavier", "than", "character", "i.e.", "failure", "avoid", "ball", "almost", "certainly", "lead", "character", "fall", "down", "we", "measure", "percentage", "time", "character", "balanced", "seconds", "after", "ball", "throw", "determine", "threshold", "objective", "function", "value", "succeed", "character", "could", "either", "dodge", "ball", "get", "successfully", "up", "after", "fail", "dodge", "test", "also", "save", "screenshot", "each", "failure", "case", "most", "typical", "case", "wide", "split", "lie", "back", "supplementary", "video", "show", "difficult", "situation", "-lrb-", "01:33", "01:48", "-rrb-", "left", "side", "Figure", "12", "show", "success", "percentage", "function", "optimizer", "sample", "per", "frame", "four", "condition", "st", "denote", "standard", "setup", "use", "capture", "supplemental", "video", "-lrb-", "2s", "planning", "horizon", "lightweight", "character", "model", "-rrb-", "st+ml", "FLANN", "prediction", "be", "generate", "each", "frame", "from", "dataset", "100k", "training", "vector", "which", "yield", "better", "result", "low", "sample", "budget", "indicate", "we", "system", "can", "utilize", "machine", "learning", "intend", "hv", "curve", "denote", "heavier", "character", "model", "change", "compare", "st", "which", "yield", "abysmal", "success", "rate", "low", "sample", "budget", "Performance", "better", "hv2", "case", "where", "we", "activate", "roll", "away", "from", "back", "goal", "use", "3.5", "plan", "horizon", "measure", "success", "after", "longer", "seconds", "after", "each", "ball", "throw", "right", "side", "Figure", "12", "show", "successful", "attempt", "function", "greedy", "sampling", "parameter", "appear", "sweet", "spot", "25-50", "greedy", "sample", "all", "we", "test", "supplemental", "video", "capture", "use", "25", "Figure", "13", "show", "successful", "attempt", "function", "number", "sample", "length", "planning", "horizon", "one", "can", "see", "2", "horizon", "use", "supplementary", "video", "reasonable", "default", "longer", "horizon", "do", "produce", "considerable", "benefit", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "51", "publication", "date", "July", "2014", "51:10", "P.", "H?m?l?inen", "et", "al.", "Figure", "10", "user", "trigger", "explosion", "character", "flip", "around", "air", "land", "its", "foot", "Figure", "11", "footstep", "emerge", "character", "dodge", "ball", "throw", "conclusion", "we", "have", "demonstrate", "Sequential", "Monte", "Carlo", "-lrb-", "SMC", "-rrb-", "sampling", "viable", "approach", "online", "synthesis", "complex", "human", "movement", "without", "reliance", "animation", "motion", "capture", "datum", "central", "feature", "system", "use", "kd-tree", "sampling", "non-uniform", "spline", "pose", "interpolation", "rigid", "body", "physics", "engine", "custom", "modification", "ensure", "reproducible", "simulation", "while", "key", "component", "adaptive", "sequential", "sampling", "method", "allow", "easy", "integration", "machine", "learn", "draw", "previous", "experience", "we", "surprise", "performance", "sampler", "even", "without", "machine", "learning", "use", "dimensionality", "reduction", "method", "constrain", "search", "space", "we", "have", "integrate", "we", "system", "unity3d", "state-of-the-art", "commercial", "game", "engine", "result", "release", "open", "source", "however", "we", "believe", "we", "sampler", "simple", "enough", "also", "Figure", "12", "get", "up", "percentage", "function", "sample", "per", "frame", "-lrb-", "left", "-rrb-", "get", "up", "percentage", "function", "greedy", "sampling", "percent", "-lrb-", "right", "-rrb-", "test", "where", "100", "heavy", "ball", "be", "throw", "character", "implement", "from", "scratch", "we", "see", "improve", "performance", "control", "style", "synthesize", "movement", "two", "main", "item", "future", "work", "we", "expect", "both", "can", "address", "precompute", "suitable", "prior", "sampling", "and/or", "develop", "interactive", "training", "application", "where", "user", "may", "instruct", "machine", "learning", "system", "learn", "most", "interesting", "movement", "have", "emerge", "we", "parameterization", "also", "allow", "pose-space", "dimensionality", "reduction", "accord", "we", "initial", "experiment", "do", "make", "abnormal", "pose", "less", "frequent", "however", "heavy", "dimensionality", "reduction", "use", "small", "training", "set", "easily", "overconstrain", "movement", "while", "larger", "training", "set", "allow", "character", "use", "pose", "abnormal", "context", "e.g.", "kick", "while", "balancing", "Contextual", "temporal", "information", "could", "incorporate", "e.g.", "use", "offline", "optimization", "generate", "training", "set", "control", "spline", "follow", "motion", "capture", "trajectory", "similar", "-lsb-", "Muico", "et", "al.", "2009", "-rsb-", "future", "we", "also", "plan", "explore", "novel", "interaction", "game", "mechanic", "utilize", "motion", "synthesis", "investigate", "whether", "sequential", "sampling", "competitive", "also", "offline", "synthesis", "where", "function", "landscape", "change", "over", "time", "when", "animator", "interactively", "adjust", "parameter", "could", "also", "interesting", "simulate", "muscle", "animation", "breathing", "grunt", "etc.", "base", "predict", "near-future", "exertion", "-lrb-", "e.g.", "i?ll", "jump", "breathe", "out", "one", "second", "better", "breath", "now", "-rrb-", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "51", "publication", "date", "July", "2014", "Online", "Motion", "synthesis", "use", "sequential", "Monte", "Carlo", "51:11", "Figure", "14", "user", "give", "impact", "left", "upper", "arm", "cause", "character", "fall", "its", "back", "emerge", "get", "up", "strategy", "comprise", "first", "rolling", "over", "right", "side", "use", "right", "hand", "support", "allow", "move", "right", "foot", "so", "weight", "can", "shift", "Figure", "13", "get", "up", "percentage", "function", "sample", "per", "frame", "-lrb-", "-rrb-", "planning", "horizon", "acknowledgment", "we", "thank", "all", "reviewer", "valuable", "comment", "research", "have", "be", "support", "Skene", "Games", "Refueled", "program", "finnish", "Funding", "Agency", "Innovation", "Implementation", "Notes", "we", "end", "up", "use", "ODE", "its", "direct", "lcp", "solver", "iterative", "solver", "ODE", "Bullet", "physics", "physx", "engine", "be", "stable", "enough", "active", "character", "except", "very", "small", "time", "step", "be", "computationally", "efficient", "3-dof", "hip", "shoulder", "joint", "be", "especially", "unstable", "although", "previous", "study", "have", "successfully", "use", "2-dof", "joint", "-lsb-", "Tassa", "et", "al.", "2012", "-rsb-", "3-dof", "joint", "need", "realistic", "character", "skin", "mesh", "appear", "current", "mainstream", "physics", "engine", "optimize", "passive", "object", "ragdoll", "although", "new", "version", "Bullet", "have", "just", "appear", "new", "solver", "gear", "towards", "robotic", "we", "have", "make", "two", "important", "change", "ODE", "firstly", "original", "implementation", "ODE", "causal", "due", "some", "internal", "implementation", "detail", "reordering", "array", "optimization", "purpose", "due", "way", "random", "number", "generate", "we", "have", "solve", "issue", "remove", "non-deterministic", "optimization", "store", "random", "number", "generator", "seed", "thread", "context", "level", "ensure", "run", "two", "simulation", "different", "thread", "same", "control", "parameter", "achieve", "exactly", "same", "motion", "simulation", "fully", "causal", "sampler", "sometimes", "forget", "choose", "control", "strategy", "before", "have", "be", "completely", "execute", "secondly", "ode", "implement", "joint", "motor", "limit", "way", "might", "cause", "too", "much", "force", "apply", "when", "motor", "move", "away", "from", "limit", "cause", "instability", "ODE", "have", "solve", "introduce", "hand-tuned", "fudge", "factor", "scale", "force", "get", "maximum", "available", "force", "fudge", "factor", "correct", "each", "body", "part", "delicate", "difficult", "solve", "we", "use", "fudgefree", "patch", "from", "official", "ODE", "issue", "tracker", "instead", "add", "motor", "limit", "constraint", "row", "LCP", "formulation", "make", "simulation", "more", "robust", "we", "threading", "use", "pool", "worker", "thread", "which", "each", "obtain", "sample", "from", "sampler", "simulate", "physics", "forward", "compute", "-lrb-", "-rrb-", "store", "computed", "value", "sampler", "access", "sampler", "synchronize", "which", "mean", "we", "implementation", "optimal", "massively", "parallel", "computing", "however", "we", "current", "computer", "up", "12", "logical", "core", "we", "have", "achieve", "decent", "75-80", "core", "utilization", "reference", "ORNO", "M.", "de", "asa", "m.", "ertzmann", "a.", "2013", "Trajectory", "optimization", "full-body", "movement", "complex", "contact", "IEEE", "transaction", "visualization", "computer", "graphic", "19", "1405", "1414", "RULAMPALAM", "M.", "ASKELL", "S.", "ORDON", "N.", "LAPP", "T.", "2002", "tutorial", "particle", "filter", "online", "nonlinear/nongaussian", "bayesian", "tracking", "IEEE", "transaction", "signal", "processing", "50", "174", "188", "ohen", "M.", "F.", "1992", "interactive", "spacetime", "control", "animation", "Proc", "SIGGRAPH", "92", "ACM", "New", "York", "NY", "USA", "293", "302", "ILVA", "M.", "Y.", "opovus", "J.", "2008", "simulation", "human", "motion", "datum", "use", "short-horizon", "model-predictive", "control", "Computer", "Graphics", "Forum", "27", "371", "380", "DA", "ILVA", "M.", "URAND", "F.", "opovus", "J.", "2009", "linear", "bellman", "combination", "control", "character", "animation", "Proc", "SIGGRAPH", "2009", "ACM", "New", "York", "NY", "USA", "82:1", "82:10", "de", "illier", "J.", "P.", "ODSILL", "S.", "J.", "INGH", "S.", "S.", "2011", "particle", "predictive", "control", "Journal", "Statistical", "Planning", "Inference", "141", "-lrb-", "May", "-rrb-", "1753", "1763", "eutscher", "J.", "LAKE", "a.", "eid", "i.", "2000", "articulate", "body", "motion", "capture", "annealed", "particle", "filter", "IEEE", "Conference", "Computer", "Vision", "Pattern", "recognition", "2000", "Proceedings", "vol", "126", "133", "vol", ".2", "oucet", "a.", "ohansen", "a.", "M.", "2009", "tutorial", "particle", "filter", "smooth", "fifteen", "year", "later", "handbook", "Nonlinear", "Filtering", "12", "656", "704", "rez", "T.", "OWREY", "K.", "assa", "Y.", "UMAR", "V.", "OLEV", "S.", "odorov", "E.", "2013", "integrated", "system", "realtime", "model-predictive", "control", "humanoid", "robot", "Proc", "IEEE/RAS", "International", "Conference", "Humanoid", "Robots", "-lrb-", "HUMANOIDS", "-rrb-", "humanoid", "ang", "a.", "C.", "ollard", "N.", "S.", "2003", "efficient", "synthesis", "physically", "valid", "human", "motion", "ACM", "Trans", "graph", "22", "417", "426", "eijtenbeek", "T.", "ronost", "N.", "GGES", "a.", "vermar", "M.", "H.", "2011", "interactive", "character", "animation", "use", "simulated", "physics", "eurographics-state", "Art", "Reports", "eijtenbeek", "T.", "VAN", "de", "ANNE", "M.", "VAN", "DER", "tappen", "a.", "F.", "2013", "flexible", "muscle-based", "locomotion", "bipedal", "creature", "ACM", "Trans", "graph", "32", "-lrb-", "Nov.", "-rrb-", "206:1", "206:11", "eck", "R.", "LEICHER", "M.", "2007", "Parametric", "motion", "graph", "Proceedings", "2007", "symposium", "interactive", "3d", "graphic", "game", "ACM", "New", "York", "NY", "USA", "i3d", "07", "129", "136", "AM", "AL", "AINEN", "P.", "ILA", "T.", "akalum", "T.", "LANDER", "J.", "2006", "mutate", "kd-tree", "importance", "sampling", "Proc", "SCAI", "2006", "39", "45", "hler", "a.", "T.", "udderth", "E.", "B.", "reeman", "W.", "T.", "ILL", "SKY", "A.", "S.", "2003", "efficient", "multiscale", "sampling", "from", "product", "gaussian", "mixture", "advance", "Neural", "Information", "Processing", "Systems", "16", "AIN", "S.", "Y.", "IU", "C.", "K.", "2009", "optimization-based", "interactive", "motion", "synthesis", "ACM", "Trans", "graph", "28", "-lrb-", "Feb.", "-rrb-", "10:1", "10:12", "AJIYA", "J.", "T.", "1986", "render", "equation", "Proc", "SIGGRAPH", "86", "ACM", "New", "York", "NY", "USA", "143", "150", "ANTAS", "N.", "ACIEJOWSKI", "J.", "M.", "ecchinus", "isintinus", "a.", "2009", "sequential", "monte", "carlo", "model", "predictive", "control", "nonlinear", "Model", "Predictive", "Control", "L.", "Magni", "D.", "M.", "Raimondo", "F.", "Allg?wer", "Eds.", "no.", "384", "Lecture", "Notes", "Control", "Information", "Sciences", "Springer", "Berlin", "Heidelberg", "Jan.", "263", "273", "asseter", "J.", "1987", "principle", "traditional", "animation", "apply", "3d", "computer", "animation", "Proc", "SIGGRAPH", "87", "ACM", "New", "York", "NY", "USA", "35", "44", "iu", "L.", "K.", "VAN", "de", "ANNE", "M.", "HAO", "T.", "W.", "2010", "sampling-based", "contact-rich", "motion", "control", "ACM", "Trans", "graph", "29", "128:1", "128:10", "ordatch", "i.", "odorov", "E.", "opovus", "Z.", "2012", "Discovery", "complex", "behavior", "through", "contact-invariant", "optimization", "ACM", "Trans", "graph", "31", "-lrb-", "July", "-rrb-", "43:1", "43:8", "uico", "U.", "EE", "Y.", "opovus", "J.", "opovus", "Z.", "2009", "contact-aware", "nonlinear", "control", "dynamic", "character", "ACM", "Trans", "graph", "28", "81:1", "81:9", "uja", "m.", "owe", "D.", "G.", "2009", "fast", "approximate", "nearest", "neighbor", "automatic", "algorithm", "configuration", "Proc", "visapp", "-lrb-", "-rrb-", "331", "340", "go", "J.", "T.", "ark", "J.", "1993", "Spacetime", "constraint", "revisit", "Proc", "SIGGRAPH", "93", "ACM", "New", "York", "NY", "USA", "343", "350", "ejsa", "T.", "andzic", "i.", "2010", "state", "art", "examplebased", "motion", "synthesis", "virtual", "character", "interactive", "application", "Computer", "Graphics", "Forum", "29", "202", "226", "eil", "T.", "usband", "P.", "2002", "evolution", "central", "pattern", "generator", "bipedal", "walking", "real-time", "physics", "environment", "IEEE", "transaction", "Evolutionary", "Computation", "159", "168", "udoy", "D.", "OLFE", "P.", "2006", "Monte", "carlo", "method", "multimodal", "distribution", "Proc", "Fortieth", "Asilomar", "Conference", "signal", "Systems", "Computers", "2006", "ACSSC", "06", "2019", "2023", "afonova", "a.", "odgin", "J.", "K.", "ollard", "N.", "S.", "2004", "synthesize", "physically", "realistic", "human", "motion", "lowdimensional", "behavior-specific", "space", "ACM", "Trans", "graph", "23", "514", "521", "chmidt", "J.", "ritsch", "J.", "WOLEK", "B.", "2006", "Kernel", "particle", "filter", "real-time", "3d", "body", "tracking", "monocular", "color", "image", "Proc", "7th", "International", "Conference", "Automatic", "Face", "Gesture", "recognition", "2006", "fgr", "2006", "567", "572", "IMS", "K.", "1994", "evolve", "virtual", "creature", "Proc", "SIGGRAPH", "94", "ACM", "New", "York", "NY", "USA", "15", "22", "tahl", "D.", "auth", "J.", "2011", "PF-MPC", "particle", "filter-model", "predictive", "control", "Syst", "Control", "Lett", "60", "632", "643", "assa", "Y.", "REZ", "T.", "odorov", "E.", "2012", "synthesis", "stabilization", "complex", "behavior", "through", "online", "trajectory", "optimization", "Proc", "2012", "IEEE/RSJ", "International", "Conference", "Intelligent", "Robots", "Systems", "-lrb-", "iro", "-rrb-", "IEEE", "IROS", "12", "4906", "4913", "hrun", "S.", "ox", "D.", "URGARD", "W.", "2000", "Monte", "carlo", "localization", "mixture", "proposal", "distribution", "Proc", "aaai/iaai", "859", "865", "elbergen", "H.", "asten", "B.", "J.", "H.", "GGES", "a.", "UT", "TKAY", "Z.", "M.", "vermar", "M.", "H.", "2010", "real", "time", "animation", "virtual", "human", "trade-off", "between", "naturalness", "control", "Computer", "Graphics", "Forum", "29", "2530", "2554", "AMPLER", "K.", "opovus", "Z.", "2009", "optimal", "gait", "form", "animal", "locomotion", "ACM", "Trans", "Graph.", "vol", "28", "60", "ITKIN", "a.", "ASS", "M.", "1988", "Spacetime", "constraint", "Proc", "SIGGRAPH", "88", "ACM", "New", "York", "NY", "USA", "159", "168", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "51", "publication", "date", "July", "2014", "51:12", "P.", "H?m?l?inen", "et", "al.", "ACM", "transaction", "Graphics", "Vol", "33", "no.", "Article", "51", "publication", "date", "July", "2014" ],
  "content" : "\n  \n    7f8b5f8feed9bcfcf37a4fe862120e1cb11a75918c556dc9e04ce74b49aa92a0\n    p74\n    10.1145/2601097.2601218\n    Name identification was not possible. \n  \n  \n    \n      \n        Online Motion Synthesis Using Sequential Monte Carlo\n      \n      Perttu H?m?l?inen 1? Sebastian Eriksson 1 Esa Tanskanen 1 1 Aalto University\n      \n        \n        Figure 1: An example of the synthesized animation (downsampled from the original 30 fps). Frame 1: balancing in the user-specified ready stance. Frames 2,3: The character anticipates that the ball would hit it and dodges down. Frame 4: anticipation pose to get enough leg swing momentum. Frames 5,6,7: swinging the leg around and following with the rest of the body to end up again in the ready stance. The ready stance facing direction was not given as a goal.\n      \n      We present a Model-Predictive Control (MPC) system for online synthesis of interactive and physically valid character motion. Our system enables a complex (36-DOF) 3D human character model to balance in a given pose, dodge projectiles, and improvise a get up strategy if forced to lose balance, all in a dynamic and unpredictable environment. Such contact-rich, predictive and reactive motions have previously only been generated offline or using a handcrafted state machine or a dataset of reference motions, which our system does not require. For each animation frame, our system generates trajectories of character control parameters for the near future ? a few seconds ? using Sequential Monte Carlo sampling. Our main technical contribution is a multimodal, tree-based sampler that simultaneously explores multiple different near-term control strategies represented as parameter splines. The strategies represented by each sample are evaluated in parallel using a causal physics engine. The best strategy, as determined by an objective function measuring goal achievement, fluidity of motion, etc., is used as the control signal for the current frame, but maintaining multiple hypotheses is crucial for adapting to dynamically changing environments. CR Categories: I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism?Animation Keywords: animation, motion synthesis, motion planning, sequential Monte Carlo, particle filter, optimization\n      Links:\n      \n        \n      \n      DL PDF W\n      \n        \n        \n      \n      EB\n      \n        \n      \n      V IDEO\n      ? e-mail: first.last@aalto.fi\n    \n    \n      \n        ACM Reference Format\n        H?m?l?inen, P., Eriksson, S., Tanskanen, E., Kyrki, V., Lehtinen, J. 2014. Online Motion Synthesis using Sequential Monte Carlo. ACM Trans. Graph. 33, 4, Article 51 (July 2014), 12 pages. DOI = 10.1145/2601097.2601218 http://doi.acm.org/10.1145/2601097.2601218.\n      \n      \n        Copyright Notice\n        Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the fi rst page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org . 2014 Copyright held by the Owner/Author. Publication rights licensed to ACM. 0730-0301/14/07-ART51 $15.00. DOI: http://dx.doi.org/10.1145/2601097.2601218\n        Ville Kyrki 1 Jaakko Lehtinen 1,2 2 NVIDIA\n      \n      \n        1 Introduction\n      \n      Production of 3D character animation is a slow, laborious process. Further, if one aims for expressive interaction and realism, the amount of animation required in interactive software like games is practically infinite. A long line of research addresses these problems by seeking to transform the animator or game designer into a choreographer who commands virtual agents that algorithmically synthesize the desired motions based on high-level goals. Successful synthesis results in physical validity (realistic body part masses and muscle forces, respecting non-penetrating contacts and friction), and leads naturally to movement qualities like ?squash-and-stretch? and anticipation [Witkin and Kass 1988; Lasseter 1987].Following the seminal work of, e.g., Witkin and Kass [1988] and Sims [1994], basic behaviors such as balancing and locomotion can now be generated in real-time, and offline systems exist for synthesizing more complex motions [Geijtenbeek et al. 2011; Al Borno et al. 2013; Erez et al. 2013]. However, online, interactive synthesis of difficult, contact-rich movements, such as acrobatics, remains a challenge, particularly in unpredictable dynamic environments where prior animation or motion capture data is unavailable.  This paper tackles the problem using a novel approach based on Sequential Monte Carlo (SMC) methods for multimodal tracking, here applied to trajectory optimization and Model-Predictive Control (MPC). We present a trajectory optimization system with two key design goals: 1) the resulting movement should be creative and interesting with minimal input data, i.e., goals and constraints instead of pre-made animation or motion capture data, and 2) the system should operate at an interactive frame rate at design time, enabling rapid iteration of the goals and constraints. The output of our system is a time-varying control strategy that drives the character towards the specified goals, while accounting for changes in the environment. Furthermore, the output can be mapped to a more lightweight runtime controller using standard machine learning techniques. We score the potential control strategies by an objective function (a fitness function) that measures goal attainment and the physical properties of the motion. The function is highly non-convex and multimodal, reflecting the fact that many strategies may lead to the desired goal. Naturally, some are better than others ? smoother, use less energy, ?more natural?; however, finding the global maximum using standard nonlinear optimization is not a robust approach, since changes in the environment may unpredictably change the objective function. To attain robustness in the face of this uncertainty, we maintain a discrete family of potential control strategies. Formally, treating each control strategy as a point in a high-dimensional space (to be made explicit below), we evolve a population of samples using Sequential Monte Carlo sampling so that the ensemble remains well-distributed even when the fitness landscape changes. This allows the optimizer to switch strategies if changes in the environment so dictate. Our formulation also allows straightforward parallelization: the objective function values for the samples can be computed in an arbitrary order. We further exploit temporal coherence by forming a sample generation prior for the current frame based on previous frames. Our contributions are ? the introduction of SMC to online synthesis of physically valid character motion; ? a novel sequential sampling method that allows easy integration of machine learning. The sampler utilizes kD-trees for adaptive sampling; ? online, near-real-time synthesis of complex get up strategies, e.g., planting a hand on the ground, leaning on the hand to allow moving a foot closer, and finally shifting weight on the foot to rise up. An example of the motion generated by our system is shown in Figure 1 . Our character is able to balance in a given pose, dodge projectiles, and improvise a variety of complex get up strategies if forced to lose balance, all without precomputation or training data. Figure 2 gives an overview of the main components of our system, including the multimodal sampler/optimizer that generates motion plans, a parallelized physics engine that is used to simulate the movement resulting from each motion plan, and an optional machine learning system that generates one or more predictions used for seeding the adaptive sampling in each frame.\n      ACM Transactions on Graphics, Vol. 33, No. 4, Article 51, Publication Date: July 2014\n      51:2\n      ?\n      P. H?m?l?inen et al.\n      Current Control state Optimizer Results simulation Physics Goals Predictions Machine Training data learning\n      \n        Figure 2: High-level system architecture.\n      \n      \n        2 Related work\n        Physically Valid Procedural Character Animation The vast research on procedural character animation is challenging to review thoroughly within the scope of this paper, as central work such as spacetime constraints by Witkin and Kass [1988] has hundreds of citing papers. For a more complete review, we refer to Geijtenbeek et al. [2011]. We focus on optimization based animation of active characters (e.g., locomotion, jumping, dodging) instead of passive ragdolls that are trivial to implement using off-the-shelf physics engines like Open Dynamics Engine or Bullet. We do not discuss procedural animation techniques such as parametric motion  graphs [Heck and Gleicher 2007] that enable goal-driven behavior based on a library of animation data, but do not enforce physical constraints such as non-penetrating contacts. Such techniques are covered, e.g., in the review by Pejsa and Pandzic [2010]. Offline Optimization The problem of synthesizing diverse and physically valid motion based on spacetime constraints (e.g., jump and land in a specific pose at a specified time while minimizing energy expenditure) has largely been solved in the offline case. Much of the work has focused on extensions of the quadratic programming (QP) formulation of Witkin and Kass [Witkin and Kass 1988; Cohen 1992; Fang and Pollard 2003; Safonova et al. 2004], where the optimized variables include the root position and rotation, and joint rotations for each animation frame. QP is well suited for spacetime optimization, as target poses can be defined as equality constraints, contacts as inequality constraints, and energy minimization and smoothness can be included in the quadratic cost. However, the synthesized motions have been limited by the need for prior knowledge of contact information, such as in what frames the character should touch the ground and with which body parts. This limitation was overcome by Mordatch et al. [2012], who introduced auxiliary optimized variables that specify the contact information, and who used L-BFGS for optimization. Motion Synthesis as a Control Problem Spacetime optimization can also be approached as a control problem. In this case, the optimized variables describe the evolution of control parameters such as joint torques over time, and the resulting motion is computed by forward dynamics simulation [Ngo and Marks 1993; Wampler and Popovi? 2009; Al Borno et al. 2013]. This way, the problem falls in the domain of MPC. Control optimization has the benefit that physics constraints such as continuity and contacts are handled frame-by-frame by the physics engine and do not have to be included in the optimization. The approach also handles additional dynamic objects, whereas a direct Witkin and Kass -style spacetime formulation needs additional variables for each moving object. On the other hand, symbolic expressions of Jacobians and Hessians are not available, which motivates the use of stochastic, derivative-free optimization methods. The dynamics simulations for evaluating each sampled control vector are costly but straightforward to parallelize. In light of the recent work by Mordatch et al. [2012] and Al Borno et al. [2013], both deterministic spacetime optimization and stochastic derivative-free control optimization appear equally suitable for offline synthesis of contact-rich, complex and acrobatic motions. Online Optimization and Control using Prior Data Considering online synthesis of physically valid motion at interactive frame rates, there are various approaches. Offline optimization has been used to learn the parameters of neural networks and other controller types that can be used in real-time physics simulation [Sims 1994; Reil and Husbands 2002; Geijtenbeek et al. 2013]. This has the drawback of limited generalization to novel situations. Reference motions can be tracked under disturbances, e.g., using an MPC approach with a short-horizon QP controller that is run intermittently and augmented with a proportional-derivate (PD) controller at each simulation step [Da Silva et al. 2008], or preprocessing motion data with spacetime optimization and then using a nonlinear quadratic regulator [Muico et al. 2009], or sampling-based optimization of a time-varying pose displacement relative to the reference trajectory [Liu et al. 2010]. Existing controllers can also be combined to form novel controllers for new goals [da Silva et al. 2009]. Online Optimization Without Prior Data Operating without reference motions or controllers complicates online synthesis. Our work falls into this category, and we draw inspiration from two main prior systems. Jain et al. [2009] have implemented balancing, stepping and other behaviors using a frame-by-frame QP optimizer augmented with a state machine that breaks movement down into subgoals that can be implemented with a planning horizon of a single frame. The subgoals are quite detailed, such as moving a lifted foot so that the ground projection of the character?s center of mass lies midway between the feet. This raises concerns about robustness, e.g., to obstacles for foot placement, and decreases the probability of creative, emergent movements. In general, there is a trade-off between minimizing computational cost (a short planning horizon), and minimizing the amount of prior information and assumptions needed in the form of motion data or a state machine definition. Our system does not need motion data, and our optimizer automatically generates balancing and footsteps without predefined states thanks to a planning horizon of up to 4 seconds, which is enough for completing a rebalancing step, or even rolling on the ground and bouncing back up. Our approach is also inherently predictive ? characters can anticipate events without hand-coded prediction algorithms. Our work is perhaps closest to Tassa et al. [2012] who also studied the actions of balancing and getting up, and used a multithreaded physics engine to forward-simulate candidate trajectories. We extend their approach in three key areas: we use a longer planning horizon (up to 4 seconds vs. their 0.5s), simultaneously track multiple modes of the fitness function (their iLQG method is unimodal), and use a more complex character model, including 3-DOF joints. As a result, our system adds the ability to plan movements with several phases ? e.g. getting up by planting a hand, pushing with the hand to allow moving a foot closer, and then shifting weight on the foot, as shown in Figure 14 . The character of Tassa et al. is able to get up from a lying position in a single bounce, implying rather loose limits on the control torques, which simplifies the planning problem. In later work, the problem of springing straight up was solved by designing a state machine that explicitly breaks down the task into a sequence of subtasks [Erez et al. 2013]. Sequential Monte Carlo Sampling SMC has been used widely in various tracking problems [Arulampalam et al. 2002; Doucet and Johansen 2009]. Body tracking using computer vision is especially close to our work, as many tracking systems feature both particle filters (a form of SMC) and articulated human body models [Deutscher et al. 2000; Schmidt et al. 2006]. SMC has also been recently introduced to control optimization [Stahl and Hauth 2011; Kantas et al. 2009; de Villiers et al. 2011], but to the best of our knowledge, it has not been applied to motion synthesis with complex articulated characters. Although our sampler bears similarities, e.g., to the particle filter variants discussed by Arulampalam et al. [2002], it is more precisely a sequential version of the mutated kD-tree importance sampling of H?m?l?inen et al. [2006], which in turn is based on the hierarchical subdivision sampling of Kajiya [1986]. Compared to particle filters, we apply similar prediction, weight updating, and resampling operations to the samples, but the formulae differ as the tree structure is used to compute sample weights and adaptive exploration variances. In addition to H?m?l?inen and Kajiya, many others have combined kD-trees with sampling. For example, Thrun et al. [2000] describe Bayesian mobile robot localization using a kD-tree for sample weight computing, and for conditional sampling from a precomputed model of the joint distribution of poses and observations. Rudoy and Wolfe [2006], building on Ihler et al. [2003] describe efficient tree-based sampling from products of Gaussian mixtures.\n        ACM Transactions on Graphics, Vol. 33, No. 4, Article 51, Publication Date: July 2014\n        Online Motion Synthesis Using Sequential Monte Carlo\n        ?\n        51:3\n        \n          \n          Figure 3:\n        \n        An illustration of the basic principles of SMC. The tracked probability density f(x) is approximated by a set of samples, which are iteratively weighted, resampled and sampled. In the sampling step, new samples are drawn from proposal densities based on the previous samples. This is analogous to how many stochastic optimization methods mutate samples to explore the parameter space. During the resampling step, the samples at the peaks of f(x) produce more ?offspring?, while others may die out. Note that the weights depicted here are only exemplary; the exact weighting formulae vary between methods.\n      \n      \n        3 Adaptive Sequential Importance Sampling\n        \n          3.1 Overview\n          We seek to control a physical character towards attaining goals. We formulate this as finding the global maximum of a real-valued non-negative objective function (fitness function) f (x; t), where the vector x ? R k defines a control strategy represented as timevarying target joint angles and other parameters, explained in detail in Section 4.2 1 . Time t is a parameter rather than a domain variable, and it accounts for a dynamic environment. As the search space consists of an approximation to all the possible ways to drive the actuators over a couple of seconds, it is easy to appreciate that the objective function is multimodal, and that the modes shift, appear and vanish with time. Multimodality of the objective function motivates a Sequential Monte Carlo (SMC) approach. The core idea of SMC methods is that a sequence of target probability densities is approximated using an evolving set of weighted samples, as illustrated in Figure 3 . The sample set can then be used for estimating the modes of the density function. A thorough mathematical treatment can be found, e.g., in [Arulampalam et al. 2002; Doucet and Johansen 2009]. Although the terms particle filters and SMC are sometimes used interchangeably, we use the latter in the sense of Doucet and Johansen [2009] to denote a general class of algorithms for sampling\n          1 All our parameters have minimum and maximum values, and the problem is thus inequality-constrained by axis-aligned planes, i.e., the space of possible solutions is a hypercube.\n          ACM Transactions on Graphics, Vol. 33, No. 4, Article 51, Publication Date: July 2014\n          51:4\n          ?\n          P. H?m?l?inen et al.\n          from a sequence of target probability densities. Contrary to particle filter approaches, we simply treat the objective function f (x; t) as a sequence of unnormalized target probability densities, instead of modeling the posterior density p(x t |y 1:t ) or the marginal likelihood p(y 1:t ), where y denotes observations related to x. Doucet and Johansen [2009] show that particle filters can be interpreted as special cases of a generic SMC algorithm, which however requires all samples to be drawn from known proposal densities. Our sampler avoids this requirement, allowing the insertion of additional arbitrarily obtained candidate samples, e.g., initial guesses from the machine learning component in Figure 2 . Whereas typical SMC weighting comprises a division by the proposal density, we use a kD-tree-based estimate of the realized sample density. This provides a unified way of weighting random samples with known proposal densities and initial guesses with no proposal density. Additionally, the kD-tree provides means for adapting the search variance so that samples at low fitness regions are perturbed more. Algorithm Overview We maintain a population {x i , f (x i ; t)} of N samples and their associated fitnesses that evolve over time. For each frame, the algorithm performs the following steps:\n          1. Prune the sample set. Keep only the best M . 2. Draw a set of K new samples by optional heuristics and machine learning predictions that may depend on the current state. 3. Construct a sampling prior q(x) based on the M + K samples by inserting the samples in a kD-tree and constructing an adaptive PDF. 4. Until the budget of N samples is reached, draw new samples from q(x). Use each new sample to adaptively update the prior q(x). 2 5. Pick the best sample and use it for driving the simulation forward for the current time step.\n          The construction of the sampling prior q(x) and its adaptive refinement are described in Section 3.3. Details on the outer loop are presented in Section 3.4. The heuristics and machine learning component are detailed in Section 4.5.\n        \n        \n          3.2 A 2D Example\n          To provide visualizations and intuition on our sampler applied to motion optimization, we present a 2D problem with nonlinearities and multimodality arising from physical contacts. Figure 4 gives an example of the objective function of 2D ball throw optimization. The optimized parameters are x = [s, ?] T , where s is the throwing speed, ? is the throwing angle, and the aim is to get the ball as close to a specified target g as possible. Figure 4A illustrates the physical setup and shows two trajectories resulting from different x. The target g is shown as a black circle. We illustrate two different objective functions: the first, illustrated in Figure 4B , computes the closest point c(x) of the trajectory and the target without regard for timing, i.e., f (x) = exp {? c(x) ? g 2 }. This produces a landscape with ridges, each\n          2 This iteration of sampling from a model and updating the model based on the samples is also central to some other optimization methods, such as the Covariance Matrix Adaptation Evolution Strategy (CMA-ES), which has been gaining popularity in the motion synthesis literature. However, whereas CMA-ES updates a unimodal model (a single Gaussian), our model is multimodal.\n          \n            \n            Figure 4: A) A 2D ball throw test scene. The black circle denotes the throw target. Two example ball trajectories are shown in red and green. B) The objective function mapped to image intensity, with respect to throw angle (horizontal axis) and throw speed (vertical axis). The green and red circles show the location of the example trajectories in the parameter space. C) The objective function landscape when the time to hit target is constrained. D) An example of 100 samples and hypercubes (rectangles in this 2D case) generated by one time step of Algorithm 2.\n          \n          Algorithm 1 Adaptive Importance Sampling using a kD-tree. 1: Draw x 0 uniformly in parameter space, evaluate f (x 0 ) 2: root ? {x 0 , f (x 0 )} 3: repeat 4: Randomly select leaf node i with probability ? w i 5: Draw a sample x new ? N (x i , C i ) 6: Evaluate f (x new ) 7: {n 1 , n 2 } ? I NSERT T REE ( x new ) n 1 , n 2 are new leaves 8: w n 1 ? V n 1 f (x new ) n 1 is where x new ends up 9: w n 2 ? V n 2 f (x n 2 ) n 2 contains previous sample 10: until #samples = N\n          ridge corresponding to, e.g., different number of bounces. The two example trajectories are marked by the red and green circles. The second goal, illustrated in Figure 4C , aims to hit the target at a specified point in time. The corresponding objective function simply evaluates the distance to the target at this time in the trajectory. Now, some of the ridges become peaks, but the landscape is still multimodal, as the ball can still reach the target using a variety of different bounce sequences. Figure 4D illustrates the adaptive kD-tree that defines the sampling prior q(x), whose construction is detailed in the next section.\n        \n        \n          3.3 Adaptive Importance Sampling Using a kD-tree\n          We first describe an adaptive importance sampler for a timeinvariant, multimodal, unnormalized objective function f (x). The method was proposed in [H?m?l?inen et al. 2006], but we repeat it for completeness, and then extend it for the sequential, timevarying case. The process is outlined in Algorithm 1 and illustrated in Figure 5 and Figure 6 . The process draws samples approximately following f (x), allocating more samples at regions where f (x) is high, with the approximation of f (x) gradually improving\n          ACM Transactions on Graphics, Vol. 33, No. 4, Article 51, Publication Date: July 2014\n          Online Motion Synthesis Using Sequential Monte Carlo\n          ?\n          51:5\n          \n            \n            Figure 5: 1D illustration of sampling from f(x) according to Algorithm 1, but generating the samples inside the selected hypercubes instead of drawing them from the normal distribution. The circles denote samples and the rectangles illustrate the adaptive space subdivision into hypercubes. In 1D, rectangle widths are the hypercube volumes, and rectangle areas correspond to sample weights in Algorithm 1. In step B, the sample falls in a valley of f (x), which then biases the sampling to the right side in steps C and D.\n          \n          with each sample.\n          The basic idea is to store the sample coordinates and objective function values {x i , f (x i )} into a kD-tree built over the domain. The tree adaptively subdivides the parameter space into hypercubes. Each leaf node is a hypercube, and the volume V i of each leaf gives an approximate measure of the local density of samples. The weight\n          \n            1\n            w i = f (x i )V i\n          \n          gives a single-sample estimate of the integral of f (x) over the leaf hypercube. One can interpret the tree as a piecewise constant approximation of f (x), from which one may draw samples by first randomly selecting a hypercube with the selection probabilities ? w i , and then generating a sample uniformly inside the hypercube. However, as shown in Figure 5 , this na?ve kD-tree sampling easily leads to biases if the value of f (x) evaluated at a sample is not representative of the whole hypercube. The solution is to treat the kD-tree as a mixture of Gaussians, illustrated in Figure 6 . For the selected hypercube i, the sample is drawn from N (x i ; C i ). The covariance C i is diagonal with elements c jj = (?d ij ) 2 , where ? is a scaling parameter (we use ? = 0.5) and d ij is the width of the leaf hypercube i along dimension j. The Gaussian tails overlap the neighboring hypercubes, which makes it more likely for the sampling to cross valleys and recover from the biases. Until a sampling budget is met, we draw a new sample from the mixture, add the sample to the tree, split the leaf node where the new sample lands between the new and old samples, and recompute the weights for the two new leaves (Equation 1).\n          \n            \n            Figure 6: Treating the kD-tree as a mixture of Gaussians.\n          \n          The mixture components are shown as the black curves in step A. The Gaussians are centered at the samples, with standard deviations proportional to the hypercube widths in each dimension. This blurs the distribution model adaptively, with less blurring where samples are densely concentrated, and increases the chance of samples crossing valleys, illustrated in step B.\n          \n            \n          \n          f (x) and samples Tree 1 Tree 2 Average of 100 trees\n          \n            Figure 7: Random trees. Left: a function and random samples. Middle: two different kD-trees built from the samples on the left. Right: average of 100 random trees.\n          \n        \n        \n          3.4 The Sequential kD-tree Sampler\n          In our application, the fitness landscape varies from frame to frame as the environment changes. The phenomenon is illustrated in Figure 8, where changing the throw target changes the objective. To support changing landscapes, we now construct a Sequential Monte Carlo sampler (Algorithm 2) based on the adaptive sampler described above. Building a sampling distribution out of the samples taken during the previous frame allows us to exploit temporal coherence. At frame t j , the set of samples from the previous frame t j?1 is first pruned to M < N samples by retaining the M samples whose leaf nodes have the largest weights (lines 2-5). A large M means that old samples get selected and re-evaluated often, which may affect convergence in rapidly changing situations, whereas a low value makes tracking multiple modes difficult as little information is retained between frames. We use M = 0.1N in all our results. After pruning, the tree is rebuilt by inserting the remaining M samples in random order (lines 6-10). This is crucial to avoid persistent spatial biases in the sampling, as the tree building order affects the hypercube volumes and, consequently, the sample weights. However, the randomization averages the biases out temporally. Figure 7 shows a function with samples, three different kD-tree models built from the same set of samples, and an average of 100 trees. We have also experimented with building an ensemble of trees for each time step to further reduce the variance of the volume estimates for each sample, but we do not so far have conclusive evidence of the benefits. After rebuilding we introduce new samples drawn from a set of heuristics (lines 11-15, see Section 4.5). After this, the sampling prior is complete: the tree contains the M best samples from the\n          ACM Transactions on Graphics, Vol. 33, No. 4, Article 51, Publication Date: July 2014\n          51:6\n          ?\n          P. H?m?l?inen et al.\n          \n            \n            Figure 8: Tracking of the objective function landscape with 100 samples as the ball throw target moves. The red circles and gray trajectories show the samples generated at each time step, and the green trajectory and green circle show the selected best sample. The benefit of multimodality is evident, as old modes vanish and new ones appear. In the first frame (t=1), the samples are initialized uniformly.\n          \n          Algorithm 2 kD-Tree Sequential Importance Sampling 1: for each time step t j do // Prune tree to M samples 2: while #samples > M do 3: find leaf i with minimum w i 4: R EMOVE T REE (x i ) 5: end while // Randomly shuffle and rebuild tree using old fitnesses 6: C LEAR T REE () 7: {x 1 , . . . , x M } ? R ANDOM P ERMUTE ({x 1 , . . . , x M }) 8: for i = 1 . . . M do 9: I NSERT T REE (x i ) 10: end for // Draw guesses from heuristics and ML predictors 11: for i = 1 . . . K do 12: x g ? D RAW G UESS () 13: evaluate f (x g ; t j ) 14: I NSERT T REE (x g ) 15: end for 16: {w 1 , . . . , w M +K } ? U PDATE L EAF W EIGHTS () // Then, perform adaptive sampling 17: repeat 18: Randomly select leaf node i with probability ? w i 19: if node contains old fitness f (x i ; t j?1 ) then 20: compute current fitness f (x i ; t j ) 21: w i ? V i f (x i ; t j ) update weight 22: else // Sample as in Algorithm 1 23: draw a sample x new ? N (x i , C i ) 24: Evaluate f (x new ; t j ) 25: {n 1 , n 2 } ? I NSERT T REE ( x new ) 26: w n 1 ? V n 1 f (x new ; t j ) 27: w n 2 ? V n 2 f (x n 2 ; t j ) f (x n 2 ; t j ) known 28: end if 29: until #samples = N 30: end for\n          previous frame, along with new samples generated by heuristics. The remainder of the algorithm performs adaptive sampling much like Algorithm 1 (lines 17-29). The only difference is that when a leaf that contains a stale fitness value from the previous frame is selected, it is recomputed and the weight updated, but a new sample is not generated (lines 20-21). When a node with an up-to-date fitness is selected for refinement, sampling proceeds as in Algorithm 1 (lines 23-27). When the budget of N samples is reached, the current sample set is approximately distributed according to the new fitness f (x; t j ).   Figure 8 shows how Algorithm 2 tracks the objective function modes in the 2D example when the ball throw target is moving.\n        \n        \n          3.5 Greedy Sampling\n          After nearly exhausting our sample budget, we further opportunistically explore the region around the current best sample x b . We modify Algorithm 2 so that for the last N g samples of a time step, the selection (line 18) always chooses the leaf with the best sample so far, and a lower scaling factor ? g is used for computing C i . Adjusting N g and ? g allows one to tune the balance between local and global search. We use ? g = 0.005. Section 5 presents the results from our character motion synthesis with different values of N g .\n          ACM Transactions on Graphics, Vol. 33, No. 4, Article 51, Publication Date: July 2014\n          Online Motion Synthesis Using Sequential Monte Carlo\n          ?\n          51:7\n          \n            \n            Figure 9: The character model (left), and heavy and light versions of the physics skeleton used for simulation.\n          \n        \n      \n      \n        4 System Description\n        \n          4.1 Character Model\n           Figure 9 shows our character and physics models. In our tests, we use two physics models: one light-boned, and another with a considerably heavier torso and thus a higher center of mass (COM), which makes balancing and acrobatics more difficult. The physics objects have constant densities. The character has 30 actuated DOF and 6 unactuated root DOF. The physics model consists of 15 bones (rigid bodies) connected using 3-DOF ball and 1-DOF hinge joints, the latter used for elbows, knees and ankles. We do not model clavicles, toes, and fingers. For simulation, we use Open Dynamics Engine (ODE) 0.12, using ODE?s direct ?big matrix? LCP solver, a time step of ?t = 1/30 seconds, and CFM and ERP parameters as 10 ?5 and 0.2, respectively. Note that ODE also has an iterative solver, which is faster but less stable. For approximately similar quality, the iterative solver requires a timestep of 1/120s, which results in slower operation. In our case, the direct solver only takes approximately as much CPU time as collision handling.\n        \n        \n          4.2 Optimization Parameterization\n          We represent control strategies as time-varying target joint angles that are encoded as a sequence of control points of an interpolating cubic spline. We use n = 4 control points in all our experiments. Our spline is non-uniform, i.e., the positions of the control points along the temporal axis (the knots) are subject to optimization. Specifically,\n          \n            2\n            x = [z 1 , ..., z n ], with z i = [q i , l i , t i ],\n          \n          where the q i denote the 30 target joint angles at time t i . The time coordinate is expressed as an offset from the previous control point, or from the current time for the first control point. The l i are limits on the maximum allowable torques for the actuated joints; allowing them to vary instead of using fixed maximums allows the character, e.g., to soften landings from high jumps. We use the sampling bounds 50N m < l i < 150N m for the lightweight model and 50N m < l i < 200N m for the heavier one. The torque limits are specified for three groups of bones: torso, arms and legs. The non-uniform knot sequence allows fine-grained control of fast movements such as jumps. The total number of optimized variables is 136 (i.e. x ? R 136 ), consisting of 30 target angles, 3 torque limits, and 1 time coordinate for each of the 4 control points.\n        \n        \n          4.3 Evaluating the Strategy by Forward Simulation 1 if n c = 0 f d = (4) max i g(|v ? n i |), i = [1, ..., n c ] if n c > 0\n          The spline defined by x gives continuous-time target joint angles q(t; x) and limits on maximum torque l(t; x). To evaluate the objective function, we feed these targets into the physics simulation and record what happens.  The total duration of the simulation for each sample varies depending on the control points. However, we only run the simulation up to a predefined planning horizon. Section 5 presents results with different planning horizons. The default used in the supplementary video is 2 seconds. For each time step t j , we evaluate the target angles q(t j ; x) and torque limits l(t j ; x) and feed them to the ODE physics simulator. ODE motors are controlled by a target velocities that ODE tries to make the motors reach. We compute the target velocity for the ith motor from the target pose as (q i target ? q i current )/?t with q i denoting joint angles as seen by the motor. The simulator is then stepped forward by the time step; internally, it drives the motors to try to match the target velocities, while respecting the torque limits. The simulation produces a time series of realized 3D positions b and velocities b  ? for all the 15 rigid bodies in the skeleton, representing what happened when we tried controlling the character using the strategy x. We denote the series by S(x) = {b(t j ; x), b(t  ? j ; x)} N j=?1 s (x) , where N s (x) is the number of simulated time steps for the sample and j = 1 denotes the current time step. We also use the shorthand notation b (j) = b(t j ; x). Given the sequence, the objective function then measures the fitness value of the realization using formulae given in Section 4.4. The time index j of S(x) starts from -1, as we also include a history of past two frames in the evaluation, which allows the objective function evaluation to prefer continuity with previously selected control strategies. This reduces movement jitter, which could otherwise be a problem in a stochastic sampling system like ours. Note that as the LCP solver will adapt the torque based on, e.g., contact forces, our scheme provides a slightly higher level of control than using PD controllers. The human motor system comprises both motion-inducing and stabilizer muscles, and stabilizing the character in a given pose is easier with the motors than with PD controllers, especially with the large ?t we use. Appendix A describes important implementation details related to obtaining a causal, reproducible simulation.\n        \n        \n          4.4 Objective Function\n          The objective function drives the character towards the desired goals. In this paper, our goal is to balance the character upright in a predetermined ?ready? stance defined by a pose vector q r , shown in the first frame of Figure 1 . The corresponding objective function is formulated as\n          \n            3\n            f (S) = f d f s max[f b , w u f u ]\n          \n          where f d , f s , f b , f u denote damage avoidance, smoothness, balancing, and get up objectives, respectively, and w u adjusts the priority of the get up objective. We use w u = 0.0001. All components of the objective function are functions of S, but in the following, we omit the dependence for brevity.  Damage avoidance The damage avoidance objective tries to avoid high-velocity impacts to important body parts. We include head and pelvis in the objective to allow versatile movement but prevent the character from falling on its head or bottom. The objective is formulated as\n          (4)\n          i\n          if if\n          where n c is the number of all important body contacts during the realized plan and v i and n i are the relative velocity and contact  normal of the ith contact, respectively. The function g is a soft threshold function g(x) = 0.5 + 0.5 tanh[c(t d ? x)], where t d is the threshold and c is a steepness parameter. We use t d = 2.2 and c = 2.5. Smoothness The smoothness objective consist of minimizing acceleration and jerk (the time-derivative of acceleration), which has been found to help in producing natural movement [Van Welbergen et al. 2010]. The objective is given by\n          ACM Transactions on Graphics, Vol. 33, No. 4, Article 51, Publication Date: July 2014\n          51:8\n          ?\n          P. H?m?l?inen et al.\n          \n            5\n            f s = e ? 2 1 ?a ? a 2 + ? ? J j 2 ,\n          \n          where ? a and ? J are the mean squared acceleration and jerk, respectively, computed as:\n          N s (x)?1 ? a = 1 b  ? (j) 2 , N s (x) ? 1 j=1\n          \n            6\n            N s (x)?1 1 ... (j) 2 ? J = b , with N s (x) j=0\n          \n          b  ? (j) = b  ? (j) ? b  ? (j+1) , ... b (j) = b  ? (j?1) ? 2 b  ? (j) + b  ? (j+1) . ?t (?t) 2 We use values ? a = 5.0 and ? j = 13.7. The jerk term ? J is affected by the history of the last two frames (j = ?1, j = 0) to avoid acceleration jitter from frame to frame.\n          Balancing The balancing objective is the most complex one, comprising a desired target pose, desired up-vector direction, velocity minimization, COM displacement minimization and penalization based on other body parts than feet touching the ground. We define it as\n          \n            7\n            (j) ? 1 ||r (j) || 2 f b = max f g e 2 b j\n          \n          where j denotes the jth frame. Here, f g is the penalizing term that gets the value 0 if any body part other than the feet is touching the ground, and 1 otherwise. The vector r b is defined as\n          \n            8\n            r (j) = c (j) T , b (j) T , d com (j) T , d (j) up T , q d (j) T T b ? vel1 ? vel2 ? disp ? up ? pose\n          \n          Velocity minimization is done by the following terms: c (j) is the velocity of the center of mass, projected to the ground plane. b  ? (j) is the concatenation of the velocities of all bodies. (j) The COM displacement d com is computed relative to the COM of the target balancing pose in a character-centric coordinate system defined by the global up vector, and the character facing direction vector projected to the ground plane, with the origin at midway be(j) tween the feet. Similarly, the up vector difference d up is computed in the character centric coordinates as d up = u root ? u balanced , where u root is the up-vector of the root bone, and u balanced is the corresponding vector of the target balancing pose. Finally, q d denotes the differences between the local joint angles of the simulated and target poses, using angles as seen by ODE motors. The values we use for the scaling multipliers are ? vel1 = 0.05m/s, ? vel2 = 0.75m/s, ? disp = 0.05m, ? up = 0.1m and ? pose = 15.0 degrees.  The balancing objective is computed for each frame between a specified minimum time and the length of the planning horizon, and the best scoring frame is used for evaluating the whole sample. We use 0.5s as the minimum. In many MPC systems, the objective function is partitioned into a running cost and a terminal cost, and the terminal cost is only evaluated at a fixed planning horizon. In contrast, our system allows the optimizer some slack in terms of when to reach the goals, which should make the objective function modes larger and thus easier to find and track. Get-Up The get up objective is the same as the balancing objective, but omitting the pose term and having less strict velocity multipliers ? vel1 = 1.0m/s and ? vel2 = 15.0m/s.\n          \n            9\n            f u = max f g (j) e ? 2 1 ||r (j) u || 2 , j\n          \n          where j is the jth frame and\n          \n            10\n            (j) c (j) T b  ? (j) T d com (j) T d up (j) T T r u = , , , , ? vel1 ? vel2 ? disp ? up\n          \n          where terms are computed similar to f b , but the COM displacement term also includes the y-component clamped to y = min(0, y ? (y target + h)), where h = 0.1m denotes an offset of the COM that is higher than in the target balancing pose. This is to not penalize motion where the COM is temporarily above the balancing pose, e.g., when taking steps or leaping. The main difference to previous work is that the objective function formulation is multimodal due to the max function. In practice, we have found that when the character has fallen down, the sampler has difficulties maximizing all the components of the balancing objective f b . However, maximizing f u is much easier, and very often leads to a situation where, as a consequence, f b is easier to maximize. In effect, this is similar to how Jain et al. [2009] define balancing as a sequence of states including balancing and taking a step. However, we do not need to define explicit state transitions or target locations for foot placement, and the sampler may freely pick the best strategy in each situation. The f u component also allows the character to take steps to regain balance or dodge projectiles, as it does not penalize deviations from the target pose.  Roll With the heavier model in the middle of Figure 9 , even a get up strategy is sometimes difficult to find when the character has fallen on its back. In these cases, we add a third alternative objective f r inside the max function in Equation 3 that makes the character roll away from its back\n          \n            11\n            ?20||y (j) +1|| 2 f r = max w r e f j\n          \n          where y f is the y-coordinate of the character?s normalized forward vector computed from the torso, and w r is the priority of the rolling. We use a small w r = 10 ?40 because we want the character to keep improvising alternative get up strategies if possible.\n        \n        \n          4.5 Heuristics and Machine Learning\n          Heuristics At each frame, we generate 20% of the samples uniformly within the parameter space. We also add a guess where each control point of the spline equals the target balancing pose and where joint torque limits are constant. Finally, we add the best sample x b of the previous frame after stepping its parameters one time step forward, i.e., shifting the spline backward in time by ?t.  When evaluating the last heuristic, it is important to ensure that the interpolated results from the original x b and the shifted spline match to machine precision over the entire horizon. We achieve this by writing the spline evaluator recursively, such that splines are only ever evaluated at t = 0, and stepping forward by ?t is handled by changing the knots and control points. Machine Learning Our system supports the optional generation of guesses (lines 11-15 in Algorithm 2) from an arbitrary machine learning component, with the idea of drawing on previous experience to infer good strategies for the current situation. We use approximate nearest neighbors query using the FLANN library [Muja and Lowe 2009] to map a feature vector to a set of control strategies that are injected as guesses on line 12. The feature vectors consist of current pose angles, the ?up? direction of the root node, the rotation and velocity of the root node, and optionally, the relative position and velocity of the closest projectile to dodge. The training set is normalized with respect to L 2 norms of the feature variables. We train the mapping during online optimization (the ball evading test explained in Section 5), storing the feature vector and best sample x for all frames where f (x) > 10 ?10 . While the simple ANN search is probably not the optimal machine learning method for our case, Section 5.2 shows that as few as 3 approximate nearest neighbors improve get-up performance considerably. We consider our implementation a proof-of-concept of integrating machine learning with the SMC sampling of control strategies; development and evaluation of more efficient and expressive learning components is left as future work.\n          ACM Transactions on Graphics, Vol. 33, No. 4, Article 51, Publication Date: July 2014\n          Online Motion Synthesis Using Sequential Monte Carlo\n          ?\n          51:9\n        \n      \n      \n        5 Results\n        We have tested our method in three ways: 1) throwing spheres at the character, 2) adding sudden impulses to body parts to disturb balance and throw the character around, and 3) triggering simulated explosions that add impulses to all body parts. Figures 1, 10, 11, and 14 illustrate these tests.  In the tests, the character is able to avoid the spheres ? the avoidance behavior implicitly caused by the jerk minimization goal ? recover lost balance in creative ways, such as rolling over the shoulders to land back on its feet, and get up when thrown to the ground. We describe the results both qualitatively (Section 5.1) and quantitatively (Section 5.2). In the following, we refer to the supplemental video using the time in parenthesis (mm:ss). Performance The supplemental video was captured in real-time (using Fraps, www.fraps.com) on a Windows 7 PC with Intel Core i7-4930k 3.40GHz CPU (12 logical cores), and an NVIDIA GeForce GTX 480 GPU. On this computer, the optimizer runs at approximately 20 fps with a 1/30s physics time step, N = 25 samples per frame, and a planning horizon of 2 seconds. On a 2012 MacBook Pro laptop with a 2.4GHz processor, the same settings yield 6-10 fps, enough for interactive experimenting and parameter tuning, which we consider one of the best aspects of the system. As shown in the video, 25 samples is enough to synthesize a variety of movements, whereas using 100 samples (01:39) slows the simulation down considerably. On the other hand, using fewer samples per frame or a shorter planning horizon yields fully real-time but unreliable results (01:21).\n        \n          5.1 Qualitative evaluation\n          The system shows considerable creativity in adapting to surprising situations and utilizing the environment. For example, the character dodges the spheres using pirouette jumps (02:22) and slides to dodge a rolling sphere, using a hand to keep the sphere away (00:32). When the character?s head is punched to the ground, it continues the movement as a cartwheel of sorts and rises up (00:49). Taking steps emerges as an avoidance strategy (02:42, Figure 11 ), although not always successfully (01:48). The character also often lands on its feet when thrown in the air (00:00, 00:38). The top left corner of the video shows which of the alternative objective function components gives the highest score for the best scoring sample. ?Balancing? corresponds to f b and ?Getting up? to w u f u . Using the 2s planning horizon, the sampler is often able to find a balancing strategy while still rolling on the ground after an impact (01:02, 01:12). The main drawbacks of the system are that movement is sometimes stiff and has unnecessary joint contortions (02:18). The stiffness is probably caused by our parameterization using target angles instead of joint torques. The torque limit optimization does help, e.g., in softening landings; however, the sampling and/or the goals are not able to relax the character?s hands in many cases. The character also often keeps the hands greedily close to the target pose even when not nearly balanced. We experimented with shoulder and elbow torque minimization goals, but this easily leads to the other extreme of the hands hanging limp, which does not look natural for our fighter character. The heuristic balancing initial guess can also cause the character to assume the target pose prematurely while still moving (02:03). Sometimes this appears almost unphysical, as the character uncannily knows that although it is swaying, it will ultimately end up balanced. Without the heuristic or machine learning guesses, however, the character keeps howering about the target pose, illustrating a typically slow final convergence of global sampling methods. Combining global sampling with local refinement is clearly a topic for future work. In the future, one easy way to improve the naturalness of the movements could be scripted or learned control of gaze and head orientation. For example, real humans typically follow flying objects with their gaze, and try to look at the expected landing spot while airborne. The hand and foot contacts with the ground could also be fine-tuned, e.g., so that the character always exerts forces on the ground using the palm instead of fingertips. We expect that this can be done using purely visual corrections based on inverse kinematics instead of modifying the optimization, but this remains future work. We have also tested two other balancing poses an asymmetric Taido (a martial art) ready stance and a regular standing position. Both poses work, although the regular standing appears more difficult it is less stable as the support polygon is smaller and COM is higher.\n        \n        \n          5.2 Quantitative evaluation\n          The system is stochastic, and hence may occasionally provide good results even with just a few samples. To ensure that our results are representative, we have run a quantitative balancing and avoidance test with varying parameters. In each test, 100 spheres are thrown at the character from random directions. The spheres are 3x heavier than the character, i.e., failure to avoid the ball almost certainly leads to the character falling down. We measured the percentage of times the character was balanced 5 seconds after the ball was thrown, determined by thresholding the objective function value.  To succeed, the character could either dodge the ball, or get successfully up after a failed dodge. The test also saves a screenshot of each failure case. The most typical cases are wide splits and lying on the back. The supplementary video shows that these are difficult situations (01:33, 01:48). The left side of Figure 12 shows the success percentage as a function of optimizer samples per frame in four conditions. ST denotes the ?standard? setup used in capturing the supplemental video (2s planning horizon, lightweight character model). In ST+ML, 3 FLANN predictions were generated in each frame from a dataset of 100k training vectors, which yielded better results at low sample budgets. This indicates that our system can utilize machine learning as intended. The HV curve denotes the heavier character model with no changes compared to ST, which yields abysmal success rates at low sample budgets. Performance is better in the HV2 case, where we activated the ?roll away from back? goal, used a 3.5s planning horizon, and measured success after a longer period of 8 seconds after each ball throw. The right side of Figure 12 shows the successful attempts as a function of the greedy sampling parameter N g . There appears to be a sweet spot of 25-50% greedy samples. All our tests and the supplemental video capturing use N g = 25%. Figure 13 shows the successful attempts as a function of the number of samples and the length of the planning horizon. One can see that the 2s horizon used in the supplementary video is a reasonable default, and longer horizons do not produce considerable benefit.\n          ACM Transactions on Graphics, Vol. 33, No. 4, Article 51, Publication Date: July 2014\n          51:10\n          ?\n          P. H?m?l?inen et al.\n          \n            \n            Figure 10: The user triggers an explosion and the character flips around in the air to land on its feet.\n          \n          \n            \n            Figure 11: Footsteps emerge as the character dodges the balls thrown at it.\n          \n        \n      \n      \n        6 Conclusion\n        We have demonstrated that Sequential Monte Carlo (SMC) sampling is a viable approach for online synthesis of complex human movements without reliance on animation or motion capture data. The central features of the system are the use of kD-trees for sampling, non-uniform splines for pose interpolation, and a rigid body physics engine with custom modifications to ensure reproducible simulations. While the key component, an adaptive sequential sampling method, allows easy integration of machine learning to draw on previous experience, we are surprised by the performance of the sampler even without machine learning or using dimensionality reduction methods to constrain the search space. We have integrated our system with Unity3D, a state-of-the-art commercial game engine. The results will be released as open source. However, we believe our sampler is simple enough to also\n        \n          \n          Figure 12: Get up percentage as a function of samples per frame (left) and get up percentage as a function of greedy sampling percent (right) in a test where 100 heavy balls were thrown at the character.\n        \n        implement from scratch.\n        We see improving performance and controlling the style of synthesized movement as the two main items for future work. We expect that both can be addressed by precomputing a suitable prior for the sampling, and/or developing an interactive training application where the user may instruct a machine learning system to learn the most interesting movements that have emerged. Our parameterization also allows for pose-space dimensionality reduction, and according to our initial experiments, it does make abnormal poses less frequent. However, heavy dimensionality reduction using a small training set easily overconstrains the movement while a larger training set allows the character to use poses in abnormal contexts, e.g., kicking while balancing. Contextual and temporal information could be incorporated, e.g., by using offline optimization to generate a training set of control splines that follow motion capture trajectories, similar to [Muico et al. 2009].  In the future, we also plan to explore novel interactions and game mechanics utilizing the motion synthesis, and investigate whether sequential sampling is competitive also in offline synthesis, where the function landscape changes over time when the animator interactively adjusts parameters. It could also be interesting to simulate muscle animation, breathing, grunting etc. based on the predicted near-future exertion (e.g., ?I?ll jump and breathe out in one second, better breath in now?).\n        ACM Transactions on Graphics, Vol. 33, No. 4, Article 51, Publication Date: July 2014\n        Online Motion Synthesis Using Sequential Monte Carlo\n        ?\n        51:11\n        \n          \n          Figure 14: The user gives an impact to the left upper arm, causing the character to fall on its back. The emerging getting up strategy comprises first rolling over to the right side, and then using the right hand as a support to allow moving the right foot so that weight can be shifted on it.\n        \n        \n          \n          Figure 13: Get up percentage as a function of samples per frame (N) and the planning horizon.\n        \n      \n      \n        Acknowledgments\n        We thank all the reviewers for their valuable comments. The research has been supported by the Skene Games Refueled program of the Finnish Funding Agency for Innovation.\n      \n      \n        A Implementation Notes\n        We ended up using ODE and its direct LCP solver, as the iterative solvers in ODE, Bullet Physics or PhysX engines were not stable enough for active characters except at very small time steps that were not computationally efficient. The 3-DOF hip and shoulder joints were especially unstable, and although previous studies have successfully used 2-DOF joints [Tassa et al. 2012], 3-DOF joints are needed for a realistic character with a skinned mesh. It appears that the current mainstream physics engines are optimized for passive objects and ragdolls, although a new version of Bullet has just appeared with new solvers geared towards robotics. We have made two important changes to ODE. Firstly, the original implementation of ODE is not causal due to some internal implementation details such as reordering of arrays for optimization purposes and due to the way random numbers are generated. We have solved these issues by removing the non-deterministic optimizations and by storing the random number generator seed on a threading context level. This ensures that running two simulations in different threads with the same control parameters achieve exactly the same motion. If the simulation is not fully causal, the sampler sometimes forgets a chosen control strategy before it has been completely executed. Secondly, ODE implements joint motor limits in a way that might cause too much force to be applied when the motor is moving away from the limit. This causes instability, and ODE has solved this by introducing a hand-tuned fudge factor that scales the force. Getting  the maximum available force and the fudge factor correct for each body part is delicate and difficult, and to solve this we used a fudgefree patch from the official ODE issue tracker that instead adds the motor limits as constraint rows in the LCP formulation. This makes the simulation more robust. Our threading uses a pool of worker threads, which each obtain a sample from the sampler, simulate the physics forward, compute f (S) and store the computed value to the sampler. Access to the sampler is synchronized, which means that our implementation is not optimal for massively parallel computing. However, with our current computers with up to 12 logical cores, we have achieved a decent 75-80% core utilization.\n      \n      \n        References\n        \n          A L B ORNO , M., DE L ASA , M., AND H ERTZMANN , A. 2013. Trajectory optimization for full-body movements with complex contacts. IEEE Transactions on Visualization and Computer Graphics 19, 8, 1405?1414.\n          A RULAMPALAM , M., M ASKELL , S., G ORDON , N., AND C LAPP , T. 2002. A tutorial on particle filters for online nonlinear/nongaussian bayesian tracking. IEEE Transactions on Signal Processing 50, 2, 174?188.\n          C OHEN , M. F. 1992. Interactive spacetime control for animation. In Proc. SIGGRAPH ?92, ACM, New York, NY, USA, 293?302.\n          D A S ILVA , M., A BE , Y., AND P OPOVI C  ? , J. 2008. Simulation of human motion data using short-horizon model-predictive control. Computer Graphics Forum 27, 2, 371?380.\n          DA S ILVA , M., D URAND , F., AND P OPOVI C  ? , J. 2009. Linear bellman combination for control of character animation. In Proc. SIGGRAPH 2009, ACM, New York, NY, USA, 82:1?82:10.\n          DE V ILLIERS , J. P., G ODSILL , S. J., AND S INGH , S. S. 2011. Particle predictive control. Journal of Statistical Planning and Inference 141, 5 (May), 1753?1763.\n          D EUTSCHER , J., B LAKE , A., AND R EID , I. 2000. Articulated body motion capture by annealed particle filtering. In IEEE Conference on Computer Vision and Pattern Recognition, 2000. Proceedings, vol. 2, 126?133 vol.2.\n          D OUCET , A., AND J OHANSEN , A. M. 2009. A tutorial on particle filtering and smoothing: Fifteen years later. Handbook of Nonlinear Filtering 12, 656?704.\n          E REZ , T., L OWREY , K., T ASSA , Y., K UMAR , V., K OLEV , S., AND T ODOROV , E. 2013. An integrated system for realtime model-predictive control of humanoid robots. In Proc. IEEE/RAS International Conference on Humanoid Robots (HUMANOIDS), HUMANOIDS.\n          F ANG , A. C., AND P OLLARD , N. S. 2003. Efficient synthesis of physically valid human motion. ACM Trans. Graph. 22, 3, 417?426.\n          G EIJTENBEEK , T., P RONOST , N., E GGES , A., AND O VERMARS , M. H. 2011. Interactive character animation using simulated physics. Eurographics-State of the Art Reports 2.\n          G EIJTENBEEK , T., VAN DE P ANNE , M., AND VAN DER S TAPPEN , A. F. 2013. Flexible muscle-based locomotion for bipedal creatures. ACM Trans. Graph. 32, 6 (Nov.), 206:1?206:11.\n          H ECK , R., AND G LEICHER , M. 2007. Parametric motion graphs. In Proceedings of the 2007 symposium on Interactive 3D graphics and games, ACM, New York, NY, USA, I3D ?07, 129?136.\n          H AM  ? AL  ? AINEN  ? , P., A ILA , T., T AKALA , T., AND A LANDER , J. 2006. Mutated kd-tree importance sampling. In Proc. SCAI 2006, 39?45.\n          I HLER , A. T., S UDDERTH , E. B., F REEMAN , W. T., AND W ILL SKY , A. S. 2003. Efficient multiscale sampling from products of gaussian mixtures. Advances in Neural Information Processing Systems 16, 1?8.\n          J AIN , S., Y E , Y., AND L IU , C. K. 2009. Optimization-based interactive motion synthesis. ACM Trans. Graph. 28, 1 (Feb.), 10:1?10:12.\n          K AJIYA , J. T. 1986. The rendering equation. In Proc. SIGGRAPH ?86, ACM, New York, NY, USA, 143?150.\n          K ANTAS , N., M ACIEJOWSKI , J. M., AND L ECCHINI -V ISINTINI , A. 2009. Sequential monte carlo for model predictive control. In Nonlinear Model Predictive Control, L. Magni, D. M. Raimondo, and F. Allg?wer, Eds., no. 384 in Lecture Notes in Control and Information Sciences. Springer Berlin Heidelberg, Jan., 263?273.\n          L ASSETER , J. 1987. Principles of traditional animation applied to 3D computer animation. In Proc. SIGGRAPH ?87, ACM, New York, NY, USA, 35?44.\n          L IU , L., Y IN , K., VAN DE P ANNE , M., S HAO , T., AND X U , W. 2010. Sampling-based contact-rich motion control. ACM Trans. Graph. 29, 4, 128:1?128:10.\n          M ORDATCH , I., T ODOROV , E., AND P OPOVI C  ? , Z. 2012. Discovery of complex behaviors through contact-invariant optimization. ACM Trans. Graph. 31, 4 (July), 43:1?43:8.\n          M UICO , U., L EE , Y., P OPOVI C  ? , J., AND P OPOVI ? , Z. 2009. Contact-aware nonlinear control of dynamic characters. ACM Trans. Graph. 28, 3, 81:1?81:9.\n          M UJA , M., AND L OWE , D. G. 2009. Fast approximate nearest neighbors with automatic algorithm configuration. In Proc. VISAPP (1), 331?340.\n          N GO , J. T., AND M ARKS , J. 1993. Spacetime constraints revisited. In Proc. SIGGRAPH ?93, ACM, New York, NY, USA, 343?350.\n          P EJSA , T., AND P ANDZIC , I. 2010. State of the art in examplebased motion synthesis for virtual characters in interactive applications. Computer Graphics Forum 29, 1, 202?226.\n          R EIL , T., AND H USBANDS , P. 2002. Evolution of central pattern generators for bipedal walking in a real-time physics environment. IEEE Transactions on Evolutionary Computation 6, 2, 159?168.\n          R UDOY , D., AND W OLFE , P. 2006. Monte carlo methods for multimodal distributions. In Proc. Fortieth Asilomar Conference on Signals, Systems and Computers, 2006. ACSSC ?06, 2019?2023.\n          S AFONOVA , A., H ODGINS , J. K., AND P OLLARD , N. S. 2004. Synthesizing physically realistic human motion in lowdimensional, behavior-specific spaces. ACM Trans. Graph. 23, 3, 514?521.\n          S CHMIDT , J., F RITSCH , J., AND K WOLEK , B. 2006. Kernel particle filter for real-time 3D body tracking in monocular color images. In Proc. 7th International Conference on Automatic Face and Gesture Recognition, 2006. FGR 2006, 567?572.\n          S IMS , K. 1994. Evolving virtual creatures. In Proc. SIGGRAPH ?94, ACM, New York, NY, USA, 15?22.\n          S TAHL , D., AND H AUTH , J. 2011. PF-MPC: particle filter-model predictive control. Syst Control Lett 60, 8, 632?643.\n          T ASSA , Y., E REZ , T., AND T ODOROV , E. 2012. Synthesis and stabilization of complex behaviors through online trajectory optimization. In Proc. 2012 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS), IEEE, IROS?12, 4906? 4913.\n          T HRUN , S., F OX , D., AND B URGARD , W. 2000. Monte carlo localization with mixture proposal distribution. In Proc. AAAI/IAAI, 859?865.\n          V AN W ELBERGEN , H., V AN B ASTEN , B. J. H., E GGES , A., R UT TKAY , Z. M., AND O VERMARS , M. H. 2010. Real time animation of virtual humans: A trade-off between naturalness and control. Computer Graphics Forum 29, 8, 2530?2554.\n          W AMPLER , K., AND P OPOVI C  ? , Z. 2009. Optimal gait and form for animal locomotion. In ACM Trans. Graph., vol. 28, 60.\n          W ITKIN , A., AND K ASS , M. 1988. Spacetime constraints. In Proc. SIGGRAPH ?88, ACM, New York, NY, USA, 159?168.\n        \n        ACM Transactions on Graphics, Vol. 33, No. 4, Article 51, Publication Date: July 2014\n        51:12\n        ?\n        P. H?m?l?inen et al.\n        ACM Transactions on Graphics, Vol. 33, No. 4, Article 51, Publication Date: July 2014\n      \n    \n  ",
  "resources" : [ ]
}