{
  "uri" : "sig2011-a52-li_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2011/a52-li_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "GlobFit: Consistently Fitting Primitives by Discovering Global Relations",
    "published" : "2011",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Yangyan-Li",
      "name" : "Yangyan",
      "surname" : "Li"
    }, {
      "uri" : "http://drinventor/Xiaokun-Wu",
      "name" : "Xiaokun",
      "surname" : "Wu"
    }, {
      "uri" : "http://drinventor/Yiorgos-Chrysanthou",
      "name" : "Yiorgos",
      "surname" : "Chrysanthou"
    }, {
      "uri" : "http://drinventor/Andrei-Sharf",
      "name" : "Andrei",
      "surname" : "Sharf"
    }, {
      "uri" : "http://drinventor/Daniel-Cohen-Or",
      "name" : "Daniel",
      "surname" : "Cohen-Or"
    }, {
      "uri" : "http://drinventor/Niloy J.-Mitra",
      "name" : "Niloy J.",
      "surname" : "Mitra"
    } ]
  },
  "bagOfWords" : [ "we", "test", "robustness", "we", "algorithm", "range", "synthesize", "scan", "datum", "vary", "amount", "noise", "outlier", "non-uniform", "sampling", "validate", "result", "against", "ground", "truth", "where", "available", "we", "show", "balance", "between", "datum", "drive", "fitting", "error", "regularization", "effect", "infer", "relationship", "structure", "allow", "we", "capture", "both", "local", "global", "information", "directly", "from", "incomplete", "noisy", "scan", "each", "stage", "we", "extract", "set", "valid", "relation", "use", "nonlinear", "datum", "error", "optimizer", "minimize", "subject", "infer", "constraint", "simultaneously", "align", "all", "primitive", "we", "algorithm", "work", "from", "coarse", "fine", "scale", "wherein", "relation", "from", "coarse", "scale", "help", "position", "unstable", "primitive", "extract", "fine", "scale", "we", "demonstrate", "robustness", "we", "algorithm", "variety", "synthetic", "scan", "model", "subject", "wide", "range", "datum", "contamination", "contrast", "we", "take", "global", "approach", "which", "account", "inter-primitive", "relation", "both", "local", "global", "computer", "vision", "reverse", "engineering", "Fisher", "colleague", "-lrb-", "see", "-lsb-", "Werghi", "et", "al.", "2002", "Fisher", "2004", "-rsb-", "reference", "therein", "-rrb-", "demonstrate", "effectiveness", "domain", "knowledge", "standard", "shape", "relationship", "improve", "architectural", "reconstruction", "better", "parameter", "estimation", "datum", "completion", "use", "non-local", "relation", "-lrb-", "cf.", "guide", "similar", "philosophy", "we", "also", "make", "use", "global", "relation", "placement", "constraint", "which", "automatically", "extract", "we", "algorithm", "give", "noisy", "scanned", "point", "set", "we", "simultaneously", "recover", "set", "fitted", "basic", "primitive", "along", "global", "mutual", "relation", "algorithm", "partition", "datum", "extract", "fitted", "primitive", "simultaneously", "learn", "enforce", "mutual", "relation", "among", "both", "near", "distant", "part", "we", "solve", "global", "problem", "simultaneously", "learn", "which", "constraint", "relation", "enforce", "without", "introduce", "conflict", "optimize", "parameter", "each", "primitive", "meet", "learn", "constraint", "while", "conform", "input", "-lrb-", "see", "Figure", "-rrb-", "we", "perform", "global", "alignment", "one", "after", "another", "without", "break", "already", "learn", "satisfied", "relation", "each", "step", "approach", "single", "primitive", "position", "placement", "fix", "during", "subsequent", "step", "further", "primitive", "lower", "confidence", "do", "influence", "those", "higher", "confidence", "instead", "we", "take", "more", "global", "view", "lead", "robust", "primitive", "fitting", "while", "simultaneously", "balance", "among", "multiple", "constraint", "let", "-lcb-", "-rcb-", "input", "pointset", "each", "point", "equip", "normal", "confidence", "score", "estimate", "use", "standard", "local", "covariance", "analysis", "bootstrap", "algorithm", "we", "partition", "input", "set", "where", "each", "point", "group", "have", "associated", "primitive", "say", "along", "initial", "estimate", "its", "respective", "parameter", "denote", "remain", "point", "-lsb-", "Schnabel", "et", "al.", "2007", "-rsb-", "later", "we", "repartition", "input", "base", "learn", "relation", "-lrb-", "see", "Figure", "10", "-rrb-", "each", "alignment", "class", "we", "first", "construct", "relationship", "graph", "example", "case", "one", "type", "orientation", "constraint", "we", "check", "angle", "between", "normal", "all", "pair", "primitive", "candidate", "orthogonal", "parallel", "relation", "we", "progressively", "extract", "maximal", "subset", "relation", "-lrb-", "-rrb-", "without", "any", "redundant", "constraint", "more", "importantly", "without", "any", "conflict", "maximality", "we", "refer", "complete", "set", "constraint", "without", "redundancy", "i.e.", "max", "over", "all", "possible", "non-conflicting", "subset", "other", "type", "relation", "we", "also", "build", "corresponding", "relationship", "graph", "each", "graph", "node", "represent", "pair", "primitive", "explain", "later", "have", "extract", "non-redundant", "non-conflicting", "relation", "along", "relation", "learn", "previous", "stage", "we", "solve", "nonlinear", "optimization", "over", "parameter", "primitive", "minimize", "datum", "error", "while", "exactly", "conform", "constraint", "set", "stage", "all", "parameter", "primitive", "simultaneously", "optimize", "while", "keep", "point", "association", "respective", "set", "fix", "outer", "loop", "we", "identify", "input", "point", "explain", "current", "set", "learn", "primitive", "remove", "they", "from", "input", "set", "repeat", "algorithm", "remain", "unclaimed", "point", "we", "stop", "once", "remain", "point", "set", "size", "small", "potential", "relationship", "graph", "empty", "when", "we", "reach", "maximum", "number", "iteration", "we", "experiment", "-lrb-", "see", "Figure", "10", "-rrb-", "we", "implementation", "we", "use", "plane", "cylinder", "sphere", "right", "circular", "cone", "basic", "primitive", "we", "parameterize", "each", "primitive", "associated", "orientation", "direction", "attribute", "-lrb-", "-rrb-", "follow", "plane", "represent", "normal-intercept", "format", "use", "direction", "sign", "distance", "from", "origin", "cylinder", "represent", "its", "axis", "point", "axis", "radius", "cone", "represent", "its", "axis", "its", "apex", "apex", "angle", "sphere", "its", "center", "radius", "r.", "each", "primitive", "have", "associate", "set", "point", "use", "clip", "respective", "primitive", "we", "clip", "plane", "use", "convex", "hull", "its", "project", "member", "point", "we", "clip", "cylinder", "cone", "bound", "project", "member", "point", "use", "plane", "-lrb-", "-rrb-", "align", "along", "its", "respective", "primitive", "axis", "sphere", "pair", "parallel", "plane", "-lrb-", "see", "Figure", "-rrb-", "-rrb-", "candidate", "relation", "we", "create", "undirected", "graph", "-lrb-", "-rrb-", "each", "primitive", "represent", "node", "we", "classify", "edge", "base", "angle", "cos", "-lrb-", "-rrb-", "between", "primitive", "we", "leave", "out", "weak", "edge", "base", "default", "threshold", "12", "moderate", "noise", "level", "ii", "-rrb-", "extract", "graph", "say", "biconnect", "remove", "node", "call", "cut-vertex", "increase", "number", "connected", "component", "context", "graph", "cut-vertex", "represent", "outlier", "primitive", "chance", "alignment", "isolate", "primitive", "since", "outlier", "context", "primitive", "comparatively", "few", "relation", "any", "constraint", "set", "may", "possibly", "contain", "conflict", "make", "infeasible", "optimize", "primitive", "all", "relation", "simultaneously", "fulfil", "i.e.", "align", "primitive", "exactly", "satisfy", "relation", "one", "could", "use", "weighted", "least", "square", "solution", "approximately", "align", "relation", "result", "can", "easily", "unsatisfactory", "since", "might", "outlier", "constraint", "none", "relation", "truly", "satisfied", "only", "approximate", "-lrb-", "see", "Figure", "12", "-rrb-", "note", "requirement", "stronger", "condition", "compare", "non-existence", "4-clique", "add", "orthogonal", "edge", "result", "3-length", "acd", "we", "check", "whether", "parallel", "edge", "remain", "set", "otherwise", "we", "have", "conflict", "remove", "lowest", "confidence", "edge", "involve", "construction", "stop", "once", "all", "relation", "have", "be", "consider", "Figure", "show", "typical", "reduction", "sequence", "iii", "-rrb-", "primitive", "where", "-lrb-", "-rrb-", "measure", "distance", "point", "weight", "primitive", "-lsb-", "Kanatani", "2008", "-rsb-", "accumulate", "datum", "error", "simply", "give", "-lrb-", "-rrb-", "since", "we", "have", "only", "orthogonality", "constraint", "stage", "alignment", "any", "constraint", "between", "primitive", "imply", "additionally", "each", "primitive", "normal", "direction", "satisfy", "-lrb-", "-rrb-", "-lcb-", "-rcb-", "we", "use", "trust", "region", "method", "base", "interior", "point", "nonlinear", "programming", "solve", "optimization", "-lsb-", "Byrd", "et", "al.", "2000", "Ziena", "2010", "-rsb-", "end", "stage", "we", "have", "learn", "align", "orthogonal", "parallel", "relation", "among", "primitive", "-rrb-", "Equal", "angle", "relation", "regular", "structure", "common", "man-made", "object", "regularity", "often", "result", "equal", "angle", "constraint", "across", "primitive", "part", "unlike", "parallel", "orthogonal", "constraint", "equal", "angle", "however", "know", "advance", "only", "recover", "course", "optimization", "possible", "approach", "first", "cluster", "angle", "between", "primitive", "pair", "rank", "primitive", "pair", "base", "deviation", "mutual", "angle", "cluster", "peak", "similar", "parallel/orthogonal", "case", "however", "we", "find", "approach", "unreliable", "due", "presence", "outlier", "spurious", "peak", "angle", "space", "e.g.", "histogram", "Figure", "show", "why", "challenge", "select", "clustering", "parameter", "we", "setting", "any", "angle", "relation", "involve", "pair", "primitive", "pair", "i.e.", "four", "primitive", "thus", "we", "build", "graph", "where", "each", "vertex", "represent", "unordered", "pair", "primitive", "noisy", "datum", "spatially", "distant", "primitive", "easily", "pollute", "space", "spurious", "relation", "hence", "primitive", "-lrb-", "-rrb-", "farther", "than", "10", "larger", "bound", "box", "length", "we", "remove", "its", "corresponding", "node", "result", "most", "case", "graph", "have", "only", "-lrb-", "-rrb-", "node", "instead", "-lrb-", "-rrb-", "any", "pair", "vertex", "say", "involve", "primitive", "pair", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "we", "add", "edge", "base", "similarity", "pairwise", "angle", "note", "primitive", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "can", "arbitrary", "distance", "corresponding", "relation", "assign", "score", "associate", "constraint", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "we", "leave", "out", "edge", "subtended", "angle", "more", "than", "threshold", "10", "we", "experiment", "threshold", "depend", "noise", "margin", "against", "separation", "among", "mode", "ground", "truth", "datum", "i.e.", "regularity", "object", "we", "collect", "relation", "-lcb-", "datapoint", "justify", "connection", "extract", "relation", "length", "be", "validate", "respect", "physical", "model", "equality", "relation", "be", "transitive", "relation", "graph", "should", "free", "cycle", "hence", "we", "only", "add", "cycle", "form", "step", "significantly", "decrease", "number", "graph", "edge", "while", "retain", "confident", "one", "set", "typically", "consist", "-lrb-", "-rrb-", "edge", "set", "can", "still", "contain", "conflict", "hence", "we", "use", "interior", "point", "nonlinear", "programming", "detect", "case", "we", "test", "optimization", "datum", "energy", "-lrb-", "equation", "-rrb-", "have", "any", "feasible", "solution", "subject", "constraint", "feasible", "solution", "exist", "we", "take", "out", "relation", "lowest", "score", "test", "feasibility", "again", "remain", "set", "relation", "typically", "1-2", "relation", "be", "drop", "we", "experiment", "Figure", "show", "typical", "scenario", "orientation", "optimization", "initial", "graph", "have", "84", "edge", "which", "get", "reduce", "21", "relation", "equal", "angle", "stage", "33", "initial", "candidate", "relation", "recover", "conform", "while", "minimize", "datum", "error", "feasible", "solution", "find", "without", "discard", "any", "relation", "total", "time", "take", "680", "seconds", "most", "time", "spend", "constrain", "solver", "most", "man-made", "object", "coplanarity", "coaxial", "relation", "carry", "important", "relation", "cue", "about", "object", "part", "-lrb-", "see", "also", "-lsb-", "Gal", "et", "al.", "2009", "-rsb-", "-rrb-", "we", "conform", "placement", "relation", "after", "orientation", "alignment", "while", "preserve", "orientation", "relation", "already", "align", "coaxial", "relation", "simple", "detect", "enforce", "two", "primitive", "e.g.", "two", "cylinder", "cylinder", "cone", "potentially", "coaxially", "align", "axis", "exactly", "parallel", "since", "we", "already", "have", "orientation", "alignment", "we", "assign", "score", "potential", "primitive", "pair", "base", "distance", "between", "axis", "namely", "-lrb-", "-rrb-", "be", "point", "respective", "axis", "relation", "collect", "set", "each", "form", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "we", "prune", "edge", "when", "deviation", "length", "exceed", "point", "set", "bound", "box", "length", "similarly", "align", "sphere", "axis", "cone", "cylinder", "we", "simply", "constrain", "sphere", "center", "lie", "axis", "other", "primitive", "coplanar", "relation", "exist", "between", "primitive", "pair", "potentially", "nonlocal", "one", "since", "we", "clip", "cylinder", "cone", "respective", "axis", "align", "plane", "all", "coplanar", "relation", "we", "framework", "reduce", "detect", "conform", "coplanarity", "between", "two", "plane", "thus", "primitive", "pair", "exactly", "parallel", "normal", "we", "add", "relation", "normal", "point", "same", "direction", "normal", "point", "opposite", "direction", "both", "case", "we", "assign", "confidence", "score", "relation", "append", "set", "relation", "even", "few", "group", "initially", "independent", "ransac", "primitive", "e.g.", "plane", "primitive", "potentially", "distant", "space", "we", "sort", "relation", "decrease", "confidence", "score", "similar", "case", "equal", "angle", "relation", "extract", "subset", "align", "relation", "while", "minimize", "datum", "error", "during", "extraction", "we", "progressively", "remove", "low", "confidence", "relation", "necessary", "until", "we", "obtain", "feasible", "solution", "after", "orientation", "placement", "alignment", "we", "detect", "conform", "equality", "relation", "we", "case", "two", "type", "equality", "detect", "-lrb-", "-rrb-", "pair", "cylinder", "primitive", "comparable", "radius", "we", "add", "potential", "constraint", "confidence", "score", "-lrb-", "ii", "-rrb-", "Relations", "between", "plane", "primitive", "also", "between", "clipping", "plane", "more", "complicate", "involve", "relation", "between", "pair", "primitive", "pair", "similar", "equal-angle", "relation", "pair", "parallel", "plane", "pair", "-lcb-", "-lrb-", "12", "-rrb-", "-lrb-", "12", "-rrb-", "-rcb-", "-lcb-", "-lrb-", "34", "-rrb-", "-lrb-", "34", "-rrb-", "-rcb-", "we", "introduce", "constraint", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "confidence", "score", "-lrb-", "each", "we", "adjust", "sign", "so", "all", "normal", "point", "same", "direction", "-rrb-", "we", "collect", "both", "type", "relation", "set", "previously", "equal", "angle", "case", "use", "transitivity", "discard", "redundant", "relation", "extract", "feasible", "set", "datum", "error", "minimize", "while", "simultaneously", "conform", "all", "constraint", "we", "framework", "optimization", "proceed", "from", "coarse", "fine", "scale", "once", "initial", "set", "primitive", "align", "use", "detect", "global", "relation", "we", "reassign", "point", "align", "primitive", "point", "high", "datum", "error", "all", "primitive", "collect", "unclaimed", "point", "set", "additional", "check", "spatial", "consistency", "necessary", "since", "primitive", "already", "clip", "bound", "stage", "we", "iterate", "through", "pipeline", "start", "ransac", "unclaimed", "point", "two", "modification", "-lrb-", "-rrb-", "we", "lower", "threshold", "allow", "size", "smallest", "detect", "primitive", "base", "extent", "connected", "component", "-lrb-", "ii", "-rrb-", "we", "relationship", "set", "instead", "empty", "set", "note", "global", "alignment", "primitive", "from", "previous", "step", "associate", "datum", "point", "also", "incorporate", "example", "Figure", "10", "small", "cylinder", "detect", "second", "iteration", "which", "miss", "first", "pass", "due", "point", "from", "dominant", "surround", "region", "although", "initial", "parameter", "small", "cylinder", "unstable", "due", "limited", "support", "stabilize", "align", "first", "iteration", "relation", "we", "evaluate", "we", "framework", "variety", "synthetic", "scan", "dataset", "where", "precise", "model", "be", "available", "we", "compare", "reconstruct", "model", "ground", "truth", "both", "term", "recover", "face", "normal", "well", "distance", "between", "parallel", "primitive", "pair", "where", "precise", "ground", "truth", "unavailable", "we", "measure", "physical", "model", "comparison", "first", "experiment", "we", "consider", "three", "platonic", "solid", "namely", "octahedron", "dodecahedron", "icosahedron", "each", "case", "we", "perturb", "normal", "polyhedron", "face", "sample", "model", "while", "add", "noise", "each", "sample", "independently", "note", "normal", "perturbation", "mimic", "misalignment", "among", "multiple", "scan", "-lrb-", "see", "later", "discussion", "slippage", "-rrb-", "each", "point", "set", "we", "align", "initial", "ransac", "primitive", "use", "we", "global", "optimization", "we", "compare", "face", "normal", "distance", "between", "parallel", "primitive", "pair", "those", "ground", "truth", "model", "we", "do", "same", "model", "use", "initial", "ransac", "primitive", "consistent", "comparison", "we", "retain", "only", "top", "relevant", "number", "ransac", "plane", "each", "case", "e.g.", "octahedron", "we", "retain", "top", "ransac", "plane", "Table", "demonstrate", "stability", "we", "method", "across", "vary", "amount", "noise", "presence", "structured", "noise", "input", "scan", "we", "method", "favor", "alignment", "global", "prior", "we", "compare", "result", "obtain", "initial", "ransac", "primitive", "greedy", "strategy", "least", "square", "solution", "we", "algorithm", "we", "overlay", "ground", "truth", "-lrb-", "black", "boundary", "-rrb-", "result", "visual", "evaluation", "second", "experiment", "we", "use", "standard", "cad", "tool", "create", "two", "model", "regular", "angle", "repeat", "part", "we", "scan", "object", "use", "virtual", "scanner", "add", "noise", "compare", "quality", "result", "ground", "truth", "without", "we", "global", "alignment", "figure", "12", "we", "show", "corresponding", "result", "boxy", "model", "recover", "angle/length", "compare", "grind", "truth", "list", "Table", "Figure", "12", "we", "compare", "trimmed", "model", "obtain", "use", "initial", "ransac", "primitive", "greedy", "approach", "least", "square", "solution", "we", "global", "alignment", "respectively", "greedy", "approach", "start", "from", "best", "fit", "primitive", "we", "progressively", "align", "primitive", "next", "strongest", "parallel/orthogonal", "edge", "align", "one", "while", "keep", "previously", "align", "primitive", "unchanged", "least", "square", "solution", "we", "obtain", "solution", "combine", "datum", "term", "penalty", "energy", "all", "parallel/orthogonal", "candidate", "edge", "weight", "confidence", "note", "presence", "structured", "-lrb-", "bias", "-rrb-", "noise", "misaligned", "scan", "we", "method", "prefer", "alignment", "global", "relation", "-lrb-", "regular", "configuration", "-rrb-", "we", "test", "we", "method", "real-world", "object", "vary", "complexity", "absence", "precise", "virtual", "model", "ground", "truth", "we", "use", "physical", "measurement", "object", "comparison", "we", "also", "validate", "orientation", "coplanarity", "coaxial", "equality", "relation", "detect", "we", "system", "physical", "model", "possible", "we", "simplest", "example", "wheel", "model", "Figure", "14", "all", "major", "axis", "plane", "cylinder", "cone", "detect", "parallel", "reduced", "orientation", "graph", "trivial", "absence", "any", "orthogonal", "relation", "dataset", "interesting", "large", "number", "coaxial", "coplanar", "relation", "also", "equality", "attribute", "cone", "cylinder", "note", "final", "model", "automatically", "allow", "explode", "view", "subpart", "along", "recover", "axis", "direction", "next", "we", "take", "packing", "foam-box", "-lrb-", "see", "figure", "11", "-rrb-", "small", "part", "share", "variety", "relation", "here", "detect", "length", "angle", "be", "good", "agreement", "physical", "model", "interestingly", "protrusion", "box", "-lrb-", "right", "feature", "Figure", "-rrb-", "range", "0.1", "mm", "other", "flank", "-lrb-", "front", "side", "-rrb-", "model", "all", "protrusion", "be", "group", "together", "make", "identical", "0.5", "primitive", "bound", "box", "length", "ground", "truth", "-rrb-", "recover", "normal", "number", "like", "means", "group", "primitive", "converge", "equal", "length", "converge", "value", "different", "from", "ground", "truth", "add", "noise", "-lsb-", "-rsb-", "normal", "result", "average", "over", "10", "run", "demonstrate", "we", "global", "prior", "primitive", "near", "alignment", "likely", "exact", "alignment", "clutch", "model", "Figure", "challenge", "give", "small", "feature", "poor", "quality", "scan", "due", "dark", "material", "color", "-lrb-", "we", "be", "allow", "paint", "model", "white", "-rrb-", "even", "sparse", "dataset", "we", "method", "correctly", "detect", "various", "relation", "hint", "ubiquity", "relation", "repetition", "man-made", "engineering", "object", "note", "one", "part", "sample", "point", "almost", "nonexistent", "method", "have", "little", "evidence", "propagate", "connect", "up", "primitive", "final", "most", "complicated", "example", "we", "scan", "machine", "part", "-lrb-", "see", "Figure", "13", "-rrb-", "various", "relation", "be", "identify", "conform", "final", "model", "angle", "pair", "histogram", "clearly", "demonstrate", "improvement", "pairwise", "angle", "relation", "ransac", "fail", "fit", "initial", "primitive", "within", "fitting", "tolerance", "part", "top", "model", "we", "place", "MLS", "surface", "fit", "unclaimed", "point", "region", "comparison", "-lrb-", "slightly", "darker", "shade", "-rrb-", "multiple", "scan", "object", "typically", "align", "use", "local", "refinement", "method", "like", "point-to-point", "point-to-plane", "iterative", "closest", "pair", "-lrb-", "icp", "-rrb-", "algorithm", "commonly", "encounter", "problem", "scan", "alignment", "slippage", "i.e.", "absence", "appropriate", "local", "feature", "scan", "slip", "over", "each", "other", "instead", "lock", "well", "define", "configuration", "-lsb-", "gelfand", "guibas", "2004", "-rsb-", "example", "Figure", "15", "align", "source", "target", "scan", "use", "ICP", "result", "rotational", "slippage", "target", "we", "use", "global", "relation", "remove", "ambiguity", "first", "each", "individual", "scan", "we", "learn", "global", "relation", "respectively", "while", "conform", "underlie", "scan", "outer", "loop", "we", "extract", "global", "relation", "combined", "datum", "set", "-lrb-", "-rrb-", "while", "optimize", "over", "unknown", "transformation", "restricted", "applicable", "slippage", "transform", "case", "rotation", "about", "axis", "algorithm", "alternate", "between", "learn", "relation", "solve", "align", "transform", "each", "iteration", "we", "detect", "top", "relation", "candidate", "use", "compute", "minimize", "datum", "cost", "-lrb-", "-rrb-", "subject", "constraint", "along", "established", "constraint", "we", "update", "-lrb-", "-rrb-", "proceed", "learn", "further", "relation", "finally", "we", "perform", "one", "round", "global", "relation", "alignment", "align", "datum", "which", "mainly", "help", "conform", "placement", "equality", "relation", "datum", "set", "Table", "list", "performance", "we", "algorithm", "various", "scan", "model", "simulated", "scan", "boxy", "model", "present", "paper", "note", "wheel", "model", "since", "all", "direction", "get", "align", "same", "direction", "parallel/orthogonal", "alignment", "subsequently", "equal", "angle", "relation", "detect", "further", "coplanarity", "relation", "already", "result", "equal", "length", "-lrb-", "trim", "plane", "-rrb-", "example", "thus", "equal", "length", "relation", "detect", "note", "run", "time", "depend", "more", "complexity", "relational", "structure", "model", "rather", "than", "sampling", "resolution", "we", "graph", "reduction", "redundant", "relation", "make", "nonlinear", "solver", "-lrb-", "fmincon", "Matlab", "function", "-rrb-", "robust", "also", "significantly", "faster", "e.g.", "boxy", "model", "optimization", "time", "just", "parallel/orthogonal", "without", "reduction", "take", "164", "seconds", "we", "reduction", "only", "64", "seconds", "denser", "relationship", "without", "redundancy", "removal", "e.g.", "pipe-model", "696", "original", "relation", "optimization", "may", "run", "order", "hour", "use", "relationship", "graph", "underlie", "datum", "we", "extrapolate", "compute", "pairwise", "primitive", "intersection", "applicable", "we", "current", "implementation", "primitive", "pair", "involve", "complex", "primitive", "e.g.", "cylinder", "cone", "we", "use", "simple", "numerical", "method", "extract", "polygonal", "intersection", "curve", "we", "method", "even", "under", "irregular", "sampling", "yield", "precise", "model", "along", "sharp", "feature", "which", "otherwise", "difficult", "exist", "alternative", "note", "align", "global", "relation", "conjunction", "local", "fitting", "we", "demonstrate", "possible", "extract", "global", "relation", "even", "noisy", "sparse", "dataset", "recovered", "relation", "naturally", "sparse", "encoding", "input", "model", "where", "we", "make", "use", "fact", "model", "low", "information", "content", "we", "algorithm", "can", "see", "precisely", "recover", "key", "relation", "unlike", "we", "method", "most", "scan", "reconstruction", "method", "use", "local", "prior", "while", "ignore", "global", "relation", "dominant", "man-made", "structure", "any", "shape", "analysis", "unreliable", "datum", "always", "tradeoff", "between", "approximation", "level", "extent", "regularity", "detect", "we", "method", "allow", "align", "relation", "even", "expense", "slightly", "increase", "datum", "fitting", "cost", "however", "user", "can", "require", "we", "method", "disallow", "large", "increase", "datum", "error", "drop", "corresponding", "relation", "interesting", "explore", "pareto-optimal", "solution", "setting", "note", "align", "regular", "configuration", "can", "also", "help", "identify", "defect", "scan", "model", "encode", "shape", "deviation", "from", "regular", "configuration", "possible", "improvement", "consider", "higher-order", "relation", "involve", "pair", "triplet", "-lrb-", "more", "-rrb-", "primitive", "computational", "complexity", "quickly", "make", "simple", "generalization", "impractical", "we", "leave", "future", "research", "certain", "type", "relation", "we", "investigate", "pair", "primitive", "pair", "can", "potentially", "lead", "-lrb-", "-rrb-", "relation", "primitive", "especially", "regular", "configuration", "closely", "pack", "space", "result", "significant", "computation", "time", "also", "when", "angle", "length", "space", "histogram", "have", "closely", "space", "value", "increase", "noise", "level", "can", "submerge", "difference", "make", "difficult", "correctly", "recover", "relation", "we", "framework", "-lrb-", "see", "Figure", "Table", "-rrb-", "error", "can", "potentially", "accumulate", "across", "primitive", "chance", "alignment", "involve", "multiple", "outlier", "primitive", "may", "produce", "high", "confidence", "same", "time", "incur", "possible", "undesirable", "relation", "finally", "we", "approximate", "solution", "relation", "group", "extraction", "certain", "case", "can", "miss", "global", "relation", "even", "introduce", "outlier", "relation", "happen", "have", "high", "confidence", "score", "-lrb-", "see", "Figure", "16", "-rrb-", "although", "we", "do", "expect", "extract", "best", "feasible", "subset", "give", "relation", "np-complete", "satisfiability", "problem", "practice", "large", "datum", "error", "can", "indicate", "problem", "we", "experiment", "though", "we", "do", "encounter", "situation", "we", "present", "method", "incorporate", "global", "relation", "reliably", "recover", "relation", "among", "both", "local", "distant", "part", "man-made", "object", "we", "demonstrate", "regular", "object", "i.e.", "object", "low", "information", "content", "various", "global", "relation", "can", "reliably", "extract", "from", "noisy", "-lrb-", "structured", "-rrb-", "incomplete", "dataset", "even", "when", "local", "signal", "ambiguous", "unreliable", "start", "set", "initial", "ransac", "base", "locally", "fit", "primitive", "we", "algorithm", "progressively", "learn", "infer", "orientation", "placement", "equality", "relation", "each", "stage", "set", "feasible", "relation", "extract", "among", "candidate", "relation", "align", "while", "best", "fitting", "input", "datum", "context", "low", "complexity", "procedurally", "model", "man-made", "object", "learn", "global", "prior", "likely", "significantly", "assist", "shape", "understanding", "sparse", "encoding", "moreover", "man-made", "model", "e.g.", "Figure", "left", "commonly", "involve", "hierarchical", "relation", "group", "naturally", "arise", "from", "manufacture", "ease", "reuse", "option", "infer", "hierarchical", "grouping", "however", "challenge", "since", "involve", "solve", "consistent", "segmentation", "across", "noisy", "input", "more", "precisely", "partially", "recover", "global", "relation", "can", "guide", "importance", "sampling", "base", "ransac", "fitting", "robustly", "extract", "primitive", "from", "locally", "inconsistent", "sparsely", "sample", "region", "bring", "similar", "global", "relation", "surface", "reconstruction", "remain", "explore", "we", "grateful", "Ruwen", "Schnabel", "make", "code", "from", "-lsb-", "Schnabel", "et", "al.", "2007", "-rsb-", "publicly", "available", "ran", "Gal", "Suhib", "Alsisan", "proofread", "paper", "kaust", "car", "garage", "lend", "machine", "part", "scanning", "aim@shape", "joint", "model", "use", "simulated", "scan", "Figure", "16", "Niloy", "thanks", "Tanveer", "Alam", "initial", "experiment", "project", "Pierre", "Alliez", "Cengiz", "Oztireli", "run", "comparison", "test", "use", "state-of-the-art", "reconstruction", "algorithm", "Reinhard", "Klein", "inspiring", "discussion", "placement", "eq", "length", "eq", "radius", "time", "-lrb-", "sec", "-rrb-", "359", "75", "n/a", "66", "18", "227.3", "25", "18", "68", "20", "n/a", "875.6", "27", "18", "573.1", "90", "43", "222", "19", "88", "27", "838.5", "11", "20", "319.3", "work", "partially", "support", "kaust", "international", "visitingstudent", "scholarship", "Li", "Wu", "NSFC", "grant", "60902104", "61025012", "61003190", "CAS", "100", "scholar", "program", "Shenzhen", "Science", "Technology", "Foundation", "-lrb-", "jc201005270340a", "-rrb-", "Li", "Wu", "CAS", "visit", "Professorship", "Senior", "Int?l", "scientist", "cohen-or", "CAS", "Fellowship", "Young", "Int?l", "scientist", "Sharf", "Cyprus", "RPF", "grantdiethnis/stochos/0609", "Chrysanthou", "Israel", "Science", "Foundation", "Cohen-Or", "european", "fp7", "under", "grant", "agreement", "276982", "Sharf", "enko", "P.", "ARTIN", "R.", "R.", "RADY", "T.", "2001", "algorithm", "reverse", "engineering", "boundary", "representation", "model", "computer-aided", "design", "33", "11", "839", "851", "okeloh", "M.", "M.", "EIDEL", "h.-p", "2010", "connection", "between", "partial", "symmetry", "inverse", "procedural", "modeling", "ACM", "SIGGRAPH", "29", "104:1", "104:10", "rown", "B.", "J.", "usinkiewicz", "S.", "2004", "non-rigid", "rangescan", "alignment", "use", "thin-plate", "spline", "3dpvt", "759", "765", "yrd", "R.", "ILBERT", "J.", "C.", "OCEDAL", "J.", "2000", "trust", "region", "method", "base", "interior", "point", "technique", "nonlinear", "programming", "mathematical", "programming", "89", "149", "185", "arr", "J.", "C.", "EATSON", "R.", "K.", "HERRIE", "J.", "B.", "ITCHELL", "T.", "J.", "right", "W.", "R.", "ALLUM", "B.", "C.", "van", "t.", "R.", "2001", "reconstruction", "representation", "3d", "object", "radial", "basis", "function", "ACM", "SIGGRAPH", "67", "76", "ey", "t.", "2007", "ed", "Cambridge", "University", "Press", "isher", "R.", "2004", "LEISHMAN", "S.", "OHEN", "D.", "ILVA", "C.", "T.", "2005", "robust", "move", "least-square", "fitting", "sharp", "feature", "ACM", "SIGGRAPH", "24", "544", "552", "AL", "R.", "hamir", "a.", "assner", "T.", "auly", "m.", "ohen", "D.", "2007", "surface", "reconstruction", "use", "local", "shape", "prior", "Geometry", "Processing", "253", "262", "AL", "R.", "orkine", "O.", "ITRA", "N.", "J.", "ohen", "D.", "2009", "iWIRES", "analyze-and-edit", "approach", "shape", "manipulation", "ACM", "SIGGRAPH", "28", "33", "10", "elfand", "N.", "uiba", "L.", "J.", "2004", "shape", "segmentation", "use", "local", "slippage", "analysis", "214", "223", "algebraic", "point", "set", "surface", "opcroft", "J.", "arjan", "R.", "1973", "algorithm", "447", "efficient", "algorithm", "graph", "manipulation", "ACM", "16", "-lrb-", "June", "-rrb-", "372", "378", "OPPE", "H.", "OSE", "T.", "UCHAMP", "T.", "onald", "J.", "TUETZLE", "W.", "1992", "surface", "reconstruction", "from", "unorganized", "point", "ACM", "SIGGRAPH", "71", "78", "ANATANI", "K.", "2008", "statistical", "optimization", "geometric", "fitting", "theoretical", "accuracy", "bind", "high", "order", "error", "analysis", "Journal", "Computer", "Vision", "80", "167", "188", "AZHDAN", "M.", "OLITHO", "M.", "surface", "reconstruction", "G.", "IU", "L.", "HENG", "H.", "itra", "N.", "J.", "2010", "analysis", "reconstruction", "manipulation", "use", "arterial", "snake", "ACM", "SIGGRAPH", "ASIA", "29", "152:1", "152:10", "ipman", "Y.", "OHEN", "D.", "EVIN", "D.", "al", "zer", "H.", "2007", "parameterization-free", "projection", "geometry", "reconstruction", "ACM", "SIGGRAPH", "26", "22", "itra", "N.", "J.", "design", "L.", "auly", "M.", "2007", "Symmetrizavol", "26", "63", "ullen", "P.", "OES", "F.", "D.", "ESBRUN", "M.", "OHEN", "teiner", "D.", "LLIEZ", "P.", "2010", "sign", "unsigned", "robust", "surface", "reconstruction", "from", "raw", "pointset", "Geometry", "Processing", "1733", "1741", "ztirelus", "C.", "UENNEBAUD", "G.", "ross", "M.", "2009", "feature", "preserving", "point", "set", "surface", "base", "non-linear", "kernel", "regression", "Computer", "Graphics", "Forum", "28", "493", "501", "auly", "m.", "itra", "N.", "J.", "ALLNER", "J.", "OTTMANN", "H.", "UIBAS", "L.", "2008", "discover", "structural", "regularity", "3d", "geometry", "ACM", "SIGGRAPH", "27", "43", "11", "chnabel", "R.", "AHL", "R.", "R.", "2007", "efficient", "ransac", "point-cloud", "shape", "detection", "214", "226", "chnabel", "R.", "EGENER", "P.", "LEIN", "R.", "2009", "completion", "reconstruction", "primitive", "shape", "cgf", "eurographic", "28", "503", "512", "hrun", "S.", "EGBREIT", "B.", "2005", "shape", "from", "symmetry", "1824", "1831", "ERGHI", "N.", "ISHER", "R.", "SHBROOK", "a.", "obertson", "C.", "2002", "shape", "reconstruction", "incorporate", "multiple", "nonlinear", "geometric", "constraint", "constraint", "117", "149", "iena", "2010", "Knitro", "optimization", "software", "Dec." ],
  "content" : "We test the robustness of our algorithm on a range of synthesized and scanned data, with varying amounts of noise, outliers, and non-uniform sampling, and validate the results against ground truth, where available. We show that balancing between the data driven fitting error and the regularization effects of the inferred relationship structure, allows us to capture both local and global information directly from incomplete and noisy scans. In each stage, we extract a set of valid relations and use a nonlinear data error optimizer minimizing subject to the inferred constraints to simultaneously align all the primitives. Our algorithm works from coarse to fine scale, wherein relations from the coarse scale help position the unstable primitives extracted in the fine scale. We demonstrate the robustness of our algorithm on a variety of synthetic and scanned models subject to a wide range of data contaminations. In contrast, we take a global approach which accounts for the inter-primitive relations, both local and global. In computer vision and reverse engineering, Fisher and colleagues (see [Werghi et al. 2002; Fisher 2004] and references therein) demonstrate the effectiveness of domain knowledge of standard shapes and relationships for improved architectural reconstruction, better parameter estimation, and data completion using non-local relations (cf. Guided by a similar philosophy, we also make use of global relations and placement constraints, which are automatically extracted by our algorithm. Given a noisy scanned point set, we simultaneously recover a set of fitted basic primitives along with their global mutual relations. The algorithm partitions the data, extracts the fitted primitives, and simultaneously learns and enforces the mutual relations, among both near and distant parts. We solve a global problem to simultaneously learn which constraint relations to enforce without introducing conflicts, and optimize for the parameters of each primitive to meet the learned constraints, while conforming to the input (see Figure 3 ). We perform global alignments one after another, without breaking already learned and satisfied relations. In each step of such an approach, a single primitive is positioned, and this placement is fixed during the subsequent steps. Further, primitives with lower confidence do not influence those with higher confidence. Instead, we take a more global view leading to a robust primitive fitting, while simultaneously balancing among multiple constraints. Let P := {p 1 , p 2 , . } be the input pointset, with each point p i equipped with a normal n i and a confidence score w i estimated using a standard local covariance analysis. To bootstrap the algorithm, we partition the input into sets P = ? i P i ? P ? , where each point group P i has an associated primitive, say ? i , along with initial estimates of its respective parameters, and P ? denotes the remaining points [Schnabel et al. 2007]. Later, we repartition the inputs based on the learned relations (see Figure 10 ). For each of the alignment classes, we first construct a relationship graph. For example, in case of one type of orientation constraints, we check the angles between the normals of all pairs of primitives for candidate orthogonal or parallel relations. We progressively extract a maximal subset of relations C ? (? C) without any redundant constraints, and more importantly without any conflicts. By maximality, we refer to a complete set of constraints without redundancy, i.e., max |C ? |, over all possible non-conflicting subsets. For other types of relations, we also build corresponding relationship graphs, but there each graph node represents a pair of primitives, as explained later. Having extracted the non-redundant and non-conflicting relations C ? , along with the relations learned in the previous stages, we solve a nonlinear optimization over the parameters of primitives ? i to minimize data error while exactly conforming to the constraint set C ? . In this stage, all the parameters of the primitives are simultaneously optimized for, while keeping the point association to the respective sets P i fixed. In an outer loop, we identify the input points that are explained by the current set of learned primitives, remove them from the input set P, and repeat the algorithm for the remaining unclaimed points. We stop once the remaining point set size is small, the potential relationship graph is empty, or when we reach a maximum number of iterations, 3 in our experiments (see Figure 10 ). In our implementation, we use planes, cylinders, spheres, and right circular cones as basic primitives. We parameterize each primitive by an associated orientation direction and attribute(s) as follows: A plane is represented in the normal-intercept format using a direction n and a signed distance from origin d; a cylinder is represented by its axis n, a point on the axis p, and a radius r; a cone is represented by its axis n, its apex p, and an apex angle ? ; a sphere by its center p and radius r. Each such primitive ? i has an associated set of points P i that are used to clip the respective primitive. We clip a plane using the convex hull of its projected member points, we clip a cylinder or a cone by bounding the projected member points using plane(s) aligned along its respective primitive axis, and a sphere by a pair of parallel planes (see Figure 6 ). i) Candidate relations. We create an undirected graph G o := (V o , E o ) with each primitive ? i represented as a node v i ? V o . We classify edge e i j ? E o based on the angle ? i j = cos ?1 (|n i ? n j |) between primitives ? i and ? j . We leave out weak edges based on a default threshold, ? /12 for moderate noise level. ii) Extracting C o . A graph is said to be biconnected if removing a node, called cut-vertex, increases the number of connected components. In the context of the graph G o , cut-vertices represent the outlier primitives with chance alignment to isolated primitives, since outliers in this context are primitives with comparatively few relations. Any constraint set C o may possibly contain conflicts making it infeasible to optimize the primitives such that all the relations in C o are simultaneously fulfilled, i.e., the aligned primitives exactly satisfy the relations. One could use a weighted least squares solution to approximately align to relations in C o , but the result can easily be unsatisfactory since there might be outlier constraints, none of the relations will be truly satisfied but only approximated (see Figure 12 ). Note this requirement is a stronger condition compared to the non-existence of a 4-clique. ? If adding an orthogonal edge k results in 3-length and ACD, then we check whether a parallel edge the remaining o set. Otherwise, we have a conflict and remove the lowest confidence edge involved. The construction stops once all the relations in C o have been considered. Figure 5 shows a typical reduction sequence. iii) primitive where d(p, ? i ) measures the distance of point p, with weight w p , to the primitive ? i [Kanatani 2008]. Then the accumulated data error is simply given by i E d (P i , ? i ). Since we have only orthogonality constraints at this stage, alignment to any such constraint c ? C o ? between primitives ? i , ? j implies g c := n i T n j = 0. Additionally, for each primitive ? i , the normal direction satisfies n T i n i = 1. (1) { ? i } i We use a trust region method based on interior point nonlinear programming to solve the optimization [Byrd et al. 2000; Ziena 2010]. At the end of this stage, we have learned and aligned to orthogonal and parallel relations among the primitives. b) Equal angle relations. Regular structures are common in man-made objects. Such regularity often results in equal angle constraints across primitive parts. Unlike parallel or orthogonal constraints, equal angles, however, are not known in advance, and are only recovered in course of optimization. A possible approach is to first cluster angles between primitive pairs, and then rank the primitive pairs based on the deviation of their mutual angle with the cluster peaks, similar to the parallel/orthogonal case. However, we found this approach to be unreliable due to presence of outliers, and spurious peaks in the angle space, e.g., histogram in Figure 8 shows why it is challenging to select clustering parameters in our setting. Any angle relation involves a pair of primitive pairs, i.e., four primitives. Thus, we build a graph G e , where each vertex represents an unordered pair of primitives. In noisy data, spatially distant primitives easily pollute the space with spurious relations. Hence, if primitives ( ? i , ? j ) are farther than 10% of the larger bounding box length, we remove its corresponding node. As a result in most cases graph G e has only O(m) nodes, instead of O(m 2 ). For any pair of such vertices, say involving primitive pairs ( ? i , ? j ) and ( ? k , ? l ), we add an edge based on the similarity of their pairwise angles. Note that primitives ( ? i , ? j ) and ( ? k , ? l ) can be at arbitrary distances. The corresponding relation c is assigned a score s c = ?|?n i n j ? ?n k n l | with the associated constraint g c := (n i T n j ) 2 ? (n T k n l ) 2 = 0. We leave out edges if the subtended angle is more than a threshold, 5 ? 10 ? in our experiments. The threshold depends on the noise margin against the separation among the modes in the ground truth data, i.e., the regularity of the object. We collect the relations as C e = {c 1 , c 2 , . datapoints to justify a connection. Extracted relations and lengths were validated with respect to the physical model. equality relation being transitive, the relation graph should be free of cycles. Hence, we only add c ? C e ? if no cycles are formed. This step significantly decreases the number of graph edges, while retaining the confident ones. Set C e ? typically consists of O(m) edges. The set C e ? can still contain conflicts, and hence we use interior point nonlinear programming to detect such cases. We test if the optimization of the data energy (Equation 1) has any feasible solution subject to the constraints C e ? ? C o ? . If no feasible solution exists, we take out the relation c ? C e ? with the lowest score, and test for feasibility again with the remaining set of relations. Typically 1-2 such relations were dropped in our experiments. Figure 8 shows a typical scenario for orientation optimization. The initial graph G o has 84 edges, which gets reduced to 21 relations in C o ? . In the equal angle stage, 33 initial candidate relations are recovered and conformed to while minimizing the data error. A feasible solution was found without discarding any relation of C e . Total time taken was 680 seconds with most time spent in the constrained solver. In most man-made objects, coplanarity and coaxial relations carry important relation cues about the object parts (see also [Gal et al. 2009]). We conform to placement relations after orientation alignment, while preserving the orientation relations already aligned to. Coaxial relations are simple to detect and enforce. Two primitives ? i and ? j , e.g., two cylinders, or a cylinder and a cone, are potentially coaxially aligned if their axes are exactly parallel, since we already have orientation alignment. We assign a score to such a potential primitive pair based on the distance between their axes, namely, s p = ? |(p i ? p j ) T ? n i | ? p i ? p j with p i , p j being points on their respective axes. The relations are collected in a set C p with each of the form g p := ((p i ? p j ) T ? n i ) 2 ? p i ? p j 2 = 0. We prune edges when deviation lengths exceed 2 ? 5% of point set bounding box length. Similarly, for aligning a sphere with axis of a cone or a cylinder, we simply constrain the sphere center to lie on the axis of the other primitive. Coplanar relations exist between primitive pairs, potentially nonlocal ones. Since we clip cylinders and cones by respective axis aligned planes, all coplanar relations in our framework reduce to detecting and conforming to coplanarity between two planes. Thus for a primitive pair ? i and ? j , with exactly parallel normals, we add a relation d i = d j , if the normals point in the same direction, and d i = ?d j , if the normals point in opposite directions. In both cases, we assign a confidence score s p = ?||d i | ? |d j ||. The relations are appended to the set C p . Such relations, even if they are few, group initially independent RANSAC primitives, e.g., plane primitives, potentially distant in space. We sort the relations by their decreasing confidence scores and similar to the case of equal angle relations, extract a subset C ? p ? C p by aligning to the relations C ? p ? C e ? ? C o ? , while minimizing the data error. During the extraction, we progressively remove low confidence relations, if necessary, until we obtain a feasible solution. After orientation and placement alignments, we detect and conform to equality relations. In our case, two types of equalities are detected: (i) For a pair of cylinder primitives ? 1 and ? 2 , with comparable radii, we add a potential constraint g l := r 1 ? r 2 = 0 with confidence score s l = ?|r 1 ? r 2 |. (ii) Relations between plane primitives and also between clipping planes, are more complicated as they involve relations between a pair of primitive pairs, similar to the equal-angle relations. For a pair of parallel plane pairs, {(n 12 , d 1 ), (n 12 , d 2 )} and {(n 34 , d 3 ), (n 34 , d 4 )}, we introduce a constraint g l := (d 1 ? d 2 ) 2 ? (d 3 ? d 4 ) 2 = 0 with confidence score s l = ? ||d 1 ? d 2 | ? |d 3 ? d 4 || (for each g l , we adjust signs of d i so that all the normals point to same direction). We collect both types of relations into a set C l , and as previously with equal angle case use transitivity to discard redundant relations, and extract a feasible set C l ? such that the data error is minimized, while simultaneously conforming to all the constraints C l ? ? C ? p ? C e ? ? C o ? . In our framework, the optimization proceeds from a coarse to fine scale. Once the initial set of primitives are aligned using the detected global relations, we reassign the points in P to the aligned primitives. The points with high data error to all the primitives are collected as unclaimed points in a set P ? . Additional checks for spatial consistency are not necessary since the primitives are already clipped and bounded at this stage. We iterate through the pipeline starting with RANSAC on the unclaimed points P ? , with two modifications: (i) we lower the threshold on the allowed size of the smallest detected primitive based on the extent of connected components in P ? ; (ii) we start with a relationship set of C 1 ? := C l ? ? C ? p ? C e ? ? C o ? , instead of an empty set. Note that for global alignment, the primitives from the previous step, and their associated data points are also incorporated. For example, in Figure 10 the small cylinders are detected in the second iteration, which are missed in the first pass due to the points from the dominant surrounding regions. Although the initial parameters for the small cylinders are unstable due to their limited support, they are stabilized by aligning to the first iteration relations C ? . We evaluated our framework on a variety of synthetic and scanned datasets. Where precise models were available, we compared the reconstructed models with the ground truth, both in terms of recovered face normals as well as distance between parallel primitive pairs. Where precise ground truth was unavailable, we measured the physical model for comparison. In the first experiment, we consider three Platonic solids, namely octahedron, dodecahedron, and icosahedron. In each case, we perturb the normals of the polyhedrons? faces and then sample the model while adding noise to each sample independently. Note that the normal perturbation mimics misalignment among multiple scans (see later discussion on slippage). For each point set, we align the initial RANSAC primitives using our global optimization. Then, we compare face normals and distance between parallel primitive pairs with those in the ground truth model; we do the same for the model using initial RANSAC primitives. For a consistent comparison, we retain only the top relevant number of RANSAC planes in each case, e.g., for octahedron, we retain the top 8 RANSAC planes. Table 1 demonstrates the stability of our method across varying amount of noise. In presence of structured noise in an input scan, our method favors alignment to global priors. We compare results obtained with initial RANSAC primitives, a greedy strategy, a least squares solution, and our algorithm. We overlay ground truth (black boundary) on the results for visual evaluation. In the second experiment, we used a standard CAD tool to create two models with regular angles and repeated parts. We scanned the objects using a virtual scanner, added noise, and compared the quality of the result with ground truth, with and without our global alignment. In Figures 3 and 12 we show the corresponding results, and for the boxy model, the recovered angle/length as compared to ground truth are listed in Table 1 . In Figure 12 , we compare the trimmed models obtained using initial RANSAC primitives, a greedy approach, a least squares solution, and our global alignment, respectively. In the greedy approach, starting from the best fit primitive, we progressively aligned the primitive with the next strongest parallel/orthogonal edges to the aligned ones, while keeping previously aligned primitives unchanged. In the least squares solution, we obtained a solution combining the data term with penalty energies for all the parallel/orthogonal candidate edges, weighted by their confidence. Note that, in presence of structured (biased) noise or misaligned scans, our method prefers alignment to global relations (regular configurations). We tested our method on real-world objects of varying complexity. In absence of a precise virtual model as ground truth, we used physical measurements of the objects for comparison. We also validated orientation, coplanarity, coaxial, and equality relations detected by our system on the physical models, as possible. In our simplest example of the wheel model, Figure 14 , all the major axes of the planes, cylinders, and cones are detected parallel, and the reduced orientation graph is trivial in absence of any orthogonal relations. The dataset is interesting for the large number of coaxial and coplanar relations, and also for the equality of attributes for cones and cylinders. Note that the final model, automatically allows exploded views of the subparts, along the recovered axis directions. Next, we take a packing foam-box (see Figures 1 and 11) with small parts sharing a variety of relations. Here the detected lengths and angles were in good agreement with the physical model. Interestingly, a protrusion on the box (right feature in Figure 1 ) was in the range of 0.1mm to the other flanks on (front side of) the model. All these protrusions were grouped together and made identical. 0.5% of primitive bounding box length with ground truth) recovered normals. A number like 4 ? means 4 groups of primitives converged to equal lengths, but with converged value different from the ground truth; added noise was in U[? ? ? , ? ? ] for normals, and results are averaged over 10 runs. This demonstrates our global prior that if primitives are in near alignment, they are likely to be in exact alignment. The clutch model, Figure 9 , is challenging given the small features, and the poor quality of the scan, due to the dark material color (we were not allowed to paint the model white). Even on this sparse dataset, our method correctly detected various relations, hinting at the ubiquity of relations and repetitions in man-made engineering objects. Note that in one part the sample points are almost nonexistent and the method had little evidence to propagate and connect up the primitives. In the final, but most complicated example, we scanned a machine part (see Figure 13 ). Various relations were identified and conformed to in the final model. The angle pair histogram clearly demonstrates the improvement in the pairwise angle relations. RANSAC failed to fit initial primitives, within fitting tolerance, for parts of the top of the model; we place a MLS surface fitted to the unclaimed point region for comparison (in slightly darker shade). Multiple scans of an object are typically aligned using local refinement methods like point-to-point and point-to-plane iterative closest pair (ICP) algorithms. A commonly encountered problem in scan alignment is slippage, i.e., in absence of appropriate local features, the scans slip over each other, instead of locking to a well defined configuration [Gelfand and Guibas 2004]. For example, in Figure 15 , aligning source and target scans, S 1 and S 2 , using ICP results in rotational slippage of the target. We use global relations to remove the ambiguity. First, for each individual scan we learn their global relations C S ? 1 and C S ? 2 , respectively while conforming to the underlying scans. Then, in an outer loop we extract global relations on the combined data set S 1 ? T (S 2 ), while optimizing over the unknown transformation T that is restricted to the applicable slippage transforms, in this case, rotation about the axis of S 2 . The algorithm alternates between learning relations, and solving for the aligning transform T . In each iteration, we detect the top relation candidate c, use c to compute T that minimizes data cost on S 1 ? T (S 2 ) subject to constraint c along with the established constraints. We update S 2 ? T (S 2 ), and proceed with learning further relations. Finally, we perform one round of global relation alignment on the aligned data, which mainly helps in conforming to placement and equality relations in the data sets. Table 2 lists the performance of our algorithm on various scanned models and the simulated scan on the ?boxy? model presented in the paper. Note that in the wheel model since all the directions get aligned to the same direction by parallel/orthogonal alignment, subsequently no equal angle relations are detected. Further, the coplanarity relations already result in equal length (trimming planes) for this example, and thus no equal length relations are detected. Note that the running time depends more on the complexity of the relational structure of the model, rather than the sampling resolution. Our graph reduction for redundant relations makes the nonlinear solver (?fmincon? Matlab function) robust, and also significantly faster, e.g., for the boxy model the optimization time just for parallel/orthogonal without reduction takes 164 seconds and with our reduction only 64 seconds. For denser relationship, without redundancy removal, e.g., pipe-model with 696 original relations, the optimization may run in order of hours. Using the relationship graph and the underlying data, we extrapolate and compute pairwise primitive intersections as applicable. In our current implementation, for a primitive pair involving complex primitives, e.g., cylinder with cone, we use a simple numerical method to extract a polygonal intersection curve. Our method, even under irregular sampling, yields precise models along with sharp features, which is otherwise difficult with existing alternatives. Note that by aligning to global relations in conjunction with local fitting, we demonstrate that it is possible to extract the global relations even in noisy and sparse datasets. The recovered relations are naturally a sparse encoding of the input model, where we make use of the fact that such models are of low information content. Our algorithm can be seen as precisely recovering such key relations. Unlike our method, most scan reconstruction methods use local priors, while ignoring global relations that are dominant in man-made structures. As in any shape analysis with unreliable data, there is always a tradeoff between approximation level and extent of regularity detected. Our method allows aligning relations even at the expense of slightly increased data fitting cost. However, the user can require our method to disallow large increase in the data error, and dropping the corresponding relations. It will be interesting to explore Pareto-optimal solutions in this setting. Note that aligning to regular configurations can also help in identifying defects in scanned models, and encoding shapes as deviations from regular configurations. A possible improvement is to consider higher-order relations involving pair of triplets (or more) of primitives, but the computational complexity quickly makes a simple generalization impractical. We leave this to future research. For certain types of relations, we investigate pairs of primitive pairs. This can potentially lead to O(m 4 ) relations for m primitives, especially in regular configurations, closely packed in space, resulting in significant computation times. Also when the angle or length space histograms have closely spaced values, increased noise level can submerge such differences making it difficult to correctly recover the relations in our framework (see Figure 8 and Table 1 ). Such errors can potentially accumulate across primitives. Chance alignments involving multiple outlier primitives may produce high confidence but at the same time incurring possible undesirable relations. Finally, our approximate solution of relation group extraction, in certain cases, can miss global relations, or even introduce outlier relations that happen to have high confidence score (see Figure 16 ). Although we do not expect to extract the best feasible subset given the relation to the NP-complete satisfiability problem, in practice large data error can indicate such problem. In our experiments though, we did not encounter such a situation. We presented a method for incorporating global relations to reliably recover relations among both local and distant parts of man-made objects. We demonstrated that for regular objects, i.e., objects with low information content, various global relations can be reliably extracted from noisy (structured) and incomplete datasets, even when the local signals are ambiguous and unreliable. Starting with a set of initial RANSAC based locally fitted primitives, our algorithm progressively learns and infers orientation, placement, and equality relations. In each stage, a set of feasible relations are extracted among the candidate relations, and then aligned while best fitting to the input data. In the context of low complexity, procedurally modeled man-made objects, learning global priors is likely to significantly assist in shape understanding and sparse encoding. Moreover, man-made models, e.g., Figure 2 -left, commonly involve hierarchical relations. Such a grouping naturally arises from manufacturing ease and reuse options. Inferring such hierarchical grouping, however, is challenging since it will involve solving a consistent segmentation across the noisy input. More precisely, partially recovered global relations can guide an importance sampling based RANSAC fitting to robustly extract primitives from locally inconsistent and sparsely sampled regions. Bringing in similar global relations to surface reconstruction remains to be explored. We are grateful to Ruwen Schnabel for making code from [Schnabel et al. 2007] publicly available, Ran Gal and Suhib Alsisan for proofreading the paper, KAUST car garage for lending machine parts for scanning, and AIM@Shape for the joint model used for the simulated scans in Figure 16 . Niloy thanks Tanveer Alam for initial experiments for this project; Pierre Alliez, Cengiz Oztireli for running comparison tests using their state-of-the-art reconstruction algorithms; and Reinhard Klein for inspiring discussions. placement eq. length eq. radii time (in sec) 359?75 N/A 66?18 227.3 25?18 68?20 N/A 875.6 27?18 8?3 4?3 573.1 90?43 222?19 88?27 838.5 11?9 20?8 7?4 319.3\n        The work was partially supported by KAUST international visitingstudent scholarships for Li and Wu, NSFC grants 60902104, 61025012, 61003190, CAS 100 scholar program, Shenzhen Science and Technology Foundation (JC201005270340A) for Li and Wu, CAS Visiting Professorship for Senior Int?l Scientists for Cohen-Or, CAS Fellowship for Young Int?l Scientists for Sharf, Cyprus RPF GrantDiethnis/Stochos/0609 for Chrysanthou, Israel Science Foundation for Cohen-Or, and European FP7 under grant agreement 276982 for Sharf. B ENKO , P., M ARTIN , R. R., AND V ?RADY , T. 2001. Algorithms for reverse engineering boundary representation models. Computer-Aided Design 33, 11, 839 ? 851. B OKELOH , M., W AND , M., AND S EIDEL , H.-P. 2010. A connection between partial symmetry and inverse procedural modeling. ACM SIGGRAPH 29, 104:1?104:10. B ROWN , B. J., AND R USINKIEWICZ , S. 2004. Non-rigid rangescan alignment using thin-plate splines. In 3DPVT, 759?765. B YRD , R., G ILBERT , J. C., AND N OCEDAL , J. 2000. A trust region method based on interior point techniques for nonlinear programming. Mathematical Programming 89, 1, 149?185. C ARR , J. C., B EATSON , R. K., C HERRIE , J. B., M ITCHELL , T. J., F RIGHT , W. R., M C C ALLUM , B. C., AND E VANS , T. R. 2001. Reconstruction and representation of 3d objects with radial basis functions. of ACM SIGGRAPH, 67?76. D EY , T. 2007. 1 ed. Cambridge University Press. F ISHER , R. 2004. F LEISHMAN , S., C OHEN -O R , D., AND S ILVA , C. T. 2005. Robust moving least-squares fitting with sharp features. ACM SIGGRAPH 24, 544?552. G AL , R., S HAMIR , A., H ASSNER , T., P AULY , M., AND C OHEN O R , D. 2007. Surface reconstruction using local shape priors. on Geometry Processing, 253?262. G AL , R., S ORKINE , O., M ITRA , N. J., AND C OHEN -O R , D. 2009. iWIRES: An analyze-and-edit approach to shape manipulation. ACM SIGGRAPH 28, 3, #33, 1?10. G ELFAND , N., AND G UIBAS , L. J. 2004. Shape segmentation using local slippage analysis. In 214?223. Algebraic point set surfaces. H OPCROFT , J., AND T ARJAN , R. 1973. Algorithm 447: efficient algorithms for graph manipulation. of the ACM 16 (June), 372?378. H OPPE , H., D E R OSE , T., D UCHAMP , T., M C D ONALD , J., AND S TUETZLE , W. 1992. Surface reconstruction from unorganized points. of ACM SIGGRAPH, 71?78. K ANATANI , K. 2008. Statistical optimization for geometric fitting: Theoretical accuracy bound and high order error analysis. Journal of Computer Vision 80, 167?188. K AZHDAN , M., B OLITHO , M., surface reconstruction. L I , G., L IU , L., Z HENG , H., AND M ITRA , N. J. 2010. Analysis, reconstruction and manipulation using arterial snakes. ACM SIGGRAPH ASIA 29, 152:1?152:10. L IPMAN , Y., C OHEN -O R , D., L EVIN , D., AND T AL -E ZER , H. 2007. Parameterization-free projection for geometry reconstruction. ACM SIGGRAPH 26, 3, 22. P\n        M ITRA , N. J., design. , L., AND P AULY , M. 2007. Symmetrizavol. 26, #63, 1?8. M ULLEN , P., G OES , F. D., D ESBRUN , M., C OHEN -S TEINER , D., AND A LLIEZ , P. 2010. Signing the unsigned: Robust surface reconstruction from raw pointsets. on Geometry Processing, 1733?1741. O ZTIRELI , C., G UENNEBAUD , G., AND G ROSS , M. 2009. Feature preserving point set surfaces based on non-linear kernel regression. Computer Graphics Forum 28, 2, 493?501. P AULY , M., M ITRA , N. J., W ALLNER , J., P OTTMANN , H., AND G UIBAS , L. 2008. Discovering structural regularity in 3D geometry. ACM SIGGRAPH 27, 3, #43, 1?11. S CHNABEL , R., W AHL , R., AND K , R. 2007. Efficient ransac for point-cloud shape detection. 2, 214?226. S CHNABEL , R., D EGENER , P., AND K LEIN , R. 2009. Completion and reconstruction with primitive shapes. CGF Eurographics 28, 2, 503?512. T HRUN , S., AND W EGBREIT , B. 2005. Shape from symmetry. In 1824?1831. W ERGHI , N., F ISHER , R., A SHBROOK , A., AND R OBERTSON , C. 2002. Shape reconstruction incorporating multiple nonlinear geometric constraints. Constraints 7, 117?149. Z IENA , 2010. Knitro optimization software, Dec.",
  "resources" : [ ]
}