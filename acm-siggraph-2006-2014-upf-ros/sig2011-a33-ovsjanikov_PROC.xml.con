{
  "uri" : "sig2011-a33-ovsjanikov_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2011/a33-ovsjanikov_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Exploration of Continuous Variability in Collections of 3D Shapes",
    "published" : "2011",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Maks-Ovsjanikov",
      "name" : "Maks",
      "surname" : "Ovsjanikov"
    }, {
      "uri" : "http://drinventor/Wilmot-Li",
      "name" : "Wilmot",
      "surname" : "Li"
    }, {
      "uri" : "http://drinventor/Leonidas J.-Guibas",
      "name" : "Leonidas J.",
      "surname" : "Guibas"
    }, {
      "uri" : "http://drinventor/Niloy J.-Mitra",
      "name" : "Niloy J.",
      "surname" : "Mitra"
    } ]
  },
  "bagOfWords" : [ "evaluate", "we", "approach", "we", "consider", "five", "class", "3d", "shape", "airplane", "bicycle", "motorcycle", "car", "chair", "we", "choose", "object", "because", "have", "well-defined", "set", "part", "-lrb-", "e.g.", "wing", "wheel", "etc.", "-rrb-", "variation", "within", "class", "model", "often", "characterize", "spatial", "layout", "part", "furthermore", "mechanical", "shape", "furniture", "very", "popular", "online", "repository", "-lrb-", "e.g.", "40k", "car", "14k", "chair", "Google", "3D", "Warehouse", "-rrb-", "each", "class", "we", "gather", "dataset", "3d", "model", "range", "size", "from", "55", "132", "model", "-lrb-", "Table", "-rrb-", "we", "obtain", "most", "we", "example", "from", "INRIA", "GAMMA", "Group", "repository", "-lsb-", "saltel", "2008", "-rsb-", "which", "aggregate", "3d", "model", "from", "variety", "commercial", "academic", "database", "-lrb-", "e.g.", "Foundation", "3D", "Princeton", "shape", "database", "-rrb-", "few", "extra", "shape", "add", "from", "Google", "3D", "Warehouse", "note", "we", "do", "prune", "model", "base", "any", "low-level", "geometric", "property", "thus", "we", "dataset", "span", "wide", "range", "model", "complexity", "quality", "which", "typical", "online", "repository", "general", "example", "across", "we", "test", "datum", "number", "connected", "component", "vary", "from", "20494", "significant", "portion", "model", "non-manifold", "show", "Table", "finally", "since", "goal", "we", "approach", "find", "variation", "within", "collection", "similar", "shape", "we", "remove", "outlier", "from", "dataset", "threshold", "distance", "measure", "-lsb-", "Chazal", "et", "al.", "2010", "-rsb-", "10", "we", "smooth", "histogram", "descriptor", "space", "Table", "summarize", "shape", "we", "obtain", "after", "pruning", "outlier", "detection", "determine", "variation", "within", "each", "class", "shape", "we", "analyze", "dataset", "describe", "section", "note", "template", "selection", "we", "manually", "group", "small", "number", "connected", "component", "airplane", "chair", "template", "we", "use", "automatically", "select", "template", "bicycle", "motorcycle", "car", "give", "template", "we", "approach", "automatically", "extract", "deformation", "model", "each", "class", "shape", "we", "use", "we", "exploration", "interface", "visualize", "navigate", "variability", "collection", "figure", "8a", "show", "main", "mode", "variation", "five", "different", "class", "shape", "Notice", "we", "technique", "capture", "change", "both", "size", "position", "template", "component", "example", "distance", "between", "front", "back", "wheel", "account", "most", "variability", "motorcycle", "while", "length", "width", "body", "vary", "across", "set", "car", "furthermore", "we", "discuss", "section", "6.2", "we", "method", "automatically", "learn", "encode", "spatial", "dependency", "between", "component", "help", "user", "understand", "explore", "space", "allowable", "deformation", "define", "datum", "example", "symmetric", "component", "wheel", "wing", "deform", "together", "all", "four", "learn", "deformation", "model", "we", "also", "capture", "less", "obvious", "dependency", "body", "motorcycle", "move", "downward", "front", "wheel", "move", "forward", "relationship", "mainly", "due", "several", "stretch", "low-profile", "chopper", "bike", "dataset", "one", "show", "bottom", "row", "Figure", "8b", "additional", "experiment", "we", "combine", "bicycle", "motorcycle", "one", "collection", "see", "we", "could", "learn", "single", "deformation", "model", "two", "related", "class", "shape", "analysis", "produce", "deformation", "model", "two", "distinct", "mode", "variation", "-lrb-", "figure", "8c", "8d", "-rrb-", "interestingly", "second", "mode", "variation", "combined", "set", "contain", "deformation", "related", "stretch", "body", "along", "its", "width", "so", "skinny", "configuration", "correspond", "bicycle", "use", "deformation", "we", "be", "able", "navigate", "through", "both", "bicycle", "motorcycle", "we", "exploration", "interface", "show", "accompany", "supplementary", "video", "far", "most", "time", "consuming", "part", "we", "approach", "pre-processing", "when", "we", "compute", "descriptor", "each", "shape", "collection", "use", "simple", "MATLAB", "implementation", "computation", "take", "under", "18", "seconds", "per", "shape", "average", "2m", "point", "pair", "Intel", "core", "duo", "processor", "during", "optimization", "we", "only", "use", "20k", "sample", "compute", "descriptor", "efficiency", "however", "prior", "optimization", "we", "find", "set", "20k", "sample", "descriptor", "compute", "use", "set", "within", "0.5", "percent", "descriptor", "compute", "use", "2m", "pair", "time", "optimization", "depend", "number", "connected", "component", "template", "always", "remain", "under", "1-2", "minute", "template", "up", "connected", "component", "paper", "we", "introduce", "method", "capture", "explore", "variability", "collection", "shape", "without", "correspondence", "we", "main", "insight", "study", "relation", "between", "deformation", "shape", "its", "global", "high-dimensional", "descriptor", "we", "introduce", "modification", "previously", "suggest", "descriptor", "vary", "smoothly", "under", "smooth", "deformation", "shape", "therefore", "allow", "we", "analyze", "shape", "variability", "descriptor", "space", "we", "describe", "method", "recover", "variability", "term", "deformation", "template", "model", "describe", "exploration", "interface", "allow", "we", "navigate", "collection", "related", "shape", "via", "restricted", "template", "manipulation", "although", "we", "system", "show", "encouraging", "result", "we", "believe", "only", "beginning", "number", "interesting", "question", "answer", "future", "first", "although", "we", "parametrization", "deformation", "space", "low", "dimensional", "result", "optimization", "can", "non-intuitive", "component", "drift", "apart", "explicit", "encoding", "part", "connectivity", "optimization", "may", "interesting", "way", "resolve", "issue", "similarly", "since", "we", "solve", "non-convex", "non-linear", "problem", "we", "may", "only", "find", "local", "minimum", "energy", "convex", "formulation", "similar", "optimization", "problem", "interesting", "problem", "future", "other", "extension", "we", "framework", "may", "include", "outlier", "detection", "shape", "retrieval", "verify", "similar", "shape", "use", "curve", "descriptor", "space", "deformation", "produce", "mention", "earlier", "also", "interesting", "consider", "compare", "other", "descriptor", "which", "shape", "deformation", "result", "explicit", "change", "perhaps", "most", "interesting", "case", "analyze", "relation", "discrete", "variability", "shape", "-lrb-", "add", "extra", "component", "-rrb-", "term", "change", "various", "descriptor", "finally", "we", "consider", "extension", "we", "exploration", "interface", "where", "user", "can", "query", "system", "deformation", "explore", "different", "part", "descriptor", "space", "acknowledgement", "we", "would", "like", "acknowledge", "INRIA", "GAMMA", "group", "especially", "Eric", "Saltel", "model", "database", "-lsb-", "saltel", "2008", "-rsb-", "anonymous", "reviewer", "helpful", "comment", "suggestion", "Primoz", "Skraba", "extremely", "useful", "feedback", "discussion", "work", "partially", "support", "kaust", "visit", "student", "scholarship", "Adobe", "internship", "NSF", "grant", "FODAVA", "0808515", "ii", "0914833", "CCF", "1011228", "nsf/nih", "MathBio", "grant", "0900700", "grant", "from", "Google", "Inc.", "special", "thanks", "skype", "enable", "seamless", "communication", "channel", "during", "all", "stage", "project" ],
  "content" : "To evaluate our approach, we consider five classes of 3D shapes: airplanes, bicycles, motorcycles, cars and chairs. We chose these objects because they have a well-defined set of parts (e.g., wings, wheels, etc.), and variations within these classes of models are often characterized by the spatial layout of the parts. Furthermore, mechanical shapes and furniture are very popular in online repositories (e.g., 40k ?cars? and 14k ?chairs? in the Google 3D Warehouse). For each class, we gathered a dataset of 3D models, ranging in size from 55 to 132 models ( Table 1 ). We obtained most of our examples from the INRIA GAMMA Group repository [Saltel 2008], which aggregates 3D models from a variety of commercial and academic databases (e.g., Foundation 3D, the Princeton Shape database), with a few extra shapes added from the Google 3D Warehouse. Note that we did not prune models based on any low-level geometric properties. Thus, our datasets span a wide range of model complexity and quality, which is typical of online repositories in general. For example, across our test data the number of connected components varies from 1 to 20494, and a significant portion of the models are non-manifold as shown in Table 1 . Finally, since the goal of our approach is to find variations within collections of similar shapes, we removed outliers from the datasets by thresholding the distance to measure [Chazal et al. 2010], with k = 10 in our smoothed histogram descriptor space. Table 1 summarizes the shapes we obtained after pruning and outlier detection. To determine the variations within each class of shapes, we analyzed the datasets as described in Section 5. Note that for template selection, we manually grouped a small number of connected components in the airplane and chair templates, and we used the automatically selected template for the bicycles, motorcycles, and cars. Given these templates, our approach automatically extracted a deformation model for each class of shapes. We then used our exploration interface to visualize and navigate the variability in the collection. Figures 8a?e show the main modes of variation for the five different classes of shapes. Notice that our technique captures changes in both the size and position of the template components. For example, the distance between the front and back wheel accounts for most of the variability in the motorcycles, while the length and width of the body varies across the set of cars. Furthermore, as we discussed in Section 6.2, our method automatically learns and encodes the spatial dependencies between components to help the user understand and explore the space of allowable deformations as defined by the data. For example, symmetric components such as wheels and wings deform together in all four learned deformation models. We also capture less obvious dependencies, such as the body of the motorcycle moving downwards as the front wheel moves forward; this relationship is mainly due to several stretched, low-profile ?chopper? bikes in the dataset, such as the one shown in the bottom row of Figure 8b . As an additional experiment, we combined the bicycles and motorcycles into one collection to see if we could learn a single deformation model for these two related classes of shapes. The analysis produced a deformation model with two distinct modes of variation (Figures 8c and 8d). Interestingly, the second mode of variation in the combined set contains a deformation related to stretching the body along its width, so that skinny configurations corresponded to bicycles. Using these deformations, we were able to navigate through both the bicycles and motorcycles in our exploration interface, as shown in the accompanying supplementary video. By far, the most time consuming part of our approach is pre-processing, when we compute the descriptor for each shape in the collection. Using a simple MATLAB implementation, this computation took under 18 seconds per shape on average for 2M point pairs on an Intel Core 2 Duo processor. During optimization, we only use 20k samples to compute the descriptor for efficiency. However, prior to optimization we find a set of 20k samples such that the descriptor computed using this set is within 0.5 percent of the descriptor computed using 2M pairs. The time for optimization depends on the number of connected components in the template, but always remained under 1-2 minutes for templates with up to 8 connected components. In this paper, we introduced a method to capture and explore variability in a collection of shapes without correspondences. Our main insight is to study the relation between the deformation of a shape and its global, high-dimensional descriptor. We introduced a modification of a previously suggested descriptor that varies smoothly under smooth deformations of the shape, and therefore allows us to analyze shape variability in the descriptor space. We described a method for recovering this variability in terms of deformations of a template model and described an exploration interface that allows us to navigate a collection of related shapes via restricted template manipulation. Although our system shows encouraging results, we believe that this is only a beginning and there are a number of interesting questions to be answered in the future. First, although our parametrization of the deformation space is low dimensional, the results of the optimization can be non-intuitive with components ?drifting apart. ? An explicit encoding of the part connectivity in the optimization may be an interesting way to resolve this issue. Similarly, since we solve a non-convex non-linear problem, we may only find a local minimum of the energy. A convex formulation of a similar optimization problem is an interesting problem for the future. Other extensions to our framework may include outlier detection for shape retrieval by verifying similar shapes using curves in the descriptor space that their deformations produce. As mentioned earlier, it is also interesting to consider and compare other descriptors in which shape deformation results in explicit changes. Perhaps most interesting is the case of analyzing the relation of discrete variability in the shape (such as adding extra components), in terms of the changes of various descriptors. Finally, we are considering extensions to our exploration interface, where the user can query the system for deformations that explore different parts of the descriptor space. Acknowledgements. We would like to acknowledge the INRIA GAMMA group and especially Eric Saltel for the model database [Saltel 2008], the anonymous reviewers for the helpful comments and suggestions, and Primoz Skraba for the extremely useful feedback and discussions. The work was partially supported by a KAUST visiting student scholarship, an Adobe internship, NSF grants FODAVA 0808515, IIS 0914833 and CCF 1011228, NSF/NIH MathBio grant 0900700, and a grant from Google Inc. Special thanks to Skype for enabling a seamless communication channel during all the stages of the project.",
  "resources" : [ ]
}