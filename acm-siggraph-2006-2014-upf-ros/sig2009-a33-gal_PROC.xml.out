{
  "uri" : "sig2009-a33-gal_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2009/a33-gal_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "In recent years, shape editing has been extensively studied by the Man-made objects are largely dominated by a few typical features geometric modeling community. In particular, research efforts have that carry special characteristics and engineered meanings. Statebeen devoted to allow the user to directly manipulate surfaces while of-the-art deformation tools fall short at preserving such characterpreserving their geometric surface details. Generally speaking, a istic features and global structure. We introduce iW IRES , a novel key challenge in shape editing is to enable intuitive manipulation ? approach based on the argument that man-made models can be disthat is, the performed change is the one expected. Clearly, such tilled using a few special 1D wires and their mutual relations. We a notion is highly domain dependent. It is natural to expect that hypothesize that maintaining the properties of such a small number manipulation applied to the shape preserves the local surface deof wires allows preserving the defining characteristics of the entire tails [Botsch and Sorkine 2008]. Such detail-preserving techniques object. We introduce an analyze-and-edit approach, where prior treat the edited object to be made of a homogeneous, rubber-like to editing, we perform a light-weight analysis of the input shape material that responds uniformly to user manipulations. These apto extract a descriptive set of wires. Analyzing the individual and proaches have been highly successful for organic objects, such as mutual properties of the wires, and augmenting them with geometfaces, body parts, animals, etc. However, they are less suited for ric attributes makes them intelligent and ready to be manipulated. man-made shapes, such as furniture, cutlery, mechanical parts or Editing the object by modifying the intelligent wires leads to a powelectronic devices. Such engineered models are largely dominated erful editing framework that retains the original design intent and by flat or smooth faces, where the shape is defined by a few typical object characteristics. We show numerous results of manipulation features which carry special characteristics and geometric meaning. of man-made shapes using our editing technique. We hypothesize that conserving the properties of this rather small number of features allows preserving the defining characteristics of Keywords: mesh editing, man-made objects, structured deformathe entire object. In contrast, a surface manipulation that assumes a tion, space deformation, constraint propagation homogeneous surface, oblivious to the special characteristics of the shape, actually damages its high-level structure, thus defeating the purpose of editing. We use the term editing, rather than deformation, as the former is not supposed to be destructive by definition. ACM Reference Format Gal, R., Sorkine, O., Mitra, N., Cohen-Or, D. 2009. iWires: An Analyze-and-Edit Approach to Shape MaEditing is rather a constructive operation that implicitly aims at prenipulation. ACM Trans. Graph. 28, 3, Article 33 (August 2009), 10 pages. DOI = 10.1145/1531326.1531339 serving the essence of the shape (see Figure 1 ). http://doi.acm.org/10.1145/1531326.1531339. Copyright Notice Our work is inspired by the research of Singh and Fiume [1998] Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or direct commercial advantage and Orzan et al. [2008]. These works show that an entire shape or and that copies show this notice on the fi rst page or initial screen of a display along with the full citation. an image can be defined and characterized by a rather small set of Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers, to redistribute to lists, or to use any curves. We adopt the name wires of Singh and Fiume to denote component of this work in other works requires prior specific permission and/or a fee. Permissions may be requested from Publications Dept., ACM, Inc., 2 Penn Plaza, Suite 701, New York, NY 10121-0701, the curves that are key structural features capturing the shape. Our fax +1 (212) 869-0481, or permissions@acm.org . 3D geometry editing framework aims to preserve these key features ? 2009 ACM 0730-0301/2009/03-ART33 $10.00 DOI 10.1145/1531326.1531339 http://doi.acm.org/10.1145/1531326.1531339 and characteristics of objects, especially man-made ones.",
    "published" : null,
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ ]
  },
  "bagOfWords" : [ "we", "show", "numerous", "result", "manipulation", "man-made", "shape", "use", "we", "editing", "technique", "natural", "expect", "manipulation", "apply", "shape", "preserve", "local", "surface", "detail", "-lsb-", "Botsch", "Sorkine", "2008", "-rsb-", "final", "shape", "object", "determine", "use", "deform", "wire", "scaffolding", "accompany", "video", "exhibit", "we", "editing", "system", "action", "figure", "demonstrate", "basic", "flow", "we", "method", "even", "simple", "curve", "capture", "powerful", "shape", "characteristic", "we", "Lego", "example", "we", "identify", "eight", "circle", "twelve", "line", "segment", "form", "wire", "collection", "like", "most", "deformation", "tool", "we", "allow", "user", "indicate", "modeling", "constraint", "manipulate", "deformation", "handle", "sketch", "-lrb-", "section", "-rrb-", "we", "propagate", "deformation", "closest", "wire", "optimize", "enforce", "its", "individual", "characteristic", "-lrb-", "section", "5.1", "-rrb-", "we", "Lego", "example", "individual", "seed", "wire", "first", "free-form", "deform", "use", "user", "manipulation", "optimize", "become", "rectangle", "group", "optimize", "order", "restore", "group", "characteristic", "-lrb-", "instance", "planarity", "-rrb-", "describe", "section", "5.2", "once", "all", "wire", "have", "be", "treat", "final", "form", "set", "serve", "modeling", "constraint", "differential", "surface", "deformation", "-lrb-", "section", "5.3", "-rrb-", "model", "reconstruct", "respect", "edit", "wire", "-lrb-", "see", "Figure", "bottom", "left", "-rrb-", "paper", "we", "take", "first", "attempt", "realize", "approach", "present", "technique", "allow", "quick", "creation", "model", "reuse", "editing", "exist", "shape", "-lsb-", "Funkhouser", "et", "al.", "2004", "-rsb-", "-lrb-", "see", "Figure", "10", "-rrb-", "notable", "property", "we", "method", "can", "deal", "disconnect", "surface", "general", "model", "consist", "multitude", "part", "-lrb-", "example", "model", "Figure", "have", "108", "part", "-rrb-", "surface-based", "method", "can", "deal", "disconnect", "component", "coherent", "way", "even", "editing", "simple", "model", "like", "Lego", "state-of-the-art", "method", "while", "keep", "its", "characteristic", "feature", "extremely", "hard", "-lrb-", "see", "Figure", "-rrb-", "other", "hand", "iW", "ire", "provide", "intuitive", "outcome", "easy", "interaction", "wire", "framework", "Singh", "Fiume", "-lsb-", "1998", "-rsb-", "employ", "spatial", "curve", "construct", "deformation", "curve", "align", "prominent", "characteristic", "feature", "edit", "shape", "affect", "surface", "part", "vicinity", "framework", "use", "clever", "way", "blend", "space", "deformation", "induce", "multiple", "curve", "however", "deformation", "individual", "wire", "interaction", "among", "multiple", "wire", "completely", "leave", "user", "great", "advantage", "ability", "formulate", "deformation", "process", "so", "precisely", "control", "low-level", "differential", "surface", "property", "edit", "object", "downside", "be", "direct", "dependence", "computational", "cost", "complexity", "object?s", "representa", "tion", "-lrb-", "e.g.", "number", "mesh", "vertex", "-rrb-", "several", "surface-based", "approach", "allow", "manual", "specification", "vary", "surface", "stiffness", "-lsb-", "Botsch", "et", "al.", "2006", "Popa", "et", "al.", "2007", "-rsb-", "thus", "allow", "some", "surface", "part", "behave", "more", "rigidly", "than", "other", "worth", "note", "restricted", "type", "space", "deformation", "design", "-lsb-", "Kraevoy", "et", "al.", "2008", "-rsb-", "axis-aligned", "non-homogeneous", "scaling", "structured", "man-made", "model", "space", "deformation", "protect", "certain", "part", "space", "occupy", "sensitive", "object", "feature", "only", "undergo", "similarity", "transformation", "method", "related", "material-aware", "deformation", "-lsb-", "Popa", "et", "al.", "2007", "-rsb-", "yet", "again", "mostly", "low-level", "differential", "information", "consider", "when", "define", "part", "protect", "during", "axis-aligned", "scaling", "complete", "rigidity", "feature", "may", "too", "restrictive", "many", "scenario", "mention", "above", "we", "work", "inspire", "idea", "many", "man", "make", "shape", "can", "describe", "sparse", "collection", "characteristic", "curve", "motto", "wire", "-lsb-", "Singh", "Fiume", "1998", "-rsb-", "introduce", "novel", "modeling", "paradigm", "space", "deformation", "notion", "curve", "network", "induce", "interpolate", "surface", "have", "be", "long", "use", "traditional", "cad/cam", "model", "shape", "from", "scratch", "use", "free-form", "surface", "patch", "collection", "2d", "curve", "attach", "color", "information", "use", "define", "piecewise-smooth", "color", "gradient", "arbitrary", "geometry", "2d", "vector", "graphic", "-lsb-", "Orzan", "et", "al.", "2008", "-rsb-", "again", "capitalize", "observation", "sparse", "set", "characteristic", "feature", "curve", "often", "suffice", "completely", "define", "entire", "object", "-lrb-", "drawing", "case", "-rrb-", "allow", "we", "handle", "rather", "broad", "spectrum", "shape", "avoid", "typical", "hurdle", "restriction", "cad", "boundary", "representation", "nurb", "patch", "make", "technique", "attractive", "wider", "user", "audience", "we", "shape", "analysis", "weak", "form", "reverse", "engineering", "we", "do", "precisely", "reconstruct", "entire", "shape", "rather", "require", "just", "enough", "information", "enable", "structure-preserving", "edit", "requirement", "much", "simpler", "compare", "classical", "-lrb-", "notoriously", "hard", "-rrb-", "problem", "shape", "understanding", "we", "select", "sparse", "set", "one-dimensional", "feature", "mark", "they", "wire", "salient", "curve", "object", "sufficiently", "describe", "shape", "purpose", "editing", "we", "do", "pose", "any", "topological", "restriction", "collection", "wire", "nor", "do", "wire", "necessarily", "segment", "shape", "surface", "patch", "knowledge", "use", "during", "subsequent", "edit", "wire", "extraction", "many", "man-made", "object", "define", "line", "shape", "lie", "intersection", "between", "smooth", "surface", "we", "use", "trace", "procedure", "form", "wire", "start", "from", "sharp", "edge", "have", "yet", "serve", "wire", "seed", "wire", "form", "walk", "along", "consecutive", "sharp", "edge", "whenever", "cross", "reach", "we", "choose", "edge", "would", "keep", "wire", "planar", "possible", "wire", "end", "when", "either", "curve", "become", "closed", "loop", "further", "walk", "possible", "note", "we", "extraction", "procedure", "rely", "relatively", "clean", "input", "due", "use", "dihedral", "angle", "while", "very", "often", "case", "manmade", "object", "still", "more", "robust", "technique", "can", "apply", "place", "we", "heuristic", "geometric", "snake", "-lsb-", "Lee", "Lee", "2002", "-rsb-", "ridge", "ravine", "-lsb-", "Ohtake", "et", "al.", "2004", "-rsb-", "would", "suitable", "when", "deal", "scan", "input", "may", "contain", "noise", "all", "example", "show", "paper", "supplementary", "video", "wire", "be", "automatically", "extract", "from", "model", "use", "threshold", "angle", "40", "degree", "follow", "property", "associate", "each", "wire", "Planar", "non-planar", "atomic", "type", "entire", "wire", "can", "well", "approximate", "straight", "line", "-lrb-", "part", "-rrb-", "circle", "-lrb-", "part", "-rrb-", "ellipse", "polynomial", "curve", "bounded", "degree", "most", "man-made", "object", "we", "observe", "line", "elliptical", "feature", "capture", "define", "characteristic", "model", "preserve", "characteristic", "crucial", "during", "subsequent", "deformation", "stage", "compound", "wire", "when", "fitting", "error", "use", "single", "element", "large", "we", "segment", "wire", "sub-wire", "divide", "salient", "internal", "angle", "polyline", "special", "case", "compound", "wire", "where", "each", "sub-wire", "straight", "line", "polyline", "appear", "most", "common", "wire", "object", "we", "have", "test", "atomic", "attribute", "wire", "-lrb-", "sub-wire", "-rrb-", "decide", "fitting", "each", "type", "select", "one", "smallest", "fitting", "error", "qualify", "circle", "ellipse", "wire", "should", "cover", "substantial", "part", "least", "quarter", "circle/ellipse", "we", "implementation", "polynomial", "curve", "fitting", "we", "find", "degree", "polynomial", "best", "approximate", "curve", "use", "arc-length", "parameterization", "domain", "approximation", "fitting", "three", "separate", "polynomial", "along", "three", "principal", "axis", "curve", "curve?s", "center", "mass", "origin", "we", "test", "all", "polynomial", "degree", "between", "max", "select", "lowest", "degree", "polynomial", "fitting", "error", "below", "threshold", "we", "use", "max", "we", "implementation", "compound", "wire", "we", "also", "analyze", "record", "relation", "between", "sub-wire", "pair", "adjacent", "sub-wire", "denote", "wire", "unit", "unit", "tangent", "connection", "tangent", "vector", "-lrb-", "joint", "-rrb-", "second", "point", "first", "wire", "suband", "we", "record", "follow", "relation", "set", "angle", "cluster", "Equal", "connect", "connection", "pair", "i.e.", "have", "have", "adjacent", "-lrb-", "approximately", "-rrb-", "similar", "angle", "special", "sub-wires", "we", "value", "identify", "value", "equal", "connection", "angle", "-lrb-", "we", "implementation", "90", "45", "degree", "-rrb-", "additionally", "note", "parallel", "connection", "we", "interested", "clustering", "pair", "subwire", "which", "tangent", "connection", "point", "form", "parallel", "plane", "namely", "we", "mark", "set", "sub-wire", "have", "similar", "vector", "Equal", "length", "cluster", "sub-wire", "have", "nearly", "equal", "length", "individual", "wire", "constraint", "respect", "subsequent", "edit", "any", "man-made", "model", "typically", "yield", "large", "number", "wire", "-lrb-", "see", "Figure", "-rrb-", "we", "analyze", "mutual", "inter-relationship", "form", "group", "wire", "share", "certain", "common", "trait", "key", "step", "we", "algorithm", "since", "success", "intuitiveness", "subsequent", "edit", "operation", "depend", "addition", "common", "property", "we", "cluster", "wire", "proximity", "wire", "may", "belong", "group", "its", "euclidean", "distance", "from", "group", "smaller", "than", "parameter", "prox", "all", "we", "example", "we", "use", "20", "40", "object?s", "bound", "box", "diagonal", "length", "prox", "-lrb-", "Lego", "model", "we", "use", "100", "-rrb-", "symmetry", "we", "use", "method", "-lsb-", "Mitra", "et", "al.", "2006", "-rsb-", "detect", "global", "symmetry", "between", "each", "pair", "wire", "we", "filter", "out", "any", "symmetry", "common", "less", "than", "symm", "wire", "group", "wire", "belong", "remain", "symmetry", "set", "-lrb-", "we", "set", "symm", "we", "implementation", "-rrb-", "note", "symmetry", "relation", "between", "different", "part", "important", "aspect", "many", "shape", "relation", "often", "constitute", "define", "characteristic", "object", "desirable", "preserve", "they", "under", "any", "deformation", "we", "framework", "we", "retain", "detect", "symmetry", "relation", "specifically", "reflective", "discrete", "rotational", "symmetry", "preserve", "necessary", "inter-wire", "relation", "during", "edit", "phase", "user", "initiate", "edit", "operation", "any", "following", "interaction", "mode", "directly", "drag", "surface", "part", "deform", "individual", "wire", "sketch-based", "interaction", "-lrb-", "see", "section", "-rrb-", "user", "input", "define", "modeling", "constraint", "propagate", "wire", "which", "turn", "undergo", "optimization", "goal", "maintain", "individual", "group", "property", "much", "possible", "while", "satisfy", "modeling", "constraint", "finally", "new", "configuration", "edited", "wire", "induce", "deformation", "surface", "itself", "core", "we", "editing", "method", "modification", "wire", "fit", "modeling", "constraint", "while", "preserve", "original", "prop", "erty", "problem", "naturally", "ill-pose", "one", "hand", "preserve", "all", "characteristic", "individual", "wire", "wire", "group", "exactly", "usually", "impossible", "other", "hand", "infinitely", "many", "way", "define", "approximate", "preservation", "we", "opt", "out", "define", "single", "global", "optimization", "function", "because", "various", "term", "describe", "individual", "wire", "property", "mutual", "relation", "all", "have", "very", "different", "nature", "find", "appropriate", "weight", "assignment", "all", "they", "difficult", "nonintuitive", "instead", "we", "propose", "prioritized", "propagation", "approach", "where", "different", "wire", "property", "optimize", "different", "stage", "start", "individual", "wire", "directly", "affect", "modeling", "constraint", "move", "group", "wire", "belong", "continue", "other", "group", "proximity", "symmetry", "approach", "while", "be", "greedy", "eliminate", "painstaking", "-lrb-", "modeldependent", "-rrb-", "weight", "tweaking", "global", "nonlinear", "optimization", "work", "well", "practice", "-lrb-", "see", "Figure", "-rrb-", "when", "shape", "wire", "alter", "-lrb-", "result", "direct", "user", "manipulation", "indirectly", "when", "edit", "operation", "propagate", "-rrb-", "original", "wire", "characteristic", "can", "destroy", "we", "perform", "optimization", "process", "restore", "they", "much", "possible", "let", "we", "denote", "original", "-lrb-", "reference", "-rrb-", "shape", "wire", "curve", "deform", "state", "we", "fit", "new", "curve", "possess", "original", "property", "much", "possible", "while", "resemble", "position", "shape", "function", "both", "reference", "deform", "curve", "state", "-lrb-", "-rrb-", "-lrb-", "see", "Figure", "-rrb-", "any", "point", "during", "editing", "wire", "thus", "associate", "three", "entity", "-lrb-", "-rrb-", "describe", "section", "we", "analyze", "property", "reference", "curve", "classify", "wire", "planar/non-planar", "atomic", "-lrb-", "straight", "line", "circle", "ellipse", "polynomial", "-rrb-", "compound", "during", "editing", "we", "fit", "corresponding", "curve", "type", "deform", "state", "when", "wire", "atomic", "we", "fit", "particular", "atomic", "type", "use", "center", "mass", "origin", "coordinate", "system", "principal", "axis", "-lrb-", "compute", "pca", "-rrb-", "coordinate", "axis", "essentially", "same", "procedure", "we", "use", "analysis", "stage", "-lrb-", "section", "4.1", "-rrb-", "planar", "primitive", "we", "define", "fitting", "plane", "plane", "span", "two", "strongest", "principal", "component", "compound", "wire", "we", "fit", "corresponding", "type", "each", "subwire", "moreover", "we", "optimize", "relationship", "between", "subwire", "-lrb-", "be", "analyze", "describe", "section", "4.1", "-rrb-", "we", "define", "nonlinear", "energy", "functional", "measure", "deviation", "from", "all", "property", "we", "have", "identify", "analysis", "stage", "find", "curve", "minimize", "energy", "while", "stay", "close", "note", "shape", "optimization", "may", "result", "non-planar", "wire", "originally", "wire", "planar", "we", "fit", "plane", "optimize", "shape", "project", "restore", "planarity", "we", "attempt", "restore", "group", "property", "follow", "symmetry", "whenever", "shape", "single", "wire", "change", "same", "transform", "-lrb-", "adjust", "accord", "symmetry", "-rrb-", "apply", "symmetric", "wire", "i.e.", "symmetry", "group", "wire", "participate", "planar", "parallel", "concentric", "group", "we", "move", "wire", "use", "small", "step", "rigid", "transform", "towards", "mean", "configuration", "-lrb-", "use", "appropriate", "distance", "measure", "-rrb-", "iteratively", "restore", "group", "property", "case", "group", "wire", "lie", "same", "plane", "we", "iteratively", "translate", "each", "wire", "towards", "average", "plane", "best", "approximate", "all", "other", "wire", "rotate", "wire", "towards", "lie", "plane", "we", "take", "incremental", "step", "translate", "each", "wire", "distance", "average", "plane", "rotate", "necessary", "angle", "we", "iterate", "over", "all", "wire", "group", "recompute", "average", "plane", "each", "time", "until", "convergence", "maximum", "number", "step", "reach", "here", "we", "explain", "how", "edit", "single", "wire", "propagate", "other", "wire", "group", "start", "from", "initial", "set", "wire", "affect", "user", "input", "-lrb-", "i.e.", "modeling", "constraint", "-rrb-", "we", "first", "propagate", "influence", "all", "wire", "group", "contain", "those", "wire", "-lrb-", "technical", "detail", "below", "-rrb-", "we", "proximity-based", "propagation", "influence", "group", "wire", "closest", "accord", "euclidean", "distance", "one", "already", "treat", "when", "we", "optimize", "each", "individual", "wire", "we", "also", "perform", "same", "change", "all", "wire", "share", "global", "symmetry", "so", "treat", "wire", "one", "side", "object", "might", "influence", "wire", "remote", "part", "object", "we", "continue", "propagate", "edit", "influence", "until", "all", "wire", "treat", "influence", "propagation", "from", "set", "wire", "onto", "new", "wire", "basic", "building", "block", "edit", "propagation", "procedure", "be", "able", "transfer", "change", "one", "several", "wire", "another", "wire", "vicinity", "assume", "untreated", "wire", "influence", "collection", "wire", "-lcb-", "-lrb-", "-rrb-", "-rcb-", "have", "already", "be", "treat", "we", "only", "have", "reference", "state", "we", "look", "deform", "state", "base", "influence", "propagation", "optimize", "state", "compute", "previously", "describe", "section", "5.1", "we", "employ", "local", "frame", "encode", "where", "every", "point", "curve", "have", "canonical", "orthonormal", "frame", "-lrb-", "-rrb-", "associate", "center", "p.", "propagate", "edit", "influence", "from", "set", "-lcb-", "-rcb-", "onto", "we", "transfer", "change", "between", "local", "frame", "onto", "each", "point", "we", "find", "closest", "point", "among", "-lcb-", "-rcb-", "we", "encode", "local", "frame", "its", "corresponding", "reference", "curve", "i.e.", "where", "-lrb-", "-rrb-", "matrix", "local", "frame", "axis", "we", "decode", "use", "corresponding", "local", "frame", "edit", "curve", "perform", "process", "all", "point", "we", "obtain", "deform", "version", "-lcb-", "-rcb-", "example", "shape", "we", "may", "obtain", "give", "Figure", "-lrb-", "bottom", "right", "-rrb-", "set", "dial", "hole", "transform", "due", "user", "manipulation", "symmetry", "set", "influence", "other", "wire", "-lrb-", "inner", "enclose", "circle", "-rrb-", "use", "procedure", "describe", "above", "result", "wavy", "curve", "depict", "gray", "constrain", "optimization", "operator", "-lrb-", "-rrb-", "apply", "obtain", "final", "curve", "-lrb-", "-rrb-", "-lrb-", "section", "5.1", "-rrb-", "we", "use", "heuristic", "avoid", "over-constraining", "compound", "wire", "have", "be", "influence", "two", "more", "wire", "we", "relax", "optimization", "operator", "-lrb-", "-rrb-", "so", "ignore", "equal", "angle", "equal", "length", "property", "-lrb-", "i.e.", "we", "remove", "corresponding", "energy", "term", "from", "optimization", "see", "appendix", "-rrb-", "allow", "instance", "side", "wire", "Lego", "Figure", "assume", "trapezoidal", "shape", "instead", "lock", "they", "rectangle", "overall", "influence", "propagation", "procedure", "we", "from", "seed", "set", "wire", "be", "treat", "direct", "result", "user", "manipulation", "we", "propagate", "edit", "operation", "onto", "all", "wire", "group", "contain", "wire", "describe", "above", "after", "propagation", "step", "each", "group", "optimize", "describe", "section", "5.2", "process", "end", "when", "all", "wire", "have", "be", "treat", "3D", "Studio", "Max", "-rrb-", "state-of-the-art", "shape", "deformation", "method", "we", "keep", "one", "side", "Lego", "fix", "-lrb-", "depict", "red", "-rrb-", "scale", "-lrb-", "top", "two", "row", "-rrb-", "move", "-lrb-", "bottom", "row", "-rrb-", "opposite", "side", "-lrb-", "handle", "mark", "yellow", "-rrb-", "final", "deformation", "result", "wire", "editing", "process", "set", "wire", "each", "reference", "curve", "corresponding", "optimize", "curve", "-lrb-", "see", "Figure", "where", "reference", "wire", "green", "optimize", "version", "blue", "-rrb-", "we", "can", "now", "use", "pair", "curve", "modeling", "constraint", "any", "mesh", "deformation", "method", "addition", "positional", "constraint", "we", "also", "derive", "rotation", "constraint", "wire", "compute", "rotation", "between", "local", "frame", "corresponding", "frame", "method", "require", "each", "connect", "component", "object", "have", "least", "one", "positional", "one", "rotational", "constraint", "hence", "we", "ensure", "least", "one", "wire", "extract", "per", "connected", "component", "mesh", "section", "we", "describe", "few", "edit", "session", "perform", "use", "iW", "ire", "-lrb-", "please", "refer", "accompany", "video", "-rrb-", "setup", "stage", "comprise", "extract", "wire", "learn", "property", "well", "have", "user", "mark", "modeling", "constraint", "describe", "below", "Figure", "show", "wire", "extract", "various", "model", "many", "which", "consist", "multiple", "component", "among", "present", "example", "only", "Phone", "model", "we", "manually", "add", "one", "wire", "facilitate", "link", "across", "two", "disconnect", "component", "we", "extract", "information", "mutual", "relation", "bin", "wire", "-lrb-", "possibly", "intersect", "-rrb-", "group", "accord", "common", "property", "symmetry", "relation", "thus", "we", "edit", "framework", "output", "sensitive", "Toy", "Jeep", "Alien", "space-object", "phone", "result", "574", "250", "75", "individual", "wire", "respectively", "wire", "get", "group", "80", "54", "13", "group", "respectively", "before", "factor", "out", "symmetry", "single", "edit", "propagation", "model", "less", "than", "hundred", "wire", "take", "less", "than", "seconds", "3ghz", "machine", "we", "most", "complex", "model", "Toy", "Jeep", "edit", "propagation", "take", "under", "seconds", "while", "alternative", "metaphor", "conceivable", "we", "experiment", "three", "basic", "type", "interaction", "describe", "below", "grab-and-drag", "user", "oblivious", "underlie", "wire", "structure", "simply", "select", "portion", "model", "handle", "apply", "affine", "transformation", "-lrb-", "translation", "rotation", "scaling", "etc.", "-rrb-", "user", "also", "indicate", "part", "object", "should", "remain", "static", "we", "system", "wire", "closest", "handle", "undergo", "same", "transformation", "specify", "handle", "yield", "intermediate", "wire", "wire", "closest", "static", "area", "internally", "mark", "treat", "prevent", "change", "during", "subsequent", "optimization", "once", "modeling", "constraint", "have", "be", "set", "optimization", "apply", "yield", "edit", "operation", "propagate", "-lrb-", "see", "Section", "detail", "-rrb-", "explicit", "wire", "manipulation", "mode", "user", "can", "see", "wire", "before", "yield", "sequence", "trigger", "edit", "propagation", "mode", "useful", "clean", "model", "clear", "define", "wire", "-lrb-", "see", "Figure", "-rrb-", "sketch-based", "interface", "mode", "user", "can", "draw", "guide", "stroke", "affect", "significant", "portion", "model", "once", "stroke", "influence", "spatial", "arrangement", "set", "wire", "-lrb-", "see", "Figure", "-rrb-", "we", "assume", "user", "identify", "set", "wire", "which", "we", "call", "handle", "set", "she", "would", "like", "edit", "reference", "3d", "curve", "compute", "polyline", "connect", "center", "mass", "wire", "handle", "set", "-lrb-", "red", "curve", "Figure", "-rrb-", "user", "draw", "stroke", "show", "yellow", "over-sketching", "reference", "curve", "handle", "wire", "around", "transform", "accordingly", "specifically", "we", "establish", "correspondence", "between", "base", "arc-length", "parameterization", "-lrb-", "alternatively", "sophisticated", "matching", "technique", "can", "use", "-lsb-", "Zimmermann", "et", "al.", "2007", "-rsb-", "-rrb-", "depth", "each", "point", "take", "from", "corresponding", "point", "a.", "each", "handle", "wire", "we", "compute", "-lrb-", "rigid", "-rrb-", "transformation", "between", "pca", "frame", "corresponding", "local", "frame", "we", "translate", "its", "center", "mass", "lie", "corresponding", "point", "apply", "same", "transformation", "relative", "new", "local", "frame", "interaction", "mode", "especially", "useful", "deal", "complex", "model", "large", "number", "wire", "like", "lamp", "bench", "-lrb-", "see", "accompany", "video", "-rrb-", "Figure", "10", "showcase", "wide", "range", "edit", "perform", "various", "engineer", "model", "use", "iW", "ire", "procedural", "model", "model", "available", "parametric", "form", "similar", "edit", "easy", "when", "representation", "available", "difficult", "reverse", "engineer", "complex", "shape", "we", "demonstrate", "merely", "extract", "few", "important", "curve", "properly", "editing/deforming", "they", "possible", "get", "intuitive", "result", "algorithm", "which", "design", "detail", "preserving", "deformation", "smooth", "shape", "ill-suited", "perform", "edit", "-lrb-", "see", "Figure", "-rrb-", "although", "complex", "model", "number", "extract", "wire", "can", "reach", "few", "hundred", "user", "system", "remain", "simple", "intuitive", "example", "novice", "user", "easily", "edit", "complicated", "model", "like", "Toy", "Jeep", "Phone", "alien", "space-object", "create", "final", "form", "show", "Figure", "10", "typical", "session", "reasonably", "complex", "model", "include", "two", "minute", "setup", "time", "follow", "edit", "time", "about", "three?four", "minute", "note", "edit", "unless", "extreme", "one", "involve", "optimize", "only", "few", "wire", "group", "all", "wire", "scaffold", "model", "Limitations", "iW", "ire", "only", "powerful", "detect", "structure", "wire", "relation", "spurious", "wire", "false", "learn", "relation", "can", "lead", "over-constrain", "model", "-lrb-", "see", "Figure", "-rrb-", "user", "influence", "choose", "set", "wire", "-lrb-", "light", "green", "left", "-rrb-", "draw", "stroke", "-lrb-", "yellow", "-rrb-", "affect", "wire", "re-arranged", "accordingly", "-lrb-", "middle", "-rrb-", "edit", "propagate", "rest", "wire", "-lrb-", "right", "-rrb-", "noisy", "model", "denoise", "along", "robust", "feature", "curve", "detection", "may", "need", "preprocessing", "step", "before", "editing", "shape", "use", "iW", "ire", "extreme", "when", "relation", "detect", "we", "framework", "reduce", "simple", "surface-based", "deformation", "we", "approach", "final", "order", "edit", "propagation", "do", "influence", "result", "however", "once", "wire", "treat", "group", "optimization", "never", "touch", "again", "prevent", "conflict", "although", "we", "system", "we", "apply", "constraint", "follow", "order", "symmetry", "planarity", "co-planarity", "additional", "control", "can", "give", "user", "whereby", "she", "can", "possibly", "select", "preferable", "mode", "constraint", "type", "we", "believe", "analyze-and-edit", "approach", "have", "further", "potential", "beyond", "application", "demonstrate", "here", "however", "analysis", "model", "which", "be", "carelessly", "generate", "remain", "challenging", "task", "require", "more", "research", "approach", "we", "take", "work", "namely", "use", "intelligent", "wire", "basic", "primitive", "prove", "versatile", "editing", "framework", "however", "we", "believe", "bit", "user", "guidance", "especially", "easy-to-mark", "model", "semantics", "we", "can", "provide", "significant", "gain", "towards", "intuitive", "control", "performance", "should", "allow", "novice", "user", "quickly", "generate", "large", "variation", "exist", "non-parametric", "model", "we", "grateful", "Mario", "Botsch", "Bob", "Sumner", "help", "we", "Figure", "model", "use", "paper", "be", "collect", "from", "Princeton", "shape", "Benchmark", "AIM@SHAPE", "via", "personal", "communication", "Hongbo", "Fu", "Vladislav", "Kraevoy", "we", "indebted", "Marc", "Alexa", "Andrew", "Nealen", "Denis", "Zorin", "anonymous", "reviewer", "valuable", "comment", "suggestion", "thank", "Andrew", "Nealen", "he", "lucid", "narration", "accompany", "video", "work", "support", "part", "Israeli", "Ministry", "Science", "Israel", "Science", "Foundation", "ADVANCE", "Research", "Challenge", "Grant", "fund", "nsf", "advance-paid", "award", "hrd-0820202", "Niloy", "support", "Microsoft", "outstanding", "young", "faculty", "fellowship", "oleman", "T.", "Y.", "1996", "interior", "trust", "region", "approach", "nonlinear", "minimization", "subject", "bound", "SIAM", "Journal", "Optimization", "418", "445", "oquillart", "S.", "1990", "extend", "free-form", "deformation", "sculpturing", "tool", "3d", "geometric", "modeling", "ACM", "SIGGRAPH", "187", "196", "unkhouser", "T.", "AZHDAN", "M.", "hilane", "P.", "P.", "IEFER", "W.", "AL", "a.", "usinkiewicz", "S.", "OBKIN", "D.", "2004", "modeling", "example", "ACM", "Trans", "23", "652", "663", "uang", "J.", "hus", "X.", "IU", "X.", "HOU", "K.", "EI", "L.-Y.", "ENG", "S.", "ao", "H.", "UO", "B.", "hum", "h.-y", "2006", "subspace", "gradient", "domain", "mesh", "deformation", "ACM", "Trans", "25", "1126", "1134", "OSHI", "P.", "EYER", "M.", "OSE", "T.", "REEN", "B.", "ANOCKI", "T.", "2007", "harmonic", "coordinate", "character", "articulation", "ACM", "Trans", "26", "71", "T.", "chaefer", "S.", "ARREN", "J.", "2005", "mean", "value", "coordinate", "closed", "triangular", "mesh", "ACM", "Trans", "24", "561", "566", "RAEVOY", "V.", "heffer", "a.", "ohen", "D.", "HAMIR", "A.", "2008", "non-homogeneous", "resizing", "complex", "model", "ACM", "Trans", "27", "111", "ee", "Y.", "ee", "S.", "2002", "geometric", "snake", "triangular", "mesh", "Eurographics", "229", "238", "ipman", "Y.", "orkine", "O.", "EVIN", "D.", "ohen", "D.", "2005", "linear", "rotation-invariant", "coordinate", "mesh", "ACM", "Trans", "24", "479", "487", "ipman", "Y.", "OHEN", "D.", "AL", "R.", "EVIN", "D.", "2007", "volume", "shape", "preservation", "via", "move", "frame", "manipulation", "ACM", "Trans", "ipman", "Y.", "EVIN", "D.", "ohen", "D.", "2008", "Green", "coordinate", "ACM", "Trans", "asuda", "H.", "GAWA", "K.", "2007", "application", "interactive", "deformation", "assemble", "mesh", "model", "ca", "analysis", "ASME", "Int", "Design", "Engineering", "Technical", "Conferences", "asuda", "H.", "oshioka", "Y.", "urukawa", "Y.", "2007", "preserve", "form", "feature", "interactive", "mesh", "deformation", "computer", "aid", "design", "39", "361", "368", "illiron", "T.", "ENSEN", "R.", "J.", "ARZEL", "R.", "inkelstein", "a.", "2002", "framework", "geometric", "warp", "deformation", "ACM", "Trans", "21", "20", "51", "itra", "N.", "J.", "UIBAS", "L.", "auly", "M.", "2006", "partial", "approximate", "symmetry", "detection", "3d", "geometry", "ACM", "Trans", "25", "560", "568", "ealen", "a.", "garashi", "T.", "orkine", "O.", "LEXA", "M.", "2007", "FiberMesh", "Designing", "freeform", "surface", "3d", "curve", "ACM", "Trans", "26", "41", "htake", "Y.", "ELYAEV", "a.", "eidel", "h.-p", "2004", "ridgevalley", "line", "mesh", "via", "implicit", "surface", "fitting", "ACM", "Trans", "23", "609", "612", "rzan", "a.", "ousseau", "a.", "INNEM", "OLLER", "H.", "ARLA", "P.", "hollot", "J.", "ALESIN", "D.", "2008", "Diffusion", "curve", "vector", "representation", "smooth-shaded", "image", "ACM", "Trans", "auly", "m.", "itra", "N.", "J.", "ALLNER", "J.", "OTTMANN", "H.", "UIBAS", "L.", "2008", "discover", "structural", "regularity", "3d", "geometry", "ACM", "Trans", "27", "43", "11", "opa", "T.", "ULIUS", "D.", "heffer", "a.", "2007", "interactive", "linear", "material", "aware", "deformation", "shape", "Modeling", "International", "13", "73", "100", "ederberg", "T.", "W.", "arry", "S.", "R.", "1986", "free-form", "deformation", "solid", "geometric", "model", "ACM", "SIGGRAPH", "151", "160", "hus", "X.", "HOU", "K.", "ong", "Y.", "ESBRUN", "M.", "ao", "H.", "UO", "B.", "2007", "mesh", "puppetry", "cascade", "optimization", "mesh", "deformation", "inverse", "kinematic", "ACM", "Trans", "ingh", "K.", "iume", "E.", "1998", "wire", "geometric", "deformation", "technique", "ACM", "SIGGRAPH", "405", "414", "orkine", "O.", "LEXA", "M.", "2007", "as-rigid-as-possible", "surface", "modeling", "Geometry", "Processing", "109", "116", "orkine", "O.", "IPMAN", "Y.", "OHEN", "D.", "LEXA", "M.", "OSSL", "C.", "EIDEL", "h.-p", "2004", "laplacian", "surface", "editing", "Geometry", "Processing", "179", "188", "umner", "R.", "W.", "chmid", "J.", "auly", "M.", "2007", "embed", "deformation", "shape", "manipulation", "ACM", "Trans", "VON", "unck", "W.", "heisel", "h.", "eidel", "h.-p", "2006", "Vector", "field", "base", "shape", "deformation", "ACM", "Trans", "HOU", "K.", "UANG", "J.", "nyder", "J.", "IU", "X.", "ao", "H.", "UO", "B.", "hum", "h.-y", "2005", "large", "mesh", "deformation", "use", "volumetric", "graph", "laplacian", "ACM", "Trans", "24", "496", "503", "immermann", "J.", "EALEN", "a.", "lexa", "M.", "2007", "SilSketch", "automate", "sketch-based", "editing", "surface", "mesh", "sketch-based", "interface", "modeling", "23", "30", "here", "detail", "nonlinear", "optimization", "compound", "wire", "-lrb-", "section", "-rrb-", "we", "define", "follow", "energy", "term", "measure", "deviation", "from", "property", "sub-wire", "len", "each", "cluster", "equal", "length", "sub-wire", "we", "compute", "standard", "deviation", "length", "sub-wire", "penalize", "deviation", "from", "equal", "length", "property", "ang", "each", "cluster", "equal", "connection", "angle", "between", "adjacent", "sub-wire", "we", "compute", "standard", "deviation", "angle", "special", "connection", "angle", "cluster", "-lrb-", "90", "45", "degree", "we", "implementation", "-rrb-", "we", "measure", "deviation", "from", "constant", "value", "plan", "each", "cluster", "parallel", "connection", "we", "compute", "standard", "deviation", "vector", "product", "from", "mean", "direction", "we", "also", "define", "dist", "sum", "distance", "each", "sample", "from", "penalize", "deviation", "from", "we", "find", "solve", "nonlinear", "optimization", "weight", "10", "10", "10", "optimization", "we", "use", "subspace", "trust-region", "method", "which", "base", "interior-reflective", "Newton", "method", "-lsb-", "Coleman", "Li", "1996", "-rsb-", "each", "iteration", "involve", "approximate", "solution", "linear", "system", "use", "preconditioned", "conjugate", "gradient" ],
  "content" : "We show numerous results of manipulation of man-made shapes using our editing technique. It is natural to expect that manipulation applied to the shape preserves the local surface details [Botsch and Sorkine 2008]. The final shape of the object is determined using the deformed wire scaffolding. The accompanying video exhibits our editing system in action. Figure 2 demonstrates the basic flow of our method. Even such simple curves capture powerful shape characteristics. In our Lego example, we identified eight circles and twelve line segments to form the wire collection. Like most deformation tools, we allow the user to indicate modeling constraints by manipulating deformation handles or by sketching (Section 6). We propagate this deformation to the closest wire and optimize it to enforce its individual characteristics (Section 5.1). In our Lego example, an individual ?seed? wire is first free-form deformed using the user manipulation, and then optimized to become a rectangle. The groups are optimized in order to restore the group characteristics (for instance, planarity), as described in Section 5.2. Once all the wires have been treated and their final form is set, they serve as modeling constraints for a differential surface deformation (Section 5.3), and the model is reconstructed respecting the edited wires (see Figure 2 , bottom left). In this paper we take a first attempt to realize this approach, and present a technique that allows a quick creation of models by reusing and editing existing shapes [Funkhouser et al. 2004] (see Figure 10 ). A notable property of our method is that it can deal with disconnected surfaces, and in general, models that consist of a multitude of parts (for example, the model in Figure 1 has 108 parts). Surface-based methods cannot deal with disconnected components in a coherent way. Even editing a simple model like the Lego by state-of-the-art methods, while keeping its characteristic features, is extremely hard (see Figure 6 ). On the other hand, iW IRES provides an intuitive outcome with easy interaction. The Wires framework by Singh and Fiume [1998] employs spatial curves to construct the deformation; the curves are aligned with prominent characteristic features of the edited shape and affect the surface parts in their vicinity. The framework uses a clever way to blend the space deformations induced by multiple curves; however, the deformation of the individual wires and the interaction among multiple wires is completely left to the user. Their great advantage is the ability to formulate the deformation process so as to precisely control the low-level differential surface properties of the edited object, with the downside being the direct dependence of the computational costs on the complexity of the object?s representa tion (e.g., the number of mesh vertices). Several surface-based approaches allow manual specification of varying surface stiffness [Botsch et al. 2006; Popa et al. 2007], thus allowing some surface parts to behave more rigidly than others. It is worth noting that a restricted type of space deformation was designed in [Kraevoy et al. 2008] for axis-aligned non-homogeneous scaling of structured man-made models; the space deformation protects certain parts of space, occupied by sensitive object features, such that they only undergo similarity transformations. This method is related to material-aware deformation [Popa et al. 2007], yet again, mostly low-level differential information is considered when defining the parts to be protected during axis-aligned scaling. Complete rigidity of the features may be too restrictive in many scenarios. As mentioned above, our work is inspired by the idea that many man made shapes can be described by a sparse collection of characteristic curves. This was the motto of Wires [Singh and Fiume 1998] that introduced a novel modeling paradigm for space deformations; the notion of a curve network that induces an interpolating surface has been long used in traditional CAD/CAM to model shapes from scratch using free-form surface patches. Collections of 2D curves with attached color information are used to define piecewise-smooth color gradients of arbitrary geometry for 2D vector graphics in [Orzan et al. 2008], again capitalizing on the observation that a sparse set of characteristic feature curves often suffices to completely define the entire object (a drawing, in this case). This allows us to handle a rather broad spectrum of shapes and avoid the typical hurdles and restrictions of CAD boundary representations such as NURBS patches, making the technique attractive to a wider user audience. Our shape analysis is a weak form of reverse engineering, as we do not precisely reconstruct the entire shape, but rather require just enough information to enable structure-preserving edits. This requirement is much simpler compared to the classical (and notoriously hard) problem of shape understanding. We select a sparse set of one-dimensional features and mark them as wires. These are salient curves on the object that sufficiently describe a shape for the purpose of editing. We do not pose any topological restrictions on the collection of wires, nor do the wires necessarily segment the shape into surface patches. This knowledge is used during subsequent edits. Wire extraction. For many man-made objects, the defining lines of the shape lie on the intersections between smooth surfaces. We use a tracing procedure to form the wires: starting from a sharp edge that has not yet served as a wire ?seed?, a wire is formed by walking along consecutive sharp edges; whenever a crossing is reached, we choose the edge that would keep the wire planar, if possible. The wire ends when either the curve becomes a closed loop, or further walk is not possible. Note that our extraction procedure relies on relatively clean input due to the use of dihedral angles. While it is very often the case with manmade objects, still a more robust technique can be applied in place of our heuristic, such as geometric snakes [Lee and Lee 2002] or ridges and ravines [Ohtake et al. 2004]. This would be suitable when dealing with scanned input that may contain noise. For all the examples shown in the paper and the supplementary video, the wires were automatically extracted from the models using a threshold angle of 40 degrees. The following properties are associated with each wire:\n        Planar or non-planar. ?Atomic? type: the entire wire can be well approximated by a straight line, (part of) a circle, (part of) an ellipse or a polynomial curve of a bounded degree. For most man-made objects, we observe that lines and elliptical features capture the defining characteristics of the models. Preserving such characteristics is crucial during the subsequent deformation stage. Compound wire: when the fitting error using a single element is large, we segment the wire into sub-wires by dividing it at salient internal angles. A polyline is a special case of a compound wire, where each sub-wire is a straight line. Polylines appear to be the most common wires in the objects we have tested. The atomic attribute of a wire (or a sub-wire) is decided by fitting each type and selecting the one with the smallest fitting error. To qualify as a circle or ellipse, the wire should cover a substantial part ? at least a quarter of a circle/ellipse in our implementation. For the polynomial curve fitting, we find the degree of the polynomial that best approximates the curve using arc-length parameterization as the domain for the approximation and fitting three separate polynomials along the three principal axes of the curve, with the curve?s center of mass as the origin. We test all polynomials with degree between 2 and d max , selecting the lowest degree polynomial with fitting error below a threshold. We used d max = 5 in our implementation. For compound wires, we also analyze and record the relations between the sub-wires. For a pair of adjacent sub-wires, denote by t 1 the wire t 2 the unit at unit the tangent connection tangent vector of (joint) the to the second point, first wire. suband t 1 t 2 t 1 t 2 We record the following relations: sets are angles, Clusters Equal connected of connection pairs i.e., that have of at have adjacent (approximately) similar angles: special sub-wires t T 1 we t values 2 identify values. equal that of t 2 t 1 t 2 t 1 connection angles (in our implementation, 90 and 45 degrees) are additionally noted. Parallel connections: We are interested in clustering pairs of subwires, for which the tangents at the connection point form parallel planes. Namely, we marks sets of sub-wires that have similar t 1 ? t 2 vectors. Equal lengths: cluster sub-wires that have nearly equal lengths. These individual wire constraints are respected in subsequent edits. Any man-made model typically yields a large number of wires (see Figure 8 ). We analyze their mutual inter-relationships to form groups of wires that share certain common traits. This is a key step of our algorithm, since the success and the intuitiveness of subsequent edit operations depend on it. In addition to these common properties, we cluster the wires by proximity, such that a wire may belong to a group if its Euclidean distance from the group is smaller than a parameter T prox . For all our examples we used 20 ? 40% of the object?s bounding box diagonal length as T prox (for the Lego model we used 100%). ? Symmetry: We use the method of [Mitra et al. 2006] to detect the global symmetry between each pair of wires. We then filter out any symmetry that is common to less than T symm wires, and group the wires belonging to the remaining symmetry sets (we set T symm as 5 in our implementation). Note that symmetry relation between different parts is an important aspect of many shapes. Such relations often constitute the defining characteristics of objects, and it is desirable to preserve them under any deformations. In our framework, we retain detected symmetry relations, specifically reflective and discrete rotational symmetry, by preserving the necessary inter-wire relations during the edit phase. The user initiates edit operations in any of the following interaction modes: directly dragging a surface part, deforming an individual wire, or a sketch-based interaction (see Section 6). The user input defines a modeling constraint that propagates to the wires, which in turn undergo an optimization, with the goal to maintain the individual and the group properties as much as possible, while satisfying the modeling constraint. Finally, the new configuration of the edited wires induces a deformation of the surface itself. The core of our editing method is the modification of the wires to fit the modeling constraints while preserving their original prop erties. The problem is naturally ill-posed: on the one hand, preserving all the characteristics of the individual wires and the wire groups exactly is usually impossible, and on the other hand, there are infinitely many ways to define an approximate preservation. We opted out of defining a single global optimization function, because the various terms describing individual wire properties and the mutual relations all have very different nature, and finding an appropriate weight assignment for all of them is difficult and nonintuitive. Instead, we propose a prioritized propagation approach, where the different wire properties are optimized at different stages, starting with the individual wires directly affected by the modeling constraints, then moving on to the groups these wires belong to, and continuing to other groups by proximity and symmetry. This approach, while being greedy, eliminates painstaking (and modeldependent) weight tweaking and global nonlinear optimization, and works well in practice (see Figure 5 ). When the shape of a wire is altered (as a result of direct user manipulation, or indirectly, when the edit operation is propagated), the original wire characteristics can be destroyed. We perform an optimization process to restore them, as much as possible. Let us denote the original (reference) shape of the wire curve by W R , and the deformed state by W D . We fit a new curve W C to W D , such that W C possesses the original properties of W R as much as possible, while resembling W D in position and shape. W C is a function of both the reference and the deformed curve states: W C = C(W R , W D ) (see Figure 4 ). At any point during editing, a wire is thus associated with three entities: W = (W R , W D , W C ). As described in Section 4, we analyze the properties of the reference curve W R and classify the wire as planar/non-planar; atomic (straight line, circle, ellipse, polynomial) or compound. During editing, we fit a corresponding curve type to the deformed state W D . When the wire is atomic, we fit the particular atomic type using the center of mass of W D as the origin of the coordinate system and the principal axes (computed by PCA) as the coordinate axes ? essentially, the same procedure we used at the analysis stage (Section 4.1). For planar primitives, we define the fitting plane as the plane spanned by the two strongest principal components of W D . For compound wires, we fit the corresponding type to each subwire, and moreover, we optimize the relationships between the subwires (that were analyzed as described in Section 4.1). We define a nonlinear energy functional that measures the deviation from all the properties we have identified in the analysis stage, and find a curve that minimizes this energy while staying close to W D . Note that the shape optimization may result in a non-planar wire; if originally the wire was planar, we fit a plane to the optimized shape and project to restore planarity. We attempt to restore the group properties as follows. For symmetry, whenever the shape of a single wire changes, the same transform (adjusted according to symmetry) is applied to the symmetric wires, i.e., to the symmetry groups the wire participates in. For planar, parallel and concentric groups, we move the wires using small steps of rigid transforms towards their mean configuration (using an appropriate distance measure) to iteratively restore the group property. In the case the grouped wires lie on the same plane, we iteratively translate each wire towards the average plane that best approximates all the other wires and rotate the wire towards lying on that plane. We take incremental steps by translating each wire by 5% of the distance to the average plane and rotating by 5% of the necessary angle. We iterate over all the wires in the group, recomputing the average plane each time, until convergence or a maximum number of steps is reached. Here we explain how the edit of a single wire is propagated to other wires and groups. Starting from an initial set of wires that are affected by the user input (i.e., the modeling constraints), we first propagate their influence to all the wires in the groups that contain those wires (technical details below). We then start proximity-based propagation, influencing groups of wires that are closest, according to Euclidean distance, to the ones already treated. When we optimize each individual wire, we also perform the same change on all the wires that are sharing a global symmetry with it, so treating a wire on one side of the object might influence wires on a remote part of the object. We continue to propagate the edit influence until all the wires are treated. Influence propagation from a set of wires onto a new wire. The basic building block of the edit propagation procedure is being able to transfer the change of one or several wires to another wire in the vicinity. Assume U is an ?untreated? wire that will be influenced by a collection of wires {W i = (W i R , W i D , W i C )} that have already been treated. We only have the reference state U R of U , and we are looking for the deformed state U D based on the influence propagation. The optimized state U C is then computed as previously described in Section 5.1. We employ local frames encoding, where every point p on a curve has a canonical orthonormal frame (p; b 1 , b 2 , b 3 ) associated with it, centered at p. To propagate the edit influence from the set {W i } onto U , we transfer the change between the local frames of W i R and W i C onto U . For each point p on U R , we find the closest point q R among {W i R }. We encode p in the local frame of q R on its corresponding reference curve W i R , i.e.: where B R = (b R 1 , b R 2 , b 3 R ) is the matrix of the local frame axes. We then ?decode? p using the corresponding local frame of the edited curve W i C : By performing this process for all points p on U R , we obtain a deformed version U D = {p D }. An example of the shape we may obtain is given in Figure 5 (bottom right): the set of dialing holes was transformed due to user manipulation and symmetry, and this set influences the other wires (the inner and the enclosing circles) using the procedure described above. The result is the ?wavy? curves depicted in gray. The constrained optimization operator C(U R , U D ) is then applied to obtain the final curve(s) U C (as in Section 5.1). We use a heuristic to avoid over-constraining: if a compound wire had been influenced by two or more wires, we relax the optimization operator C(U R , U D ) so that it ignores the equal angles and equal lengths properties (i.e., we remove the corresponding energy terms from the optimization, see Appendix). This allows, for instance, for the side wires of the Lego in Figure 2 to assume trapezoidal shape, instead of locking them as rectangles. Overall influence propagation procedure. We start from a seed set of wires A s that were treated as a direct result of the user manipulation. We propagate the edit operation onto all the wires in the groups that contain the wires of A s as described above. After the propagation step, each group is optimized as described in Section 5.2. The process ends when all the wires have been treated. in 3D Studio Max) and state-of-the-art shape deformation methods. We keep one side of the Lego fixed (depicted in red) and scale (top two rows) or move (bottom rows) the opposite side (the handle is marked in yellow). Final Deformation. The result of the wire editing process is a set of wires, each with a reference curve W R and a corresponding optimized curve W C (see Figure 4 , where reference wires are in green, and optimized versions in blue). We can now use these pairs of curves as modeling constraints to any mesh deformation method. In addition to the positional constraints, we also derive rotation constraints for the wires by computing the rotation between the local frames on W R and the corresponding frames on W C . The method requires each connected component of the object to have at least one positional and one rotational constraint. Hence, we ensure that at least one wire is extracted per connected component of the mesh. In this section, we describe a few edit sessions performed using iW IRES (please refer to the accompanying video). The setup stage comprises of extracting the wires and learning their properties, as well as having the user mark the modeling constraints, as described below. Figure 8 shows the wires extracted for various models, many of which consist of multiple components. Among the presented examples, only in the Phone model, we manually added one wire to facilitate a link across two disconnected components. We extract this information as mutual relations, and bin the wires into (possibly intersecting) groups according to their common properties and symmetry relations. Thus, our edit framework is output sensitive. The Toy Jeep, the Alien Space-object, and the Phone result in 574, 250 and 75 individual wires, respectively. These wires get grouped into 80, 54, and 13 groups, respectively, before factoring out symmetry. A single edit propagation on models with less than a hundred wires takes less than 2 seconds on a 3GHz machine. On our most complex model, the Toy Jeep, edit propagation takes under 4 seconds. While alternative metaphors are conceivable, we experimented with three basic types of interaction described below: Grab-and-drag. The user, oblivious to the underlying wire structure, simply selects a portion of the model as a handle and applies an affine transformation to it (translation, rotation, scaling, etc.). The user also indicates a part of the object that should remain static. In our system, the wire H closest to the handle undergoes the same transformation as specified by the handle to yield the intermediate wire H D ; the wire closest to the static area is internally marked as ?treated?, to prevent changes during the subsequent optimization. Once these modeling constraints have been set, the optimization is applied to H D yielding H C , and the edit operation is propagated (see Section 5 for details). Explicit wire manipulation. In this mode, the user can see the wires. As before, this yields the sequence H R ? H D ? H C that triggers the edit propagation. This mode is useful for clean models with clear defining wires (see Figure 2 ). Sketch-based interface. In this mode, the user can draw guiding strokes to affect a significant portion of the model at once. The strokes influence the spatial arrangement of a set of wires (see Figure 7). We assume that the user identifies a set of wires, which we call the handle set, that she would like to edit. A reference 3D curve A is computed as the polyline connecting the centers of mass of the wires in the handle set (the red curve in Figure 7 ). The user then draws a stroke B, shown in yellow, over-sketching the reference curve, and the handle wires around it transform accordingly. Specifically, we establish a correspondence between A and B based on arc-length parameterization (alternatively, sophisticated matching techniques can be used, as in [Zimmermann et al. 2007]), and the depth of each point on B is taken from the corresponding point on A. For each handle wire W , we compute the (rigid) transformation T between the PCA frame of W and the corresponding local frame of A. We translate W such that its center of mass lies at the corresponding point on B, and apply the same transformation T relative to the new local frame. This interaction mode is especially useful for dealing with complex models with a large number of wires, like Lamp or Bench (see the accompanying video). Figure 10 showcases a wide range of edits performed on various engineered models using iW IRES . For procedural models, or models available in parametric forms, similar edits are easy. When such representations are not available, it is difficult to reverse engineer such complex shapes. We demonstrate that by merely extracting a few important curves and properly editing/deforming them, it is possible to get intuitive results. Algorithms which are designed for detail preserving deformations of smooth shapes, are ill-suited to perform such edits (see Figure 6 ). Although for complex models, the number of extracted wires can reach a few hundreds, to the user the system remains simple and intuitive. For example, novice users easily edited complicated models like the Toy Jeep, Phone, or Alien Space-object, to create final forms as shown in Figure 10 . Typical sessions, for reasonably complex models included two minutes setup time, followed by edit times of about three?four minutes. Note that edits, unless extreme ones, involve optimizing only a few wire groups and not all the wires scaffolding the models. Limitations. iW IRES is only as powerful as the detected structure or wire relations. Spurious wires or false learned relations can lead to over-constraining the model (see Figure 9 ). The user influences a chosen set of wires (light green, left) by drawing a stroke (in yellow). The affected wires are re-arranged accordingly (middle), and then the edit is propagated to the rest of the wires (right). For noisy models, denoising along with robust feature curve detection may be needed as a preprocessing step before editing the shape using iW IRES . In the extreme, when no relations are detected, our framework reduces to simple surface-based deformation. In our approach, the final order of edit propagation does influence the results. However, once a wire is treated by group optimization, it is never touched again, preventing conflicts. Although in our system, we apply the constraints in the following order: symmetry, then planarity, then co-planarity, additional control can be given to the user, whereby she can possibly select preferable modes and constraint types. We believe that the analyze-and-edit approach has further potential beyond the application demonstrated here. However, analysis of models which were carelessly generated remains a challenging task that requires more research. The approach that we took in this work, namely, using intelligent wires as basic primitives, proved to be a versatile editing framework. However, we believe that with a bit of user guidance, especially with easy-to-mark model semantics, we can provide significant gains towards intuitive control and performance. This should allow novice users to quickly generate large variations of existing non-parametric models. We are grateful to Mario Botsch and Bob Sumner for helping us with Figure 6 . The models used in this paper were collected from the Princeton Shape Benchmark, AIM@SHAPE , and via personal communication with Hongbo Fu and Vladislav Kraevoy. We are indebted to Marc Alexa, Andrew Nealen, Denis Zorin and the anonymous reviewers for their valuable comments and suggestions, and thank Andrew Nealen for his lucid narration of the accompanying video. This work was supported in part by the Israeli Ministry of Science, the Israel Science Foundation, and by an ADVANCE Research Challenge Grant funded by the NSF ADVANCE-PAID award HRD-0820202. Niloy was supported by a Microsoft outstanding young faculty fellowship. C OLEMAN , T., AND L I , Y. 1996. An interior, trust region approach for nonlinear minimization subject to bounds. SIAM Journal on Optimization 6, 418?445. C OQUILLART , S. 1990. Extended free-form deformation: A sculpturing tool for 3D geometric modeling. of ACM SIGGRAPH, 187?196. F UNKHOUSER , T., K AZHDAN , M., S HILANE , P., M IN , P., K IEFER , W., T AL , A., R USINKIEWICZ , S., AND D OBKIN , D. 2004. Modeling by example. ACM Trans. 23, 3, 652? 663. H UANG , J., S HI , X., L IU , X., Z HOU , K., W EI , L.-Y., T ENG , S., B AO , H., G UO , B., AND S HUM , H.-Y. 2006. Subspace gradient domain mesh deformation. ACM Trans. 25, 3, 1126?1134. J OSHI , P., M EYER , M., D E R OSE , T., G REEN , B., AND S ANOCKI , T. 2007. Harmonic coordinates for character articulation. ACM Trans. 26, 3, #71. J U , T., S CHAEFER , S., AND W ARREN , J. 2005. Mean value coordinates for closed triangular meshes. ACM Trans. 24, 3, 561?566. K RAEVOY , V., S HEFFER , A., C OHEN -O R , D., AND S HAMIR , A. 2008. Non-homogeneous resizing of complex models. ACM Trans. 27, 5, #111. L EE , Y., AND L EE , S. 2002. Geometric snakes for triangular meshes. of Eurographics, 229?238. L IPMAN , Y., S ORKINE , O., L EVIN , D., AND C OHEN -O R , D. 2005. Linear rotation-invariant coordinates for meshes. ACM Trans. 24, 3, 479?487. L IPMAN , Y., C OHEN -O R , D., G AL , R., AND L EVIN , D. 2007. Volume and shape preservation via moving frame manipulation. ACM Trans. L IPMAN , Y., L EVIN , D., AND C OHEN -O R , D. 2008. Green coordinates. ACM Trans. M ASUDA , H., AND O GAWA , K. 2007. Application of interactive deformation to assembled mesh models for CAE analysis. In ASME Int. Design Engineering Technical Conferences. M ASUDA , H., Y OSHIOKA , Y., AND F URUKAWA , Y. 2007. Preserving form features in interactive mesh deformation. Computer Aided Design 39, 5, 361?368. M ILLIRON , T., J ENSEN , R. J., B ARZEL , R., AND F INKELSTEIN , A. 2002. A framework for geometric warps and deformations. ACM Trans. 21, 1, 20?51. M ITRA , N. J., G UIBAS , L., AND P AULY , M. 2006. Partial and approximate symmetry detection for 3D geometry. ACM Trans. 25, 3, 560?568. N EALEN , A., I GARASHI , T., S ORKINE , O., AND A LEXA , M. 2007. FiberMesh: Designing freeform surfaces with 3D curves. ACM Trans. 26, 3, 41. O HTAKE , Y., B ELYAEV , A., AND S EIDEL , H.-P. 2004. Ridgevalley lines on meshes via implicit surface fitting. ACM Trans. 23, 3, 609?612. O RZAN , A., B OUSSEAU , A., W INNEM OLLER  ? , H., B ARLA , P., T HOLLOT , J., AND S ALESIN , D. 2008. Diffusion curves: a vector representation for smooth-shaded images. ACM Trans. P AULY , M., M ITRA , N. J., W ALLNER , J., P OTTMANN , H., AND G UIBAS , L. 2008. Discovering structural regularity in 3D geometry. ACM Trans. 27, 3, #43, 1?11. P OPA , T., J ULIUS , D., AND S HEFFER , A. 2007. Interactive and linear material aware deformations. of Shape Modeling International 13, 1, 73?100. S EDERBERG , T. W., AND P ARRY , S. R. 1986. Free-form deformation of solid geometric models. of ACM SIGGRAPH, 151?160. S HI , X., Z HOU , K., T ONG , Y., D ESBRUN , M., B AO , H., AND G UO , B. 2007. Mesh puppetry: cascading optimization of mesh deformation with inverse kinematics. ACM Trans. S INGH , K., AND F IUME , E. 1998. Wires: a geometric deformation technique. of ACM SIGGRAPH, 405?414. S ORKINE , O., AND A LEXA , M. 2007. As-rigid-as-possible surface modeling. on Geometry Processing, 109? 116. S ORKINE , O., L IPMAN , Y., C OHEN -O R , D., A LEXA , M., R OSSL  ? , C., AND S EIDEL , H.-P. 2004. Laplacian surface editing. on Geometry Processing, 179?188. S UMNER , R. W., S CHMID , J., AND P AULY , M. 2007. Embedded deformation for shape manipulation. ACM Trans. VON F UNCK , W., T HEISEL , H., AND S EIDEL , H.-P. 2006. Vector field based shape deformations. ACM Trans. Z HOU , K., H UANG , J., S NYDER , J., L IU , X., B AO , H., G UO , B., AND S HUM , H.-Y. 2005. Large mesh deformation using the volumetric graph Laplacian. ACM Trans. 24, 3, 496?503. Z IMMERMANN , J., N EALEN , A., AND A LEXA , M. 2007. SilSketch: automated sketch-based editing of surface meshes. of Sketch-based Interfaces and Modeling, 23?30. Here are the details of the nonlinear optimization of a compound wire (Section 5). We define the following energy terms to measure the deviation of W C from the properties of the sub-wires of W R : ? E len for each cluster of equal length sub-wires, we compute the standard deviation of the lengths of the sub-wires, to penalize deviation from the equal length property. ? E ang for each cluster of equal connection angles between adjacent sub-wires, we compute the standard deviation of the angles. For the special connection angle clusters (90 or 45 degrees in our implementation) we measure the deviation from these constant values. ? E plan for each cluster of parallel connections, we compute the standard deviation of the vector products t 1 ? t 2 from their mean direction. We also define E dist , the sum of distances of each sample on W C from W D , to penalize the deviation of W C from W D . We find W C by solving the nonlinear optimization: with weights w 1 = 10 3 , w 2 = 10 4 , w 3 = 10 ?5 . For the optimization we used a subspace trust-region method, which is based on the interior-reflective Newton method [Coleman and Li 1996]. Each iteration involves the approximate solution of a linear system using preconditioned conjugate gradients.",
  "resources" : [ ]
}