{
  "uri" : "sig2009-a29-wang_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2009/a29-wang_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Kernel Nystr?m Method for Light Transport",
    "published" : null,
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ ]
  },
  "bagOfWords" : [ "573172433b0ab5bdab2d7bd9cf0b623e2b664d5fcf1077409c492f4fd92c364e", "mi6", "10.1145", "1531326.1531335", "name", "identification", "possible", "Kernel", "Nystr?m", "Method", "Light", "Transport", "Jiaping", "Wang", "Yue", "Dong", "Xin", "Tong", "Zhouchen", "Lin", "Microsoft", "Research", "Asia", "Tsinghua", "Univeristy", "Figure", "relighting", "result", "use", "light", "transport", "matrix", "reconstruct", "we", "method", "complex", "light", "transport", "effect", "include", "caustic", "-lrb-", "-rrb-", "complex", "occlusion", "-lrb-", "-rrb-", "mixture", "caustic", "complex", "occlusion", "inter-reflection", "subsurface", "scattering", "-lrb-", "-rrb-", "all", "faithfully", "reproduce", "we", "propose", "kernel", "nystr?m", "method", "reconstruct", "light", "transport", "matrix", "from", "relatively", "small", "number", "acquire", "image", "we", "work", "base", "generalize", "nystr?m", "method", "low", "rank", "matrix", "we", "introduce", "light", "transport", "kernel", "incorporate", "nystr?m", "method", "exploit", "nonlinear", "coherence", "light", "transport", "matrix", "we", "also", "develop", "adaptive", "scheme", "efficiently", "capture", "sparsely", "sample", "image", "from", "scene", "we", "experiment", "indicate", "kernel", "nystr?m", "method", "can", "achieve", "good", "reconstruction", "light", "transport", "matrix", "few", "hundred", "image", "produce", "high", "quality", "relighting", "result", "kernel", "nystr?m", "method", "effective", "modeling", "scene", "complex", "lighting", "effect", "occlusion", "which", "have", "be", "challenge", "exist", "technique", "introduction", "goal", "image-based", "relighting", "directly", "capture", "light", "transport", "real-world", "scene", "so", "can", "render", "new", "illumination", "-lsb-", "Debevec", "et", "al.", "2000", "Wenger", "et", "al.", "2005", "Peers", "et", "al.", "2009", "-rsb-", "mathematically", "image-based", "relighting", "can", "formulate", "following", "equation", "-lsb-", "ng", "et", "al.", "2003", "Peers", "et", "al.", "2009", "-rsb-", "where", "light", "transport", "matrix", "describe", "light", "transport", "from", "light", "source", "camera", "pixel", "illumination", "condition", "represent", "vector", "incident", "radiance", "from", "email", "-lcb-", "jiapw", "xtong", "zhoulin", "bainguo", "-rcb-", "@microsoft", "com", "light", "source", "outgoing", "radiance", "observe", "camera", "image", "pixel", "we", "task", "find", "matrix", "t.", "image-based", "relighting", "offer", "unparalleled", "advantage", "realistic", "render", "without", "scene", "modeling", "which", "often", "arduous", "task", "however", "generate", "high", "quality", "result", "exist", "technique", "often", "require", "ten", "thousand", "image", "accurate", "reconstruction", "light", "transport", "matrix", "-lrb-", "e.g.", "see", "-lsb-", "Debevec", "et", "al.", "2000", "Wenger", "et", "al.", "2005", "-rsb-", "-rrb-", "several", "approach", "have", "show", "promise", "reduce", "number", "require", "image", "-lsb-", "Zongker", "et", "al.", "1999", "Matusik", "et", "al.", "2004", "peer", "Dutr", "2005", "Peers", "et", "al.", "2009", "Sen", "Darabi", "2009", "-rsb-", "however", "technique", "either", "dedicate", "specific", "light", "transport", "effect", "-lsb-", "Zongker", "et", "al.", "1999", "-rsb-", "mainly", "effective", "scene", "simple", "geometry", "configuration", "-lsb-", "Matusik", "et", "al.", "2004", "peer", "Dutr", "2005", "-rsb-", "apply", "technique", "scene", "complex", "lighting", "effect", "occlusion", "still", "require", "large", "number", "input", "image", "expensive", "reconstruction", "method", "-lsb-", "peer", "et", "al.", "2009", "-rsb-", "paper", "we", "propose", "kernel", "nystr?m", "method", "reconstruct", "light", "transport", "matrix", "from", "small", "number", "image", "we", "first", "acquire", "small", "number", "row", "column", "light", "transport", "matrix", "real", "world", "scene", "reconstruct", "entire", "matrix", "from", "sparse", "sample", "we", "work", "inspire", "nystr?m", "method", "propose", "Williams", "Seeger", "-lsb-", "2000", "-rsb-", "reconstruct", "low", "rank", "symmetric", "matrix", "use", "linear", "combination", "sparsely", "sample", "row", "column", "paper", "we", "apply", "generalized", "form", "nystr?m", "method", "-lsb-", "Goreinov", "et", "al.", "1997", "-rsb-", "previously", "develop", "linear", "algebra", "community", "reconstruct", "asymmetrical", "matrix", "main", "contribution", "paper", "introduction", "light", "transport", "kernel", "so", "nonlinear", "coherence", "light", "transport", "matrix", "can", "exploit", "enhance", "effectiveness", "nystr?m", "method", "kernel", "nystr?m", "method", "refer", "nystr?m", "method", "light", "transport", "kernel", "incorporate", "power", "nystr?m", "method", "essentially", "come", "from", "its", "ability", "exploit", "linear", "coherence", "light", "transport", "matrix", "further", "exploit", "nonlinear", "coherence", "kernel", "nystr?m", "method", "become", "much", "more", "powerful", "number", "sample", "row", "column", "-lrb-", "hence", "acquire", "image", "-rrb-", "need", "matrix", "reconstruction", "greatly", "reduce", "light", "transport", "kernel", "work", "follow", "first", "we", "design", "datum", "specific", "kernel", "function", "can", "estimate", "from", "sparse", "row", "column", "sample", "map", "sample", "kernel", "function", "we", "reduce", "rank", "light", "transport", "matrix", "so", "high", "quality", "matrix", "can", "reconstruct", "from", "kernel-mapped", "sparse", "sample", "via", "nystr?m", "method", "finally", "light", "transport", "matrix", "obtain", "from", "element", "reconstructed", "matrix", "inverse", "kernel", "mapping", "novel", "aspect", "kernel", "nystr?m", "method", "exploit", "datum", "coherence", "during", "matrix", "reconstruction", "process", "before", "whole", "matrix", "know", "have", "be", "recognize", "past", "datum", "coherence", "light", "transport", "can", "use", "datum", "compression", "after", "whole", "matrix", "known", "-lsb-", "masselus", "et", "al.", "2004", "Mahajan", "et", "al.", "2007", "-rsb-", "kernel", "nystr?m", "method", "take", "different", "approach", "only", "use", "known", "row", "column", "sample", "oracle", "analyze", "datum", "coherence", "reconstruct", "matrix", "end", "we", "develop", "adaptive", "scheme", "measure", "sparse", "row", "column", "image", "light", "transport", "matrix", "estimate", "light", "transport", "kernel", "we", "have", "evaluate", "kernel", "nystr?m", "method", "use", "variety", "test", "scene", "include", "those", "inter-reflection", "caustic", "complex", "occlusion", "we", "also", "use", "method", "measure", "light", "transport", "between", "object", "surface", "point", "due", "diffuse", "subsurface", "scattering", "inside", "object", "volume", "we", "experiment", "indicate", "kernel", "nystr?m", "method", "can", "achieve", "good", "reconstruction", "light", "transport", "matrix", "few", "hundred", "image", "produce", "high", "quality", "relighting", "result", "moreover", "kernel", "nystr?m", "method", "effective", "modeling", "scene", "complex", "lighting", "effect", "occlusion", "which", "have", "remain", "challenging", "exist", "technique", "ACM", "Reference", "Format", "Wang", "J.", "Dong", "Y.", "Tong", "X.", "Lin", "Z.", "Guo", "B.", "2009", "Kernel", "Nystr?m", "Method", "Light", "Transport", "ACM", "Trans", "graph", "28", "Article", "29", "-lrb-", "August", "2009", "-rrb-", "10", "page", "dous", "10.1145", "1531326.1531335", "http://doi.acm.org/10.1145/1531326.1531335", "copyright", "Notice", "permission", "make", "digital", "hard", "copy", "part", "all", "work", "personal", "classroom", "use", "grant", "without", "fee", "provide", "copy", "make", "distribute", "profit", "direct", "commercial", "advantage", "copy", "show", "notice", "fus", "rst", "page", "initial", "screen", "display", "along", "full", "citation", "copyright", "component", "work", "own", "other", "than", "ACM", "must", "honor", "abstract", "credit", "permit", "copy", "otherwise", "republish", "post", "server", "redistribute", "list", "use", "any", "component", "work", "other", "work", "require", "prior", "specific", "permission", "and/or", "fee", "permission", "may", "request", "from", "Publications", "Dept.", "ACM", "Inc.", "Penn", "Plaza", "Suite", "701", "New", "York", "NY", "10121-0701", "fax", "+1", "-lrb-212-rrb-Â 869-0481", "permissions@acm.org", "2009", "ACM", "0730-0301/2009", "03-art29", "10.00", "DOI", "10.1145", "1531326.1531335", "http://doi.acm.org/10.1145/1531326.1531335", "Baining", "Guo", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "29", "publication", "date", "August", "2009", "29:2", "J.", "Wang", "et", "al.", "related", "work", "light", "transport", "matrix", "represent", "discrete", "sample", "reflectance", "field", "-lsb-", "Debevec", "et", "al.", "2000", "-rsb-", "complete", "8d", "reflectance", "field", "which", "describe", "light", "transport", "from", "incident", "light", "field", "outgoing", "light", "field", "-lsb-", "levoy", "Hanrahan", "1996", "-rsb-", "difficult", "capture", "process", "-lsb-", "Garg", "et", "al.", "2006", "-rsb-", "therefore", "most", "exist", "method", "only", "consider", "simplify", "4d", "-lsb-", "Debevec", "et", "al.", "2000", "Lin", "et", "al.", "Matusik", "et", "al.", "2004", "peer", "Dutr", "2005", "-rsb-", "6d", "reflectance", "field", "-lsb-", "Matusik", "et", "al.", "2002", "Masselus", "et", "al.", "2003", "Sen", "et", "al.", "2005", "Wenger", "et", "al.", "2005", "-rsb-", "paper", "we", "focus", "4d", "reflectance", "field", "fix", "viewpoint", "point", "light", "source", "lie", "2d", "plane", "light", "Transport", "Acquisition", "we", "categorize", "exist", "method", "three", "class", "brute", "force", "sparsity", "base", "coherence", "base", "method", "brute", "force", "method", "directly", "measure", "light", "transport", "matrix", "from", "scene", "where", "each", "column", "image", "scene", "light", "single", "light", "source", "incident", "light", "domain", "Debevec", "et", "al.", "-lsb-", "2000", "-rsb-", "develop", "light", "stage", "device", "capture", "4d", "reflectance", "field", "fix", "viewpoint", "distant", "lighting", "move", "point", "light", "source", "around", "object", "later", "improve", "device", "fast", "capture", "-lsb-", "Wenger", "et", "al.", "2005", "-rsb-", "Hawkins", "et", "al.", "-lsb-", "2005", "-rsb-", "exploit", "Helmholtz", "reciprocity", "capture", "reflectance", "field", "highly", "reflective", "object", "obtain", "dense", "sample", "incident", "light", "domain", "row", "light", "transport", "matrix", "capture", "shoot", "ray", "from", "viewpoint", "capture", "high", "resolution", "image", "scene", "project", "over", "incident", "light", "domain", "reciprocity", "also", "exploit", "-lsb-", "Sen", "et", "al.", "2005", "-rsb-", "acquire", "6d", "reflectance", "field", "all", "method", "require", "ten", "thousand", "image", "modeling", "high", "quality", "light", "transport", "matrix", "similar", "quality", "we", "approach", "only", "require", "few", "hundred", "image", "sparsity", "base", "method", "model", "light", "transport", "matrix", "set", "basis", "function", "define", "over", "incident", "light", "domain", "assume", "each", "row", "light", "transport", "matrix", "can", "approximate", "linear", "combination", "sparse", "set", "basis", "function", "thus", "light", "transport", "matrix", "can", "reconstruct", "derive", "sparse", "basis", "weight", "each", "row", "from", "set", "image", "capture", "under", "special", "lighting", "condition", "Environment", "mat", "-lsb-", "Zongker", "et", "al.", "1999", "-rsb-", "model", "reflectance", "specular", "refractive", "object", "represent", "light", "transport", "each", "pixel", "-lrb-", "i.e.", "row", "transport", "matrix", "-rrb-", "single", "2d", "box", "function", "later", "extend", "modeling", "glossy", "object", "replace", "box", "function", "orient", "guassian", "kernel", "-lsb-", "Chuang", "et", "al.", "2000", "-rsb-", "Matusik", "et", "al.", "-lsb-", "2004", "-rsb-", "model", "light", "transport", "matrix", "hierarchical", "rectangular", "basis", "function", "adaptive", "algorithm", "develop", "derive", "sparse", "basis", "weight", "each", "pixel", "from", "image", "scene", "capture", "under", "various", "natural", "illumination", "condition", "peer", "et", "al.", "-lsb-", "2005", "-rsb-", "model", "light", "transport", "matrix", "wavelet", "infer", "light", "transport", "matrix", "from", "image", "scene", "illuminate", "carefully", "design", "wavelet", "noise", "pattern", "both", "approach", "apply", "greedy", "strategy", "find", "suboptimal", "sparse", "basis", "each", "pixel", "which", "only", "work", "well", "scene", "simple", "occlusion", "recently", "compressive", "sense", "approach", "-lsb-", "peer", "et", "al.", "2009", "-rsb-", "propose", "which", "compute", "solution", "each", "pixel", "from", "image", "capture", "from", "scene", "illuminate", "pattern", "lighting", "however", "number", "image", "need", "reconstruction", "depend", "both", "row", "length", "number", "basis", "use", "each", "row", "which", "become", "quite", "large", "scene", "complex", "occlusion", "reconstruction", "process", "also", "time", "consuming", "unlike", "above", "sparsity", "base", "approach", "we", "method", "exploit", "coherence", "matrix", "reconstruction", "can", "handle", "well", "scene", "complex", "occlusion", "caustic", "number", "image", "need", "reconstruction", "only", "proportional", "rank", "light", "transport", "matrix", "independent", "size", "matrix", "moreover", "we", "reconstruction", "algorithm", "consist", "set", "matrix", "operation", "which", "simple", "fast", "coherence", "base", "method", "acquire", "light", "transport", "matrix", "exploit", "coherence", "reflectance", "field", "datum", "masselus", "et", "al.", "-lsb-", "2004", "-rsb-", "explore", "interpolation", "compression", "reflectance", "field", "Fuchs", "et", "al.", "-lsb-", "2007", "-rsb-", "propose", "adaptive", "sampling", "scheme", "sampling", "4d", "reflectance", "field", "spatial", "coherence", "reflectance", "field", "incident", "domain", "exploit", "accelerate", "acquisition", "process", "start", "from", "set", "image", "take", "sparse", "set", "regularly", "distribute", "lighting", "direction", "algorithm", "analyze", "observe", "datum", "capture", "more", "image", "each", "iteration", "new", "lighting", "direction", "where", "reflectance", "field", "smooth", "note", "smoothness", "reflectance", "datum", "among", "neighbor", "pixel", "also", "exploit", "-lsb-", "Matusik", "et", "al.", "2004", "peer", "Dutr", "2005", "Peers", "et", "al.", "2009", "-rsb-", "improve", "result", "quality", "while", "method", "only", "exploit", "coherence", "either", "row", "column", "we", "method", "exploit", "datum", "coherence", "entire", "light", "transport", "matrix", "reconstruction", "since", "we", "approach", "make", "assumption", "about", "smoothness", "sample", "reflectance", "field", "can", "handle", "well", "sharp", "variation", "light", "transport", "shadow", "caustic", "surface", "texture", "low", "Rank", "Matrix", "approximation", "addition", "reconstruction", "low", "rank", "symmetric", "matrix", "nystr?m", "method", "also", "widely", "use", "machine", "learn", "community", "approximately", "compute", "eigenvalue", "eigenvector", "symmetric", "matrix", "from", "sparse", "matrix", "sample", "-lsb-", "Platt", "2005", "-rsb-", "asymmetric", "matrix", "Goreinov", "et", "al.", "-lsb-", "1997", "-rsb-", "present", "pseudoskeleton", "approximation", "reconstruct", "complete", "matrix", "from", "sparse", "collection", "its", "row", "column", "graphic", "research", "et", "al.", "-lsb-", "2008", "-rsb-", "apply", "nystr?m", "method", "accelerate", "appearance", "edit", "propagation", "approximate", "dense", "symmetric", "distance", "matrix", "sparsely", "sample", "row", "column", "give", "illumination", "Hasan", "et", "al.", "-lsb-", "2007", "-rsb-", "apply", "similar", "technique", "efficiently", "render", "synthetic", "scene", "approach", "column", "matrix", "cluster", "small", "number", "group", "accord", "value", "sparsely", "sample", "row", "representative", "column", "each", "group", "sample", "weight", "approximate", "other", "column", "same", "group", "approach", "only", "use", "coherence", "between", "column", "approximate", "matrix", "coherence", "between", "row", "exploit", "moreover", "apply", "approach", "light", "transport", "matrix", "may", "generate", "temporal", "artifact", "under", "animated", "light", "note", "-lsb-", "ha", "san", "et", "al.", "2008", "-rsb-", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "29", "publication", "date", "August", "2009", "Kernel", "Nystr?m", "Method", "Light", "Transport", "29:3", "Kernel", "Nystr?m", "Method", "section", "we", "first", "review", "generalize", "nystr?m", "method", "asymmetric", "matrix", "-lsb-", "Goreinov", "et", "al.", "1997", "-rsb-", "introduce", "we", "kernel", "nystr?m", "method", "here", "we", "assume", "sparse", "set", "row", "column", "light", "transport", "matrix", "know", "we", "discuss", "how", "capture", "individual", "row", "column", "from", "real", "world", "scene", "next", "section", "throughout", "paper", "we", "use", "follow", "notational", "convention", "matrix", "denote", "bold", "uppercase", "letter", "e.g.", "vector", "denote", "bold", "lowercase", "letter", "e.g.", "scalar", "scalar", "function", "denote", "lowercase", "italic", "letter", "e.g.", "give", "matrix", "its", "element", "row", "column", "denote", "while", "-lrb-", "-rrb-", "denote", "matrix", "obtain", "apply", "each", "element", "matrix", "T.", "3.1", "asymmetric", "generalization", "nystr?m", "method", "-lsb-", "Williams", "Seeger", "2000", "-rsb-", "reconstruct", "low", "rank", "symmetric", "matrix", "from", "sparsely", "sample", "column", "show", "figure", "-lrb-", "-rrb-", "unknown", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "symmetric", "matrix", "sample", "row", "-lsb-", "-rsb-", "can", "approximate", "CA", "reconstruction", "accurate", "when", "symmetric", "matrix", "have", "rank", "except", "sample", "row", "-lsb-", "-rsb-", "rank", "smaller", "than", "d.", "asymmetric", "light", "transport", "matrix", "which", "image", "pixel", "-lrb-", "column", "-rrb-", "light", "source", "-lrb-", "row", "-rrb-", "sample", "different", "space", "generalize", "nystr?m", "method", "-lsb-", "Goreinov", "et", "al.", "1997", "-rsb-", "can", "apply", "reconstruction", "illustrate", "figure", "-lrb-", "-rrb-", "we", "assume", "row", "-lsb-", "-rsb-", "column", "-lsb-", "-rsb-", "know", "out", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "asymmetric", "matrix", "rank", "equal", "rank", "-lrb-", "-rrb-", "rank", "-lrb-", "-rrb-", "we", "can", "expect", "follow", "relationship", "where", "matrix", "appropriate", "size", "which", "imply", "pa", "aq", "pr", "cq", "thus", "miss", "portion", "matrix", "can", "reconstruct", "paq", "paa", "aq", "CA", "where", "denote", "moore-penrose", "pseudoinverse", "which", "have", "property", "aa", "so", "reconstruction", "CA", "-lrb-", "k?k", "-rrb-", "-lrb-", "k?n", "-rrb-", "-lrb-", "r?c", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "n?k", "-rrb-", "-lrb-", "n?n", "-rrb-", "-lrb-", "m?c", "-rrb-", "-lrb-", "m?n", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "figure", "Matrix", "reconstruction", "from", "sparsely", "sample", "column", "row", "-lrb-", "-rrb-", "symmetric", "case", "-lrb-", "-rrb-", "asymmetric", "case", "compare", "equation", "traditional", "nystr?m", "method", "special", "case", "generalize", "nystr?m", "method", "when", "compute", "moore-penrose", "pseudoinverse", "we", "apply", "singular", "value", "decomposition", "-lrb-", "svd", "-rrb-", "obtain", "where", "size", "respectively", "column", "orthonormal", "matrix", "compute", "we", "can", "reconstruct", "light", "transport", "matrix", "use", "equation", "3.2", "Kernel", "Extension", "both", "traditional", "generalize", "nystr?m", "method", "rely", "assumption", "rank", "identical", "order", "achieve", "exact", "reconstruction", "reality", "assumption", "may", "violate", "result", "some", "reconstruction", "error", "one", "possible", "way", "make", "nystr?m", "method", "more", "effective", "apply", "transformation", "entry", "matrix", "so", "low", "rank", "assumption", "better", "satisfied", "hence", "reconstruction", "error", "can", "expect", "minimize", "linear", "transform", "do", "change", "rank", "matrix", "nonlinear", "transform", "necessary", "machine", "learn", "literature", "kernel", "trick", "-lsb-", "Cristianini", "Shawe-Taylor", "2000", "-rsb-", "standard", "approach", "enhance", "performance", "algorithm", "base", "nonlinear", "transformation", "input", "datum", "kernel", "trick", "map", "vector", "datum", "space", "-lrb-", "usually", "-rrb-", "higher", "dimensional", "feature", "space", "same", "procedure", "original", "algorithm", "do", "datum", "space", "transfer", "feature", "space", "key", "success", "kernel", "trick", "mapping", "function", "need", "explicitly", "specify", "rather", "kernel", "function", "sufficient", "compute", "inner", "product", "feature", "space", "inspire", "success", "kernel", "trick", "we", "consider", "use", "nonlinear", "function", "change", "value", "entry", "light", "transport", "matrix", "rank", "assumption", "can", "better", "fulfil", "i.e.", "rank", "-lrb-", "-rrb-", "close", "-lrb-", "-rrb-", "possible", "we", "name", "nonlinear", "function", "light", "transport", "kernel", "after", "reconstruct", "-lrb-", "-rrb-", "use", "generalize", "nystr?m", "method", "i.e.", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "original", "can", "recover", "inverse", "mapping", "-lrb-", "-rrb-", "see", "above", "nonlinear", "mapping", "process", "kind", "kernel", "method", "one", "may", "regard", "inner", "product", "matrix", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "29", "publication", "date", "August", "2009", "29:4", "J.", "Wang", "et", "al.", "where", "-lcb-", "-rcb-", "-lcb-", "-rcb-", "two", "different", "point", "set", "particular", "space", "slightly", "different", "from", "traditional", "kernel", "method", "which", "require", "-lcb-", "-rcb-", "-lcb-", "-rcb-", "identical", "we", "use", "different", "point", "set", "because", "here", "asymmetric", "standard", "kernel", "method", "use", "implicit", "mapping", "map", "point", "set", "another", "space", "kernel", "matrix", "map", "space", "a.k.a.", "inner", "product", "matrix", "map", "point", "set", "10", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "compute", "one", "only", "have", "prepare", "explicit", "kernel", "function", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "rather", "than", "explicitly", "specify", "which", "much", "more", "difficult", "one", "most", "frequently", "use", "kernel", "function", "polynomial", "kernel", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "so", "one", "can", "choose", "kernel", "form", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "choice", "kernel", "function", "we", "have", "11", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "i.e.", "-lrb-", "-rrb-", "3.3", "estimate", "light", "transport", "Kernel", "make", "kernel", "nystr?m", "method", "work", "one", "have", "specify", "light", "transport", "kernel", "space", "all", "monotonic", "smooth", "function", "infinite", "dimension", "one", "have", "assume", "its", "form", "order", "narrow", "down", "search", "space", "paper", "we", "simply", "assume", "power", "function", "-lrb-", "-rrb-", "family", "function", "have", "only", "one", "parameter", "hence", "optimal", "function", "easy", "find", "moreover", "we", "experiment", "show", "choice", "light", "transport", "kernel", "can", "indeed", "produce", "greatly", "enhance", "reconstruction", "performance", "we", "leave", "problem", "whether", "even", "better", "light", "transport", "kernel", "function", "future", "work", "argue", "before", "reduce", "reconstruction", "error", "one", "have", "make", "rank", "-lrb-", "-rrb-", "close", "-lrb-", "-rrb-", "possible", "however", "we", "do", "have", "full", "information", "so", "real", "rank", "-lrb-", "-rrb-", "actually", "unknown", "overcome", "difficulty", "we", "choose", "minimize", "rank", "-lrb-", "-rrb-", "instead", "underlie", "philosophy", "rank", "-lrb-", "-rrb-", "much", "less", "than", "min", "-lrb-", "-rrb-", "very", "likely", "rank", "-lrb-", "-rrb-", "do", "exceed", "min", "-lrb-", "-rrb-", "so", "generalize", "kernel", "nystr?m", "method", "can", "effective", "lead", "rank", "minimization", "problem", "-lsb-", "Fazel", "2002", "-rsb-", "which", "usually", "formalize", "minimize", "nuclear", "norm", "matrix", "we", "seek", "light", "transport", "kernel", "minimize", "rank", "factor", "12", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "where", "nuclear", "norm", "define", "spectral", "norm", "define", "max", "-lcb-", "-rcb-", "singular", "value", "matrix", "X.", "note", "here", "we", "normalize", "nuclear", "norm", "largest", "singular", "value", "because", "we", "don?t", "want", "reduce", "rank", "map", "entry", "close", "zero", "-lrb-", "which", "correspond", "small", "-lrb-", "-rrb-", "-rrb-", "rather", "we", "want", "reduce", "rank", "-lrb-", "-rrb-", "enhance", "linear", "coherence", "rows/columns", "-lrb-", "-rrb-", "easy", "imagine", "map", "all", "entry", "constant", "can", "trivially", "reduce", "rank", "-lrb-", "-rrb-", "even", "however", "trivial", "mapping", "cause", "problem", "invert", "from", "use", "inverse", "function", "reduce", "reconstruction", "error", "we", "have", "further", "make", "sure", "inversion", "numerically", "robust", "robustness", "inversion", "can", "measure", "slope", "steeper", "less", "robust", "inversion", "so", "we", "have", "we", "show", "necessary", "specify", "what", "two", "point", "set", "adaptivecapture", "-lrb-", "-rrb-", "inished", "alse", "capture", "row", "column", "while", "-lrb-", "inished", "==", "alse", "-rrb-", "estimate", "from", "estimate", "rank", "factor", "-lrb-", "-rrb-", "-lrb-", "min", "-lrb-", "-rrb-", "-rrb-", "inished", "true", "else", "capture", "row", "column", "add", "sample", "sample", "set", "update", "figure", "pseudo", "code", "adaptive", "capture", "scheme", "further", "minimize", "13", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "dx", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "dx", "where", "identity", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "use", "-lrb-", "-rrb-", "distribution", "density", "value", "which", "estimate", "from", "histogram", "entry", "value", "a.", "-lrb-", "-rrb-", "assume", "identical", "due", "random", "sampling", "from", "we", "weight", "slope", "-lrb-", "-rrb-", "order", "achieve", "best", "overall", "robustness", "all", "entry", "value", "T.", "Combining", "above", "two", "criterion", "we", "algorithm", "select", "light", "transport", "kernel", "function", "whose", "parameter", "minimize", "objective", "function", "14", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "dx", "we", "use", "golden", "section", "search", "-lsb-", "Press", "et", "al.", "1992", "-rsb-", "search", "optimal", "within", "-lsb-", "0.001", "1000", "-rsb-", "logarithmic", "space", "relatively", "small", "size", "-lrb-", "-rrb-", "optimization", "take", "only", "few", "seconds", "summary", "we", "kernel", "nystr?m", "method", "work", "follow", "give", "matrix", "sample", "row", "column", "-lrb-", "-rrb-", "we", "estimate", "light", "transport", "kernel", "from", "map", "matrix", "sparse", "sample", "kernel", "version", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "respectively", "we", "apply", "nystr?m", "method", "reconstruct", "kernel", "light", "transport", "matrix", "-lrb-", "-rrb-", "moore-penrose", "pseudoinverse", "-lrb-", "-rrb-", "use", "equation", "finally", "we", "obtain", "light", "transport", "matrix", "via", "inverse", "kernel", "mapping", "-lrb-", "-rrb-", "adaptive", "light", "transport", "measurement", "kernel", "nystr?m", "method", "require", "sparse", "set", "row", "column", "light", "transport", "matrix", "input", "reconstruction", "however", "without", "any", "knowledge", "about", "light", "transport", "scene", "difficult", "determine", "sample", "number", "advance", "address", "issue", "we", "design", "adaptive", "scheme", "capture", "sparse", "row", "column", "from", "scene", "where", "sample", "number", "determine", "from", "capture", "datum", "show", "Figure", "after", "batch", "row", "column", "sample", "from", "scene", "we", "estimate", "light", "transport", "kernel", "from", "matrix", "current", "sample", "set", "compute", "rank", "factor", "-lrb-", "-rrb-", "use", "equation", "12", "sample", "set", "have", "row", "column", "min", "-lrb-", "-rrb-", "smaller", "than", "pre-defined", "threshold", "rank", "-lrb-", "-rrb-", "much", "less", "than", "min", "-lrb-", "-rrb-", "base", "same", "philosophy", "use", "kernel", "estimation", "very", "likely", "rank", "-lrb-", "-rrb-", "do", "exceed", "min", "-lrb-", "-rrb-", "thus", "sample", "datum", "sufficient", "reconstruct", "-lrb-", "-rrb-", "capture", "finish", "otherwise", "we", "capture", "new", "batch", "row", "column", "repeat", "above", "step", "extend", "sample", "set", "device", "setup", "design", "acquire", "batch", "row", "column", "sample", "from", "scene", "show", "Figure", "we", "focus", "light", "transport", "from", "point", "light", "source", "2d", "plane", "image", "pixel", "capture", "from", "fix", "view", "point", "we", "setup", "column", "light", "transport", "matrix", "directly", "obtain", "from", "image", "scene", "under", "virtual", "point", "light", "source", "while", "row", "matrix", "measure", "via", "dual", "setup", "exploit", "reciprocity", "light", "transport", "-lsb-", "Hawkins", "et", "al.", "2005", "Sen", "et", "al.", "2005", "-rsb-", "obtain", "batch", "row", "column", "we", "first", "capture", "column", "acquire", "row", "light", "transport", "matrix", "stratified", "sampling", "scheme", "apply", "sampling", "row", "matrix", "base", "sparsely", "sample", "column", "value", "device", "setup", "calibration", "show", "Figure", "-lrb-", "-rrb-", "we", "setup", "consist", "optoma", "hd73", "dlp", "projector", "three", "laser", "emitter", "can", "generate", "red", "blue", "green", "laser", "beam", "two", "Canon", "20d", "camera", "flat", "vegetable", "parchment", "paper", "-lrb-", "i.e.", "diffuser", "-rrb-", "place", "between", "projector", "scene", "reflection", "refraction", "paper", "assume", "diffuse", "spatially", "uniform", "when", "projector", "shoot", "light", "beam", "-lrb-", "pixel", "we", "implementation", "-rrb-", "onto", "point", "diffuser", "partial", "light", "refract", "from", "other", "side", "paper", "illuminate", "scene", "point", "light", "source", "setup", "we", "model", "light", "transport", "from", "point", "light", "source", "correspond", "all", "projector", "pixel", "-lrb-", "i.e.", "all", "possible", "shift", "pixel", "-rrb-", "image", "pixel", "capture", "prime", "camera", "which", "represent", "very", "large", "transport", "matrix", "nearly", "million", "column", "row", "before", "capture", "we", "calibrate", "color", "intensity", "each", "point", "light", "source", "we", "implementation", "we", "first", "calibrate", "point", "light", "source", "sample", "40", "40", "regular", "grid", "capture", "image", "diffuser", "plane", "light", "each", "1600", "point", "light", "source", "from", "scene", "side", "we", "take", "image", "diffuser", "plane", "from", "dual", "camera", "simultaneously", "build", "correspondence", "between", "point", "light", "source", "position", "pixel", "dual", "camera", "image", "which", "image", "capture", "dual", "camera", "downsample", "1024", "768", "match", "projector?s", "resolution", "we", "calibrate", "other", "point", "light", "source", "within", "regular", "grid", "interpolate", "calibration", "result", "neighbor", "point", "light", "source", "grid", "Column", "Sampling", "after", "calibration", "we", "place", "scene", "object", "under", "diffuser", "plane", "capture", "column", "light", "transport", "matrix", "projector", "prime", "camera", "without", "any", "knowledge", "light", "transport", "scene", "we", "acquire", "set", "column", "from", "prime", "camera", "point", "light", "source", "uniformly", "distribute", "diffuser", "plane", "each", "sample", "point", "light", "source", "eight", "image", "different", "exposure", "take", "from", "prime", "camera", "down-sampled", "fuse", "hdr", "image", "-lsb-", "Debevec", "Malik", "1997", "-rsb-", "result", "set", "column", "vector", "matrix", "t.", "Row", "Sampling", "dual", "setup", "include", "three", "laser", "emitter", "dual", "camera", "use", "row", "sampling", "laser", "emitter", "place", "close", "prime", "camera", "orientation", "be", "control", "computer", "scene", "light", "laser", "beam", "reflectance", "scene", "project", "onto", "diffuser", "refract", "uniformly", "other", "side", "diffuser", "record", "dual", "camera", "neighbor", "projector", "we", "utilize", "sample", "column", "value", "guide", "row", "sampling", "similar", "-lsb-", "ha", "san", "et", "al.", "2007", "-rsb-", "we", "pack", "sparse", "element", "each", "row", "vector", "-lrb-", "...", "-rrb-", "where", "...", "index", "sample", "column", "we", "employ", "k-means", "cluster", "-lcb-", "-rcb-", "cluster", "each", "cluster", "vector", "closest", "cluster", "center", "vector", "select", "sampling", "pixel", "each", "row", "-lrb-", "i.e.", "pixel", "location", "-rrb-", "sample", "we", "adjust", "direction", "three", "laser", "beam", "so", "focus", "same", "surface", "point", "whose", "projection", "prime", "camera", "fall", "sample", "pixel", "position", "since", "prime", "camera", "laser", "emitter", "relatively", "far", "away", "from", "scene", "angle", "difference", "between", "camera?s", "pixel", "ray", "laser", "beam", "small", "ignore", "capture", "hdr", "image", "diffuse", "plane", "acquire", "from", "dual", "camera", "correspondence", "between", "dual", "camera", "pixel", "point", "light", "source", "position", "we", "can", "easily", "obtain", "sample", "row", "value", "from", "downsampled", "hdr", "image", "we", "repeat", "process", "until", "all", "sample", "row", "measure", "finally", "we", "scale", "sample", "column", "so", "matrix", "element", "value", "capture", "both", "row", "column", "become", "same", "Figure", "show", "sample", "column", "row", "image", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "29", "publication", "date", "August", "2009", "Kernel", "Nystr?m", "Method", "Light", "Transport", "29:5", "Figure", "device", "setup", "capture", "sparse", "column", "row", "light", "transport", "matrix", "-lrb-", "-rrb-", "illustration", "-lrb-", "-rrb-", "Photograph", "Figure", "sample", "column", "row", "light", "transport", "matrix", "-lrb-", "-rrb-", "Photograph", "scene", "column", "sampling", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "two", "column", "sampling", "image", "-lrb-", "-rrb-", "Photograph", "scene", "row", "sampling", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "two", "row", "sampling", "image", "corresponding", "pixel", "mark", "-lrb-", "-rrb-", "result", "discussion", "we", "implement", "we", "kernel", "nystr?m", "method", "pc", "Intel", "Core", "TM", "duo", "3.2", "GHz", "CPU", "4gb", "memory", "we", "implementation", "we", "capture", "batch", "10", "row", "10", "column", "each", "adaptive", "capture", "step", "experimentally", "set", "threshold", "0.05", "typical", "acquisition", "session", "-lrb-", "include", "image", "acquisition", "hdr", "reconstruction", "kernel", "estimation", "-rrb-", "take", "about", "135", "minute", "capture", "150", "row", "150", "column", "from", "scene", "image", "resolution", "1752", "1168", "while", "light", "sampling", "resolution", "1024", "768", "reconstruct", "light", "transport", "matrix", "relighting", "we", "store", "sample", "matrix", "-lrb-", "-rrb-", "memory", "reconstruct", "all", "row", "matrix", "during", "render", "150", "row", "150", "column", "we", "kernel", "nystr?m", "method", "take", "less", "than", "minute", "estimate", "kernel", "reconstruct", "all", "row", "light", "transport", "matrix", "scene", "sample", "do", "fit", "memory", "we", "store", "one", "matrix", "-lrb-", "we", "implementation", "-rrb-", "disk", "other", "matrix", "memory", "out-of-core", "implementation", "which", "dominate", "disk", "i/o", "take", "about", "30", "minute", "reconstruction", "we", "test", "we", "method", "variety", "scene", "exhibit", "different", "light", "transport", "effect", "illustrate", "Figure", "caustic", "scene", "include", "set", "transparent", "object", "where", "light", "transport", "dominate", "caustic", "create", "light", "refraction", "shadow", "scene", "fine", "geometry", "dragon", "model", "result", "complex", "occlusion", "produce", "detailed", "shadow", "interreflection", "scene", "design", "illustrate", "strong", "inter-reflection", "between", "different", "object", "color", "bleeding", "effect", "general", "scene", "object", "different", "material", "property", "place", "together", "present", "mixture", "different", "light", "transport", "effect", "include", "reflection", "refraction", "shadow", "inter-reflection", "subsurface", "scattering", "caustic", "light", "transport", "kernel", "coefficient", "sample", "number", "use", "reconstruction", "each", "scene", "note", "figure", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "29", "publication", "date", "August", "2009", "29:6", "J.", "Wang", "et", "al.", "rank", "rank", "45", "45", "5.1", "Method", "Validation", "we", "validate", "kernel", "nystr?m", "method", "light", "transport", "matrix", "acquire", "from", "general", "scene", "shadow", "scene", "which", "light", "source", "sample", "regular", "35", "35", "grid", "diffuser", "we", "choose", "two", "scene", "validation", "because", "general", "scene", "include", "mixture", "different", "kind", "light", "transport", "while", "shadow", "scene", "require", "large", "number", "sample", "reconstruction", "we", "simulate", "adaptive", "sampling", "scheme", "each", "scene", "each", "iteration", "we", "randomly", "pick", "10", "row", "10", "column", "sample", "set", "from", "acquire", "full", "matrix", "add", "they", "sparse", "sample", "set", "after", "we", "estimate", "light", "transport", "kernel", "compute", "rank", "kernel", "map", "matrix", "-lrb-", "-rrb-", "sparse", "sample", "rank", "matrix", "determine", "number", "eigenvalue", "matrix", "can", "preserve", "95.0", "energy", "original", "matrix", "we", "also", "reconstruct", "light", "transport", "matrix", "from", "sparse", "sample", "set", "via", "kernel", "nystr?m", "method", "we", "repeat", "process", "until", "number", "sparse", "sample", "achieve", "300", "which", "more", "than", "number", "sparse", "sample", "determine", "adaptive", "sampling", "scheme", "pre-defined", "Figure", "show", "plot", "rank", "kernel", "map", "matrix", "-lrb-", "-rrb-", "sparse", "sample", "set", "different", "number", "sample", "where", "number", "sparse", "sample", "determine", "adaptive", "sampling", "scheme", "mark", "orange", "line", "blue", "line", "indicate", "rank", "kernel", "map", "matrix", "-lrb-", "-rrb-", "which", "kernel", "function", "estimate", "from", "sparse", "sample", "set", "sample", "both", "scene", "rank", "-lrb-", "-rrb-", "sparse", "sample", "grow", "number", "sample", "increase", "close", "-lrb-", "-rrb-", "number", "sample", "close", "which", "lead", "good", "reconstruction", "Figure", "show", "plot", "relative", "error", "light", "transport", "matrix", "reconstruct", "from", "different", "number", "sample", "where", "relative", "reconstruction", "error", "compute", "Figure", "four", "test", "scene", "from", "we", "experiment", "-lrb-", "-rrb-", "caustic", "scene", "-lrb-", "-rrb-", "shadow", "scene", "-lrb-", "-rrb-", "interreflection", "scene", "-lrb-", "-rrb-", "general", "scene", "number", "row", "light", "transport", "kernel", "coefficient", "each", "scene", "note", "image", "40", "40", "35", "35", "30", "30", "25", "25", "20", "20", "15", "15", "10", "10", "50Â 100Â 150Â 200", "250Â 300Â 350", "50Â 100Â 150Â 200", "250Â 300Â 350", "sample", "number", "sample", "number", "figure", "rank", "kernel", "map", "matrix", "-lrb-", "-rrb-", "sparse", "sample", "set", "different", "number", "sample", "orange", "line", "indicate", "sample", "number", "determine", "adaptive", "capture", "scheme", "while", "blue", "line", "indicate", "rank", "kernel", "map", "matrix", "-lrb-", "-rrb-", "15", "here", "ground", "truth", "submatrix", "element", "sparse", "sample", "set", "same", "submatrix", "element", "reconstruct", "use", "kernel", "nystr?m", "method", "further", "explore", "impact", "different", "sample", "set", "reconstruction", "quality", "we", "execute", "above", "experiment", "16", "time", "each", "time", "different", "row", "column", "randomly", "select", "from", "matrix", "show", "Figure", "relative", "error", "decrease", "quickly", "number", "sparse", "sample", "increase", "same", "number", "sparse", "sample", "we", "use", "we", "capture", "relative", "error", "reconstructed", "light", "transport", "matrix", "below", "also", "note", "variance", "error", "under", "same", "number", "sample", "reduce", "quickly", "increase", "number", "sample", "which", "guarantee", "quality", "light", "transport", "matrix", "reconstruct", "from", "random", "sample", "row", "column", "Figure", "compare", "performance", "nystr?m", "method", "kernel", "nystr?m", "method", "general", "scene", "each", "sparse", "sample", "set", "we", "reconstruct", "light", "transport", "matrix", "use", "both", "nystr?m", "method", "kernel", "nystr?m", "method", "relative", "error", "show", "Figure", "-lrb-", "-rrb-", "without", "kernel", "extension", "nystr?m", "method", "require", "roughly", "five", "six", "time", "number", "sample", "achieve", "same", "reconstruction", "quality", "kernel", "nystr?m", "method", "do", "Figure", "-lrb-", "-rrb-", "show", "visual", "comparison", "where", "same", "number", "sample", "use", "both", "method", "reconstruction", "artifact", "result", "generate", "nystr?m", "method", "clearly", "visible", "Figure", "10", "compare", "performance", "kernel", "nystr?m", "method", "different", "light", "transport", "kernel", "-lrb-", "i.e.", "different", "value", "-rrb-", "shadow", "scene", "each", "value", "we", "reconstruct", "light", "transport", "matrix", "from", "same", "set", "sparse", "sample", "-lrb-", "250", "sample", "-rrb-", "kernel", "nystr?m", "method", "Figure", "10", "-lrb-", "-rrb-", "show", "plot", "objective", "function", "-lrb-", "-rrb-", "relative", "error", "reconstructed", "light", "transport", "matrix", "function", "note", "relative", "reconstruction", "error", "minimal", "when", "optimal", "value", "derive", "we", "approach", "use", "reconstruction", "also", "light", "transport", "matrix", "well", "reconstruct", "kernel", "nystr?m", "method", "use", "optimal", "value", "however", "light", "transport", "matrix", "reconstruct", "kernel", "nystr?m", "method", "use", "other", "value", "exhibit", "larger", "relative", "error", "visible", "artifact", "show", "Figure", "10", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "large", "value", "lead", "visible", "artifact", "concentrate", "region", "high", "frequency", "feature", "while", "small", "value", "result", "noise", "like", "artifact", "scatter", "across", "entire", "result", "image", "Figure", "relative", "reconstruction", "error", "light", "transport", "matrix", "reconstruct", "from", "sparse", "sample", "set", "different", "number", "sample", "orange", "line", "indicate", "sample", "number", "determine", "adaptive", "capture", "scheme", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "29", "publication", "date", "August", "2009", "Kernel", "Nystr?m", "Method", "Light", "Transport", "29:7", "Figure", "reconstruction", "result", "kernel", "nystr?m", "method", "nystr?m", "method", "relative", "reconstruction", "error", "respect", "different", "number", "sample", "compare", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "ground", "truth", "image", "-lrb-", "-rrb-", "image", "render", "matrix", "reconstruct", "from", "150", "sample", "nystr?m", "method", "-lrb-", "-rrb-", "image", "render", "matrix", "reconstruct", "from", "150", "sample", "kernel", "nystr?m", "method", "5.2", "relight", "result", "Figure", "12", "compare", "image", "render", "use", "reconstructed", "light", "transport", "matrix", "ground", "truth", "image", "show", "illumination", "under", "single", "point", "light", "consider", "during", "reconstruction", "process", "rendering", "result", "generate", "from", "recon", "structed", "light", "transport", "matrix", "visually", "indistinguishable", "from", "ground", "truth", "image", "we", "use", "reconstructed", "light", "transport", "matrix", "image-based", "relighting", "Figure", "13", "exhibit", "several", "result", "render", "different", "lighting", "condition", "note", "complex", "light", "transport", "effect", "faithfully", "reproduce", "provide", "realistic", "result", "see", "companion", "video", "relight", "result", "under", "dynamic", "lighting", "5.3", "Subsurface", "Scattering", "we", "also", "apply", "kernel", "nystr?m", "method", "modeling", "light", "transport", "due", "subsurface", "scattering", "light", "transport", "matrix", "case", "symmetric", "matrix", "each", "element", "which", "describe", "diffuse", "bssrdf", "between", "two", "surface", "point", "-lrb-", "-rrb-", "-lsb-", "Goesele", "et", "al.", "2004", "-rsb-", "since", "matrix", "symmetrical", "we", "only", "need", "sample", "column", "reconstruction", "we", "implementation", "we", "use", "device", "setup", "similar", "one", "use", "-lsb-", "Goesele", "et", "al.", "2004", "-rsb-", "capture", "three", "laser", "emitter", "close", "each", "other", "shoot", "three", "color", "beam", "point", "over", "object", "surface", "we", "control", "laser", "beam", "make", "sure", "focus", "same", "surface", "point", "hdr", "image", "object", "surface", "capture", "from", "fix", "viewpoint", "we", "repeat", "process", "shoot", "laser", "beam", "random", "set", "surface", "point", "calibrate", "camera", "position", "known", "geometry", "object", "we", "map", "image", "pixel", "onto", "object", "surface", "Figure", "11", "-lrb-", "-rrb-", "show", "image", "marble", "use", "we", "experiment", "50", "sample", "image", "we", "reconstruct", "light", "transport", "matrix", "subsurface", "scattering", "use", "kernel", "nystr?m", "method", "coefficient", "light", "transport", "kernel", "use", "reconstruction", "0.0625", "resolution", "surface", "point", "light", "transport", "matrix", "same", "image", "resolution", "Figure", "11", "compare", "render", "result", "reconstructed", "light", "transport", "matrix", "ground", "truth", "image", "capture", "from", "object", "under", "same", "lighting", "condition", "result", "render", "directly", "interpolate", "nearby", "sample", "image", "note", "detailed", "spatial", "pattern", "anisotropic", "subsurface", "scattering", "real", "material", "well", "preserve", "reconstructed", "light", "transport", "matrix", "while", "result", "generate", "interpolation", "clearly", "exhibit", "artifact", "also", "note", "capture", "light", "transport", "effect", "similar", "resolution", "brute", "force", "method", "-lsb-", "Goesele", "et", "al.", "2004", "Peers", "et", "al.", "2006", "-rsb-", "need", "dense", "light", "sampling", "which", "prohibitively", "expensive", "time", "consuming", "we", "show", "relight", "result", "reconstructed", "light", "transport", "matrix", "companion", "video", "5.4", "discussion", "light", "transport", "matrix", "scene", "exhibit", "both", "datum", "coherence", "sparsity", "while", "sparsity", "base", "approach", "exploit", "datum", "sparsity", "capture", "light", "transport", "matrix", "kernel", "nystr?m", "method", "exploit", "coherence", "both", "row", "column", "light", "transport", "matrix", "same", "task", "scene", "low", "frequency", "light", "transport", "effect", "inter-reflection", "subsurface", "scattering", "glossy", "shading", "light", "transport", "matrix", "always", "exhibit", "strong", "coherence", "both", "row", "column", "which", "can", "efficiently", "reconstruct", "use", "kernel", "nystr?m", "method", "dozen", "image", "scene", "include", "more", "sharp", "light", "transport", "variation", "occlusion", "specular", "reflection", "refraction", "coherence", "column", "vector", "may", "reduce", "exploit", "coherence", "row", "vector", "kernel", "nystr?m", "method", "can", "still", "achieve", "good", "result", "hundred", "image", "sample", "both", "case", "kernel", "nystr?m", "method", "require", "much", "less", "image", "than", "sparsity", "base", "method", "comparison", "we", "project", "light", "transport", "matrix", "general", "scene", "shadow", "scene", "onto", "Haar", "wavelet", "basis", "each", "case", "reconstruct", "entire", "matrix", "similar", "relative", "error", "we", "need", "retain", "thousand", "wavelet", "coefficient", "which", "mean", "more", "than", "thousand", "image", "require", "reconstruct", "matrix", "sparsity", "base", "method", "extreme", "case", "where", "light", "transport", "matrix", "exhibit", "little", "coherence", "both", "row", "column", "kernel", "nystr?m", "method", "would", "need", "all", "row", "column", "matrix", "good", "reconstruction", "case", "we", "approach", "have", "advantage", "over", "brute", "force", "method", "sparsity", "base", "method", "example", "scene", "mirror", "ball", "where", "light", "transport", "matrix", "exhibit", "good", "sparsity", "little", "coherence", "scenario", "sparsity", "base", "approach", "may", "provide", "good", "solution", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "29", "publication", "date", "August", "2009", "29:8", "J.", "Wang", "et", "al.", "conclusion", "we", "have", "present", "kernel", "nystr?m", "method", "reconstruct", "light", "transport", "matrix", "from", "relatively", "small", "number", "acquire", "Figure", "10", "reconstruction", "result", "kernel", "nystr?m", "method", "different", "light", "transport", "kernel", "-lrb-", "-rrb-", "objective", "function", "value", "relative", "reconstruction", "error", "respect", "different", "value", "-lrb-", "-rrb-", "ground", "truth", "image", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "image", "render", "matrix", "reconstruct", "kernel", "nystr?m", "method", "use", "different", "value", "value", "use", "-lrb-", "-rrb-", "optimal", "one", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "difference", "image", "between", "render", "result", "reconstructed", "matrix", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "ground", "truth", "image", "-lrb-", "-rrb-", "Figure", "11", "model", "subsurface", "light", "transport", "kernel", "nystr?m", "method", "-lrb-", "-rrb-", "image", "marble", "light", "laser", "beam", "one", "point", "-lrb-", "-rrb-", "image", "render", "reconstructed", "light", "transport", "matrix", "light", "same", "point", "-lrb-", "-rrb-", "difference", "between", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "intensity", "which", "scale", "10", "-lrb-", "-rrb-", "Photograph", "flat", "marble", "sample", "-lrb-", "-rrb-", "image", "render", "interpolate", "nearby", "sample", "image", "-lrb-", "-rrb-", "difference", "between", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "intensity", "which", "scale", "10", "image", "while", "exist", "technique", "typically", "require", "ten", "thousand", "image", "accurate", "reconstruction", "light", "transport", "matrix", "kernel", "nystr?m", "method", "can", "achieve", "good", "reconstruction", "few", "hundred", "image", "produce", "high", "quality", "relighting", "result", "kernel", "nystr?m", "method", "able", "capture", "complex", "lighting", "effect", "occlusion", "which", "particularly", "challenge", "many", "exist", "technique", "especially", "various", "sparsity-based", "method", "effectiveness", "kernel", "nystr?m", "method", "come", "from", "its", "ability", "exploit", "both", "linear", "nonlinear", "coherence", "light", "transport", "matrix", "from", "relatively", "small", "number", "row", "column", "matrix", "future", "work", "we", "interested", "investigate", "better", "kernel", "estimation", "method", "design", "new", "kernel", "function", "light", "transport", "matrix", "reconstruction", "we", "also", "plan", "apply", "kernel", "nystr?m", "method", "model", "surface", "reflectance", "finally", "we", "want", "explore", "way", "extend", "kernel", "nystr?m", "method", "handle", "highdimensional", "tensor", "datum", "acknowledgement", "author", "would", "like", "thank", "Yi", "Ma", "John", "Wright", "helpful", "discussion", "Matthew", "Callcut", "proofread", "paper", "dub", "video", "we", "also", "thank", "anonymous", "reviewer", "helpful", "suggestion", "comment", "reference", "X.", "ellacinus", "F.", "2008", "Appprop", "all-pairs", "appearance-space", "edit", "propagation", "ACM", "transaction", "Graphics", "27", "-lrb-", "Aug.", "-rrb-", "40:1", "40:9", "huang", "y.-y.", "ongker", "D.", "E.", "INDORFF", "J.", "URLESS", "B.", "ALESIN", "D.", "H.", "ZELISKI", "R.", "2000", "Environment", "mat", "extension", "towards", "higher", "accuracy", "real-time", "capture", "Proceedings", "ACM", "SIGGRAPH", "2000", "Computer", "Graphics", "Proceedings", "annual", "Conference", "Series", "121", "130", "ristianinus", "N.", "HAWE", "aylor", "J.", "2000", "introduction", "support", "vector", "machine", "other", "kernel-based", "learning", "method", "Cambridge", "University", "Press", "ebevec", "P.", "E.", "ALIK", "J.", "1997", "recover", "high", "dynamic", "range", "radiance", "map", "from", "photograph", "Proceedings", "SIGGRAPH", "97", "Computer", "Graphics", "Proceedings", "annual", "Conference", "Series", "369", "378", "ebevec", "P.", "AWKINS", "T.", "CHOU", "C.", "UIKER", "H.-P.", "arokin", "W.", "AGAR", "M.", "2000", "acquire", "reflectance", "field", "human", "face", "Proceedings", "ACM", "SIGGRAPH", "2000", "Computer", "Graphics", "Proceedings", "annual", "Conference", "Series", "145", "156", "azel", "M.", "2002", "Matrix", "rank", "minimization", "application", "phd", "thesis", "Stanford", "University", "uch", "M.", "LANZ", "V.", "ENSCH", "H.", "P.", "a.", "eidel", "h.-p", "2007", "adaptive", "sampling", "reflectance", "field", "ACM", "transaction", "Graphics", "26", "-lrb-", "June", "-rrb-", "10:1", "10:18", "arg", "G.", "alvalum", "e.-v.", "evoy", "m.", "ensch", "H.", "P.", "A.", "2006", "symmetric", "photography", "exploit", "data-sparseness", "reflectance", "field", "render", "technique", "2006", "17th", "eurographic", "Workshop", "Rendering", "251", "262", "oesele", "M.", "ENSCH", "H.", "P.", "A.", "ang", "J.", "uch", "c.", "eidel", "h.-p", "2004", "disco", "acquisition", "translucent", "object", "ACM", "transaction", "Graphics", "23", "-lrb-", "Aug.", "-rrb-", "835", "844", "oreinov", "S.", "yrtyshnikov", "E.", "E.", "amarashkin", "N.", "L.", "1997", "theory", "pseudo-skeleton", "approximation", "linear", "algeabra", "application", "261", "21", "san", "M.", "ellacinus", "F.", "ALA", "K.", "2007", "Matrix", "rowcolumn", "sampling", "many-light", "problem", "ACM", "transaction", "Graphics", "26", "-lrb-", "July", "-rrb-", "26:1", "26:10", "san", "M.", "ELAZQUEZ", "rmendariz", "E.", "ellacinus", "F.", "ALA", "K.", "2008", "Tensor", "clustering", "render", "manylight", "animation", "Computer", "Graphics", "Forum", "-lrb-", "Proc", "eurographic", "render", "2008", "-rrb-", "27", "1105", "1114", "awkin", "T.", "INARSSON", "P.", "EBEVEC", "P.", "2005", "dual", "light", "stage", "render", "technique", "2005", "16th", "eurographic", "Workshop", "Rendering", "91", "98", "evoy", "m.", "anrahan", "P.", "M.", "1996", "light", "field", "render", "Proceedings", "SIGGRAPH", "96", "Computer", "Graphics", "Proceedings", "annual", "Conference", "Series", "31", "42", "Z.", "ONG", "T.-T.", "hum", "h.-y", "relight", "reflect", "irradiance", "field", "representation", "sampling", "reconstruction", "International", "Journal", "Computer", "Vision", "49", "ahajan", "D.", "hlizerman", "i.", "K.", "AMAMOORTHI", "R.", "ELHUMEUR", "P.", "2007", "theory", "locally", "low", "dimensional", "light", "transport", "ACM", "transaction", "Graphics", "26", "-lrb-", "July", "-rrb-", "62:1", "62:10", "asselus", "V.", "eer", "P.", "utr", "P.", "ILLEMS", "Y.", "D.", "2003", "relight", "4d", "incident", "light", "field", "ACM", "transaction", "Graphics", "22", "-lrb-", "July", "-rrb-", "613", "620", "asselus", "V.", "eer", "P.", "utr", "0108", "P.", "ILLEMS", "Y.", "D.", "2004", "smooth", "reconstruction", "compact", "representation", "reflectance", "function", "image-based", "relighting", "render", "technique", "2004", "15th", "eurographic", "Workshop", "Rendering", "287", "298", "atusik", "W.", "fister", "H.", "GAN", "a.", "eardsley", "P.", "IEGLER", "R.", "ILLAN", "L.", "2002", "image-based", "3d", "photography", "use", "opacity", "hull", "ACM", "transaction", "Graphics", "21", "-lrb-", "July", "-rrb-", "427", "437", "atusik", "W.", "OPER", "M.", "fister", "H.", "2004", "progressively-refined", "reflectance", "function", "from", "natural", "illumination", "render", "technique", "2004", "15th", "eurographic", "Workshop", "Rendering", "299", "308", "R.", "AMAMOORTHI", "R.", "ANRAHAN", "P.", "2003", "Allfrequency", "shadow", "use", "non-linear", "wavelet", "lighting", "approximation", "ACM", "transaction", "Graphics", "22", "-lrb-", "July", "-rrb-", "376", "381", "eer", "P.", "utr", "P.", "2005", "infer", "reflectance", "function", "from", "wavelet", "noise", "render", "technique", "2005", "16th", "eurographic", "Workshop", "Rendering", "173", "182", "eer", "P.", "VOM", "ERGE", "K.", "atusik", "W.", "AMAMOORTHI", "R.", "AWRENCE", "J.", "USINKIEWICZ", "S.", "utr", "P.", "2006", "compact", "factored", "representation", "heterogeneous", "subsurface", "scattering", "ACM", "transaction", "Graphics", "25", "-lrb-", "July", "-rrb-", "746", "753", "eer", "P.", "AHAJAN", "D.", "K.", "AMOND", "B.", "HOSH", "a.", "tusik", "W.", "AMAMOORTHI", "R.", "EBEVEC", "P.", "2009", "compressive", "light", "transport", "sense", "ACM", "transaction", "Graphics", "28", "-lrb-", "Jan.", "-rrb-", "3:1", "3:18", "latt", "J.", "C.", "2005", "Fastmap", "metricmap", "landmark", "md", "all", "nystr?m", "algorithm", "10th", "International", "Workshop", "Artificial", "Intelligence", "Statistics", "261", "268", "ress", "W.", "H.", "ET", "AL", "1992", "numerical", "recipe", "-lrb-", "second", "edition", "-rrb-", "Cambridge", "University", "Press", "en", "P.", "ARABI", "S.", "2009", "Compressive", "dual", "Photography", "Computer", "Graphics", "Forum", "28", "609", "618", "en", "P.", "HEN", "B.", "ARG", "G.", "arschner", "S.", "R.", "OROWITZ", "M.", "EVOY", "M.", "ENSCH", "H.", "P.", "A.", "2005", "dual", "photography", "ACM", "transaction", "Graphics", "24", "745", "755", "ENGER", "a.", "ardner", "a.", "CHOU", "C.", "NGER", "J.", "AWKINS", "T.", "EBEVEC", "P.", "2005", "Performance", "relighting", "reflectance", "transformation", "time-multiplexed", "illumination", "ACM", "transaction", "Graphics", "24", "-lrb-", "Aug.", "-rrb-", "756", "764", "ILLIAMS", "C.", "EEGER", "M.", "2000", "use", "nystr?m", "method", "speed", "up", "kernel", "machine", "advance", "Neural", "Information", "Processing", "Systems", "13", "682", "688", "ongker", "D.", "E.", "ERNER", "D.", "M.", "URLESS", "B.", "ALESIN", "D.", "H.", "1999", "Environment", "matting", "compositing", "Proceedings", "SIGGRAPH", "99", "Computer", "Graphics", "Proceedings", "annual", "Conference", "Series", "205", "214", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "29", "publication", "date", "August", "2009", "Kernel", "Nystr?m", "Method", "Light", "Transport", "29:9", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "29", "publication", "date", "August", "2009", "29:10", "J.", "Wang", "et", "al.", "Figure", "12", "visual", "comparison", "relighting", "result", "image", "first", "row", "capture", "from", "each", "scene", "illuminate", "point", "light", "source", "use", "when", "acquire", "image", "light", "transport", "matrix", "reconstruction", "image", "second", "row", "render", "from", "reconstructed", "light", "transport", "matrix", "scene", "under", "same", "lighting", "condition", "third", "row", "show", "difference", "image", "intensity", "scale", "up", "factor", "10", "Figure", "13", "relighting", "result", "under", "complex", "lighting", "-lrb-", "-rrb-", "caustic", "scene", "-lrb-", "-rrb-", "shadow", "scene", "-lrb-", "-rrb-", "interreflection", "scene", "-lrb-", "-rrb-", "general", "scene", "inset", "image", "show", "three", "illumination", "pattern", "use", "render", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "29", "publication", "date", "August", "2009" ],
  "content" : "\n  \n    573172433b0ab5bdab2d7bd9cf0b623e2b664d5fcf1077409c492f4fd92c364e\n    mi6\n    10.1145/1531326.1531335\n    Name identification was not possible. \n  \n  \n    \n      \n        Kernel Nystr?m Method for Light Transport\n      \n      Jiaping Wang ? Yue Dong ? ? Xin Tong ? Zhouchen Lin ? ? Microsoft Research Asia ? Tsinghua Univeristy\n      \n        \n        Figure 1: Relighting results using the light transport matrix reconstructed by our method. Complex light transport effects, including caustics (a), complex occlusions (b), and a mixture of caustics, complex occlusions, inter-reflections, and subsurface scattering (c) are all faithfully reproduced.\n      \n      We propose a kernel Nystr?m method for reconstructing the light transport matrix from a relatively small number of acquired images. Our work is based on the generalized Nystr?m method for low rank matrices. We introduce the light transport kernel and incorporate it into the Nystr?m method to exploit the nonlinear coherence of the light transport matrix. We also develop an adaptive scheme for efficiently capturing the sparsely sampled images from the scene. Our experiments indicate that the kernel Nystr?m method can achieve good reconstruction of the light transport matrix with a few hundred images and produce high quality relighting results. The kernel Nystr?m method is effective for modeling scenes with complex lighting effects and occlusions which have been challenging for existing techniques.\n    \n    \n      \n        1 Introduction\n      \n      The goal of image-based relighting is to directly capture the light transport of a real-world scene so that it can be rendered with new illumination [Debevec et al. 2000; Wenger et al. 2005; Peers et al. 2009]. Mathematically, image-based relighting can be formulated as the following equation [Ng et al. 2003; Peers et al. 2009]:\n      \n        1\n        b = T ? l,\n      \n      where T is the m ? n light transport matrix that describes the light transport from n light sources to m camera pixels, l is the illumination condition represented by a vector of incident radiance from n ? email: {jiapw,xtong,zhoulin,bainguo}@microsoft.com light sources, and b is the outgoing radiance observed in a camera image with m pixels. Our task is to find the matrix T. Image-based relighting offers an unparalleled advantage of realistic rendering without scene modeling, which is often an arduous task. However, to generate high quality results, the existing techniques often require tens of thousands of images for accurate reconstruction of the light transport matrix (e.g., see [Debevec et al. 2000; Wenger et al. 2005]). Several approaches have shown promise in reducing the number of required images [Zongker et al. 1999; Matusik et al. 2004; Peers and Dutr? 2005; Peers et al. 2009; Sen and Darabi 2009]. However, these techniques are either dedicated to specific light transport effects [Zongker et al. 1999] or mainly effective with scenes of simple geometry configurations [Matusik et al. 2004; Peers and Dutr? 2005]. Applying these techniques to scenes with complex lighting effects and occlusions still requires a large number of input images and expensive reconstruction methods [Peers et al. 2009]. In this paper we propose a kernel Nystr?m method for reconstructing the light transport matrix from a small number of images. We first acquire a small number of rows and columns of the light transport matrix of a real world scene and then reconstruct the entire matrix from these sparse samples. Our work is inspired by the Nystr?m method proposed by Williams and Seeger [2000] for reconstructing a low rank symmetric matrix using a linear combination of sparsely sampled rows and columns. In this paper, we apply a generalized form of the Nystr?m method [Goreinov et al. 1997] previously developed in the linear algebra community for reconstructing asymmetrical matrices. The main contribution of this paper is the introduction of the light transport kernel so that the nonlinear coherence of the light transport matrix can be exploited to enhance the effectiveness of the Nystr?m method. The kernel Nystr?m method refers to the Nystr?m method with the light transport kernel incorporated. The power of the Nystr?m method essentially comes from its ability to exploit the linear coherence of the light transport matrix. By further exploiting the nonlinear coherence, the kernel Nystr?m method becomes much more powerful and the number of sampled rows and columns (and hence acquired images) needed for the matrix reconstruction is greatly reduced. The light transport kernel works as follows. First, we design a data specific kernel function that can be estimated from the sparse row and column samples. Then by mapping these samples with the kernel function, we reduce the rank of the light transport matrix so that a high quality matrix can be reconstructed from the kernel-mapped sparse samples via the Nystr?m method. Finally, the light transport matrix is obtained from elements of the reconstructed matrix by inverse kernel mapping. A novel aspect of the kernel Nystr?m method is that it exploits the data coherence during the matrix reconstruction process, before the whole matrix is known. It has been recognized in the past that the data coherence in light transport can be used for data compression after the whole matrix is known [Masselus et al. 2004; Mahajan et al. 2007]. The kernel Nystr?m method takes a different approach and only uses the known row and column samples as an oracle for analyzing the data coherence and reconstructing the matrix. To this end, we develop an adaptive scheme for measuring the sparse row and column images of the light transport matrix and estimating the light transport kernel. We have evaluated the kernel Nystr?m method using a variety of test scenes, including those with inter-reflections, caustics, and complex occlusions. We also used the method to measure the light transport between object surface points due to diffuse subsurface scattering inside the object volume. Our experiments indicate that the kernel Nystr?m method can achieve good reconstruction of the light transport matrix with a few hundred images and produce high quality relighting results. Moreover, the kernel Nystr?m method is effective for modeling scenes with complex lighting effects and occlusions which have remained challenging for existing techniques.\n      ACM Reference Format Wang, J., Dong, Y., Tong, X., Lin, Z., Guo, B. 2009. Kernel Nystr?m Method for Light Transport. ACM Trans. Graph. 28, 3, Article 29 (August 2009), 10 pages. DOI = 10.1145/1531326.1531335 http://doi.acm.org/10.1145/1531326.1531335. Copyright Notice Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or direct commercial advantage and that copies show this notice on the fi rst page or initial screen of a display along with the full citation. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers, to redistribute to lists, or to use any component of this work in other works requires prior specific permission and/or a fee. Permissions may be requested from Publications Dept., ACM, Inc., 2 Penn Plaza, Suite 701, New York, NY 10121-0701, fax +1 (212) 869-0481, or permissions@acm.org . ? 2009 ACM 0730-0301/2009/03-ART29 $10.00 DOI 10.1145/1531326.1531335 http://doi.acm.org/10.1145/1531326.1531335\n      Baining Guo ? ?\n      ACM Transactions on Graphics, Vol. 28, No. 3, Article 29, Publication date: August 2009.\n      29:2 ? J. Wang et al.\n      \n        2 Related Work\n        The light transport matrix represents discrete samples of the reflectance field [Debevec et al. 2000]. A complete 8D reflectance field, which describes the light transport from the incident light field to the outgoing light field [Levoy and Hanrahan 1996], is difficult to capture and process [Garg et al. 2006]. Therefore, most existing methods only consider simplified 4D [Debevec et al. 2000; Lin et al. ; Matusik et al. 2004; Peers and Dutr? 2005] and 6D reflectance fields [Matusik et al. 2002; Masselus et al. 2003; Sen et al. 2005; Wenger et al. 2005]. In this paper, we focus on 4D reflectance fields with a fixed viewpoint and point light sources that lie in a 2D plane.  Light Transport Acquisition. We categorize the existing methods into three classes: brute force, sparsity based, and coherence based methods. The brute force methods directly measure the light transport matrix from the scene, where each column is an image of the scene lit by a single light source in the incident light domain. Debevec et. al. [2000] developed a light stage device for capturing 4D reflectance fields for a fixed viewpoint and distant lighting by moving a point light source around the object. They later improved the device for fast capturing [Wenger et al. 2005]. Hawkins et. al. [2005] exploited the Helmholtz reciprocity to capture the reflectance field of highly reflective objects. To obtain dense samples in the incident light domain, rows of the light transport matrix are captured by shooting rays from the viewpoint and capturing the high resolution image of the scene projected over the incident light domain. Reciprocity is also exploited in [Sen et al. 2005] for acquiring 6D reflectance fields. All these methods require tens of thousands of images for modeling a high quality light transport matrix. For similar quality, our approach only requires a few hundred images. The sparsity based methods model the light transport matrix with a set of basis functions defined over the incident light domain and assume that each row of the light transport matrix can be approximated by a linear combination of a sparse set of basis functions. Thus the light transport matrix can be reconstructed by deriving the sparse basis and their weights for each row from a set of images captured under special lighting conditions. Environment matting [Zongker et al. 1999] models the reflectance of specular or refractive objects by representing the light transport of each pixel (i.e., a row of transport matrix) with a single 2D box function. It was later extended for modeling glossy objects by replacing the box function with an oriented Guassian kernel [Chuang et al. 2000]. Matusik et. al. [2004] modeled the light transport matrix with hierarchical rectangular basis functions. An adaptive algorithm is developed for deriving the sparse basis and their weights for each pixel from images of the scene captured under various natural illumination conditions. Peers et al. [2005] modeled the light transport matrix with wavelets and inferred the light transport matrix from images of the scene illuminated by carefully designed wavelet noise patterns. Both approaches apply a greedy strategy to find a suboptimal sparse basis for each pixel, which only works well for scenes with simple occlusions. Recently a compressive sensing approach [Peers et al. 2009] was proposed which computes the solution for each pixel from images captured from a scene illuminated by patterned lighting. However, the number of images needed for reconstruction depends on both the row length and the number of basis used for each row, which becomes quite large for scenes with complex occlusions. The reconstruction process is also time consuming. Unlike the above sparsity based approaches, our method exploits the coherence in the matrix for reconstruction. It can handle well scenes with complex occlusions and caustics. The number of images needed for reconstruction is only proportional to the rank of the light transport matrix and independent on the size of the matrix. Moreover, our reconstruction algorithm consists of a set of matrix operations, which is simple and fast. Coherence based methods acquire the light transport matrix by exploiting the coherence of reflectance field data. Masselus et. al. [2004] explored the interpolation and compression of reflectance field. Fuchs et. al. [2007] proposed an adaptive sampling scheme for sampling the 4D reflectance field. The spatial coherence of the reflectance field in the incident domain is exploited for accelerating the acquisition process. Starting from a set of images taken with a sparse set of regularly distributed lighting directions, their algorithm analyzes the observed data and then captures more images in each iteration with the new lighting directions where the reflectance field is not smooth. Note that the smoothness of reflectance data among neighboring pixels is also exploited in [Matusik et al. 2004; Peers and Dutr? 2005; Peers et al. 2009] for improving the result quality. While these methods only exploit the coherence in either rows or columns, our method exploits the data coherence in the entire light transport matrix for reconstruction. Since our approach makes no assumptions about the smoothness of the sampled reflectance field, it can handle well sharp variations of the light transport, such as shadows, caustics, and surface textures. Low Rank Matrix Approximation. In addition to the reconstruction of low rank symmetric matrices, the Nystr?m method is also widely used in the machine learning community for approximately computing the eigenvalues and eigenvectors of a symmetric matrix from sparse matrix samples [Platt 2005]. For asymmetric matrices, Goreinov et. al. [1997] presented a pseudoskeleton approximation for reconstructing a complete matrix from a sparse collection of its rows and columns. In graphics research, An et. al. [2008] applied the Nystr?m method to accelerate appearance edit propagation by approximating the dense symmetric distance matrix with sparsely sampled rows and columns. For given illumination, Hasan et. al. [2007] applied similar techniques to efficiently render synthetic scenes. In their approach, columns of the matrix are clustered in a small number of groups according to their values in the sparsely sampled rows. A representative column for each group is then sampled and weighted for approximating other columns in the same group. This approach only uses the coherence between the columns for approximating the matrix. Coherence between the rows is not exploited. Moreover, applying this approach to the light transport matrix may generate temporal artifacts under animated light, as noted in [Ha san et al. 2008].\n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 29, Publication date: August 2009.\n        Kernel Nystr?m Method for Light Transport ? 29:3 k + n c +n\n      \n      \n        3 The Kernel Nystr?m Method\n        In this section, we first review the generalized Nystr?m method for asymmetric matrices [Goreinov et al. 1997] and then introduce our kernel Nystr?m method. Here we assume that a sparse set of rows and columns of the light transport matrix is known. We will discuss how to capture individual rows and columns from a real world scene in the next section. Throughout this paper, we use the following notational convention: the matrix is denoted by bold uppercase letters, e.g. T, a vector is denoted by bold lowercase letters, e.g. l, and a scalar or a scalar function is denoted by lowercase italic letters, e.g. f . Given a matrix T, its element at row i and column j is denoted as T i j , while f (T) denotes a matrix obtained by applying f to each element of the matrix T.\n      \n      \n        3.1 Asymmetric Generalization\n        The Nystr?m method in [Williams and Seeger 2000] reconstructs a low rank symmetric matrix from sparsely sampled columns. As shown in Figure 2(a) , an unknown (n + k) ? (n + k) symmetric matrix T with k sampled rows [ A C T ] can be approximated as\n        \n          2\n          A C T A C T T = C B ? C CA ?1 C T .\n        \n        The reconstruction is accurate when the symmetric matrix T has a rank d ? k, except that the sampled rows [ A C T ] are of a rank smaller than d. For asymmetric light transport matrices in which the image pixels (columns) and light sources (rows) are sampled in different spaces, the generalized Nystr?m method [Goreinov et al. 1997] can be applied for reconstruction. As illustrated in Figure 2(b) , we assume r rows [ A R ] and c columns [ A T C T ] T are known out of an (r + m) ? (c + n) asymmetric matrix T. If the rank of T equals to that of A: d = rank(T) = rank(A), we can expect the following relationship:\n        \n          3\n          R A C B = P A R and = Q, B C\n        \n        where P and Q are matrices of appropriate sizes, which implies that C = PA, R = AQ and B = PR = CQ. Thus the missing portion B in the matrix T can be reconstructed as:\n        \n          4\n          B = PAQ = PAA + AQ = CA + R,\n        \n        where A + denotes the Moore-Penrose pseudoinverse of A, which has the property AA + A = A. So the reconstruction is\n        \n          5\n          A R T = C CA + R .\n        \n        A (k?k) C T (k?n) A (r?c) R (r ?n) n + r+m k C (n?k) B (n?n) = ? C (m?c) B (m?n) = ? (a) (b)\n        \n          Figure 2: Matrix reconstruction from sparsely sampled columns and rows. (a) Symmetric case. (b) Asymmetric case.\n        \n        Comparing Equation 2 and 5, the traditional Nystr?m method is a special case of the generalized Nystr?m method when R ? C T . To compute the Moore-Penrose pseudoinverse of A, we apply the singular value decomposition (SVD) to A and obtain\n        \n          6\n          A = U A ? A V T A ,\n        \n        where U A , ? A and V T A are of sizes r ? d, d ? d and d ? c, respectively, and the columns of U A and V A are orthonormal: U T A U A = I and V T A V A = I. The matrix A + is then computed as\n        \n          7\n          A + = V A ? A ?1 U A T .\n        \n        With A + , we can reconstruct the light transport matrix T using Equation 5.\n      \n      \n        3.2 Kernel Extension\n        Both the traditional and the generalized Nystr?m methods rely on the assumption that the ranks of T and A are identical, in order to achieve an exact reconstruction. In reality, this assumption may be violated, resulting in some reconstruction error. One possible way to make the Nystr?m method more effective is to apply a transformation to the entries in the matrix so that this low rank assumption is better satisfied, hence the reconstruction error can be expected to be minimized. As linear transforms do not change the rank of a matrix, nonlinear transforms are necessary. In the machine learning literature, the ?kernel trick? [Cristianini and Shawe-Taylor 2000] is a standard approach for enhancing the performance of algorithms based on nonlinear transformations of the input data. The kernel trick is to map vectors in the data space to a (usually) higher dimensional feature space. Then the same procedures of the original algorithm done in the data space are transferred to the feature space. The key to the success of the kernel trick is that the mapping function need not be explicitly specified. Rather, a kernel function is sufficient for computing the inner products in the feature space. Inspired by the success of the kernel trick, we consider using a nonlinear function f to change the values of the entries in light transport matrix T, such that the rank assumption can be better fulfilled, i.e., the rank of f (T) is as close to that of f (A) as possible. We name this nonlinear function f the light transport kernel. After reconstructing f (T) using the generalized Nystr?m method, i.e.,\n        \n          8\n          f (A) f (R) f (T) ? K = + , f (C) f (C) f (A) f (R)\n        \n        the original T can be recovered by an inverse mapping with f ?1 : T ? f ?1 (K). To see that the above nonlinear mapping process is a kind of the kernel method, one may regard T as an inner product matrix:\n        \n          9\n          T = ? ? ? ,\n        \n        \n          9\n          i j i j\n        \n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 29, Publication date: August 2009.\n        29:4 ? J. Wang et al.\n        where { ? i } and { ? j } are two different point sets in a particular space 1 . This is slightly different from the traditional kernel method which requires that { ? i } and { ? j } are identical. We use different point sets because here T is asymmetric. The standard kernel method then uses an implicit mapping ? to map the point sets to another space. Then the kernel matrix K in the mapped space, a.k.a. the inner product matrix of the mapped point sets, is:\n        \n          10\n          K i j = ?( ? i ) ? ?( ? j ).\n        \n        To compute K, one only has to prepare an explicit kernel function g such that g( ? i , ? j ) ? ?( ? i ) ? ?( ? j ), rather than explicitly specifying ?, which is much more difficult. One of the most frequently used kernel functions is the polynomial kernel: g( ? i , ? j ) = (1+ ? i ? ? j ) p . So one can choose the kernel g in such a form: g( ? i , ? j ) = f ( ? i ? ? j ). With this choice of the kernel function, we have that\n        \n          11\n          K i j = f ( ? i ? ? j ) = f (T i j ), i.e., K = f (T).\n        \n      \n      \n        3.3 Estimating the Light Transport Kernel\n        f\n        To make the kernel Nystr?m method work, one has to specify the light transport kernel f . As the space of all monotonic smooth functions is of infinite dimension, one has to assume its form in order to narrow down the search space. In this paper, we simply assume that f is a power function: f (x) = x ? as this family of functions has only one parameter and hence the optimal function is easy to find. Moreover, our experiments show that such a choice of the light transport kernel can indeed produce a greatly enhanced reconstruction performance. We leave the problem of whether there are even better light transport kernel functions to future work. As argued before, to reduce the reconstruction error, one has to make the rank of f (T) as close to that of f (A) as possible. However, we do not have the full information on T. So the real rank of f (T) is actually unknown. To overcome this difficulty, we choose to minimize the rank of f (A) instead. The underlying philosophy is that if the rank of f (A) is much less than min(r, c), then it is very likely that the rank of f (T) does not exceed min(r, c). So the generalized kernel Nystr?m method can be effective. This leads to the rank minimization problem [Fazel 2002], which is usually formalized as minimizing the nuclear norm of a matrix. We seek a light transport kernel f that minimizes the rank factor\n        \n          12\n          e r = f f (A) (A) ? ,\n        \n        where the nuclear norm is defined as X ? = ? ? i , the spectral norm i is defined as X 2 = max { ? i } and ? i ?s are the singular values of i the matrix X. Note that here we normalize the nuclear norm with the largest singular value because we don?t want to reduce the rank by mapping the entries to be close to zeros (which corresponds to a small f (A) 2 ). Rather, we want to reduce the rank of f (A) by enhancing the linear coherence of the rows/columns of f (A). It is easy to imagine that mapping all the entries to a constant can trivially reduce the rank of f (A) to 1 or even 0. However, such a trivial mapping causes a problem in inverting from K to T by using the inverse function f ?1 . To reduce the reconstruction error, we have to further make sure that this inversion is numerically robust. The robustness of inversion can be measured by the slope of f ?1 : the steeper f ?1 is, the less robust the inversion is. So we have to\n        1 As we will show, it is not necessary to specify what these two point sets are.\n        AdaptiveCapture( r , c , ? ) f inished = f alse capturing r rows and c columns r = r ; c = c While( f inished == f alse) estimating f from A estimating rank factor e r of f (A) If( e r /min(r, c) < ? ) f inished = true Else capturing r rows and c columns adding samples in sample set updating A r = r + r ; c = c + c\n        \n          Figure 3: The pseudo code of adaptive capturing scheme.\n        \n        further minimize\n        \n          13\n          e s = 0 1 ( f ?1 ) (x)p(x)dx = 0 1 f 1 (x) p(x)dx,\n        \n        where the identity ( f ?1 ) (x) = f 1 (x) is used and p(x) is the distribution density of the values in A, which is estimated from the histogram of entry values of A. p(x) is assumed to be identical to that in T, due to the random sampling of A from T. We weight the slope of f ?1 by p(x) in order to achieve the best overall robustness for all entry values in T. Combining the above two criteria, our algorithm selects the light transport kernel function f whose parameter ? minimizes the objective function\n        \n          14\n          g( ? ) = e r ? e s = f f (A) (A) ? 0 1 f 1 (x) p(x)dx.\n        \n        We use the golden section search [Press et al. 1992] to search for the optimal ? within [0.001, 1000] in logarithmic space. As A is of a relatively small size (r ? c), this optimization takes only a few seconds. In summary, our kernel Nystr?m method works as follows. Given the matrices of sampled rows and columns (A, C, and R), we estimate the light transport kernel f from A and map matrices of sparse samples to their kernel version f (A), f (C), and f (R) respectively. We then apply the Nystr?m method to reconstruct the kernel light transport matrix K = f (T) with the Moore-Penrose pseudoinverse of f (A) using Equation 5. Finally, we obtain the light transport matrix T via the inverse kernel mapping T = f ?1 (K).\n      \n      \n        4 Adaptive Light Transport Measurement\n        The kernel Nystr?m method requires a sparse set of rows and columns of the light transport matrix as input for reconstruction. However, without any knowledge about the light transport in the scene, it is difficult to determine the sample number in advance. To address this issue, we design an adaptive scheme for capturing sparse rows and columns from the scene, where the sample number is determined from the captured data. As shown in Figure 3 , after a batch of rows and columns is sampled from the scene, we estimate the light transport kernel f from the matrix A of the current sample set and compute the rank factor e r of f (A) using Equation 12. For a sample set that has r rows and c columns, if e r /min(r, c) is smaller than a pre-defined threshold ? , the rank of f (A) is much less than min(r, c). Based on the the same philosophy used in the kernel estimation, it is very likely the rank of f (T) does not exceed min(r, c). Thus the sampled data are sufficient for reconstructing the f (T) and the capturing is finished. Otherwise, we capture a new batch of rows and columns and repeat the above steps with the extended sample set. A device setup is designed for acquiring a batch of row and column samples from the scene. As shown in Figure 4 , we focus on the light transport from point light sources on a 2D plane to image pixels captured from a fixed view point. In our setup, a column of the light transport matrix is directly obtained from the image of the scene under the a virtual point light source, while a row of the matrix is measured via a dual setup by exploiting the reciprocity of light transport [Hawkins et al. 2005; Sen et al. 2005]. To obtain a batch of rows and columns, we first capture the columns and then acquire the rows of the light transport matrix. A stratified sampling scheme is applied for sampling rows of the matrix based on sparsely sampled column values. Device Setup and Calibration As shown in Figure 4(b) , our setup consists of a Optoma HD73 DLP projector, three laser emitters that can generate red, blue and green laser beams, two Canon 20D cameras and a flat vegetable parchment paper (i.e., diffuser) placed between the projector and the scene. The reflection and refraction of the paper are assumed to be diffuse and spatially uniform. When the projector shoots a light beam (5 ? 5 pixels in our implementation) onto a point of the diffuser, partial light is refracted from the other side of the paper and illuminates the scene as a point light source. With this setup, we model the light transport from the point light sources that correspond to all projector pixels (i.e., all possible shifts of 5 ? 5 pixels) to image pixels captured by the prime camera, which is represented by a very large transport matrix with nearly a million of columns and rows. Before capturing, we calibrate the color and intensity of each point light source. In our implementation, we first calibrate the point light sources sampled on 40 ? 40 regular grids by capturing the images of the diffuser plane lit with each of the 1600 point light sources from the scene side. We take images of the diffuser plane from the dual camera simultaneously to build the correspondence between the point light source positions and pixels of the dual camera image, in which the images captured by the dual camera are downsampled to 1024 ? 768 to match the projector?s resolution. We then calibrate the other point light sources within the regular grid by interpolating the calibration results of the neighbor point light sources on the grid. Column Sampling After calibration, we place the scene objects under the diffuser plane and start to capture the columns of the light transport matrix with the projector and the prime camera. Without any knowledge on the light transport in the scene, we acquire a set of columns from the prime camera with r point light sources uniformly distributed on the diffuser plane. For each sampled point light source l j , eight images of different exposures are taken from the prime camera and then down-sampled and fused into HDR images as in [Debevec and Malik 1997]. The result is a set of column vectors T ., j of the matrix T. Row Sampling A dual setup that includes the three laser emitters and the dual camera is used for row sampling. The laser emitters are placed close to the prime camera, their orientations being controlled by a computer; the scene is lit by the laser beams. The reflectance of the scene is then projected onto the diffuser, refracted uniformly on the other side of the diffuser, and recorded by the dual camera neighboring the projector. We utilize the sampled column values to guide the row sampling. Similar to [Ha san et al. 2007], we pack the r sparse elements in each row to a vector r i = (T i, j 1 , T i, j 2 , . . . , T i, j r ), where j 1 , . . . , j r are indices of the sampled columns. We then employ k-means to cluster the { r i } into r clusters. For each cluster, the vector closest to the cluster center vector is selected as the sampling pixel. For each row (i.e., pixel location) to be sampled, we adjust the direction of three laser beams so that they focus on the same surface point whose projection on the prime camera falls in the sampled pixel position. Since the prime camera and the laser emitters are relatively far away from the scene, the angle difference between the camera?s pixel ray and the laser beams is small and ignored in capturing. A HDR image of the diffuse plane is then acquired from the dual camera. With the correspondence between the dual camera pixels and the point light source positions, we can easily obtain the sampled row values from the downsampled HDR images. We repeat this process until all sampled rows are measured. Finally, we scale the sampled columns so that the matrix element values captured by both rows and columns become the same. Figure 5 shows the sampled column and row images.\n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 29, Publication date: August 2009.\n        Kernel Nystr?m Method for Light Transport ? 29:5\n        \n          \n          Figure 4: Device setup for capturing sparse columns and rows of the light transport matrix. (a) Illustration. (b) Photograph.\n        \n        \n          \n          Figure 5: Sampling columns and rows of the light transport matrix. (a) Photograph of the scene in column sampling. (b)(c) Two column sampling images. (d) Photograph of the scene in row sampling. (e)(f) Two row sampling images. The corresponding pixels are marked in (c).\n        \n      \n      \n        5 Results and Discussions\n        We implemented our kernel Nystr?m method on a PC with Intel Core TM 2 Duo 3.2GHz CPU and 4GB of memory. In our implementation, we capture a batch of 10 rows and 10 columns in each adaptive capture step and experimentally set the threshold as ? = 0.05. A typical acquisition session (including image acquisition, HDR reconstruction, and kernel estimation) takes about 135 minutes for capturing 150 rows and 150 columns from the scene. The image  resolution is 1752 ? 1168, while the light sampling resolution is 1024 ? 768. To reconstruct the light transport matrix for relighting, we store the sampled matrices (C, R, A and A + ) in memory and reconstruct all rows of the matrix during rendering. With 150 rows and 150 columns, our kernel Nystr?m method takes less than 5 minutes to estimate the kernel and reconstruct all rows of the light transport matrix of the scene. For samples that do not fit in memory, we store one matrix (C in our implementation) on disk and the other matrices in memory. An out-of-core implementation, which is dominated by the disk I/O, then takes about 30 minutes for reconstruction. We tested our method on a variety of scenes exhibiting different light transport effects. As illustrated in Figure 6 , the caustics scene includes a set of transparent objects, where the light transport is dominated by caustics created by light refraction. In the shadow scene, the fine geometry of the dragon model results in complex occlusion and produces detailed shadows. The interreflection scene is designed to illustrate the strong inter-reflections between different objects and the color bleeding effects. In the general scene, objects with different material properties are placed together and present a mixture of different light transport effects, including reflection, refraction, shadows, and inter-reflections, subsurface scattering, and caustics. The light transport kernel coefficient and the sample number used in reconstruction for each scene are noted in the figure.\n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 29, Publication date: August 2009.\n        29:6 ? J. Wang et al.\n        rank\n        rank\n        45\n        45\n      \n      \n        5.1 Method Validation\n        We validate the kernel Nystr?m method with the light transport matrices acquired from the general scene and the shadow scene, in which the light sources are sampled on regular 35 ? 35 grids on the diffuser. We choose these two scenes for validation because the general scene includes a mixture of different kinds of light transport, while the shadow scene requires a large number of samples for reconstruction. We simulate the adaptive sampling scheme for each scene. In each iteration, we randomly pick 10 rows and 10 columns that are not in the sample set from the acquired full matrix and add them in the sparse sample set. After that, we estimate the light transport kernel f and compute the rank of the kernel mapped matrix f (A) of the sparse samples. The rank of a matrix is determined by the number of eigenvalues of the matrix that can preserve 95.0% energy of the original matrix. We also reconstruct the light transport matrix from the sparse sample set via the kernel  Nystr?m method. We repeat this process until the number of sparse samples achieves 300, which is more than the number of sparse samples n s determined by the adaptive sampling scheme with the pre-defined ? . Figure 7 shows plots of the ranks of kernel mapped matrices f (A) of sparse sample sets with a different number of samples, where the number of sparse samples n s determined by the adaptive sampling scheme is marked by an orange line. The blue line indicates the rank of the kernel mapped matrix f (T), in which the kernel function is estimated from the sparse sample set with n s samples. For both scenes, the ranks of f (A) of sparse samples grow as the number of samples increases and are close to the f (T) as the number of samples is close to n s , which leads to a good reconstruction. Figure 8 shows plots of the relative errors of the light transport matrices reconstructed from a different number of samples, where the relative reconstruction error is computed as\n        \n          \n          Figure 6: Four test scenes from our experiments: (a) caustic scene (b) shadow scene (c) interreflection scene (d) general scene. The number of rows n s and the light transport kernel coefficient ? for each scene are noted in the images.\n        \n        40 40\n        35 35\n        30\n        \n          \n        \n        30\n        \n          \n        \n        25 25 20 20 15 15 10 10 5 5 0 0 0 50 100 150 200 250 300 350 0 50 100 150 200 250 300 350 sample number sample number\n        \n          Figure 7: Ranks of the kernel mapped matrices f (A) of the sparse sample sets with different numbers of samples. The orange line indicates the sample number determined by the adaptive capturing scheme, while the blue line indicates the rank of the kernel mapped matrix f (T).\n        \n        \n          15\n          ? i, j |B i, j ? B  ? i, j | 2 ? = . ? i, j |B i, j | 2\n        \n        Here B i, j is the ground truth submatrix element that is not in the sparse sample set and B  ? i, j is the same submatrix element reconstructed using the kernel Nystr?m method. To further explore the impact of different sample sets to the reconstruction quality, we execute the above experiment 16 times, each time with different rows and columns randomly selected from the matrix. As shown in Figure 8, the relative error decreases quickly as the number of sparse samples increases. With the same number of sparse samples as we used in our capturing, the relative error of the reconstructed light transport matrix is below 5%. Also note that the variance of the error under the same number of samples reduces quickly with the  increasing number of samples, which guarantees the quality of the light transport matrix reconstructed from the random sampled rows and columns. Figure 9 compares the performance of the Nystr?m method and the kernel Nystr?m method for the general scene. For each sparse sample set, we reconstruct the light transport matrices using both the Nystr?m method and the kernel Nystr?m method. Their relative errors are shown in Figure 9 (a). Without the kernel extension, the Nystr?m method requires roughly five to six times the number of samples to achieve the same reconstruction quality as the kernel Nystr?m method does. Figure 9 (b) shows a visual comparison, where the same number of samples are used in both methods for reconstruction. The artifacts in the results generated with the Nystr?m method are clearly visible. Figure 10 compares the performance of the kernel Nystr?m method with different light transport kernels (i.e., different ? values) for the shadow scene. For each ? value, we reconstruct the light transport matrix from the same set of sparse samples (250 samples) with the kernel Nystr?m method. Figure 10(a) shows plots of the objective function g( ? ) and the relative error of the reconstructed light transport matrices as a function of ? . Note that the relative reconstruction error is minimal when the optimal ? value derived by our approach is used for reconstruction. Also, the light transport matrix is well reconstructed by the kernel Nystr?m method using the optimal ? value. However, the light transport matrices reconstructed with the kernel Nystr?m method using other ? values exhibit larger relative errors and visible artifacts. As shown in Figure 10(e) (g), the large ? value leads to visible artifacts concentrated in the region with high frequency features, while the small ? value results in the noise like artifacts scattered across the entire result image.\n        \n          \n          Figure 8: Relative reconstruction errors of the light transport matrix reconstructed from sparse sample sets with different number of samples. The orange line indicates the sample number determined by the adaptive capturing scheme.\n        \n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 29, Publication date: August 2009.\n        Kernel Nystr?m Method for Light Transport ? 29:7\n        \n          \n          Figure 9: Reconstruction results with the kernel Nystr?m method and with the Nystr?m method. The relative reconstruction errors with respect to the different numbers of samples are compared in (a). (b) The ground truth image. (c) Image rendered with matrix reconstructed from 150 samples with the Nystr?m method. (d) Image rendered with matrix reconstructed from 150 samples with the kernel Nystr?m method.\n        \n      \n      \n        5.2 Relighting Results\n         Figure 12 compares images rendered using the reconstructed light transport matrix to ground truth images showing illumination under a single point light that was not considered during the reconstruction process. The rendering results generated from the recon- structed light transport matrix are visually indistinguishable from the ground truth images. We used the reconstructed light transport matrix for image-based relighting. Figure 13 exhibits several results rendered with different lighting conditions. Note that complex light transport effects are faithfully reproduced, providing realistic results. See the companion video for relighting results under dynamic lighting.\n      \n      \n        5.3 Subsurface Scattering\n        We also applied the kernel Nystr?m method for modeling the light transport due to subsurface scattering. The light transport matrix in this case is an n ? n symmetric matrix, each element of which describes the diffuse BSSRDF R d between the two surface points x i and x j as T i j = R d (x i , x j ) [Goesele et al. 2004]. Since this matrix is symmetrical, we only need to sample the columns for reconstruction. In our implementation, we use a device setup similar to the one used in [Goesele et al. 2004] for capturing. The three laser emitters are close to each other and shoot three color beams to points over the object surface. We control the laser beams to make sure that they focus on the same surface point. HDR images of the object surface are captured from a fixed viewpoint. We repeat this process by shooting the laser beams to a random set of surface points. With the calibrated camera position and known geometry of the object, we map the image pixels onto the object surface. Figure 11(d) shows an image of the marble used in our experiments. With 50 sampled images, we reconstruct the light transport matrix of subsurface scattering using the kernel Nystr?m method. The coefficient of the light transport kernel used in reconstruction is ? = 0.0625. The resolution of surface points in the light transport matrix is the same as the image resolution. Figure 11 compares the rendering result of the reconstructed light transport matrix, the ground truth image captured from the object under the same lighting condition, and the result rendered by directly interpolating the nearby sample images. Note that the detailed spatial patterns and anisotropic subsurface scattering in the real material are well preserved with the reconstructed light transport matrix, while the results generated by interpolation clearly exhibit artifacts. Also note that to capture the light transport effects with a similar resolution, brute force methods [Goesele et al. 2004; Peers et al. 2006] need dense light sampling, which is prohibitively expensive and time consuming. We show relighting results of the reconstructed light transport matrix in the companion video.\n      \n      \n        5.4 Discussions\n        The light transport matrix of a scene exhibits both data coherence and sparsity. While the sparsity based approaches exploit the data sparsity for capturing the light transport matrix, the kernel Nystr?m method exploits the coherence in both rows and columns of the light transport matrix for the same task. For scenes with low frequency light transport effects, such as inter-reflections, subsurface scattering and glossy shading, their light transport matrices always exhibit strong coherence in both rows and columns, which can be efficiently reconstructed using the kernel Nystr?m method with dozens of images. In a scene that includes more sharp light transport variations, such as occlusions, specular reflections and refractions, the coherence in the column vectors may be reduced. By exploiting the coherence in the row vectors, the kernel Nystr?m method can still achieve good results with hundreds of image samples. In both cases, the kernel Nystr?m methods require much less images than the sparsity based methods. For comparison, we project the light transport matrices of the general scene and  the shadow scene onto the Haar wavelet basis. In each case, for reconstructing the entire matrix with the similar 5% relative error, we need to retain thousands of wavelet coefficients, which means that more than thousands of images are required for reconstructing the matrix with the sparsity based methods. In the extreme cases where the light transport matrix exhibits little coherence in both rows and columns, the kernel Nystr?m method would need all rows and columns of the matrix for good reconstruction. In this case, our approach has no advantage over the brute force methods and the sparsity based methods. An example is a scene of a mirror ball, where the light transport matrix exhibits good sparsity but little coherence. In this scenario, the sparsity based approaches may provide a good solution.\n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 29, Publication date: August 2009.\n        29:8 ? J. Wang et al.\n      \n      \n        6 Conclusion\n        We have presented the kernel Nystr?m method for reconstructing the light transport matrix from a relatively small number of acquired\n        \n          \n          Figure 10: Reconstruction results of the kernel Nystr?m method with different light transport kernels. (a) The objective function values and the relative reconstruction errors with respect to different ? values. (b) The ground truth image. (c)(e)(g) Images rendered with the matrices reconstructed with the kernel Nystr?m method using different ? values. The ? value used in (c) is the optimal one. (d)(f)(h) The difference images between the rendering results of the reconstructed matrices (c)(e)(g) and the ground truth image (b).\n        \n        \n          \n          Figure 11:\n        \n        Modeling subsurface light transport with the kernel Nystr?m method. (a) The image of marble lit by laser beam at one point. (b) Image rendered with reconstructed light transport matrix with light on the same point. (c)The difference between (a) and (b), intensity of which is scaled by 10. (d) Photograph of the flat marble sample. (e) Image rendered by interpolating the nearby sample images. (f) The difference between (a) and (e), intensity of which is scaled by 10.\n        images. While existing techniques typically require tens of thousands of images for accurate reconstruction of a light transport matrix, the kernel Nystr?m method can achieve a good reconstruction with a few hundred images and produces high quality relighting results. The kernel Nystr?m method is able to capture complex lighting effects and occlusions which are particularly challenging for many existing techniques, especially various sparsity-based methods. The effectiveness of the kernel Nystr?m method comes from its ability to exploit both the linear and nonlinear coherence in the light transport matrix from a relatively small number of rows and columns of the matrix. In future work, we are interested in investigating better kernel estimation methods and designing new kernel functions for light transport matrix reconstruction. We also plan to apply the kernel Nystr?m method to model surface reflectance. Finally, we want to explore ways to extend the kernel Nystr?m method to handle highdimensional tensor data.\n      \n      \n        7 Acknowledgements\n        The authors would like to thank Yi Ma and John Wright for helpful discussions, and Matthew Callcut for proofreading the paper and dubbing the video. We also thank the anonymous reviewers for their helpful suggestions and comments.\n      \n      \n        References\n        \n          A N , X., AND P ELLACINI , F. 2008. Appprop: All-pairs appearance-space edit propagation. ACM Transactions on Graphics 27, 3 (Aug.), 40:1?40:9.\n          C HUANG , Y.-Y., Z ONGKER , D. E., H INDORFF , J., C URLESS , B., S ALESIN , D. H., AND S ZELISKI , R. 2000. Environment matting extensions: Towards higher accuracy and real-time capture. In Proceedings of ACM SIGGRAPH 2000, Computer Graphics Proceedings, Annual Conference Series, 121?130.\n          C RISTIANINI , N., AND S HAWE -T AYLOR , J. 2000. An introduction to support vector machines and other kernel-based learning methods. Cambridge University Press.\n          D EBEVEC , P. E., AND M ALIK , J. 1997. Recovering high dynamic range radiance maps from photographs. In Proceedings of SIGGRAPH 97, Computer Graphics Proceedings, Annual Conference Series, 369?378.\n          D EBEVEC , P., H AWKINS , T., T CHOU , C., D UIKER , H.-P., S AROKIN , W., AND S AGAR , M. 2000. Acquiring the reflectance field of a human face. In Proceedings of ACM SIGGRAPH 2000, Computer Graphics Proceedings, Annual Conference Series, 145?156.\n          F AZEL , M. 2002. Matrix rank minimization with applications. PhD thesis, Stanford University.\n          F UCHS , M., B LANZ , V., L ENSCH , H. P. A., AND S EIDEL , H.-P. 2007. Adaptive sampling of reflectance fields. ACM Transactions on Graphics 26, 2 (June), 10:1?10:18.\n          G ARG , G., T ALVALA , E.-V., L EVOY , M., AND L ENSCH , H. P. A. 2006. Symmetric photography: Exploiting data-sparseness in reflectance fields. In Rendering Techniques 2006: 17th Eurographics Workshop on Rendering, 251?262.\n          G OESELE , M., L ENSCH , H. P. A., L ANG , J., F UCHS , C., AND S EIDEL , H.-P. 2004. Disco: acquisition of translucent objects. ACM Transactions on Graphics 23, 3 (Aug.), 835?844.\n          G OREINOV , S., T YRTYSHNIKOV , E. E., AND Z AMARASHKIN , N. L. 1997. A theory of pseudo-skeleton approximations. Linear Algeabra and Applications 261, 1?21.\n          H A SAN , M., P ELLACINI , F., AND B ALA , K. 2007. Matrix rowcolumn sampling for the many-light problem. ACM Transactions on Graphics 26, 3 (July), 26:1?26:10.\n          H A SAN , M., V ELAZQUEZ -A RMENDARIZ , E., P ELLACINI , F., AND B ALA , K. 2008. Tensor clustering for rendering manylight animations. Computer Graphics Forum (Proc. Eurographics Rendering 2008) 27, 4, 1105?1114.\n          H AWKINS , T., E INARSSON , P., AND D EBEVEC , P. 2005. A dual light stage. In Rendering Techniques 2005: 16th Eurographics Workshop on Rendering, 91?98.\n          L EVOY , M., AND H ANRAHAN , P. M. 1996. Light field rendering. In Proceedings of SIGGRAPH 96, Computer Graphics Proceedings, Annual Conference Series, 31?42.\n          L IN , Z., W ONG , T.-T., AND S HUM , H.-Y. Relighting with the reflected irradiance field: Representation, sampling and reconstruction. International Journal of Computer Vision 49, 2. M AHAJAN , D., S HLIZERMAN , I. K., R AMAMOORTHI , R., AND B ELHUMEUR , P. 2007. A theory of locally low dimensional light transport. ACM Transactions on Graphics 26, 3 (July), 62:1?62:10.\n          M ASSELUS , V., P EERS , P., D UTR ? , P., AND W ILLEMS , Y. D. 2003. Relighting with 4d incident light fields. ACM Transactions on Graphics 22, 3 (July), 613?620.\n          M ASSELUS , V., P EERS , P., D UTR 0108, P., AND W ILLEMS , Y. D. 2004. Smooth reconstruction and compact representation of reflectance functions for image-based relighting. In Rendering Techniques 2004: 15th Eurographics Workshop on Rendering, 287?298.\n          M ATUSIK , W., P FISTER , H., N GAN , A., B EARDSLEY , P., Z IEGLER , R., AND M C M ILLAN , L. 2002. Image-based 3D photography using opacity hulls. ACM Transactions on Graphics 21, 3 (July), 427?437.\n          M ATUSIK , W., L OPER , M., AND P FISTER , H. 2004. Progressively-refined reflectance functions from natural illumination. In Rendering Techniques 2004: 15th Eurographics Workshop on Rendering, 299?308.\n          N G , R., R AMAMOORTHI , R., AND H ANRAHAN , P. 2003. Allfrequency shadows using non-linear wavelet lighting approximation. ACM Transactions on Graphics 22, 3 (July), 376?381.\n          P EERS , P., AND D UTR ? , P. 2005. Inferring reflectance functions from wavelet noise. In Rendering Techniques 2005: 16th Eurographics Workshop on Rendering, 173?182.\n          P EERS , P., VOM B ERGE , K., M ATUSIK , W., R AMAMOORTHI , R., L AWRENCE , J., R USINKIEWICZ , S., AND D UTR ? , P. 2006. A compact factored representation of heterogeneous subsurface scattering. ACM Transactions on Graphics 25, 3 (July), 746? 753.\n          P EERS , P., M AHAJAN , D. K., L AMOND , B., G HOSH , A., M A TUSIK , W., R AMAMOORTHI , R., AND D EBEVEC , P. 2009. Compressive light transport sensing. ACM Transactions on Graphics 28, 1 (Jan.), 3:1?3:18.\n          P LATT , J. C. 2005. Fastmap, metricmap, and landmark mds are all nystr?m algorithms. In 10th International Workshop on Artificial Intelligence and Statistics, 261?268.\n          P RESS , W. H., ET AL . 1992. Numerical recipes in C (second edition). Cambridge University Press.\n          S EN , P., AND D ARABI , S. 2009. Compressive Dual Photography. Computer Graphics Forum 28, 2, 609 ? 618.\n          S EN , P., C HEN , B., G ARG , G., M ARSCHNER , S. R., H OROWITZ , M., L EVOY , M., AND L ENSCH , H. P. A. 2005. Dual photography. ACM Transactions on Graphics 24, 3, 745?755.\n          W ENGER , A., G ARDNER , A., T CHOU , C., U NGER , J., H AWKINS , T., AND D EBEVEC , P. 2005. Performance relighting and reflectance transformation with time-multiplexed illumination. ACM Transactions on Graphics 24, 3 (Aug.), 756?764.\n          W ILLIAMS , C., AND S EEGER , M. 2000. Using the nystr?m method to speed up kernel machines. Advances in Neural Information Processing Systems 13, 682?688.\n          Z ONGKER , D. E., W ERNER , D. M., C URLESS , B., AND S ALESIN , D. H. 1999. Environment matting and compositing. In Proceedings of SIGGRAPH 99, Computer Graphics Proceedings, Annual Conference Series, 205?214.\n        \n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 29, Publication date: August 2009.\n        Kernel Nystr?m Method for Light Transport ? 29:9\n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 29, Publication date: August 2009.\n        29:10 ? J. Wang et al.\n        \n          \n          Figure 12: Visual comparison of relighting results. Images in the first row are captured from each scene as illuminated by a point light source that is not used when acquiring images for the light transport matrix reconstruction. Images in the second row are rendered from the reconstructed light transport matrices of the scenes under the same lighting condition. The third row shows the difference images, with their intensities scaled up by a factor of 10.\n        \n        \n          \n          Figure 13: Relighting results under complex lighting. (a) The caustic scene. (b) The shadow scene. (c) The interreflection scene. (d) The general scene. The inset images show the three illumination patterns used for rendering.\n        \n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 29, Publication date: August 2009.\n      \n    \n  ",
  "resources" : [ ]
}