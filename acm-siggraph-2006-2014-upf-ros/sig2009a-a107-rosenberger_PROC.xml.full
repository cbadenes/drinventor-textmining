{
  "uri" : "sig2009a-a107-rosenberger_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2009a/a107-rosenberger_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Layered Shape Synthesis: Automatic Generation of Control Maps for Non-Stationary Textures",
    "published" : "2009",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Amir-Rosenberger",
      "name" : "Amir",
      "surname" : "Rosenberger"
    }, {
      "uri" : "http://drinventor/Daniel-Cohen-Or",
      "name" : "Daniel",
      "surname" : "Cohen-Or"
    }, {
      "uri" : "http://drinventor/Dani-Lischinski",
      "name" : "Dani",
      "surname" : "Lischinski"
    } ]
  },
  "bagOfWords" : [ "621b2be111e33dd355fb5370ce1367206a498fdbdd96dab979269160db8ad6ac", "oy8", "10.1145", "1618452.1618453", "name", "identification", "possible", "layered", "shape", "synthesis", "Automatic", "Generation", "Control", "Maps", "Non-Stationary", "Textures", "Amir", "Rosenberger", "Daniel", "Cohen-Or", "Tel", "Aviv", "University", "Tel", "Aviv", "University", "Figure", "inhomogeneous", "texture", "exhibit", "non-uniform", "mixture", "peel", "paint", "bare", "metal", "rust", "from", "leave", "right", "input", "texture", "exemplar", "control", "map", "extract", "from", "exemplar", "larger", "control", "map", "synthesize", "we", "approach", "result", "new", "texture", "many", "inhomogeneous", "real-world", "texture", "non-stationary", "exhibit", "various", "large", "scale", "pattern", "easily", "perceive", "human", "observer", "texture", "violate", "assumption", "underlie", "most", "state-of-the-art", "example-based", "synthesis", "method", "consequently", "can", "properly", "reproduce", "method", "unless", "suitable", "control", "map", "provide", "guide", "synthesis", "process", "control", "map", "typically", "either", "user", "specify", "generate", "simulation", "paper", "we", "present", "alternative", "method", "automatic", "example-based", "generation", "control", "map", "gear", "synthesis", "natural", "highly", "inhomogeneous", "texture", "those", "result", "from", "natural", "aging", "weather", "process", "we", "method", "base", "observation", "appropriate", "control", "map", "many", "texture", "may", "model", "superposition", "several", "layer", "where", "visible", "part", "each", "layer", "occupy", "more", "homogeneous", "texture", "thus", "give", "decomposition", "texture", "exemplar", "small", "number", "layer", "we", "employ", "novel", "example-based", "shape", "synthesis", "algorithm", "automatically", "generate", "new", "set", "layer", "we", "shape", "synthesis", "algorithm", "design", "preserve", "both", "local", "global", "characteristic", "exemplar?s", "layer", "map", "process", "result", "new", "control", "map", "which", "may", "use", "guide", "subsequent", "texture", "synthesis", "process", "keyword", "control", "map", "example-based", "texture", "synthesis", "nonstationary", "texture", "shape", "synthesis", "introduction", "computer", "generate", "imagery", "rely", "heavily", "texture", "achieve", "realism", "one", "easy", "way", "acquire", "realistic", "texture", "scanning", "ACM", "Reference", "Format", "Rosenberger", "a.", "cohen-or", "D.", "Lischinski", "D.", "2009", "layered", "shape", "synthesis", "Automatic", "Generation", "Control", "Maps", "Non-Stationary", "Textures", "ACM", "Trans", "graph", "28", "Article", "107", "-lrb-", "December", "2009", "-rrb-", "page", "dous", "10.1145", "1618452.1618453", "http://doi.acm.org/10.1145/1618452.1618453", "copyright", "Notice", "permission", "make", "digital", "hard", "copy", "part", "all", "work", "personal", "classroom", "use", "grant", "without", "fee", "provide", "copy", "make", "distribute", "profit", "direct", "commercial", "advantage", "copy", "show", "notice", "fus", "rst", "page", "initial", "screen", "display", "along", "full", "citation", "copyright", "component", "work", "own", "other", "than", "ACM", "must", "honor", "abstract", "credit", "permit", "copy", "otherwise", "republish", "post", "server", "redistribute", "list", "use", "any", "component", "work", "other", "work", "require", "prior", "specific", "permission", "and/or", "fee", "permission", "may", "request", "from", "Publications", "Dept.", "ACM", "Inc.", "Penn", "Plaza", "Suite", "701", "New", "York", "NY", "10121-0701", "fax", "+1", "-lrb-212-rrb-Â 869-0481", "permissions@acm.org", "2009", "ACM", "0730-0301/2009", "05-art107", "10.00", "DOI", "10.1145", "1618452.1618453", "http://doi.acm.org/10.1145/1618452.1618453", "Dani", "Lischinski", "Hebrew", "University", "take", "photograph", "surface", "material", "surround", "we", "real", "world", "therefore", "large", "number", "method", "have", "be", "propose", "synthesize", "texture", "from", "example", "last", "decade", "-lsb-", "Wei", "et", "al.", "2009", "-rsb-", "many", "method", "able", "produce", "impressive", "result", "when", "apply", "homogeneous", "texture", "may", "describe", "stationary", "Markov", "random", "field", "-lrb-", "mrf", "-rrb-", "model", "yet", "many", "real", "world", "texture", "highly", "inhomogeneous", "model", "well", "stationary", "stochastic", "process", "consider", "example", "rusty", "metal", "surface", "show", "leave", "Figure", "texture", "surface", "clearly", "non-stationary", "may", "see", "highly", "non-uniform", "mixture", "superposition", "several", "different", "texture", "peel", "paint", "bare", "metal", "rust", "while", "each", "three", "texture", "roughly", "homogeneous", "texture", "whole", "typical", "situation", "many", "real", "world", "surface", "whose", "texture", "often", "result", "from", "natural", "process", "weather", "corrosion", "color", "crack", "peel", "growth", "moss", "etc.", "-lsb-", "Dorsey", "Hanrahan", "1996", "Dorsey", "et", "al.", "1999", "Bosch", "et", "al.", "2004", "Desbenoit", "et", "al.", "2004", "Dorsey", "et", "al.", "2008", "-rsb-", "common", "remedy", "cope", "texture", "guide", "synthesis", "process", "control", "map", "encode", "large", "scale", "variation", "non-local", "feature", "desire", "output", "texture", "-lrb-", "e.g.", "-lsb-", "Ashikhmin", "2001", "Hertzmann", "et", "al.", "2001", "Zhang", "et", "al.", "2003", "Wang", "et", "al.", "2006", "Wei", "et", "al.", "2008", "-rsb-", "-rrb-", "however", "control", "map", "typically", "either", "user-specified", "produce", "custom", "tailor", "simulation", "-lrb-", "e.g.", "biological", "physically-based", "-rrb-", "work", "we", "propose", "new", "method", "automatically", "generate", "control", "map", "from", "example", "gear", "natural", "texture", "one", "Figure", "observe", "above", "texture", "often", "look", "like", "superposition", "several", "layer", "where", "each", "visible", "region", "each", "layer", "occupy", "more", "homogeneous", "texture", "shape", "texture-occupied", "region", "each", "layer", "far", "from", "arbitrary", "rather", "consequence", "specific", "natural", "process", "produce", "texture", "well", "shape", "layer", "underneath", "neither", "global", "statistics", "nor", "small", "neighborhood", "capable", "faithfully", "capture", "higher", "level", "structure", "appearance", "may", "generate", "specialize", "shader", "physically-based", "simulation", "however", "we", "aware", "any", "general", "fully", "automatic", "way", "generate", "shader", "from", "specific", "example", "we", "approach", "begin", "decompose", "input", "exemplar", "number", "layer", "which", "we", "order", "bottom", "top", "novel", "examplebased", "shape", "synthesis", "algorithm", "use", "generate", "new", "set", "layer", "whose", "local", "global", "characteristic", "visually", "resemble", "those", "exemplar?s", "layer", "algorithm", "make", "use", "bidirectional", "measure", "similarity", "between", "shape", "layer", "which", "base", "shape", "boundary", "start", "from", "some", "initial", "output", "shape", "we", "iteratively", "optimize", "shape", "respect", "similarity", "measure", "once", "new", "layer", "available", "texture", "transfer", "process", "base", "texture-by-number", "-lsb-", "Hertzmann", "et", "al.", "2001", "-rsb-", "invoke", "result", "final", "output", "texture", "result", "show", "Figure", "summary", "main", "novelty", "we", "approach", "lie", "example-based", "synthesis", "suitable", "control", "map", "rather", "than", "work", "directly", "texture", "some", "associated", "appearance", "space", "-lsb-", "Lefebvre", "Hoppe", "2006", "-rsb-", "we", "knowledge", "approach", "have", "be", "explore", "before", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "107", "publication", "date", "December", "2009", "107:2", "a.", "Rosenberger", "et", "al.", "related", "work", "example-based", "texture", "synthesis", "have", "enjoy", "considerable", "research", "attention", "recent", "year", "most", "relevant", "previous", "method", "may", "roughly", "classify", "parametric", "method", "-lsb-", "Heeger", "Bergen", "1995", "-rsb-", "non-parametric", "method", "which", "include", "pixel-based", "method", "-lsb-", "efro", "Leung", "1999", "Wei", "Levoy", "2000", "-rsb-", "patch-based", "method", "-lsb-", "efro", "Freeman", "2001", "Kwatra", "et", "al.", "2003", "-rsb-", "optimization-based", "method", "-lsb-", "Kwatra", "et", "al.", "2005", "-rsb-", "appearance-space", "texture", "synthesis", "-lsb-", "Lefebvre", "Hoppe", "2006", "-rsb-", "Parametric", "method", "attempt", "construct", "parametric", "model", "texture", "base", "input", "sample", "which", "have", "prove", "challenging", "task", "mostly", "successful", "structureless", "stationary", "texture", "non-parametric", "method", "have", "demonstrate", "ability", "handle", "wider", "variety", "texture", "grow", "texture", "one", "pixel/patch", "time", "optimization-based", "method", "evolve", "texture", "whole", "further", "improve", "quality", "result", "make", "synthesis", "more", "controllable", "we", "refer", "reader", "-lsb-", "Wei", "et", "al.", "2009", "-rsb-", "more", "comprehensive", "overview", "example-based", "texture", "synthesis", "while", "non-parametric", "method", "typically", "able", "reproduce", "small", "scale", "structure", "have", "difficulty", "cope", "highly", "inhomogeneous", "texture", "since", "texture", "can", "model", "stationary", "Markov", "Random", "Field", "-lrb-", "MRF", "-rrb-", "model", "which", "provide", "theoretical", "basis", "most", "method", "order", "handle", "texture", "control", "large", "scale", "structure", "ashikhmin", "-lsb-", "2001", "-rsb-", "propose", "guide", "synthesis", "process", "user-provided", "target", "image", "which", "specify", "local", "average", "color", "across", "target", "texture", "texture-by-numbers", "-lsb-", "Hertzmann", "et", "al.", "2001", "-rsb-", "extend", "idea", "further", "augment", "input", "exemplar", "label", "map", "where", "region", "distinct", "texture", "distinguish", "different", "label", "suitable", "label", "map", "may", "paint", "manually", "user", "create", "automatically", "use", "unsupervised", "image", "segmentation", "synthesize", "new", "image", "target", "label", "map", "provide", "which", "indicate", "how", "different", "texture", "should", "arrange", "result", "image", "however", "work", "address", "neither", "issue", "automatically", "generate", "label", "map", "natural", "inhomogeneous", "texture", "nor", "automatic", "synthesis", "target", "label", "map", "we", "do", "we", "work", "many", "other", "work", "since", "make", "use", "control", "map", "when", "synthesize", "non-stationary", "texture", "example", "-lsb-", "Zhang", "et", "al.", "2003", "Wang", "et", "al.", "2006", "Gu", "et", "al.", "2006", "Lu", "et", "al.", "2007", "Wei", "et", "al.", "2008", "-rsb-", "however", "all", "work", "control", "map", "target", "texture", "either", "provide", "user", "derive", "from", "specific", "model", "texture", "formation", "across", "3d", "surface", "-lrb-", "e.g.", "-lsb-", "Lu", "et", "al.", "2007", "-rsb-", "-rrb-", "we", "aware", "any", "previous", "attempt", "example-based", "control", "map", "generation", "we", "shape", "synthesis", "approach", "relate", "texture", "optimization", "technique", "-lsb-", "Wexler", "et", "al.", "2004", "Kwatra", "et", "al.", "2005", "-rsb-", "which", "synthe", "size", "texture", "minimize", "texture", "energy", "function", "function", "consist", "sum", "local", "term", "measure", "how", "close", "each", "synthesize", "texture", "patch", "exemplar", "patch", "however", "formulation", "do", "account", "possibility", "may", "many", "other", "patch", "exemplar", "represent", "all", "synthesize", "result", "while", "may", "adequate", "homogeneous", "texture", "where", "most", "patch", "similar", "each", "other", "quality", "result", "inhomogeneous", "texture", "often", "compromise", "while", "possible", "inject", "some", "global", "statistics", "optimization", "-lsb-", "Kopf", "et", "al.", "2007", "-rsb-", "result", "process", "still", "fail", "capture", "large", "scale", "appearance", "highly", "inhomogeneous", "natural", "texture", "target", "work", "contrast", "we", "perform", "shape", "synthesis", "bidirectional", "similarity", "measure", "-lrb-", "inspire", "Simakov", "et", "al.", "-lsb-", "2008", "-rsb-", "Wei", "et", "al.", "-lsb-", "Wei", "et", "al.", "2008", "-rsb-", "-rrb-", "demonstrate", "more", "faithful", "reproduction", "appearance", "comparison", "we", "present", "section", "appearance-space", "texture", "synthesis", "-lsb-", "Lefebvre", "Hoppe", "2006", "-rsb-", "another", "optimization", "method", "operate", "feature", "space", "rather", "than", "use", "value", "pixel", "small", "patch", "directly", "point", "correspond", "pixel", "more", "general", "feature", "space", "may", "encode", "more", "information", "allow", "structure", "reproduce", "better", "layer", "map", "we", "associate", "input", "exemplar", "we", "approach", "could", "view", "feature", "space", "custom-tailored", "synthesis", "layered", "inhomogeneous", "texture", "variety", "method", "generate", "texture", "weathered", "surface", "assume", "simulate", "physical", "model", "-lsb-", "dorsey", "Hanrahan", "1996", "Dorsey", "et", "al.", "1999", "Merillou", "et", "al.", "2001", "Bosch", "et", "al.", "2004", "Desbenoit", "et", "al.", "2004", "Dorsey", "et", "al.", "2008", "-rsb-", "while", "method", "have", "produce", "some", "highly", "realistic", "result", "gear", "towards", "match", "particular", "appearance", "give", "example", "also", "control", "result", "synthesis", "typically", "involve", "specify", "large", "number", "parameter", "which", "always", "intuitive", "contrast", "we", "approach", "example-based", "rather", "than", "physicallybased", "we", "approach", "synthesize", "boundary", "layer", "shape", "example", "thus", "related", "Curve", "Analogies", "work", "Hertzmann", "et", "al.", "-lsb-", "2002", "-rsb-", "where", "similar", "framework", "apply", "reproduce", "style", "curved", "shape", "however", "we", "work", "use", "different", "similarity", "measure", "operate", "discrete", "patch-based", "representation", "shape?s", "boundary", "rather", "than", "vector-based", "representation", "also", "related", "work", "Baht", "et", "al.", "-lsb-", "2004", "-rsb-", "which", "use", "binary", "voxel", "grid", "order", "synthesize", "geometric", "detail", "volume", "surface", "voxel", "grid", "similar", "binary", "neighborhood", "we", "use", "optimize", "shape", "boundary", "however", "goal", "add", "smaller-scale", "detail", "exist", "global", "shape", "while", "we", "focus", "synthesize", "entire", "shape", "from", "scratch", "layered", "shape", "synthesis", "work", "deal", "example-based", "generation", "control", "map", "represent", "layer", "map", "layer", "map", "image", "where", "different", "pixel", "value", "indicate", "different", "layer", "let", "...", "value", "layer", "map", "pixel", "sort", "ascend", "order", "layer", "define", "set", "all", "pixel", "whose", "value", "greater", "than", "equal", "note", "pixel", "value", "actually", "belong", "all", "layer", "...", "one", "can", "think", "layer", "stack", "top", "each", "other", "layer", "higher", "stack", "partially", "conceal", "lower", "layer", "each", "layer", "have", "associated", "foreground", "shape", "which", "we", "encode", "binary", "image", "same", "dimension", "layer", "map", "note", "shape", "+1", "always", "contain", "may", "see", "figure", "boundary", "nested", "shape", "highly", "correlate", "align", "figure", "paper", "we", "display", "value", "correspond", "different", "layer", "use", "unique", "color", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "107", "publication", "date", "December", "2009", "layered", "shape", "synthesis", "Automatic", "Generation", "Control", "Maps", "Non-Stationary", "Textures", "107:3", "0.0", "1.3", "3.0", "5.3", "6.0", "0.0", "2.7", "5.0", "5.4", "0.0", "5.0", "5.3", "0.0", "4.6", "0.0", "figure", "similarity", "measure", "between", "pair", "five", "different", "shape", "give", "set", "shape", "we", "goal", "synthesize", "new", "set", "shape", "while", "maintain", "both", "global", "local", "similarity", "original", "one", "purpose", "important", "each", "shape", "occupy", "same", "relative", "amount", "pixel", "synthesize", "map", "do", "exemplar", "boundary", "synthesize", "shape", "locally", "resemble", "those", "exemplar", "we", "find", "represent", "shape", "means", "its", "boundary", "curve", "fail", "capture", "all", "relevant", "information", "representation", "can", "predict", "spatial", "relationship", "between", "disconnect", "component", "shape", "do", "prevent", "self-intersection", "instead", "we", "represent", "binary", "shape", "collection", "patch", "center", "shape?s", "boundary", "pixel", "-lrb-", "multiple", "resolution", "-rrb-", "order", "capture", "necessary", "shape", "property", "we", "shape", "synthesis", "approach", "employ", "optimization", "similarly", "-lsb-", "Wexler", "et", "al.", "2004", "Kwatra", "et", "al.", "2005", "-rsb-", "where", "synthesize", "result", "iteratively", "optimize", "respect", "some", "measure", "its", "similarity", "exemplar", "we", "begin", "derive", "suitable", "bidirectional", "shape", "similarity", "measure", "similarly", "Simakov", "et", "al.", "-lsb-", "2008", "-rsb-", "Wei", "et", "al.", "-lsb-", "2008", "-rsb-", "next", "we", "describe", "novel", "greedy", "optimization", "scheme", "iteratively", "modify", "initial", "shape", "so", "increase", "its", "similarity", "give", "exemplar", "shape", "finally", "we", "discuss", "how", "mechanism", "use", "create", "entire", "new", "layer", "map", "which", "sequence", "nested", "shape", "from", "layer", "map", "produce", "layer", "decomposition", "phase", "describe", "previous", "section", "3.1", "shape", "similarity", "measure", "let", "set", "boundary", "pixel", "shape", "respectfully", "boundary", "pixel", "pixel", "inside", "shape", "least", "one", "its", "4-neighbor", "outside", "shape", "let", "two", "boundary", "pixel", "let", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "neighborhood", "center", "around", "they", "rotate", "-lcb-", "90", "180", "270", "-rcb-", "we", "refer", "neighborhood", "boundary", "patch", "we", "define", "similarity", "between", "two", "boundary", "pixel", "distance", "between", "neighborhood", "-lrb-", "rotate", "distance", "minimize", "-rrb-", "formally", "-lrb-", "-rrb-", "min", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "since", "we", "deal", "binary", "image", "norm", "above", "simply", "number", "different", "pixel", "between", "two", "patch", "next", "we", "define", "local", "similarity", "between", "boundary", "pixel", "boundary", "-lrb-", "another", "-rrb-", "shape", "similarity", "between", "pixel", "most", "similar", "boundary", "-lrb-", "-rrb-", "min", "-lrb-", "-rrb-", "note", "similarity", "measure", "symmetric", "while", "ensure", "every", "boundary", "patch", "similar", "boundary", "patch", "Figure", "iterative", "assignment", "boundary", "patch", "exemplar", "boundary", "patch", "-lrb-", "left", "-rrb-", "assign", "synthesize", "boundary", "patch", "-lrb-", "right", "-rrb-", "case", "where", "two", "patch", "assign", "same", "one", "assignment", "larger", "difference", "-lrb-", "red", "arrow", "-rrb-", "discard", "assign", "another", "patch", "future", "iteration", "-lrb-", "yellow", "arrow", "-rrb-", "may", "boundary", "patch", "well", "represent", "example", "simple", "shape", "may", "deem", "similar", "more", "complex", "one", "also", "happen", "contain", "some", "simple", "feature", "thus", "we", "require", "bidirectional", "similarity", "measure", "define", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "which", "average", "number", "different", "pixel", "between", "boundary", "patch", "one", "shape", "its", "nearest", "neighbor", "other", "figure", "show", "several", "different", "shape", "report", "pairwise", "bidirectional", "similarity", "3.2", "shape", "optimization", "arm", "similarity", "measure", "above", "we", "use", "optimization", "procedure", "iteratively", "modify", "boundary", "synthesize", "shape", "make", "more", "similar", "exemplar", "shape", "optimization", "proceed", "from", "coarse", "fine", "resolution", "each", "resolution", "we", "alternate", "between", "two", "main", "step", "-lrb-", "-rrb-", "match", "each", "boundary", "patch", "boundary", "patch", "-lrb-", "ii", "-rrb-", "modify", "add", "remove", "pixel", "base", "result", "match", "achieve", "previous", "step", "iterative", "optimization", "procedure", "resemble", "Kwatra", "et", "al.", "-lsb-", "2005", "-rsb-", "each", "two", "main", "step", "differ", "significantly", "from", "its", "counterpart", "because", "we", "minimize", "different", "-lrb-", "bidirectional", "-rrb-", "energy", "function", "work", "binary", "image", "rather", "than", "texture", "two", "step", "discuss", "more", "detail", "below", "boundary", "patch", "matching", "point", "out", "earlier", "we", "would", "like", "every", "boundary", "patch", "resemble", "one", "we", "would", "also", "like", "every", "boundary", "patch", "represent", "S.", "thus", "assume", "we", "have", "equal", "number", "boundary", "patch", "we", "seek", "minimum", "cost", "assignment", "fundamental", "combinatorial", "optimization", "problem", "-lsb-", "Schrijver", "2003", "-rsb-", "solve", "problem", "exactly", "too", "expensive", "we", "purpose", "-lrb-", "-lrb-", "-rrb-", "where", "number", "patch", "-rrb-", "so", "we", "resort", "approximate", "solution", "use", "iterative", "greedy", "approach", "describe", "below", "let", "denote", "set", "boundary", "patch", "respectively", "assume", "now", "two", "set", "have", "same", "size", "each", "patch", "initially", "assign", "its", "nearest", "neighbor", "result", "some", "patch", "may", "have", "more", "than", "one", "exemplar", "patch", "assign", "they", "while", "other", "may", "have", "none", "-lrb-", "see", "Figure", "-rrb-", "former", "case", "we", "keep", "only", "assignment", "smallest", "difference", "discard", "rest", "all", "pair", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "107", "publication", "date", "December", "2009", "107:4", "a.", "Rosenberger", "et", "al.", "Figure", "refining", "shape", "boundary", "we", "multi-resolution", "optimization", "two", "initial", "shape", "-lrb-", "left", "-rrb-", "evolve", "use", "two", "different", "exemplar", "-lrb-", "right", "-rrb-", "Figure", "leave", "shape", "adjustment", "boundary", "exemplar", "patch", "superimpose", "over", "assign", "position", "pixel", "region", "overlap", "between", "superimpose", "patch", "may", "add", "shape", "-lrb-", "green", "dot", "-rrb-", "remove", "from", "-lrb-", "red", "dot", "-rrb-", "make", "new", "boundary", "more", "similar", "exemplar", "right", "match", "patch", "from", "previous", "shape", "-lrb-", "gold", "-rrb-", "superimpose", "again", "seed", "new", "shape", "-lrb-", "blue", "-rrb-", "patch", "which", "have", "be", "assign", "remove", "from", "further", "consideration", "process", "repeat", "until", "every", "patch", "have", "be", "assign", "general", "differ", "size", "typically", "synthesize", "shape", "larger", "than", "exemplar", "thus", "assume", "we", "construct", "set", "exemplar", "patch", "size", "include", "each", "exemplar", "patch", "time", "randomly", "select", "additional", "patch", "from", "way", "we", "ensure", "all", "boundary", "feature", "exemplar", "shape", "get", "equal", "chance", "represent", "synthesize", "shape", "shape", "adjustment", "after", "find", "assignment", "describe", "above", "we", "goal", "modify", "boundary", "so", "increase", "similarity", "-lrb-", "reduce", "-lrb-", "-rrb-", "-rrb-", "achieve", "we", "superimpose", "each", "exemplar", "patch", "over", "its", "counterpart", "consider", "pixel", "outside", "which", "cover", "several", "overlap", "super", "impose", "patch", "from", "informally", "patch", "agree", "should", "part", "shape", "add", "S.", "similarly", "pixel", "inside", "might", "remove", "overlap", "patch", "agree", "should", "belong", "shape", "illustrate", "Figure", "-lrb-", "left", "-rrb-", "more", "specifically", "consider", "pixel", "vicinity", "boundary", "cover", "two", "group", "overlap", "superimpose", "exemplar", "patch", "one", "group", "predict", "belong", "shape", "while", "other", "one", "predict", "outside", "shape", "each", "two", "prediction", "we", "compute", "score", "sum", "up", "weight", "corresponding", "group?s", "patch", "x.", "let", "boundary", "pixel", "exemplar", "pixel", "assign", "entire", "exemplar", "patch", "assign", "follow", "weight", "-lrb-", "-rrb-", "which", "further", "multiply", "gaussian", "falloff", "function", "-lrb-", "thus", "weight", "decrease", "away", "from", "center", "patch", "-rrb-", "sigma", "value", "function", "choose", "half", "patch", "size", "group", "highest", "score", "determine", "whether", "should", "include", "exclude", "from", "shape", "when", "sum", "weight", "accumulate", "each", "pixel", "below", "threshold", "its", "value", "remain", "unchanged", "because", "patch", "weight", "reflect", "degree", "certainty", "so", "area", "low", "weight", "more", "sensitive", "randomness", "generate", "we", "approximate", "nearest", "neighbor", "search", "greedy", "assignment", "use", "new", "value", "may", "produce", "noise", "threshold", "also", "determine", "final", "amount", "pixel", "shape", "after", "iteration", "do", "therefore", "set", "dynamically", "so", "-lrb-", "relative", "-rrb-", "amount", "pixel", "inside", "shape", "same", "exemplar", "candidate", "from", "interval", "-lsb-", "10", "10", "-rsb-", "test", "one", "which", "result", "nearest", "amount", "choose", "after", "update", "complete", "optimization", "procedure", "repeat", "until", "convergence", "convergence", "reach", "when", "number", "change", "pixel", "fall", "below", "threshold", "mention", "earlier", "optimization", "proceed", "from", "coarse", "fine", "resolution", "result", "compute", "each", "resolution", "level", "upsample", "serve", "start", "point", "next", "-lrb-", "finer", "-rrb-", "level", "coarser", "resolution", "global", "structure", "form", "while", "fine", "resolution", "fill", "fine", "detail", "along", "shape?s", "boundary", "we", "example", "we", "use", "resolution", "level", "Figure", "show", "how", "different", "initialization", "lead", "different", "global", "shape", "however", "all", "example", "synthesize", "shape", "contain", "boundary", "feature", "very", "similar", "those", "present", "exemplar", "result", "close", "overall", "resemblance", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "107", "publication", "date", "December", "2009", "layered", "shape", "synthesis", "Automatic", "Generation", "Control", "Maps", "Non-Stationary", "Textures", "107:5", "Figure", "we", "inhomogeneous", "texture", "synthesis", "approach", "3.3", "Layer", "map", "synthesis", "shape", "optimization", "procedure", "present", "previous", "section", "may", "use", "directly", "synthesize", "first", "-lrb-", "bottom", "-rrb-", "layer", "randomly", "generate", "shape", "number", "foreground", "pixel", "match", "corresponding", "exemplar", "layer", "may", "use", "initialization", "order", "generate", "follow", "layer", "however", "we", "must", "introduce", "number", "modification", "first", "shape", "each", "layer", "nested", "inside", "shape", "layer", "beneath", "second", "boundary", "two", "successive", "layer", "typically", "highly", "correlate", "preserve", "correlation", "important", "instrumental", "faithfully", "reproduce", "appearance", "exemplar", "synthesize", "result", "obvious", "how", "initialize", "shape", "next", "layer", "under", "condition", "address", "requirement", "we", "begin", "synthesis", "each", "layer", "+1", "create", "mask", "define", "area", "-lrb-", "contain", "inside", "shape", "previous", "layer", "-rrb-", "where", "current", "shape", "allow", "evolve", "initially", "mask", "set", "entire", "shape", "we", "use", "most", "recent", "boundary", "patch", "assignment", "-lrb-", "from", "last", "shape", "optimization", "iteration", "-rrb-", "shrink", "mask", "down", "better", "initial", "guess", "region", "contain", "+1", "more", "specifically", "we", "again", "superimpose", "boundary", "patch", "from", "exemplar", "over", "assign", "location", "boundary", "time", "we", "try", "predict", "which", "pixel", "inside", "should", "belong", "mask", "+1", "illustrate", "Figure", "-lrb-", "right", "-rrb-", "thus", "interior", "seed", "pixel", "which", "predict", "belong", "+1", "sufficiently", "large", "weight", "mask", "shrink", "include", "only", "seed", "pixel", "seed", "pixel", "high", "weight", "form", "initial", "guess", "+1", "while", "those", "somewhat", "smaller", "weight", "define", "remain", "region", "mask", "within", "which", "shape", "allow", "evolve", "course", "optimization", "initialization", "each", "new", "layer", "do", "via", "seeding", "mechanism", "coarsest", "resolution", "where", "boundary", "patch", "large", "enough", "fully", "cover", "interior", "previous", "shape", "similar", "step", "repeat", "beginning", "each", "resolution", "level", "recreate", "accurate", "mask", "current", "level", "new", "resolution", "refine", "shape", "boundary", "after", "step", "shape", "optimization", "proceed", "describe", "before", "continuous", "control", "map", "we", "experiment", "we", "find", "subsequent", "texture", "synthesis", "process", "can", "sometimes", "improve", "switch", "from", "discrete", "layer", "map", "continuous", "control", "map", "specifically", "each", "pixel", "inside", "shape", "its", "continuous", "map", "value", "set", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "+1", "-lrb-", "-rrb-", "where", "-lrb-", "-rrb-", "+1", "-lrb-", "-rrb-", "distance", "from", "+1", "respectively", "-lrb-", "see", "Figure", "-rrb-", "distance", "obtain", "perform", "distance", "transform", "over", "Distance", "transform", "be", "also", "use", "create", "control", "map", "Lefebvre", "Hoppe", "-lsb-", "2006", "-rsb-", "Figure", "distance", "from", "point", "inside", "shape", "neighbor", "shape", "use", "convert", "discrete", "label", "map", "-lrb-", "left", "-rrb-", "continuous", "one", "-lrb-", "right", "-rrb-", "application", "result", "we", "find", "layered", "shape", "synthesis", "approach", "describe", "previous", "texture", "effective", "synthesis", "inhomogeneous", "texture", "those", "result", "from", "natural", "aging", "weather", "process", "synthesis", "process", "texture", "consist", "three", "successive", "phase", "depict", "Figure", "layer", "decomposition", "shape", "synthesis", "texture", "synthesis", "layer", "decomposition", "phase", "take", "inhomogeneous", "texture", "sample", "input", "generate", "layer", "map", "which", "encode", "distinct", "homogeneous", "texture", "region", "-lrb-", "layer", "-rrb-", "present", "input", "assign", "unique", "label", "all", "pixel", "belong", "same", "layer", "follow", "texture", "classification", "approach", "advocate", "Varma", "Zisserman", "-lsb-", "2003", "-rsb-", "we", "first", "segment", "exemplar?s", "pixel", "perform", "k-means", "clustering", "dimensional", "feature", "vector", "form", "concatenate", "value", "each", "pixel?s", "neighborhood", "we", "currently", "rely", "user", "specify", "number", "distinct", "texture", "visible", "exemplar", "typically", "between", "set", "15", "all", "we", "example", "result", "cluster", "should", "roughly", "correspond", "distinct", "texture", "present", "exemplar", "point", "closer", "cluster", "center", "due", "pixel", "more", "typical", "representative", "corresponding", "texture", "while", "point", "far", "away", "from", "center", "come", "from", "area", "transition", "between", "texture", "let", "...", "result", "cluster", "order", "user", "bottom", "layer", "-lrb-", "original", "clean", "surface", "-rrb-", "top", "layer", "-lrb-", "most", "weather", "surface", "-rrb-", "layer", "map", "we", "set", "foreground", "pixel", "+1", "...", "cluster", "have", "be", "order", "properly", "sequence", "...", "express", "possible", "natural", "evolution", "spread", "over", "time", "weather", "phenomenon", "capture", "exemplar", "last", "phase", "we", "use", "new", "layer", "map", "obtain", "shape", "synthesis", "phase", "-lrb-", "section", "-rrb-", "synthesize", "new", "inhomogeneous", "texture", "do", "apply", "texture-by-number", "framework", "-lsb-", "Hertzmann", "et", "al.", "2001", "-rsb-", "while", "apply", "texture-by-number", "directly", "layer", "map", "often", "produce", "satisfactory", "result", "visual", "quality", "may", "further", "improve", "switch", "from", "discrete", "layer", "map", "continuous", "one", "describe", "previous", "section", "continuous", "map", "may", "see", "heuristic", "analogue", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "107", "publication", "date", "December", "2009", "107:6", "a.", "Rosenberger", "et", "al.", "ACM", "Figure", "transaction", "variety", "Graphics", "result", "Vol", "28", "produce", "no.", "Article", "we", "107", "method", "publication", "leave", "date", "December", "input", "exemplar", "2009", "decomposition", "layer", "middle", "synthesize", "layer", "map", "Right", "final", "synthesize", "result", "layered", "shape", "synthesis", "Automatic", "Generation", "Control", "Maps", "Non-Stationary", "Textures", "107:7", "Figure", "terrain", "generation", "height", "map", "synthesis", "use", "we", "method", "leave", "input", "height", "map", "its", "decomposition", "layer", "middle", "synthesize", "layer", "map", "Right", "final", "synthesize", "result", "input", "we", "result", "figure", "10", "comparison", "we", "approach", "texture", "optimization", "without", "histogram", "matching", "top", "row", "both", "method", "perform", "synthesis", "directly", "from", "exemplar", "bottom", "two", "row", "we", "attempt", "use", "texture", "optimization", "synthesize", "new", "layer", "map", "weather", "degree", "map", "-lsb-", "Wang", "et", "al.", "2006", "-rsb-", "we", "experiment", "we", "method", "variety", "natural", "inhomogeneous", "texture", "some", "result", "show", "figure", "example", "quite", "varied", "showcase", "phenomenon", "corrosion", "rust", "lichen", "peel", "paint", "differ", "significantly", "only", "appearance", "also", "underlie", "layer", "structure", "may", "see", "from", "layer", "map", "extract", "we", "method", "we", "method", "successfully", "reproduce", "global", "layer", "structure", "local", "fine", "detail", "shape", "boundary", "final", "appearance", "texture", "we", "method", "limit", "texture", "however", "-lsb-", "Kopf", "et", "al.", "2007", "-rsb-", "-lsb-", "Kwatra", "et", "al.", "2005", "-rsb-", "other", "inhomogeneous", "texture", "exhibit", "layered", "structure", "nested", "shape", "may", "synthesize", "well", "example", "we", "have", "synthesize", "plausible", "fictional", "satellite", "image", "from", "one", "Earth", "-lrb-", "bottom", "row", "Figure", "-rrb-", "since", "we", "use", "patch-based", "shape", "synthesis", "some", "repetition", "do", "occur", "mostly", "difficult", "spot", "explicitly", "limit", "we", "approach", "we", "fair", "boundary", "sampling", "assignment", "mechanism", "another", "application", "we", "approach", "example-based", "terrain", "synthesis", "demonstrate", "Figure", "height", "map", "use", "represent", "terrain", "may", "also", "consider", "non-stationary", "texture", "which", "we", "layered", "shape", "synthesis", "approach", "fit", "perfectly", "generation", "layer", "map", "simple", "quantization", "height", "map", "use", "boundary", "layer", "resemble", "contour", "line", "topographic", "map", "application", "which", "similar", "texture", "synthesis", "describe", "before", "shape", "synthesis", "phase", "generate", "new", "topographic", "layout", "synthesize", "terrain", "texture", "synthesis", "phase", "add", "fine", "detail", "computation", "time", "we", "method", "dominate", "texture", "number", "phase", "which", "take", "up", "five", "hour", "800", "600", "image", "use", "neighborhood", "time", "take", "synthesize", "new", "layer", "map", "depend", "total", "length", "shape", "boundary", "complexity", "optimization", "step", "linear", "number", "nearest", "neighbor", "call", "each", "boundary", "patch", "we", "use", "approximate", "nearest", "neighbor", "search", "via", "locally", "sensitive", "hash", "-lsb-", "Datar", "Indyk", "2004", "-rsb-", "take", "we", "unoptimized", "code", "20", "30", "seconds", "average", "complete", "one", "optimization", "iteration", "800", "600", "image", "typically", "10", "iteration", "use", "each", "resolution", "level", "so", "execution", "time", "per", "layer", "up", "30", "minute", "we", "compare", "we", "method", "two", "previous", "example-based", "texture", "synthesis", "method", "texture", "optimization", "-lsb-", "Kwatra", "et", "al.", "2005", "-rsb-", "texture", "optimization", "color", "histogram", "match", "-lsb-", "Kopf", "et", "al.", "2007", "-rsb-", "Figure", "10", "show", "result", "three", "method", "side-byside", "top", "row", "show", "final", "synthesis", "result", "texture", "rusting", "surface", "kwatra?s", "method", "suit", "stationary", "texture", "exhibit", "multiple", "obvious", "repetition", "make", "result", "quite", "dissimilar", "from", "exemplar", "kopf?s", "result", "match", "global", "color", "statistics", "exemplar", "produce", "better", "result", "some", "repetition", "still", "apparent", "some", "region", "synthesize", "texture", "do", "have", "similar", "counterpart", "exemplar", "-lrb-", "large", "region", "lighter", "rust", "near", "center", "-rrb-", "also", "interesting", "examine", "whether", "previous", "method", "able", "synthesize", "layer", "map", "rather", "than", "synthesize", "texture", "directly", "do", "two", "example", "show", "two", "bottom", "row", "Figure", "10", "middle", "row", "layer", "map", "extract", "from", "cloudy", "sky", "texture", "while", "bottom", "row", "layer", "map", "from", "terrain", "Figure", "both", "example", "previous", "method", "generate", "more", "repetition", "entire", "region", "layer", "map", "several", "place", "direct", "transition", "between", "non-adjacent", "layer", "which", "present", "input", "map", "Figure", "11", "show", "inpainting", "example", "where", "hole", "fill", "inside", "inhomogeneous", "texture", "while", "result", "obviously", "identical", "original", "image", "quite", "plausible", "fill", "region", "blend", "well", "original", "part", "layer", "map", "inside", "hole", "initialize", "randomly", "since", "we", "method", "modify", "entire", "layer", "map", "after", "each", "optimization", "step", "we", "reset", "layer", "map", "outside", "hole", "back", "original", "one", "Figure", "12", "demonstrate", "feasibility", "control", "result", "synthesis", "via", "painting", "interface", "exemplar", "its", "layer", "map", "show", "third", "row", "figure", "user", "sketch", "yellow", "approximate", "position", "where", "rust", "should", "result", "sketch", "serve", "initialization", "shape", "synthesis", "phase", "thin", "strip", "blue", "green", "pixel", "automatically", "add", "system", "since", "yellow", "layer", "shape", "suppose", "nested", "inside", "blue", "green", "layer", "shape", "order", "avoid", "change", "user", "sketch", "shape", "too", "much", "fewer", "resolution", "level", "use", "shape", "synthesis", "method", "result", "middle", "image", "Figure", "12", "while", "rightmost", "image", "synthesize", "texture", "Limitations", "we", "approach", "make", "two", "basic", "assumption", "-lrb-", "-rrb-", "control", "map", "consist", "order", "set", "layer", "nested", "within", "each", "other", "-lrb-", "-rrb-", "propose", "shape", "similarity", "measure", "capture", "all", "shape", "characteristic", "one", "aim", "reproduce", "violation", "either", "assumption", "may", "lead", "failure", "discuss", "below", "-lrb-", "-rrb-", "first", "type", "failure", "demonstrate", "synthetic", "example", "top", "row", "Figure", "13", "here", "we", "green", "blue", "region", "independent", "each", "other", "input", "-lrb-", "e.g.", "natural", "texture", "whose", "appearance", "result", "from", "two", "independent", "process", "-rrb-", "we", "approach", "assume", "layered", "model", "generate", "green", "layer", "first", "follow", "blue", "layer", "result", "relation", "between", "green", "blue", "region", "preserve", "several", "blue", "region", "synthesize", "inside", "green", "one", "-lrb-", "-rrb-", "propose", "similarity", "measure", "characterize", "shape", "local", "appearance", "boundary", "without", "consider", "shape", "whole", "thus", "better", "suit", "fine-scale", "unstructured", "shape", "fractal-like", "boundary", "more", "structured", "element", "might", "better", "handle", "other", "model", "example", "location", "desert", "bottom", "row", "figure", "might", "have", "be", "reproduce", "better", "use", "context-aware", "texture", "framework", "-lsb-", "Lu", "et", "al.", "2007", "-rsb-", "bottom", "row", "Figure", "13", "show", "another", "synthetic", "example", "where", "easily", "recognizable", "distinct", "shape", "input", "map", "appear", "mix", "map", "generate", "we", "method", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "107", "publication", "date", "December", "2009", "107:8", "a.", "Rosenberger", "et", "al.", "Figure", "11", "inpainting", "leave", "original", "right", "we", "result", "Figure", "12", "example", "user", "control", "via", "painting", "interface", "Figure", "13", "example", "failure", "case", "top", "violation", "layer", "model", "bottom", "failure", "reproduce", "specific", "shape", "conclusion", "we", "have", "present", "novel", "example-based", "method", "synthesis", "control", "map", "suitable", "non", "stationary", "texture", "those", "result", "from", "weather", "end", "we", "have", "develop", "new", "powerful", "example-based", "shape", "synthesis", "algorithm", "represent", "shape", "collection", "boundary", "patch", "multiple", "resolution", "synthesize", "new", "shape", "from", "example", "optimize", "bidirectional", "similarity", "function", "application", "we", "method", "include", "synthesis", "natural", "texture", "terrain", "generation", "future", "work", "we", "hope", "extend", "method", "shape", "synthesis", "larger", "set", "texture", "example", "texture", "do", "exhibit", "clear", "hierarchy", "layer", "texture", "larger", "structure", "we", "current", "measure", "emphasize", "boundary", "similarity", "over", "other", "property", "area", "boundary", "length", "ratio", "which", "maintain", "only", "implicitly", "we", "would", "like", "gain", "better", "understanding", "relation", "between", "property", "experiment", "various", "extension", "we", "similarity", "measure", "we", "would", "also", "like", "discover", "additional", "application", "we", "shape", "synthesis", "approach", "particular", "would", "interesting", "explore", "applicability", "approach", "synthesis", "3d", "shape", "acknowledgment", "work", "support", "part", "grant", "from", "Israel", "Ministry", "Science", "from", "Israel", "Science", "Foundation", "found", "Israel", "Academy", "Sciences", "Humanities", "author", "would", "also", "like", "thank", "anonymous", "reviewer", "whose", "suggestion", "be", "greatly", "helpful", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "107", "publication", "date", "December", "2009", "layered", "shape", "synthesis", "Automatic", "Generation", "Control", "Maps", "Non-Stationary", "Textures", "107:9", "reference", "SHIKHMIN", "M.", "2001", "synthesize", "natural", "texture", "Proc", "Symp", "interactive", "3d", "graphic", "217", "226", "hat", "P.", "ngram", "S.", "urk", "G.", "2004", "geometric", "texture", "synthesis", "example", "sgp", "04", "Proceedings", "2004", "Eurographics/ACM", "SIGGRAPH", "symposium", "geometry", "processing", "ACM", "New", "York", "NY", "USA", "41", "44", "osch", "C.", "ueyo", "X.", "RILLOU", "S.", "hazanfar", "pour", "D.", "2004", "physically-based", "model", "render", "realistic", "scratch", "Computer", "Graphics", "Forum", "23", "-lrb-", "Sept.", "-rrb-", "361", "370", "atar", "m.", "ndyk", "P.", "2004", "locality-sensitive", "hash", "scheme", "base", "p-stable", "distribution", "Proc", "SCG", "04", "ACM", "Press", "253", "262", "esbenoit", "B.", "ALIN", "E.", "KKOUCHE", "S.", "2004", "simulate", "modeling", "lichen", "growth", "Computer", "Graphics", "Forum", "23", "-lrb-", "Sept.", "-rrb-", "341", "350", "orsey", "J.", "ANRAHAN", "P.", "1996", "modeling", "rendering", "metallic", "patina", "Proc", "SIGGRAPH", "96", "Addison", "Wesley", "387", "396", "orsey", "J.", "DELMAN", "A.", "ENSEN", "H.", "W.", "EGAKIS", "J.", "edersen", "H.", "K.", "1999", "modeling", "rendering", "weathered", "stone", "Proc", "SIGGRAPH", "99", "ACM", "Press", "225", "234", "orsey", "J.", "USHMEIER", "H.", "ILLION", "F.", "2008", "Digital", "Modeling", "Material", "appearance", "Computer", "Graphics", "Morgan", "Kaufmann", "Elsevier", "Dec.", "336", "page", "fro", "a.", "a.", "reeman", "W.", "T.", "2001", "image", "quilting", "texture", "synthesis", "transfer", "Proc", "SIGGRAPH", "2001", "341", "346", "fro", "a.", "a.", "eung", "T.", "K.", "1999", "texture", "synthesis", "non-parametric", "sampling", "Proc", "iccv", "99", "1033", "1038", "J.", "C.-I.", "AMAMOORTHI", "R.", "ELHUMEUR", "P.", "tusik", "W.", "AYAR", "S.", "2006", "time-varying", "surface", "appearance", "acquisition", "modeling", "rendering", "ACM", "transaction", "Graphics", "25", "-lrb-", "Proc", "SIGGRAPH", "2006", "-rrb-", "762", "771", "eeger", "D.", "J.", "ERGEN", "J.", "R.", "1995", "pyramid-based", "texture", "analysis/synthesis", "Proc", "SIGGRAPH", "95", "229", "238", "ertzmann", "a.", "ACOBS", "C.", "E.", "liver", "N.", "URLESS", "B.", "ALESIN", "D.", "H.", "2001", "image", "analogy", "Proc", "SIGGRAPH", "2001", "327", "340", "ertzmann", "a.", "liver", "N.", "URLESS", "B.", "EITZ", "S.", "M.", "2002", "curve", "analogy", "Proc", "13th", "eurographic", "Workshop", "Rendering", "Eurographics", "Association", "233", "246", "OPF", "J.", "C.-W.", "OHEN", "D.", "EUSSEN", "O.", "ISCHIN", "SKI", "D.", "ONG", "T.-T", "2007", "solid", "texture", "synthesis", "from", "2d", "exemplar", "ACM", "transaction", "Graphics", "26", "-lrb-", "Proc", "SIGGRAPH", "2007", "-rrb-", "WATRA", "V.", "ch", "odl", "a.", "ssa", "i.", "urk", "G.", "obick", "a.", "2003", "graphcut", "texture", "image", "video", "synthesis", "use", "graph", "cut", "ACM", "transaction", "Graphics", "22", "-lrb-", "Proc", "SIGGRAPH", "2003", "-rrb-", "277", "286", "WATRA", "V.", "SSA", "I.", "OBICK", "a.", "WATRA", "N.", "2005", "texture", "optimization", "example-based", "synthesis", "ACM", "transaction", "Graphics", "24", "-lrb-", "Proc", "SIGGRAPH", "2005", "-rrb-", "795", "802", "efebvre", "S.", "OPPE", "H.", "2006", "appearance-space", "texture", "synthesis", "ACM", "transaction", "Graphics", "25", "-lrb-", "Proc", "SIGGRAPH", "2006", "-rrb-", "541", "548", "J.", "eorghiade", "a.", "S.", "laser", "a.", "H.", "EI", "L.-Y.", "UO", "B.", "ORSEY", "J.", "ushmeier", "H.", "2007", "context-aware", "texture", "ACM", "Trans", "graph", "26", "erillou", "S.", "ISCHLER", "J.-M.", "hazanfarpour", "D.", "2001", "Corrosion", "simulate", "render", "Proc", "Graphics", "Interface", "2001", "Canadian", "Information", "Processing", "Society", "167", "174", "chrijver", "a.", "2003", "combinatorial", "optimization", "polyhedron", "efficiency", "vol", "a.", "Springer-Verlag", "Berlin", "Heidelberg", "imakov", "D.", "ASPI", "Y.", "hechtman", "E.", "rani", "M.", "2008", "summarize", "visual", "datum", "use", "bidirectional", "similarity", "Proc", "CVPR", "2008", "IEEE", "Computer", "Society", "arma", "m.", "isserman", "a.", "2003", "texture", "classification", "filter", "bank", "necessary", "Proc", "CVPR", "2003", "IEEE", "691", "698", "ang", "J.", "ong", "X.", "S.", "M.", "ang", "C.", "ao", "H.", "UO", "B.", "hum", "h.-y", "2006", "appearance", "manifold", "modeling", "time-variant", "appearance", "material", "ACM", "transaction", "Graphics", "25", "-lrb-", "Proc", "SIGGRAPH", "2006", "-rrb-", "754", "761", "EI", "L.-Y.", "EVOY", "M.", "2000", "fast", "texture", "synthesis", "use", "tree-structured", "vector", "quantization", "Proc", "SIGGRAPH", "2000", "479", "488", "eus", "l.-y.", "J.", "HOU", "K.", "ao", "H.", "UO", "B.", "hum", "h.-y", "2008", "inverse", "texture", "synthesis", "ACM", "Trans", "graph", "27", "EI", "L.-Y.", "EFEBVRE", "S.", "WATRA", "V.", "urk", "G.", "2009", "state", "art", "example-based", "texture", "synthesis", "eurographic", "2009", "state", "Art", "Report", "April", "EXLER", "Y.", "hechtman", "E.", "rani", "M.", "2004", "Spacetime", "video", "completion", "Proc", "CVPR", "2004", "vol", "120", "127", "hang", "J.", "HOU", "K.", "ELHO", "L.", "UO", "B.", "HUM", "H.Y.", "2003", "synthesis", "progressively-variant", "texture", "arbitrary", "surface", "ACM", "transaction", "Graphics", "22", "-lrb-", "Proc", "SIGGRAPH", "2003", "-rrb-", "295", "302", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "107", "publication", "date", "December", "2009" ],
  "content" : "\n  \n    621b2be111e33dd355fb5370ce1367206a498fdbdd96dab979269160db8ad6ac\n    oy8\n    10.1145/1618452.1618453\n    Name identification was not possible. \n  \n  \n    \n      \n        Layered Shape Synthesis: Automatic Generation of Control Maps for Non-Stationary Textures\n      \n      Amir Rosenberger Daniel Cohen-Or Tel Aviv University Tel Aviv University\n      \n        \n        Figure 1: An inhomogeneous texture, exhibiting a non-uniform mixture of peeling paint, bare metal, and rust. From left to right: input texture exemplar, control map extracted from the exemplar, a larger control map synthesized by our approach, and the resulting new texture.\n      \n      Many inhomogeneous real-world textures are non-stationary and exhibit various large scale patterns that are easily perceived by a human observer. Such textures violate the assumptions underlying most state-of-the-art example-based synthesis methods. Consequently, they cannot be properly reproduced by these methods, unless a suitable control map is provided to guide the synthesis process. Such control maps are typically either user specified or generated by a simulation. In this paper, we present an alternative: a method for automatic example-based generation of control maps, geared at synthesis of natural, highly inhomogeneous textures, such as those resulting from natural aging or weathering processes. Our method is based on the observation that an appropriate control map for many of these textures may be modeled as a superposition of several layers, where the visible parts of each layer are occupied by a more homogeneous texture. Thus, given a decomposition of a texture exemplar into a small number of such layers, we employ a novel example-based shape synthesis algorithm to automatically generate a new set of layers. Our shape synthesis algorithm is designed to preserve both local and global characteristics of the exemplar?s layer map. This process results in a new control map, which then may be used to guide the subsequent texture synthesis process. Keywords: control maps, example-based texture synthesis, nonstationary textures, shape synthesis\n    \n    \n      \n        1 Introduction\n      \n      Computer generated imagery relies heavily on textures to achieve realism. One easy way to acquire realistic textures is by scanning or\n      \n        ACM Reference Format\n      \n      Rosenberger, A., Cohen-Or, D., Lischinski, D. 2009. Layered Shape Synthesis: Automatic Generation of Control Maps for Non-Stationary Textures. ACM Trans. Graph. 28, 5, Article 107 (December 2009), 9 pages. DOI = 10.1145/1618452.1618453 http://doi.acm.org/10.1145/1618452.1618453.\n      \n        Copyright Notice\n      \n      Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or direct commercial advantage and that copies show this notice on the fi rst page or initial screen of a display along with the full citation. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers, to redistribute to lists, or to use any component of this work in other works requires prior specific permission and/or a fee. Permissions may be requested from Publications Dept., ACM, Inc., 2 Penn Plaza, Suite 701, New York, NY 10121-0701, fax +1 (212) 869-0481, or permissions@acm.org . ? 2009 ACM 0730-0301/2009/05-ART107 $10.00 DOI 10.1145/1618452.1618453 http://doi.acm.org/10.1145/1618452.1618453\n      Dani Lischinski The Hebrew University\n      taking photographs of surfaces and materials that surround us in the real world. Therefore, a large number of methods have been proposed for synthesizing textures from examples, in the last decade [Wei et al. 2009]. Many of these methods are able to produce impressive results when applied to homogeneous textures that may be described by stationary Markov random field (MRF) models. Yet many real world textures are highly inhomogeneous, and are not modeled well by a stationary stochastic process. Consider, for example, the rusty metal surface shown on the left in Figure 1 . The texture on this surface is clearly non-stationary, and it may be seen as a highly non-uniform mixture, or superposition, of several different textures: peeling paint, bare metal, and rust. While each of these three textures is roughly homogeneous, the texture as a whole is not. This is a typical situation for many real world surfaces, whose texture often results from natural processes, such as weathering, corrosion, color cracking and peeling, growth of moss, etc. [Dorsey and Hanrahan 1996; Dorsey et al. 1999; Bosch et al. 2004; Desbenoit et al. 2004; Dorsey et al. 2008]. A common remedy to cope with such textures is to guide the synthesis process by a control map that encodes the large scale variations and the non-local features of the desired output texture (e.g., [Ashikhmin 2001; Hertzmann et al. 2001; Zhang et al. 2003; Wang et al. 2006; Wei et al. 2008]). However, such control maps are typically either user-specified or produced by a custom tailored simulation (e.g., biological or physically-based). In this work we propose a new method for automatically generating control maps from examples, geared at natural textures such as the one in Figure 1 . As observed above, such textures often look like a superposition of several layers, where each visible regions of each layer are occupied by a more homogeneous texture. The shape of the texture-occupied regions in each layer is far from arbitrary. Rather, it is the consequence of the specific natural process that produced this texture, as well as the shape of the layer underneath. Neither global statistics, nor small neighborhoods are capable of faithfully capturing such higher level structures. Such appearances may be generated by specialized shaders or by physically-based simulations. However, we are not aware of any general fully automatic way for generating such a shader from a specific example. Our approach begins by decomposing the input exemplar into a number of layers, which we order bottom to top. A novel examplebased shape synthesis algorithm is then used to generate a new set of layers, whose local and global characteristics visually resemble those of the exemplar?s layers. This algorithm makes use of a bidirectional measure of similarity between the shapes of the layers, which is based on the shapes? boundaries. Starting from some initial output shape, we iteratively optimize the shape with respect to this similarity measure. Once the new layers are available, a texture transfer process based on ?texture-by-numbers? [Hertzmann et al. 2001] is invoked, resulting in the final output texture, such as the result shown in Figure 1 . In summary, the main novelty in our approach lies in example-based synthesis of a suitable control map, rather than working directly on the texture, or on some associated appearance space [Lefebvre and Hoppe 2006]. To our knowledge, such an approach has not been explored before.\n      ACM Transactions on Graphics, Vol. 28, No. 5, Article 107, Publication date: December 2009.\n      107:2 ? A. Rosenberger et al.\n      \n        2 Related Work\n        Example-based texture synthesis has enjoyed considerable research attention in recent years. Most of the relevant previous methods may be roughly classified to parametric methods [Heeger and Bergen 1995], and non-parametric methods, which include pixel-based methods [Efros and Leung 1999; Wei and Levoy 2000], patch-based methods [Efros and Freeman 2001; Kwatra et al. 2003], optimization-based methods [Kwatra et al. 2005], and appearance-space texture synthesis [Lefebvre and Hoppe 2006]. Parametric methods attempt to construct a parametric model of the texture based on the input sample, which has proven to be a challenging task, and are mostly successful with structureless stationary textures. Non-parametric methods have demonstrated the ability to handle a wider variety of textures, by growing the texture one pixel/patch at a time. Optimization-based methods evolve the texture as a whole, further improving the quality of the results and making the synthesis more controllable. We refer the reader to [Wei et al. 2009] for a more comprehensive overview of example-based texture synthesis. While non-parametric methods are typically able to reproduce small scale structure, they have a difficulty coping with highly inhomogeneous textures, since such textures cannot be modeled by a stationary Markov Random Field (MRF) model, which provides the theoretical basis for most of these methods. In order to handle such textures and control large scale structure, Ashikhmin [2001] proposed to guide the synthesis process by a user-provided target image, which specifies the local average colors across the target texture. Texture-by-Numbers [Hertzmann et al. 2001] extends this idea further by augmenting the input exemplar with a label map, where regions with distinct texture are distinguished by different labels. A suitable label map may be painted manually by the user, or created automatically using unsupervised image segmentation. To synthesize a new image, a target label map is provided, which indicates how the different textures should be arranged in the resulting image. However, that work addressed neither the issue of automatically generating a label map for natural inhomogeneous textures, nor the automatic synthesis of the target label map, as we do in our work. Many other works since made use of control maps when synthesizing non-stationary textures, for example [Zhang et al. 2003; Wang et al. 2006; Gu et al. 2006; Lu et al. 2007; Wei et al. 2008]. However, in all of these works the control map for the target texture is either provided by the user, or derived from a specific model of texture formation across a 3D surface (e.g., [Lu et al. 2007]), and we are not aware of any previous attempts of example-based control map generation. Our shape synthesis approach is related to texture optimization techniques [Wexler et al. 2004; Kwatra et al. 2005], which synthe size textures by minimizing a texture energy function. This function consists of a sum of local terms measuring how close each synthesized texture patch is to an exemplar patch. However, this formulation does not account for the possibility that there may be many other patches in the exemplar that are not represented at all in the synthesized result. While this may be adequate for homogeneous textures, where most patches are similar to each other, the quality of the results for inhomogeneous textures is often compromised. While it is possible to inject some global statistics into the optimization [Kopf et al. 2007], the resulting process still fails to capture the large scale appearance of highly inhomogeneous natural textures that are the target of this work. In contrast, we perform shape synthesis with a bidirectional similarity measure (inspired by Simakov et al. [2008] and Wei et al. [Wei et al. 2008]), and demonstrate more faithful reproduction of appearance in the comparisons we present in Section 4. Appearance-space texture synthesis [Lefebvre and Hoppe 2006] is another optimization method that operates in a feature space, rather than using the values of pixels or small patches directly. A point corresponding to a pixel in a more general feature space may encode more information, allowing structure to be reproduced better. The layer map that we associate with the input exemplar in our approach could be viewed as a feature space custom-tailored for synthesis of layered inhomogeneous textures. A variety of methods generate textures of weathered surfaces by assuming and simulating a physical model [Dorsey and Hanrahan 1996; Dorsey et al. 1999; Merillou et al. 2001; Bosch et al. 2004; Desbenoit et al. 2004; Dorsey et al. 2008]. While such methods have produced some highly realistic results, they are not geared towards matching a particular appearance given by an example. Also, controlling the results of the synthesis typically involves specifying a large number of parameters, which are not always intuitive. In contrast, our approach is example-based, rather than physicallybased. Our approach synthesizes the boundaries of the layer shapes by example. Thus, it is related to the Curve Analogies work of Hertzmann et al. [2002], where a similar framework was applied to reproduce the style of curved shapes. However, our work uses a different similarity measure and operates on a discrete patch-based representation of a shape?s boundary, rather than a vector-based representation. Also related is the work of Baht et al. [2004], which uses binary voxel grids in order to synthesize geometric details on volume surfaces. These voxel grids are similar to the binary neighborhoods that we use to optimize the shape boundaries. However, their goal is to add smaller-scale detail to an existing global shape, while we focus on synthesizing the entire shape from scratch.\n      \n      \n        3 Layered Shape Synthesis\n        This work deals with example-based generation of control maps represented as layer maps. A layer map is an image where different pixel values indicate to different layers. Let v 1 < v 2 < . . . < v K be the values of layer map pixels, sorted in ascending order. Then, a layer L i is defined as the set of all pixels whose value is greater than or equal to v i . Note that a pixel with value v j actually belongs to all layers L 1 , . . . , L j . One can think of the layers as stacked on top of each other, with layers higher in the stack partially ?concealing? lower layers. Each layer has an associated foreground shape S i , which we encode as a binary image of the same dimensions as the layer map. Note that the shape S i+1 is always contained in S i . As may be seen in Figures 1 and 6, the boundaries of these nested shapes are highly correlated, but not aligned. In the figures in this paper, we display values corresponding to different layers using unique colors.\n        ACM Transactions on Graphics, Vol. 28, No. 5, Article 107, Publication date: December 2009.\n        Layered Shape Synthesis: Automatic Generation of Control Maps for Non-Stationary Textures ? 107:3\n        a b c d e\n        \n          \n        \n        a b c d e a 0.0 1.3 3.0 5.3 6.0 b 0.0 2.7 5.0 5.4 c 0.0 5.0 5.3 d 0.0 4.6 e 0.0\n        \n          Figure 2: Similarity measure between pairs of five different shapes.\n        \n        Given a set of such shapes, our goal is to synthesize a new set of shapes, while maintaining both global and local similarity to the original ones. For this purpose, it is important that each shape occupies the same relative amount of pixels in the synthesized map as it did in the exemplar, and that the boundaries of the synthesized shapes locally resemble those in the exemplar. We found that representing the shape by means of its boundary curve fails to capture all of the relevant information. Such a representation cannot predict the spatial relationship between disconnected components of the shape, and does not prevent self-intersections. Instead, we represent a binary shape by a collection of patches centered on the shape?s boundary pixels (at multiple resolutions) in order to captures the necessary shape properties. Our shape synthesis approach employs optimization similarly to [Wexler et al. 2004; Kwatra et al. 2005], where the synthesized result is iteratively optimized with respect to some measure of its similarity with the exemplar. We begin by deriving a suitable bidirectional shape similarity measure, similarly to Simakov et al. [2008] and Wei et al. [2008]. Next, we describe a novel greedy optimization scheme that iteratively modifies an initial shape, so as to increase its similarity to a given exemplar shape. Finally, we discuss how this mechanism is used to create an entire new layer map, which is a sequence of nested shapes, from the layer map produced in the layer decomposition phase described in the previous section.\n        \n          3.1 Shape similarity measure\n          Let B 1 and B 2 be the sets of boundary pixels of shapes S 1 and S 2 , respectfully. A boundary pixel is a pixel inside a shape with at least one of its 4-neighbors outside the shape. Let x 1 ? B 1 and x 2 ? B 2 be two boundary pixels, and let N ? (x 1 ) and N ? (x 2 ) be the neighborhoods centered around them and rotated by ?, ? ? {0 ? , 90 ? , 180 ? , 270 ? }. We refer to such neighborhoods as boundary patches. We define the similarity, D, between two boundary pixels as the L 2 distance between their neighborhoods (rotated such that the distance is minimized). Formally,\n          \n            1\n            D(x 1 , x 2 ) = min ? N 0 (x 1 ) ? N ? (x 2 ) 2\n          \n          Since we deal with binary images, the L 2 norm above is simply the number of different pixels between two patches. Next, we define the local similarity between a boundary pixel x 1 ? B 1 and the boundary of (another) shape S 2 as the similarity between x 1 and the pixel most similar to it on the boundary B 2 :\n          \n            2\n            D(x 1 , S 2 ) = min D(x 1 , x 2 ). x 2 ?B 2\n          \n          Note that this similarity measure is not symmetric. While it ensures that every boundary patch of S 1 is similar to a boundary patch in S 2 ,\n          \n            \n            Figure 3: Iterative assignment of boundary patches. The exemplar boundary patches (left) are assigned to the synthesized boundary patches (right). In cases where two patches are assigned to the same one, the assignment with the larger L 2 difference (red arrow)\n          \n          is discarded and will be assigned to another patch in a future iteration (yellow arrow).\n          there may be boundary patches in S 2 that are not well represented in S 1 . For example, a simple shape may be deemed similar to a more complex one that also happens to contain some simple features. Thus, we require a bidirectional similarity measure, defined as\n          \n            3\n            D(S 1 , S 2 ) = ? x 1 ?B 1 D(x 1 , S 2 ) + ? x 2 ?B 2 D(x 2 , S 1 ) , |B 1 ? B 2 |\n          \n          which is the average number of different pixels between a boundary patch of one shape to its nearest neighbor on the other. Figure 2 shows several different shapes and reports their pairwise bidirectional similarities.\n        \n        \n          3.2 Shape optimization\n          Armed with the similarity measure above, we use an optimization procedure that iteratively modifies the boundary of a synthesized shape S to make it more similar to that of the exemplar shape E. The optimization proceeds from coarse to fine resolution. At each resolution we alternate between two main steps: (i) matching each boundary patch of S to a boundary patch of E, and (ii) modifying S by adding or removing pixels based on the results of the matching achieved in the previous step. This iterative optimization procedure resembles that of Kwatra et al. [2005], but each of the two main steps differs significantly from its counterpart, because we minimize a different (bidirectional) energy function, and work with binary images, rather than textures. These two steps are discussed in more detail below.  Boundary patch matching. As pointed out earlier, we would like every boundary patch of S to resemble one of E, but we would also like every boundary patch of E to be represented in S. Thus, assuming we have an equal number of boundary patches in E and S, we seek a minimum cost assignment, a fundamental combinatorial optimization problem [Schrijver 2003]. Solving this problem exactly is too expensive for our purposes (O(n 3 ), where n is the number of patches), so we resort to an approximate solution using the iterative greedy approach described below. Let B E and B S denote the sets of boundary patches of E and S, respectively, and assume for now that the two sets have the same size. Each patch in B E is initially assigned to its nearest neighbor in B S . As a result, some patches in B S may have more than one exemplar patch assigned to them, while others may have none (see Figure 3 ). In the former case, we keep only the assignment with the smallest L 2 difference, and discard the rest. All of the pairs of\n          ACM Transactions on Graphics, Vol. 28, No. 5, Article 107, Publication date: December 2009.\n          107:4 ? A. Rosenberger et al.\n          \n            \n            Figure 5: Refining shape boundaries with our multi-resolution optimization. Two initial shapes (left) are evolved using two different exemplars (right).\n          \n          \n            \n            \n            Figure 4:\n          \n          Left: Shape adjustment. Boundary exemplar patches are superimposed over their assigned positions. Pixels in regions of overlap between these superimposed patches may be added to the shape (green dot), or removed from it (red dot), making the new boundary more similar to that of the exemplar. Right: Matching patches from the previous shape (gold) are superimposed again to seed the new shape (blue).\n          patches which have been assigned are then removed from further consideration, and the process is repeated until every patch in B S has been assigned. In general, B E and B S differ in size. Typically, the synthesized shape is larger than the exemplar. Thus, assuming that |B S | = Q|B E | + R, we construct a set of exemplar patches of size |B S | by including each exemplar patch Q times, and randomly selecting R additional patches from B E . In this way we ensure that all the boundary features in the exemplar shape get an equal chance to be represented in the synthesized shape.  Shape adjustment. After finding the assignment as described above, our goal is to modify the boundary of S so as to increase the similarity to E (by reducing D(S, E)). To achieve this, we superimpose each exemplar patch over its counterpart in B S . Consider a pixel x outside S, which is covered by several overlapping super- imposed patches from B E . Informally, if these patches agree that x should be part of the shape, it is added to S. Similarly, a pixel inside S might be removed if the overlapping patches agree that it should not belong to the shape. This is illustrated in Figure 4 (left). More specifically, consider a pixel x in the vicinity of the boundary of S. It is covered by two groups of overlapping superimposed exemplar patches: one group predicts that x belongs to the shape, while the other one predicts that x is outside the shape. For each of these two predictions we compute a score by summing up the weights of the corresponding group?s patches at x. Let x S be a boundary pixel of S and x E the exemplar pixel assigned to it. Then the entire exemplar patch is assigned the following weight\n          \n            4\n            1 , 1 + D(x S , x E )\n          \n          which is further multiplied by a Gaussian falloff function (thus the weight decreases away from the center of the patch). The sigma value for this function was chosen to be half of the patches size. The group with the highest score at x determines whether x should be included or excluded from the shape. When the sum of weights accumulated at each pixel x is below a threshold, its value remains unchanged. This is because patch weights reflect a degree of certainty, so areas of low weight are more sensitive to randomness generated by our approximated nearest neighbor search and the greedy assignment, such that using the new values may produce noise. This threshold also determines the final amount of pixels in the shape after the iteration is done. Therefore, it is set dynamically so that the (relative) amount of the pixels inside the shape is the same as in the exemplar. Candidates from the interval [10 ?2 , 10 ?7 ] are tested and the one which results in the nearest amount is chosen. After the update is complete, the optimization procedure is repeated until convergence. Convergence is reached when the number of changed pixels falls below a threshold. As mentioned earlier, the optimization proceeds from coarse to fine resolution. The result computed at each resolution level is upsampled to serve as a starting point for the next (finer) level. At coarser resolutions the global structures are formed, while fine resolutions fill in the fine details along the shape?s boundary. In our examples, we use 5 to 6 resolution levels. Figure 5 shows how different initializations lead to different global shapes. However, in all of the examples the synthesized shape contains boundary features that are very similar to those present in the exemplar, resulting in close overall resemblance.\n          ACM Transactions on Graphics, Vol. 28, No. 5, Article 107, Publication date: December 2009.\n          Layered Shape Synthesis: Automatic Generation of Control Maps for Non-Stationary Textures ? 107:5\n          \n            \n            Figure 6: Our inhomogeneous texture synthesis approach.\n          \n        \n        \n          3.3 Layer map synthesis\n          The shape optimization procedure presented in the previous section may be used directly to synthesize the first (bottom) layer. A randomly generated shape, with the number of foreground pixels matching that of the corresponding exemplar layer may be used for initialization. In order to generate the following layers, however, we must introduce a number of modifications. First, the shape of each layer is nested inside the shape of the layer beneath it. Second, the boundaries of two successive layers are typically highly correlated. Preserving this correlation is important, as it is instrumental for faithfully reproducing the appearance of the exemplar in the synthesized result. It is not obvious how to initialize the shape of the next layers under these conditions. To address these requirements we begin the synthesis of each layer L i+1 by creating a mask that defines the area (contained inside the shape of the previous layer S i ), where the current shape is allowed to evolve. Initially, this mask is set to the entire shape S i , but we use the most recent boundary patch assignments (from the last shape optimization iteration) to shrink this mask down to a better initial guess for the region containing S i+1 . More specifically, we again superimpose boundary patches from the exemplar over their assigned locations on the boundary of S i , but this time we try to predict which of the pixels inside S i should belong to the mask of S i+1 , as illustrated in Figure 4 (right). Thus, the interior of S i is seeded with pixels which are predicted to belong to S i+1 with a sufficiently large weight. The mask is then shrunk to include only these seeded pixels. Seeded pixels with high weights form the initial guess for S i+1 , while those with somewhat smaller weights define the remaining region of the mask, within which the shape is allowed to evolve in the course of the optimization. The initialization of each new layer is done via this seeding mechanism in the coarsest resolution, where boundary patches are large enough to fully cover the interior of the previous shape. A similar step is repeated at the beginning of each resolution level to recreate an accurate mask for the current level at the new resolution, and to refine the shape boundary. After this step, shape optimization proceeds as described before. Continuous control maps. In our experiments we found that the subsequent texture synthesis process can sometimes be improved by switching from a discrete layer map to a continuous control map. Specifically, for each pixel x inside the shape S i its continuous map\n          \n            5\n            value is set to d i?1 (x) i + ,\n          \n          \n            5\n            d i?1 (x) + d i+1 (x)\n          \n          where d i?1 (x) and d i+1 (x) are the distances from x to S i?1 and S i+1 , respectively (see Figure 7 ). The distances are obtained by performing distance transforms over S i . Distance transforms were also used to create control maps by Lefebvre and Hoppe [2006].\n          \n            \n            Figure 7: The distances from a point inside a shape to the neighboring shapes are used to convert a discrete label map (left) to a continuous one (right).\n          \n        \n      \n      \n        4 Applications and Results\n        We found the layered shape synthesis approach described in the previous texture to be effective for synthesis of inhomogeneous textures, such as those resulting from natural aging or weathering processes. The synthesis process for such textures consists of three successive phases depicted in Figure 6 : layer decomposition, shape synthesis, and texture synthesis. The layer decomposition phase takes an inhomogeneous texture sample as input, and generates a layer map which encodes the distinct homogeneous texture regions (layers) present in the input, by assigning a unique label to all of the pixels belonging to the same layer. Following the texture classification approach advocated by Varma and Zisserman [2003], we first segment the exemplar?s pixels by performing K-Means clustering on the N 2 dimensional feature vectors formed by concatenating the values of each pixel?s N ? N neighborhood. We currently rely on the user to specify K as the number of distinct textures visible in the exemplar, typically between 3 and 5. N is set to 15 in all of our examples. The resulting clusters should roughly correspond to the distinct textures present in the exemplar. Points closer to the cluster centers are due to pixels that are the more typical representatives of the corresponding textures, while points far away from the center come from areas of transition between textures. Let C 1 ,C 2 , . . . ,C K be the resulting clusters, ordered by the user such that C 1 is the bottom layer (original ?clean? surface), and C K is the top layer (most ?weathered? surface). For the layer map, we set the foreground pixels of L i to be C i ?C i+1 ? . . .C K . If the clusters have been ordered properly, the sequence L 1 , L 2 , . . . , L K expresses a possible natural evolution and spread over time of the weathering phenomenon captured by the exemplar. In the last phase we use the new layer map obtained in the shape synthesis phase (Section 3) to synthesize a new inhomogeneous texture. This is done by applying the ?texture-by-numbers? framework [Hertzmann et al. 2001]. While applying texture-by-numbers directly on the layer map often produces satisfactory results, their visual quality may be further improved by switching from a discrete layer map to a continuous one, as described in the previous section. The continuous map may be seen as a heuristic analogue for the\n        ACM Transactions on Graphics, Vol. 28, No. 5, Article 107, Publication date: December 2009.\n        107:6 ? A. Rosenberger et al.\n        \n          \n        \n        ACM Figure Transactions 8: A variety on Graphics, of results Vol. 28, produced No. 5, Article by our 107, method. Publication Left: date: December input exemplars 2009. and their decompositions to layers; Middle: synthesized layer map; Right: final synthesized result.\n        Layered Shape Synthesis: Automatic Generation of Control Maps for Non-Stationary Textures ? 107:7\n        \n          \n          Figure 9: Terrain generation by height map synthesis using our method. Left : input height map and its decomposition to layers; Middle: the synthesized layer map; Right: final synthesized result.\n        \n        \n          \n        \n        input our result\n        \n          Figure 10: A comparison of our approach to texture optimization with and without histogram matching. In the top row both methods perform synthesis directly from the exemplar. In the bottom two rows, we attempt to use texture optimization to synthesize a new layer map.\n        \n        weathering degree map of [Wang et al. 2006].\n        We experimented with our method on a variety of natural inhomogeneous textures. Some results are shown in Figures 1, 6, and 8. The examples are quite varied, showcasing phenomena such as corrosion, rust, lichen, and peeling paint. They differ significantly not only in their appearance, but also in their underlying layer structure, as may be seen from the layer maps extracted by our method. Our method successfully reproduces the global layer structures, the local fine details of the shape boundaries, and the final appearance of these textures. Our method is not limited to such textures, however.\n        [Kopf et al. 2007] [Kwatra et al. 2005]\n        Other inhomogeneous textures that exhibits a layered structure with nested shapes may be synthesized as well. For example, we have synthesized a plausible fictional satellite image from one of Earth (bottom row in Figure 8 ). Since we use patch-based shape synthesis, some repetitions do occur, but they are mostly difficult to spot, as they are explicitly limited in our approach by our fair boundary sampling and assignment mechanisms. Another application of our approach is example-based terrain synthesis, as demonstrated in Figure 9 . Height maps used to represent terrains may also be considered as non-stationary textures for which our layered shape synthesis approach fits perfectly. For the generation of the layer map, a simple quantization of the height map is used. The boundaries of layers resemble contour lines in a topographic map. In this application, which is similar to texture synthesis described before, the shape synthesis phase generates a new topographic layout for the synthesized terrain and the texture synthesis phase adds the fine details. The computation time of our method is dominated by the ?texture by numbers? phase, which takes up to five hours for a 800 ? 600 image using 5 ? 5 neighborhoods. The time it takes to synthesize a new layer map depends on the total length of the shape boundaries. The complexity of the optimization step is linear in the number of nearest neighbor calls for each boundary patch. We use approximate nearest neighbor search via locally sensitive hashing [Datar and Indyk 2004]. It takes our unoptimized code 20?30 seconds on average to complete one optimization iteration for an 800 ? 600 image. Typically, 5?10 iterations are used at each resolution level, so the execution time per layer is up to 30 minutes. We compare our method to two previous example-based texture synthesis methods: texture optimization [Kwatra et al. 2005] and texture optimization with color histogram matching [Kopf et al. 2007]. Figure 10 shows the results of the three methods side-byside. The top row shows the final synthesis result on a texture of a rusting surface. Kwatra?s method is suited for stationary textures, and exhibits multiple obvious repetitions making the result quite dissimilar from the exemplar. Kopf?s result matches the global color statistics of the exemplar, and produces a better result, but some repetitions are still apparent, and some regions of the synthesized texture do not have a similar counterpart in the exemplar (such as the large region of lighter rust near the center). It is also interesting to examine whether these previous methods are able to synthesize the layer map, rather than synthesizing the texture directly, and this is done on two examples shown in the two bottom rows of Figure 10 . The middle row is a layer map extracted from a cloudy sky texture, while in the bottom row the layer map is from the terrain in Figure 9 . In both of these examples, the previous methods generate more repetitions of entire regions of the layer map, and in several places there are direct transitions between non-adjacent layers, which are not present in the input map. Figure 11 shows an inpainting example, where a hole is filled inside an inhomogeneous texture. While the result is obviously not identical to the original image, it is quite plausible, and the filled region blends well with the original parts. The layer map inside the hole is initialized randomly. Since our method modifies the entire layer map, after each optimization step we reset the layer map outside the hole back to the original one. Figure 12 demonstrates the feasibility of controlling the result of the synthesis via a painting interface. The exemplar and its layer map are shown in the third row of Figure 8 . The user sketches in yellow the approximate position where rust should be, and the resulting sketch serves as the initialization for the shape synthesis phase. Thin strips of blue and green pixels are automatically added by the system, since the yellow layer shape is supposed to be nested inside the blue and the green layer shapes. In order to avoid changing the user sketched shape too much, fewer resolution levels are used by the shape synthesis method, resulting in the middle image in Figure 12 , while the rightmost image is the synthesized texture. Limitations: Our approach makes two basic assumptions: (1) the control map consists of an ordered set layers, nested within each other; (2) the proposed shape similarity measure captures all the shape characteristics that one aims to reproduce. Violation of either of these assumptions may lead to a failure, as discussed below. (1) The first type of failure is demonstrated by the synthetic example in the top row of Figure 13. Here we green and blue regions that are independent of each other in the input (e.g., a natural texture whose appearance results from two independent processes). Our approach assumes a layered model and generates the green layer first, followed by the blue layer. As a result, the relations between the green and blue regions are not preserved, and several blue regions are synthesized inside green ones. (2) The proposed similarity measure characterizes shapes by the local appearance of their boundaries, without considering the shape as a whole. Thus, it is better suited for fine-scale unstructured shapes and fractal-like boundaries. More structured elements might be better handled by other models. For example, the locations of the deserts in the bottom row of Figure 8 might have been reproduced better using the context-aware textures framework [Lu et al. 2007]. The bottom row of Figure 13 shows another synthetic example where the easily recognizable distinct shapes in the input map appear mixed in the map generated by our method.\n        ACM Transactions on Graphics, Vol. 28, No. 5, Article 107, Publication date: December 2009.\n        107:8 ? A. Rosenberger et al.\n        \n          \n          Figure 11: Inpainting. Left: original, right: our result.\n        \n        \n          \n          Figure 12: Example of user control via a painting interface.\n        \n        \n          \n          Figure 13: Examples of failure cases. Top: violation of the layer model. Bottom: failure to reproduce specific shapes.\n        \n      \n      \n        5 Conclusion\n        We have presented a novel example-based method for synthesis of control maps suitable for non stationary textures, such as those resulting from weathering. To that end, we have developed a new  powerful example-based shape synthesis algorithm that represents shapes as a collection of boundary patches at multiple resolution, and synthesizes a new shape from an example by optimizing a bidirectional similarity function. Applications of our method include synthesis of natural textures and terrain generation. In future work we hope to extend the method of shape synthesis to a larger set of textures, for example, textures that do not exhibit a clear hierarchy of layers, and textures with larger structures. Our current measure emphasizes boundary similarity over other properties, such as area to boundary length ratio, which is maintained only implicitly. We would like to gain a better understanding of the relations between such properties, and experiment with various extensions of our similarity measure. We would also like to discover additional applications of our shape synthesis approach. In particular, it would be interesting to explore the applicability of such an approach to the synthesis of 3D shapes. Acknowledgments: This work was supported in part by grants from the Israel Ministry of Science, and from the Israel Science Foundation founded by the Israel Academy of Sciences and Humanities. The authors would also like to thank the anonymous reviewers whose suggestions were greatly helpful.\n        ACM Transactions on Graphics, Vol. 28, No. 5, Article 107, Publication date: December 2009.\n        Layered Shape Synthesis: Automatic Generation of Control Maps for Non-Stationary Textures ? 107:9\n      \n      \n        References\n        \n          A SHIKHMIN , M. 2001. Synthesizing natural textures. In Proc. Symp. Interactive 3D Graphics, 217?226.\n          B HAT , P., I NGRAM , S., AND T URK , G. 2004. Geometric texture synthesis by example. In SGP ?04: Proceedings of the 2004 Eurographics/ACM SIGGRAPH symposium on Geometry processing, ACM, New York, NY, USA, 41?44.\n          B OSCH , C., P UEYO , X., M ? RILLOU , S., AND G HAZANFAR POUR , D. 2004. A physically-based model for rendering realistic scratches. Computer Graphics Forum 23, 3 (Sept.), 361?370.\n          D ATAR , M., AND I NDYK , P. 2004. Locality-sensitive hashing scheme based on p-stable distributions. In Proc. SCG ?04, ACM Press, 253?262.\n          D ESBENOIT , B., G ALIN , E., AND A KKOUCHE , S. 2004. Simulating and modeling lichen growth. Computer Graphics Forum 23, 3 (Sept.), 341?350.\n          D ORSEY , J., AND H ANRAHAN , P. 1996. Modeling and rendering of metallic patinas. In Proc. SIGGRAPH ?96, Addison Wesley, 387?396.\n          D ORSEY , J., E DELMAN , A., J ENSEN , H. W., L EGAKIS , J., AND P EDERSEN , H. K. 1999. Modeling and rendering of weathered stone. In Proc. SIGGRAPH ?99, ACM Press, 225?234.\n          D ORSEY , J., R USHMEIER , H., AND S ILLION , F. 2008. Digital Modeling of Material Appearance. Computer Graphics. Morgan Kaufmann / Elsevier, Dec. . 336 pages.\n          E FROS , A. A., AND F REEMAN , W. T. 2001. Image quilting for texture synthesis and transfer. Proc. SIGGRAPH 2001, 341?346.\n          E FROS , A. A., AND L EUNG , T. K. 1999. Texture synthesis by non-parametric sampling. Proc. ICCV ?99 2, 1033?1038.\n          G U , J., T U , C.-I., R AMAMOORTHI , R., B ELHUMEUR , P., M A TUSIK , W., AND N AYAR , S. 2006. Time-varying surface appearance: acquisition, modeling and rendering. ACM Transactions on Graphics 25, 3 (Proc. SIGGRAPH 2006), 762?771.\n          H EEGER , D. J., AND B ERGEN , J. R. 1995. Pyramid-based texture analysis/synthesis. Proc. SIGGRAPH ?95, 229?238.\n          H ERTZMANN , A., J ACOBS , C. E., O LIVER , N., C URLESS , B., AND S ALESIN , D. H. 2001. Image analogies. Proc. SIGGRAPH 2001, 327?340.\n          H ERTZMANN , A., O LIVER , N., C URLESS , B., AND S EITZ , S. M. 2002. Curve analogies. In Proc. 13th Eurographics Workshop on Rendering, Eurographics Association, 233?246.\n          K OPF , J., F U , C.-W., C OHEN -O R , D., D EUSSEN , O., L ISCHIN SKI , D., AND W ONG , T.-T. 2007. Solid texture synthesis from 2d exemplars. ACM Transactions on Graphics 26, 3 (Proc. SIGGRAPH 2007), 2.\n          K WATRA , V., S CH ODL  ? , A., E SSA , I., T URK , G., AND B OBICK , A. 2003. Graphcut textures: image and video synthesis using graph cuts. ACM Transactions on Graphics 22, 3 (Proc. SIGGRAPH 2003), 277?286.\n          K WATRA , V., E SSA , I., B OBICK , A., AND K WATRA , N. 2005. Texture optimization for example-based synthesis. ACM Transactions on Graphics 24, 3 (Proc. SIGGRAPH 2005), 795?802.\n          L EFEBVRE , S., AND H OPPE , H. 2006. Appearance-space texture synthesis. ACM Transactions on Graphics 25, 3 (Proc. SIGGRAPH 2006), 541?548.\n          L U , J., G EORGHIADES , A. S., G LASER , A., W U , H., W EI , L.-Y., G UO , B., D ORSEY , J., AND R USHMEIER , H. 2007. Context-aware textures. ACM Trans. Graph. 26, 1, 3.\n          M ERILLOU , S., D ISCHLER , J.-M., AND G HAZANFARPOUR , D. 2001. Corrosion: simulating and rendering. In Proc. Graphics Interface 2001, Canadian Information Processing Society, 167? 174.\n          S CHRIJVER , A. 2003. Combinatorial Optimization: Polyhedra and Efficiency, vol. A. Springer-Verlag, Berlin Heidelberg.\n          S IMAKOV , D., C ASPI , Y., S HECHTMAN , E., AND I RANI , M. 2008. Summarizing visual data using bidirectional similarity. In Proc. CVPR 2008, IEEE Computer Society.\n          V ARMA , M., AND Z ISSERMAN , A. 2003. Texture classification: Are filter banks necessary. In Proc. CVPR 2003, IEEE, 691?698.\n          W ANG , J., T ONG , X., L IN , S., P AN , M., W ANG , C., B AO , H., G UO , B., AND S HUM , H.-Y. 2006. Appearance manifolds for modeling time-variant appearance of materials. ACM Transactions on Graphics 25, 3 (Proc. SIGGRAPH 2006), 754?761.\n          W EI , L.-Y., AND L EVOY , M. 2000. Fast texture synthesis using tree-structured vector quantization. Proc. SIGGRAPH 2000, 479?488.\n          W EI , L.-Y., H AN , J., Z HOU , K., B AO , H., G UO , B., AND S HUM , H.-Y. 2008. Inverse texture synthesis. ACM Trans. Graph. 27, 3, 1?9.\n          W EI , L.-Y., L EFEBVRE , S., K WATRA , V., AND T URK , G., 2009. State of the art in example-based texture synthesis. Eurographics 2009 State of The Art Report, April.\n          W EXLER , Y., S HECHTMAN , E., AND I RANI , M. 2004. Spacetime video completion. In Proc. CVPR 2004, vol. 1, 120?127.\n          Z HANG , J., Z HOU , K., V ELHO , L., G UO , B., AND S HUM , H.Y. 2003. Synthesis of progressively-variant textures on arbitrary surfaces. ACM Transactions on Graphics 22, 3 (Proc. SIGGRAPH 2003), 295?302.\n        \n        ACM Transactions on Graphics, Vol. 28, No. 5, Article 107, Publication date: December 2009.\n      \n    \n  ",
  "resources" : [ ]
}