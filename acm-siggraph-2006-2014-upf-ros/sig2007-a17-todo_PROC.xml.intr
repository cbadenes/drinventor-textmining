{
  "uri" : "sig2007-a17-todo_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2007/a17-todo_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Locally Controllable Stylized Shading",
    "published" : "2007",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Hideki-Todo",
      "name" : "Hideki",
      "surname" : "Todo"
    }, {
      "uri" : "http://drinventor/Ken-ichi Anjyo",
      "name" : "Ken",
      "surname" : "ichi Anjyo"
    }, {
      "uri" : "http://drinventor/William V. Baxter-III",
      "name" : "William V. Baxter",
      "surname" : "III"
    }, {
      "uri" : "http://drinventor/Takeo-Igarashi",
      "name" : "Takeo",
      "surname" : "Igarashi"
    } ]
  },
  "bagOfWords" : [ "we", "consider", "problem", "how", "provide", "user", "intuitive", "fine-grained", "control", "over", "stylized", "light", "shade", "3d", "object", "over", "past", "decade", "variety", "non-photorealistic", "rendering", "technique", "have", "be", "develop", "facilitate", "visual", "interpretation", "3d", "object", "most", "technique", "design", "elucidate", "particular", "attribute", "inherent", "object", "example", "Gooch", "Gooch", "-lsb-", "2001", "-rsb-", "develop", "lighting", "model", "change", "hue", "convey", "surface", "orientation", "edge", "location", "highlight", "3d", "technical", "illustration", "multi-scale", "shading", "method", "-lsb-", "Rusinkiewicz", "et", "al.", "2006", "-rsb-", "make", "detailed", "3d", "shape", "depiction", "all", "frequency", "possible", "other", "hand", "application", "field", "digital", "animation", "video", "game", "significant", "demand", "locally", "controllable", "stylized", "light", "shade", "which", "can", "achieve", "result", "directable", "intentional", "often", "fictive", "yet", "ultimately", "more", "attractive", "example", "canonical", "cartoon", "shader", "use", "routinely", "3d", "animation", "often", "create", "undesirable", "shaded", "area", "can", "arise", "from", "complexity", "underlie", "geometry", "complexity", "lighting", "just", "result", "basic", "physics", "illumination", "left", "image", "Figure", "show", "example", "where", "dark", "area", "partly", "cover", "right", "eye", "character", "director", "would", "like", "have", "ability", "have", "feature", "remove", "while", "retain", "other", "dark", "area", "other", "case", "might", "like", "request", "shaded", "area", "add", "below", "left", "eye", "show", "second", "image", "from", "leave", "Figure", "order", "emphasize", "character?s", "fierceness", "however", "satisfy", "diverse", "artistic", "requirement", "simultaneously", "would", "very", "hard", "almost", "impossible", "use", "only", "exist", "conventional", "lighting", "control", "and/or", "finetune", "parameter", "use", "change", "geometry", "model", "animate", "texture", "light", "map", "might", "helpful", "achieve", "time-consuming", "impractical", "production", "schedule", "despite", "crucial", "importance", "fine-grained", "artistic", "control", "stylized", "light", "shade", "very", "little", "research", "exist", "how", "provide", "control", "suitable", "interactive", "technique", "support", "we", "goal", "develop", "director-friendly", "methodology", "stylistic", "depiction", "light", "shade", "explain", "we", "approach", "more", "concisely", "we", "restrict", "discussion", "now", "make", "3d", "cartoon", "animation", "case", "due", "nature", "stylistic", "depiction", "technique", "use", "need", "physically", "realistic", "however", "must", "possess", "certain", "sense", "plausibility", "while", "meet", "directorial", "demand", "emphasis", "expressiveness", "over", "physical-realism", "imply", "we", "must", "rely", "animator?s", "creativity?more", "than", "automatic", "physically-based", "algorithms?to", "get", "desire", "animation", "therefore", "stylized", "shade", "approach", "should", "provide", "simple", "intuitive", "user", "interface", "so", "animator", "can", "easily", "interactively", "translate", "he", "she", "creative", "vision", "reality", "keyframebased", "technique", "appropriate", "since", "allow", "fine-tuning", "stylistic", "animation", "traditional", "convenient", "familiar", "way", "animator", "additionally", "real-time", "preview", "animation", "also", "indispensable", "basic", "requirement", "make", "stylized", "animation", "have", "lead", "we", "consider", "na?ve", "key-framing", "first", "approach", "towards", "new", "methodology", "overall", "process", "approach", "we", "propose", "begin", "make", "initial", "3d", "scene", "which", "include", "lighting", "animation", "setting", "use", "conventional", "3d", "software", "tool", "each", "keyframe", "user", "design", "and/or", "modify", "shaded", "area", "surface", "use", "paint-brush", "interface", "process", "perform", "interactive", "rate", "prescribe", "boundary", "constraint", "obtain", "area", "thereafter", "new", "surface", "brightness", "distribution", "automatically", "generate", "consider", "boundary", "constraint", "new", "surface", "brightness", "distribution", "keyframe", "automatically", "transmit", "all", "frame", "linear", "interpolation", "we", "thus", "obtain", "real-time", "preview", "stylistic", "animation", "central", "idea", "we", "approach", "effect", "desire", "change", "light", "shade", "boundary", "modify", "lambertian", "l?n", "lighting", "term", "directly", "add", "scalar", "offset", "function", "avoid", "need", "manipulate", "light", "vector", "normal", "can", "efficiently", "implement", "use", "scalar-valued", "radial", "basis", "function", "-lrb-", "-lsb-", "Wahba", "1990", "-rsb-", "-rrb-", "right", "image", "Figure", "from", "animation", "create", "use", "we", "technique", "while", "leftmost", "show", "scene", "before", "modification", "rest", "paper", "organize", "follow", "after", "briefly", "survey", "related", "work", "section", "we", "describe", "main", "idea", "underlie", "algorithm", "section", "section", "we", "describe", "some", "implementation", "detail", "we", "prototype", "system", "section", "demonstrate", "animation", "example", "discuss", "we", "result", "we", "conclude", "some", "limitation", "future", "work", "section", "number", "npr", "technique", "those", "-lsb-", "Gooch", "Gooch", "2001", "-rsb-", "have", "be", "develop", "emulate", "various", "stylistic", "appearance", "stylized", "rendering", "3d", "object", "Lake", "et", "al.", "-lsb-", "2000", "-rsb-", "propose", "several", "fundamental", "real-time", "rendering", "technique", "include", "traditional", "cartoon", "shader", "Lit-Sphere", "method", "Sloan", "et", "al.", "-lsb-", "2001", "-rsb-", "can", "describe", "view-independent", "tone", "detail", "use", "paint", "spherical", "environment", "map", "wysiwyg", "system", "Kalnins", "et", "al.", "-lsb-", "2002", "-rsb-", "allow", "direct", "drawing", "stroke", "onto", "3d", "object", "while", "learn", "stroke", "example", "multi-scale", "shading", "technique", "Rusinkiewicz", "et", "al.", "-lsb-", "2006", "-rsb-", "can", "also", "control", "appearance", "shape", "detail", "tuning", "parameter", "lighting", "model", "Barla", "et", "al.", "-lsb-", "2006", "-rsb-", "propose", "extension", "traditional", "cartoon", "shader", "which", "can", "control", "view-dependent", "tone", "detail", "include", "effect", "aerial", "perspective", "depth", "field", "cartoon", "highlight", "shader", "-lsb-", "Anjyo", "et", "al.", "2006", "-rsb-", "allow", "user", "directly", "click-and-drag", "highlight", "surface", "design", "animate", "they", "previous", "work", "user-specified", "indirect", "lighting", "design", "photo", "terface", "result", "new", "area", "can", "represent", "functionally", "introduce", "offset", "function", "modify", "standard", "lighting", "term", "bottom", "graph", "show", "1-d", "intensity", "distribution", "along", "green", "line", "realistic", "scene", "render", "some", "extent", "related", "we", "approach", "well", "design", "issue", "photorealistic", "lighting", "find", "light", "placement", "result", "user-specified", "highlight", "shadow", "scene", "-lrb-", "see", "-lsb-", "Lee", "et", "al.", "2006", "-rsb-", "more", "detailed", "discussion", "-rrb-", "exist", "several", "good", "approach", "-lrb-", "-lsb-", "Schoeneman", "et", "al.", "1993", "Kawai", "et", "al.", "1993", "Pellacini", "et", "al.", "2002", "-rsb-", "instance", "-rrb-", "geometry-dependent", "lighting", "method", "-lsb-", "Lee", "et", "al.", "2006", "-rsb-", "may", "also", "useful", "indirect", "light", "design", "tool", "visualize", "scientific", "datum", "Okabe", "et", "al.", "-lsb-", "2006", "-rsb-", "Akers", "et", "al.", "-lsb-", "2003", "-rsb-", "take", "other", "approach", "modify", "lighting", "provide", "intuitive", "painting", "method", "modify", "illumination", "3d", "model", "we", "approach", "inspire", "all", "above", "method", "however", "ours", "unique", "allow", "user", "add", "light", "shade", "paint", "they", "directly", "onto", "3d", "object", "without", "elaborate", "lighting", "control", "make", "stylistic", "animation", "key-framing", "addition", "we", "demonstrate", "continuous", "tone", "detail", "can", "also", "paint", "animated", "extension", "we", "approach" ],
  "content" : "We consider the problem of how to provide users with intuitive, fine-grained control over stylized light and shade on a 3D object. Over the past decade, a variety of non-photorealistic rendering techniques have been developed to facilitate visual interpretation of 3D objects. Most of these techniques are designed to elucidate particular attributes inherent to the object. For example, Gooch and Gooch [2001] developed a lighting model that changes hue to convey surface orientation, edge locations, and highlights for 3D technical illustration. The multi-scale shading method by [Rusinkiewicz et al. 2006] makes detailed 3D shape depiction at all frequencies possible. On the other hand, in application fields such as digital animation and video games, there is a significant demand for locally controllable stylized light and shade, which can achieve results that are directable, intentional, and often fictive, yet ultimately more attractive for it. For example, the canonical cartoon shader used routinely in 3D animation often creates undesirable shaded areas. These can arise from the complexity of the underlying geometry or the complexity of the lighting, or just as a result of the basic physics of illumination. The left image in Figure 1 shows such an example, where the dark area partly covers the right eye of the character. Directors would like to have the ability have such features removed while retaining other dark areas. In other cases, they might like to request that a shaded area be added below the left eye, as shown in the second image from the left in Figure 1 , in order to emphasize the character?s fierceness. However, satisfying these diverse artistic requirements simultaneously would be very hard or almost impossible using only existing conventional lighting control and/or by finetuning the parameters used. Changing the geometry of the model or animating textures or light maps might be helpful for achieving this, but these are time-consuming and impractical on a production schedule. Despite the crucial importance of such fine-grained artistic control of stylized light and shade, very little research exists on how to provide such control or suitable interactive techniques to support it. Our goal is to develop such ?director-friendly? methodologies for stylistic depiction of light and shade. To explain our approach more concisely, we restrict the discussion for now to making 3D cartoon animation. In this case, due to the nature of stylistic depiction, the techniques used need not be physically realistic; however, they must possess a certain sense of plausibility while meeting directorial demands. This emphasis on expressiveness over physical-realism implies that we must rely on the animator?s creativity?more than automatic physically-based algorithms?to get a desired animation. Therefore, a stylized shading approach should provide a simple, intuitive user interface so that the animator can easily and interactively translate his or her creative vision into reality. A keyframebased technique is appropriate, since it allows fine-tuning of stylistic animation in a traditional, but convenient and familiar way for animators. Additionally, real-time preview of the animation is also indispensable. These basic requirements for making stylized animation have led us to consider na?ve key-framing as a first approach towards a new methodology. The overall process of the approach we propose is: 1. Begin by making an initial 3D scene, which includes the lighting and animation settings, using a conventional 3D software tool. At each keyframe, the user designs and/or modifies the shaded area on a surface, using a paint-brush interface. This process is performed at interactive rates, prescribing the boundary constraint of the obtained area. Thereafter the new surface brightness distribution is automatically generated considering the boundary constraint. The new surface brightness distributions at the keyframes are automatically transmitted to all the frames by linear interpolation. We thus obtain real-time preview of the stylistic animation. The central idea of our approach is to effect the desired changes to light and shade boundaries by modifying the Lambertian L?N lighting term directly, adding a scalar offset function. This avoids the need to manipulate light vectors and normals and can be efficiently implemented using scalar-valued radial basis functions ([Wahba 1990]). The right images in Figure 1 are from an animation created using our techniques, while the leftmost shows the scene before modifications. The rest of the paper is organized as follows. After briefly surveying related work in section 2, we describe the main ideas underlying the algorithms in section 3. In section 4, we describe some implementation details of our prototype system. Section 5 demonstrates animation examples and discusses our results. We conclude with some limitations and future work in section 6. A number of NPR techniques, such as those in [Gooch and Gooch 2001], have been developed to emulate various stylistic appearances. For stylized rendering of 3D objects, Lake et al.[2000] proposed several fundamental real-time rendering techniques, including a traditional cartoon shader. The Lit-Sphere method by Sloan et al.[2001] can describe view-independent tone detail, using a painted spherical environment map. The WYSIWYG system by Kalnins et al.[2002] allows direct drawing of strokes onto 3D objects, while learning strokes by example. The multi-scale shading technique by Rusinkiewicz et al.[2006] can also control the appearance of shape detail by tuning parameters of the lighting model. Barla et al.[2006] proposed an extension of the traditional cartoon shader, which can control view-dependent tone detail, including such effects as aerial perspective and depth of field. The cartoon highlight shader in [Anjyo et al. 2006] allows a user to directly click-and-drag the highlights on a surface to design and animate them. Previous work on user-specified indirect lighting design for photo- terface: The resulting new area B 0 ? C 0 can be represented functionally by introducing an offset function that modifies the standard L ? N lighting term. The bottom graph shows a 1-d intensity distribution along the green line. realistic scene rendering is to some extent related to our approach as well. The design issue in photorealistic lighting is to find the light placement that results in the user-specified highlights and shadows in the scene (see [Lee et al. 2006] for more detailed discussion). There exist several good approaches ([Schoeneman et al. 1993; Kawai et al. 1993; Pellacini et al. 2002], for instance). The geometry-dependent lighting method by [Lee et al. 2006] may also be a useful indirect light design tool for visualizing scientific data. Okabe et al.[2006] and Akers et al.[2003] take other approaches to modifying lighting, providing an intuitive painting method for modifying the illumination of 3D models. Our approach is inspired by all of the above methods. However, ours is unique in that it allows a user to add light and shade by painting them directly onto 3D objects without elaborate lighting control, to make stylistic animation by key-framing. In addition, we demonstrate that continuous tone detail can also be painted and animated as an extension of our approach.",
  "resources" : [ ]
}