{
  "uri" : "sig2013a-a173-kopf_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2013a/a173-kopf_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Content-Adaptive Image Downscaling",
    "published" : "2013",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Johannes-Kopf",
      "name" : "Johannes",
      "surname" : "Kopf"
    }, {
      "uri" : "http://drinventor/Ariel-Shamir",
      "name" : "Ariel",
      "surname" : "Shamir"
    }, {
      "uri" : "http://drinventor/Pieter-Peers",
      "name" : "Pieter",
      "surname" : "Peers"
    } ]
  },
  "bagOfWords" : [ "we", "content-adaptive", "kernel", "form", "bilateral", "combination", "two", "gaussian", "kernel", "define", "over", "space", "color", "respectively", "technically", "realize", "iterative", "maximum-likelihood", "optimization", "use", "constrain", "variation", "expectation-maximization", "algorithm", "cr", "category", "i.", "4.1", "-lsb-", "Computer", "Graphics", "-rsb-", "image", "processing", "computer", "vision?sampling", "keyword", "image", "downscale", "Links", "dl", "pdf", "EB", "ODE", "multi-megapixel", "size", "much", "smaller", "dimension", "view", "camera", "viewfinder", "computer", "mobile", "screen", "web", "because", "all", "method", "content-invariant", "-lrb-", "i.e.", "use", "invariant", "kernel", "-rrb-", "tradeoff", "between", "preserve", "detail", "prevent", "aliasing", "global", "classic", "method", "output", "pixel", "compute", "weighted", "sum", "input", "pixel", "simple", "parametric", "form", "kernel", "achieve", "good", "trade-off", "between", "Inglis", "Kaplan", "-lsb-", "2012", "-rsb-", "present", "method", "rasterize", "vector", "line", "art", "low", "resolution", "use", "rule", "establish", "pixel", "artist", "avoid", "certain", "artifact", "like", "jaggy", "preserve", "local", "continuity", "however", "since", "correspond", "output", "pixel", "number", "constraint", "kernel", "necessary", "due", "application", "image", "downscaling", "second", "position", "can", "vary", "too", "much", "from", "output", "pixel", "grid", "size", "can", "vary", "too", "much", "from", "output", "pixel", "size", "denote", "-lcb-", "-rcb-", "input", "image", "pixel", "-lrb-", "-rrb-", "where", "spatial", "coordinate", "corresponding", "CIELAB", "color", "pixel", "i.", "each", "reconstructed", "image", "pixel", "color", "define", "weighted", "sum", "kernel", "color", "where", "normalization", "factor", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "ensure", "each", "probability", "density", "function", "-lrb-", "i.e.", "integrate", "-rrb-", "spatial", "component", "color", "component", "give", "where", "mean", "covariance", "matrix", "spatial", "Gaussian", "mean", "variance", "color", "space", "Gaussian", "while", "summation", "equation", "10", "define", "over", "whole", "input", "image", "necessary", "practical", "implementation", "since", "kernel", "constrain", "size", "-lrb-", "see", "next", "section", "-rrb-", "next", "we", "compute", "direction", "edge", "between", "kernel", "kn", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-rrb-", "image", "use", "study", "provide", "supplementary", "material" ],
  "content" : "Our content-adaptive kernels are formed as a bilateral combination of two Gaussian kernels defined over space and color, respectively. This is technically realized as an iterative maximum-likelihood optimization using a constrained variation of the Expectation-Maximization algorithm. CR Categories: I.4.1 [Computer Graphics]: Image Processing and Computer Vision?Sampling Keywords: Images, Downscaling Links: DL PDF W EB C ODE multi-megapixel size to much smaller dimensions to be viewed on a camera viewfinder, on a computer or mobile screen, or on the web. Because all these methods are content-invariant (i.e., they use invariant kernels), the tradeoff between preserving detail and preventing aliasing is global. As in classic methods, the output pixels are computed as a weighted sum of the input pixels. The simple parametric form of these kernels achieves a good trade-off between Inglis and Kaplan [2012] present a method for rasterizing vector line art at low resolution, using rules established by pixel artists to avoid certain artifacts like jaggies and preserve local continuity. However, since they correspond to output pixels, a number of constraints on the kernels are necessary due to the application to image downscaling. Second, their position cannot vary too much from the output pixel grid and their size cannot vary too much from the output pixel size. Denote X = {x i } as the input image with pixels x i = (p i , c i ), where p i are the spatial coordinates and c i the corresponding CIELAB color of pixel i. Each reconstructed image pixel color c i is defined as a weighted sum of the kernel colors ? k : where the normalization factor W k = ? j f k ( j)g k ( j) ensures that each w k is a probability density function (i.e., integrates to 1). The spatial component f k and the color component g k are given by: k where ? k and ? k are the mean and covariance matrix of the spatial Gaussian, and ? k and ? k are the mean and variance of the color space Gaussian. While the summations in Equations 8?10 are defined over the whole input image, this is not necessary in a practical implementation, since the kernels are constrained in size (see next section). Next, we compute the direction of the edge between the kernels as d kn = ? i ? ? k (i)/(? k (i) + ? n (i)) . The images used for the study are provided in the supplementary material.",
  "resources" : [ ]
}