{
  "uri" : "sig2013a-a194-hu_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2013a/a194-hu_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Inverse Image Editing: Recovering a Semantic Editing History from a Before-and-After Image Pair",
    "published" : "2013",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Shi-Min-Hu",
      "name" : "Shi-Min",
      "surname" : "Hu"
    }, {
      "uri" : "http://drinventor/Kun-Xu",
      "name" : "Kun",
      "surname" : "Xu"
    }, {
      "uri" : "http://drinventor/Li-Qian-Ma",
      "name" : "Li-Qian",
      "surname" : "Ma"
    }, {
      "uri" : "http://drinventor/Bin-Liu",
      "name" : "Bin",
      "surname" : "Liu"
    }, {
      "uri" : "http://drinventor/Bi-Ye-Jiang",
      "name" : "Bi-Ye",
      "surname" : "Jiang"
    }, {
      "uri" : "http://drinventor/Jue-Wang",
      "name" : "Jue",
      "surname" : "Wang"
    } ]
  },
  "bagOfWords" : [ "image", "editing", "series", "operation", "often", "perform", "accomplish", "editing", "task", "instance", "user", "may", "first", "select", "object", "image", "apply", "geometric", "transform", "adjust", "its", "shape", "position", "apply", "various", "color", "adjustment", "enhance", "its", "appearance", "process", "repeat", "multiple", "image", "region", "need", "touch", "up", "achieve", "editing", "goal", "result", "long", "sometimes", "complicated", "editing", "history", "have", "clean", "complete", "editing", "history", "available", "require", "many", "graphic", "file", "management", "application", "image", "editing", "revision", "control", "-lsb-", "Chen", "et", "al.", "2011", "-rsb-", "automatic", "tutorial", "generation", "-lsb-", "grabler", "et", "al.", "2009", "-rsb-", "editing", "visualization", "-lsb-", "Heer", "et", "al.", "2008", "-rsb-", "retention", "editing", "history", "also", "lead", "new", "possibility", "image", "editing", "adjust", "history", "produce", "result", "different", "variation", "from", "source", "image", "transfer", "history", "another", "image", "etc.", "editing", "goal", "much", "harder", "achieve", "without", "have", "editing", "history", "unfortunately", "although", "exist", "software", "provide", "powerful", "editing", "tool", "universal", "efficient", "solution", "encode", "store", "transmit", "re-use", "editing", "history", "instance", "Adobe", "Photoshop", "only", "allow", "partial", "history", "save", "either", "image", "file", "command", "log", "file", "often", "case", "complete", "history", "available", "after", "editing", "task", "accomplish", "furthermore", "image", "editing", "trial", "error", "process", "especially", "amateur", "can", "easily", "take", "dozen", "operation", "explore", "different", "idea", "fix", "error", "fine", "tweak", "parameter", "before", "produce", "desire", "output", "result", "raw", "editing", "history", "produce", "novice", "user", "often", "long", "redundant", "less", "understandable", "may", "directly", "applicable", "some", "application", "require", "clean", "history", "work", "we", "study", "problem", "recover", "clean", "semantically", "meaningful", "editing", "history", "give", "source", "image", "edit", "version", "which", "we", "call", "inverse", "image", "editing", "task", "involve", "several", "technical", "challenge", "firstly", "we", "need", "discover", "which", "object", "region", "have", "be", "edit", "secondly", "we", "need", "determine", "how", "each", "object", "region", "have", "be", "edit", "finally", "semantically", "meaningful", "editing", "path", "need", "generate", "from", "recover", "local", "editing", "operation", "we", "system", "provide", "set", "solution", "problem", "particular", "we", "improve", "state-ofthe-art", "region", "match", "method", "handle", "large", "appearance", "difference", "between", "original", "object", "its", "edit", "version", "-lrb-", "see", "Sec", "we", "propose", "new", "method", "recover", "semantic", "appearance", "operator", "each", "edit", "region", "-lrb-", "see", "Sec", "-rrb-", "merge", "they", "form", "meaningful", "editing", "path", "under", "predefined", "semantic", "constraint", "-lrb-", "see", "Sec", "we", "also", "demonstrate", "how", "recovered", "history", "can", "apply", "various", "application", "-lrb-", "see", "Sec", "impossible", "practice", "recover", "all", "editing", "operation", "may", "have", "be", "apply", "image", "we", "system", "support", "set", "commonly", "use", "linear", "non-linear", "geometric", "color", "adjustment", "arbitrary", "combination", "they", "specifically", "each", "edit", "step", "may", "contain", "-lrb-", "necessarily", "-rrb-", "follow", "operation", "-lrb-", "-rrb-", "select", "object", "-lrb-", "region", "-rrb-", "-lrb-", "-rrb-", "apply", "geometric", "transform", "may", "involve", "scaling", "rotation", "translation", "flip", "-lrb-", "-rrb-", "apply", "per-region", "color", "adjustment", "may", "involve", "brightness", "exposure", "hue", "saturation", "tone", "adjustment", "spatially-varying", "per-pixel", "strength", "map", "simulate", "local", "paint", "brush", "operator", "when", "stack", "together", "provide", "vast", "editing", "possibility", "cover", "many", "popular", "adjustment", "tool", "modern", "image", "editing", "software", "evaluate", "proposed", "system", "we", "construct", "test", "dataset", "contain", "before-and-after", "image", "pair", "along", "original", "editing", "step", "perform", "artist", "user", "study", "dataset", "reveal", "editing", "history", "generate", "we", "system", "general", "comparable", "original", "one", "term", "semantic", "meaningfulness", "-lrb-", "see", "Sec", "region", "matching", "between", "image", "core", "component", "we", "system", "build", "correspondence", "between", "region", "original", "edited", "image", "sparse", "matching", "method", "sift", "matching", "-lsb-", "Lowe", "2004", "-rsb-", "applicable", "dense", "correspondence", "require", "we", "application", "conventional", "optical", "flow", "method", "-lsb-", "Brox", "et", "al.", "2009", "Zimmer", "et", "al.", "2011", "-rsb-", "can", "apply", "either", "since", "edit", "region", "may", "undergo", "large", "appearance", "transformation", "violate", "apparent", "motion", "assumption", "optical", "flow", "recent", "sift", "flow", "method", "-lsb-", "Liu", "et", "al.", "2008", "-rsb-", "dual", "bootstrap", "method", "-lsb-", "Yang", "et", "al.", "2007", "-rsb-", "combine", "sparse", "feature", "dense", "match", "through", "seed-and-grow", "scheme", "still", "have", "difficulty", "match", "textureless", "object", "where", "feature", "hard", "extract", "recently", "family", "patch-based", "fast", "image", "correspondence", "method", "have", "be", "propose", "patchmatch", "-lsb-", "Barnes", "et", "al.", "2009", "-rsb-", "randomized", "algorithm", "find", "approximate", "nearest", "neighbor", "between", "image", "patch", "have", "be", "further", "extend", "include", "geometric", "color", "transformation", "during", "match", "-lsb-", "Barnes", "et", "al.", "2010", "-rsb-", "find", "exact", "nearest", "patch", "-lsb-", "Xiao", "et", "al.", "2011", "-rsb-", "build", "upon", "generalize", "PatchMatch", "algorithm", "-lsb-", "Barnes", "et", "al.", "2010", "-rsb-", "HaCohen", "et", "al.", "-lsb-", "2011", "-rsb-", "propose", "non-rigid", "dense", "correspondence", "-lrb-", "NRDC", "-rrb-", "algorithm", "match", "region", "between", "image", "shared", "content", "we", "adopt", "framework", "algorithm", "extend", "we", "application", "describe", "Sec", ".4", "editing", "process", "management", "Kurlander", "Feiner", "-lsb-", "1988", "-rsb-", "present", "early", "work", "generate", "editable", "graphical", "visualization", "long", "user", "session", "more", "recently", "Heer", "et", "al.", "-lsb-", "2008", "-rsb-", "propose", "visualization", "system", "interactively", "generate", "graphical", "history", "su", "et", "al.", "-lsb-", "2009", "-rsb-", "provide", "another", "interactive", "visualization", "approach", "manage", "operation", "history", "vector", "graphic", "Grabler", "et", "al.", "-lsb-", "2009", "-rsb-", "propose", "system", "automatically", "create", "stepby-step", "visually", "appeal", "tutorial", "complicated", "image", "editing", "process", "Chen", "et", "al.", "-lsb-", "2011", "-rsb-", "propose", "nonlinear", "revision", "control", "method", "image", "editing", "use", "direct", "acyclic", "graph", "managing", "visualize", "editing", "process", "Chen", "et", "al.", "-lsb-", "2012", "-rsb-", "suggest", "adaptive", "history", "which", "automatically", "segment", "group", "lengthy", "sequence", "editing", "command", "easy", "navigation", "Delta", "system", "-lsb-", "Kong", "et", "al.", "2012", "-rsb-", "can", "help", "user", "identify", "tradeoff", "between", "workflow", "use", "visual", "comparison", "all", "system", "require", "editing", "process", "available", "Fu", "et", "al.", "-lsb-", "2011", "-rsb-", "propose", "system", "estimate", "reasonable", "drawing", "order", "from", "static", "line", "drawing", "which", "spirit", "similar", "we", "proposed", "system", "limit", "line", "art", "rather", "than", "natural", "image", "edit", "transfer", "Berthouzoz", "et", "al.", "-lsb-", "2011", "-rsb-", "propose", "content", "adaptive", "macro", "transfer", "complex", "image", "manipulation", "apply", "source", "image", "new", "target", "image", "learn", "relationship", "between", "image", "feature", "parameter", "editing", "procedure", "similarly", "Bychkovsky", "et", "al.", "-lsb-", "2011", "-rsb-", "learn", "global", "tone", "adjustment", "model", "from", "training", "image", "which", "can", "automatically", "apply", "new", "image", "again", "system", "require", "editing", "procedure", "know", "image", "analogy", "-lsb-", "Hertzmann", "et", "al.", "2001", "-rsb-", "provide", "classic", "example", "edit", "transfer", "without", "recover", "editing", "process", "however", "can", "handle", "geometric", "object-level", "edit", "repfinder", "system", "-lsb-", "Cheng", "et", "al.", "2010", "-rsb-", "find", "repeated", "scene", "element", "image", "so", "edit", "make", "one", "element", "can", "transfer", "other", "one", "many", "application", "we", "recover", "history", "from", "one", "image", "pair", "can", "apply", "new", "image", "achieve", "semantic", "editing", "transfer", "imageadmixture", "system", "-lsb-", "Zhang", "et", "al.", "2012", "-rsb-", "find", "object-level", "group", "element", "image", "allow", "object", "mix", "appearance", "transfer", "between", "different", "image", "Y?cer", "et", "al.", "-lsb-", "2012", "-rsb-", "propose", "transfusive", "image", "manipulation", "automatic", "approach", "transfer", "edit", "make", "one", "image", "other", "contain", "same", "object", "scene" ],
  "content" : "In image editing, a series of operations are often performed to accomplish an editing task. For instance, the user may first select an object in the image, apply geometric transforms to adjust its shape and position, and then apply various color adjustments to enhance its appearance. This process is repeated if multiple image regions need to be touched up to achieve an editing goal, resulting in a long and sometimes complicated editing history. Having a clean and complete editing history available is required in many graphics and file management applications, such as image editing revision control [Chen et al. 2011], automatic tutorial generation [Grabler et al. 2009] and editing visualization [Heer et al. 2008]. Retention of an editing history also leads to new possibilities in image editing, such as: adjusting the history to produce results with different variations from the source image; transferring the history to another image, etc. These editing goals are much harder to achieve without having the editing history. Unfortunately, although existing software provides powerful editing tools, there is no universal, efficient solution to encode, store, transmit and re-use an editing history. For instance, Adobe Photoshop 1 only allows a partial history to be saved in either the image file or the command log file. It is often the case that a complete history is not available after the editing task is accomplished. Furthermore, image editing is a trial and error process especially for amateurs. It can easily take dozens of operations to explore different ideas, fix errors and fine tweak parameters before producing a desired output. As a result, the raw editing history produced by a novice user is often long, redundant, less understandable, and may not be directly applicable in some applications that requires a clean history. In this work, we study the problem of recovering a clean and semantically meaningful editing history given a source image and an edited version, which we call inverse image editing. This task involves several technical challenges. Firstly, we need to discover which objects or regions have been edited. Secondly, we need to determine how each object or region has been edited. Finally, a semantically meaningful editing path needs to be generated from  recovered local editing operations. Our system provides a set of solutions to these problems. In particular, we improve the state-ofthe-art region matching methods to handle large appearance differences between an original object and its edited version (see Sec. We propose new methods to recover semantic appearance operators for each edited region (see Sec. 5), and then merge them to form a meaningful editing path under predefined semantic constraints (see Sec. We also demonstrate how the recovered history can be applied to various applications (see Sec. It is impossible in practice to recover all editing operations that may have been applied to an image. Our system supports a set of commonly used linear and non-linear geometric and color adjustments, and arbitrary combinations of them. Specifically, each edit step may contain (but not necessarily) the following operations: (1) select an object (region); (2) apply a geometric transform that may involve scaling, rotation, translation, and flipping; and (3) apply per-region color adjustments that may involve brightness, exposure, hue, saturation, and tone adjustments, with a spatially-varying per-pixel strength map for simulating local paint brushes. These operators, when stacked together, provide vast editing possibilities, and cover many popular adjustment tools in modern image editing software. To evaluate the proposed system, we construct a test dataset that contains before-and-after image pairs, along with the original editing steps performed by artists. A user study on this dataset revealed that the editing histories generated by our system are in general comparable to the original ones in terms of semantic meaningfulness (see Sec. Region matching between images. A core component of our system is to build correspondences between regions in the original and edited images. Sparse matching methods such as SIFT matching [Lowe 2004] are not applicable, as dense correspondences are required in our application. Conventional optical flow methods [Brox et al. 2009; Zimmer et al. 2011] cannot be applied either, since an edited region may undergo large appearance transformations that violate the apparent motion assumption of optical flow. The recent SIFT flow method [Liu et al. 2008] and the dual bootstrap method [Yang et al. 2007] combine sparse features with dense matching through a seed-and-grow scheme, but they still have difficulty in matching textureless objects where features are hard to extract. Recently, a family of patch-based fast image correspondence methods have been proposed. PatchMatch [Barnes et al. 2009] is a randomized algorithm for finding approximate nearest neighbors between image patches; it has been further extended to include geometric and color transformations during matching [Barnes et al. 2010], or to find exact nearest patches [Xiao et al. 2011]. Built upon the generalized PatchMatch algorithm [Barnes et al. 2010], HaCohen et al. [2011] propose a non-rigid dense correspondence (NRDC) algorithm for matching regions between images with shared content. We adopt the framework of this algorithm and extend it for our application, as described in Sec.4. Editing process management. Kurlander and Feiner [1988] present an early work on generating editable graphical visualizations for long user sessions. More recently, Heer et al. [2008] propose a visualization system for interactively generating graphical histories. Su et al. [2009] provide another interactive visualization approach for managing operation histories for vector graphics. Grabler et al. [2009] propose a system to automatically create stepby-step, visually appealing tutorials of complicated image editing processes. Chen et al. [2011] propose a nonlinear revision control  method for image editing, using a directed acyclic graph for managing and visualizing the editing process. Chen et al. [2012] suggest an adaptive history, which automatically segments and groups a lengthy sequence of editing commands for easy navigation. The Delta system [Kong et al. 2012] can help users identify the tradeoffs between workflows using visual comparisons. All these systems require the editing process to be available. Fu et al. [2011] propose a system to estimate a reasonable drawing order from a static line drawing, which is in spirit similar to our proposed system, but is limited to line art rather than natural images. Edit transfer. Berthouzoz et al. [2011] propose content adaptive macros to transfer complex image manipulations applied on source images to new target images, by learning the relationships between image features and the parameters of editing procedures. Similarly, Bychkovsky et al. [2011] learn global tone adjustment models from training images, which can then be automatically applied to new images. Again, these systems require the editing procedure to be known. Image Analogies [Hertzmann et al. 2001] provides a classic example of edit transfer without recovering the editing process. However, it cannot handle geometric or object-level edits. The RepFinder system [Cheng et al. 2010] finds repeated scene elements in an image so that edits made to one element can be transferred to others. As one of many applications, our recovered history from one image pair can be applied to new images to achieve semantic editing transfer. The ImageAdmixture system [Zhang et al. 2012] finds object-level grouped elements in images, and allows object mixing and appearance transferring between different images. Y?cer et al. [2012] propose transfusive image manipulation, an automatic approach to transfer edits made to one image to others containing the same object or scene.",
  "resources" : [ ]
}