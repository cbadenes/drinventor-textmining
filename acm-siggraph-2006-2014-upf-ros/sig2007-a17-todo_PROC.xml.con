{
  "uri" : "sig2007-a17-todo_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2007/a17-todo_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Locally Controllable Stylized Shading",
    "published" : "2007",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Hideki-Todo",
      "name" : "Hideki",
      "surname" : "Todo"
    }, {
      "uri" : "http://drinventor/Ken-ichi Anjyo",
      "name" : "Ken",
      "surname" : "ichi Anjyo"
    }, {
      "uri" : "http://drinventor/William V. Baxter-III",
      "name" : "William V. Baxter",
      "surname" : "III"
    }, {
      "uri" : "http://drinventor/Takeo-Igarashi",
      "name" : "Takeo",
      "surname" : "Igarashi"
    } ]
  },
  "bagOfWords" : [ "we", "have", "apply", "we", "prototype", "system", "make", "various", "stylistic", "animation", "we", "system", "currently", "run", "interactive", "rate", "2.16", "GHz", "Intel", "p4", "Core", "Duo", "CPU", "NVIDIA", "GeForce", "QuadroFX", "350M", "GPU", "editing", "preview", "animation", "frame", "rate", "range", "from", "20", "fp", "all", "example", "paper", "accompany", "video", "make", "facial", "animation", "control", "light", "shade", "face", "crucial", "Figure", "first", "half", "accompany", "video", "illustrate", "how", "effectively", "efficiently", "we", "algorithm", "work", "important", "case", "show", "video", "even", "make", "simple", "facial", "animation", "3d", "head", "model", "often", "create", "many", "unnecessary", "dark", "area", "very", "hard", "remove", "they", "selectively", "use", "conventional", "lighting", "control", "other", "hand", "we", "approach", "can", "eliminate", "they", "easily", "interactively", "moreover", "allow", "user", "successfully", "add", "variety", "effect", "each", "which", "dramatically", "change", "character?s", "impression", "Figure", "latter", "half", "video", "demonstrate", "typical", "case", "where", "animator", "use", "we", "system", "make", "animation", "less", "realistic", "more", "expressive", "compare", "animation", "under", "conventional", "lighting", "-lrb-", "left", "Figure", "-rrb-", "we", "note", "several", "effect", "have", "be", "add", "animation", "most", "obvious", "smoothing", "simplification", "move", "highlight", "protrude", "forehead", "also", "example", "animator", "have", "add", "light", "area", "accentuate", "jawline", "bright", "firm", "line", "above", "left", "eye", "delay", "emergence", "face", "light", "show", "right", "Figure", "some", "effect", "might", "achieve", "conventional", "lighting", "technique", "however", "almost", "impossible", "add", "all", "they", "same", "shot", "without", "resort", "frame-by-frame", "modification", "Figure", "first", "animation", "example", "video", "show", "use", "we", "technique", "animated", "character", "highly", "deforming", "cape", "use", "move", "point", "light", "fix", "directional", "light", "type", "situation", "can", "result", "light", "shade", "area", "distract", "because", "change", "too", "rapidly", "animation", "video", "demonstrate", "we", "technique", "effective", "eliminate", "unnecessary", "shading", "simplify", "light", "shade", "make", "suitable", "cartoon", "animation", "second", "animation", "video", "demonstrate", "local", "controllability", "continuous", "tone", "we", "intensity", "brush", "describe", "section", "3.5", "show", "movie", "even", "when", "adjust", "continuous", "tone", "object", "we", "approach", "allow", "local", "tone", "control", "add", "backlight", "effect", "around", "character?s", "shoulder", "-lrb-", "see", "Figure", "-rrb-", "we", "be", "able", "create", "animation", "without", "modify", "initial", "lighting", "setup", "however", "case", "where", "viewpoint", "and/or", "light", "move", "more", "dynamically", "may", "more", "difficult", "achieve", "same", "effect", "use", "we", "technique", "make", "animation", "we", "use", "either", "boundary", "brush", "intensity", "brush", "depend", "type", "modification", "desire", "boundary", "brush", "appropriate", "when", "user", "want", "specify", "exactly", "where", "new", "boundary", "should", "lie", "goal", "just", "generally", "make", "light", "dark", "shape", "bigger", "smaller", "intensity", "brush", "more", "effective", "example", "we", "determine", "size", "paint", "brush", "experimentation", "example", "we", "choose", "width", "boundary", "brush", "so", "one", "stroke", "tem", "be", "solve", "while", "rbf", "-lrb-", "solve", "-rrb-", "time", "take", "solve", "linear", "system", "rbf", "-lrb-", "dist", "-rrb-", "time", "take", "compute", "rbf", "distance", "function", "calculate", "-lrb-", "-rrb-", "transfer", "time", "take", "transfer", "vertex", "datum", "from", "maya", "we", "plug", "brush", "include", "least", "two", "adjacent", "vertex", "surface", "mesh", "similarly", "distance", "between", "figure", "also", "set", "include", "least", "two", "adjacent", "vertex", "mesh", "which", "can", "accomplish", "use", "slider", "small", "value", "offset", "function", "specify", "intensity", "brush", "section", "3.4", "also", "set", "empirically", "give", "interactivity", "we", "system", "result", "particular", "parameter", "setting", "can", "see", "immediately", "so", "we", "have", "find", "burdensome", "search", "value", "via", "trial", "error", "Table", "show", "performance", "we", "current", "implementation", "computation", "cost", "however", "depend", "number", "vertex", "contain", "since", "we", "do", "paint", "very", "large", "region", "practice", "cost", "seem", "serious", "bottleneck", "we", "system", "most", "significant", "part", "basic", "cost", "transfer", "vertex", "datum", "between", "maya", "we", "plug", "performance", "datum", "Table", "also", "make", "clear", "algorithm", "itself", "sufficiently", "fast", "interactive", "editing", "we", "prototype", "system", "have", "be", "make", "test", "close", "collaboration", "professional", "animator", "we", "workplace", "since", "very", "early", "stage", "development", "initially", "we", "give", "20-minute", "tutorial", "animator", "since", "we", "system", "implement", "maya", "plugin", "be", "able", "try", "out", "own", "model", "immediately", "reaction", "have", "be", "positive", "do", "seem", "find", "system", "capable", "produce", "desire", "result", "easily", "quickly", "most", "animation", "video", "be", "design", "animator", "so", "clearly", "display", "capability", "propose", "technique", "typically", "animation", "those", "show", "video", "take", "few", "hour", "complete", "which", "drastic", "improvement", "over", "prevus", "ous", "technique", "available", "animator", "also", "claim", "conventional", "trick", "texture", "animation", "modification", "character?s", "geometry", "would", "make", "difficult", "maintain", "consistency", "between", "different", "shot", "same", "character", "therefore", "conventional", "technique", "kind", "edit", "would", "simply", "infeasible", "production", "schedule", "currently", "we", "add", "system", "actual", "production", "pipeline", "so", "soon", "ready", "use", "forthcoming", "project", "even", "limit", "discussion", "cartoon", "shading", "show", "paper", "we", "still", "feel", "considerable", "application", "we", "algorithm", "only", "feature", "film", "also", "television", "animation", "even", "illustrative", "visualization", "contrast", "direct", "application", "we", "method", "interactive", "video", "game", "may", "difficult", "however", "even", "context", "could", "useful", "non-interactive", "cut-scene", "since", "playback", "use", "we", "technique", "lightweight", "real-time", "any", "modern", "GPU", "we", "have", "present", "few", "simple", "algorithm", "step", "toward", "new", "methodology", "truly", "directable", "stylistic", "depiction", "light", "shade", "3d", "animation", "we", "prototype", "system", "allow", "user", "locally", "interactively", "edit", "light", "shade", "painting", "directly", "3d", "object", "moreover", "local", "edit", "integrate", "seamlessly", "conventional", "global", "lighting", "animate", "smoothly", "regardless", "conventional", "lighting", "setup", "use", "animation", "example", "video", "illustrate", "advantage", "over", "previous", "method", "algorithm", "however", "exploratory", "several", "thing", "leave", "accomplish", "we", "approach", "rbf-based", "algorithm", "use", "obtain", "rough", "boundary", "paint", "shaded", "area", "addition", "we", "make", "assumption", "vertex", "define", "object", "add", "remove", "during", "animation", "we", "do", "handle", "object", "change", "topology", "during", "animation", "we", "may", "need", "more", "sophisticated", "algorithm", "obtain", "more", "precise", "approximation", "paint", "area", "when", "apply", "method", "cartoon", "animation", "highlight", "very", "sharp", "edge", "sometimes", "desire", "smoothing", "rbf-based", "method", "can", "give", "sharp", "highlight", "directly", "provide", "boolean", "operation", "-lsb-", "Anjyo", "et", "al.", "2006", "-rsb-", "may", "use", "here", "we", "method", "allow", "we", "add", "locally", "controllable", "light", "shade", "same", "time", "conventional", "lighting", "control", "can", "replace", "we", "approach", "example", "very", "simple", "case", "suppose", "we", "want", "move", "small", "round", "highlight", "ball", "from", "one", "location", "another", "could", "easily", "accomplish", "move", "light", "source", "however", "approach", "present", "paper", "highlight", "would", "move", "fade", "off", "original", "point", "fade", "destination", "clearly", "demonstrate", "difference", "between", "we", "approach", "conventional", "one", "we", "believe", "approach", "complementary", "we", "approach", "local", "which", "mean", "only", "enable", "local", "editing", "also", "movement", "light", "shade", "local", "we", "currently", "investigate", "how", "make", "cast", "shadow", "also", "locally", "controllable", "we", "believe", "modify", "version", "approach", "describe", "here", "have", "promise", "achieve", "paper", "we", "have", "focus", "area", "3d", "stylized", "animation", "however", "important", "practical", "area", "where", "clear", "need", "new", "technique", "help", "bridge", "gap", "between", "artistic", "direction", "animator?s", "heavy", "load", "we", "hope", "we", "approach", "indicate", "promising", "direction", "serve", "practical", "need" ],
  "content" : "We have applied our prototype system to making various stylistic animations. Our system currently runs at interactive rates on a 2.16GHz Intel P4 Core Duo CPU with an NVIDIA GeForce QuadroFX 350M GPU. In editing and previewing the animations, the frame rate ranges from 6 to 20 fps for all the examples in this paper and in the accompanying videos. In making facial animation, controlling light and shade on the face is crucial. Figure 1 and the first half of the accompanying video 1 illustrate how effectively and efficiently our algorithms work for this important case. As shown in the video, even for making a simple facial animation, a 3D head model often creates many unnecessary dark areas, and it is very hard to remove them selectively using conventional lighting control. On the other hand, our approach can eliminate them easily and interactively. Moreover it allows the user to successfully add a variety of effects, each of which dramatically changes the character?s impression. Figure 5 and the latter half of the video 1 demonstrate a typical case where an animator uses our system to make the animation less realistic, but more expressive. Comparing with the animation under conventional lighting (left of Figure 5 ), we note several effects that have been added to the animation. Most obvious is the smoothing and simplification of the moving highlight on the protruding forehead. But also for example, the animator has added a light area to accentuate the jawline; a bright, firm line above the left eye; and delayed emergence of the face into the light, as shown in the right of Figure 5 . Some of these effects might be achieved by conventional lighting techniques. However, it is almost impossible to add all of them into the same shot without resorting to frame-by-frame modifications. Figure 6 and the first animation example in video 2 show the use of our techniques on an animated character with a highly deforming cape using a moving point light and a fixed directional light. This type of situation can result in light and shade areas that are distracting because they change too rapidly. The animation in the video demonstrates that our techniques are effective in eliminating such unnecessary shading and in simplifying light and shade to make it suitable for cartoon animation. The second animation in video 2 demonstrates local controllability of continuous tone with our intensity brush described in section 3.5. As shown in the movie, even when adjusting the continuous tone on this object, our approach allows local tone control, adding a backlight effect around the character?s shoulder (see Figure 7 ). We were able to create this animation without modifying the initial lighting setup. However, in cases where the viewpoint and/or lights are moving more dynamically, it may be more difficult to achieve the same effect using our technique. In making these animations, we used either of boundary brush or the intensity brush, depending on the type of modification desired. The boundary brush is appropriate when the user wants to specify exactly where the new boundary should lie. If the goal is just to generally make a light or dark shape bigger or smaller, then the intensity brush is more effective. In the examples we determined the size of the paint brushes by experimentation. For example, we chose the width of the boundary brush so that one stroke of the tem being solved for, while RBF(solve) is the time taken to solve the linear system. RBF(dist) is the time taken to compute the RBF distance function for calculating o k (p). Transfer is the time taken to transfer vertex data to and from Maya in our plug in. brush includes at least two adjacent vertices of the surface mesh. Similarly, the distance between ? C 0 and ? D 0 in Figure 2 , it is also set to include at least two adjacent vertices of the mesh, which can be accomplished using a slider. The small value of the offset function specified by the intensity brush in section 3.4 is also set empirically. Given the interactivity of our system, results of a particular parameter setting can be seen immediately, so we have not found it burdensome to search for these values via trial and error. Table 1 shows the performance of our current implementation. The computation cost, however, depends on the number of vertices contained in D k . Since we do not paint very large regions D k in practice, this cost seems not to be a serious bottleneck in our system. The most significant part was the basic cost of transferring vertex data between Maya and our plug in. The performance data in Table 1 also makes it clear that the algorithm itself is sufficiently fast for interactive editing. Our prototype system has been made and tested in close collaboration with professional animators in our workplace since the very early stages of development. Initially, we gave a 20-minute tutorial to the animators. Since our system is implemented as a Maya plugin, they were able to try it out on their own models immediately. The reaction has been positive they do seem to find the system capable of producing the desired results easily and quickly. Most of the animations in the videos were designed with the animators so as to clearly display the capabilities of the proposed technique. Typically animations such as those shown in the videos take a few hours to complete, which is a drastic improvement over the previ- ous techniques available to the animators. They also claimed that the conventional tricks such as texture animation or modifications to the character?s geometry would make it difficult to maintain consistency between different shots with the same character. Therefore, with such conventional techniques, these kind of edits would simply be infeasible on a production schedule. Currently we are adding this system to an actual production pipeline, so it will soon be ready for use in forthcoming projects. Even limiting the discussion to cartoon shading as shown in this paper, we still feel there are considerable applications of our algorithms not only in feature films, but also for television animation and even illustrative visualization. In contrast, the direct application of our method to interactive video games may be difficult; however, even in that context, it could be useful for non-interactive cut-scenes, since playback using our technique is lightweight and real-time on any modern GPU. We have presented a few simple algorithms as steps toward a new methodology for truly directable stylistic depiction of light and shade in 3D animation. Our prototype system allows the user to locally and interactively edit light and shade by painting directly on 3D objects. Moreover the local edits integrate seamlessly with the conventional global lighting and animate smoothly regardless of the conventional lighting setup used. The animation examples and the videos illustrate these advantages over previous methods. These algorithms, however, are exploratory. There are several things left to accomplish. In our approach, the RBF-based algorithm is used to obtain the rough boundary of the painted shaded area. In addition, we make the assumption that the vertices defining the object will not be added or removed during animation. We do not handle objects that change topology during an animation. We may need a more sophisticated algorithm to obtain a more precise approximation of the painted area. When applying this method to cartoon animation, highlights with very sharp edges are sometimes desired. But a smoothing RBF-based method cannot give such a sharp highlight directly. Providing boolean operations as in [Anjyo et al. 2006] may be of use here. Our method allows us to add locally controllable light and shade, but at the same time conventional lighting control cannot be replaced by our approach. For example, as a very simple case, suppose that we want to move a small rounded highlight on a ball from one location to another. This could be easily accomplished by moving the light source. However, with the approach presented in this paper, the highlight would not move, but fade off at the original point, and fade in at the destination. This clearly demonstrates a difference between our approach and the conventional one. We believe that these approaches are complementary. Our approach is local, which means not only that it enables local editing, but also that the movement of light and shade is local. We are currently investigating how to make cast shadows also locally controllable. We believe that a modified version of the approach described here has promise for achieving this. In this paper we have focused on the area of 3D stylized animation. However, this is an important practical area where there is a clear need for new techniques to help bridge the gap between artistic direction and the animator?s heavy load. We hope our approach indicates a promising direction to serving such a practical need.",
  "resources" : [ ]
}