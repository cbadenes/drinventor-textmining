{
  "uri" : "sig2006-p805-irving_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2006/p805-irving_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Efficient Simulation of Large Bodies of Water by Coupling Two and Three Dimensional Techniques",
    "published" : "2006",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Geoffrey-Irving",
      "name" : "Geoffrey",
      "surname" : "Irving"
    }, {
      "uri" : "http://drinventor/Eran-Guendelman",
      "name" : "Eran",
      "surname" : "Guendelman"
    }, {
      "uri" : "http://drinventor/Frank-Losasso",
      "name" : "Frank",
      "surname" : "Losasso"
    }, {
      "uri" : "http://drinventor/Ronald-Fedkiw",
      "name" : "Ronald",
      "surname" : "Fedkiw"
    } ]
  },
  "bagOfWords" : [ "2af60870790846bcd9acb8d4fb8ed13f296a69ed47bd849f8944b69def480427", "mhf", "http://dx.doi.org/10.1145/1141911.1141959", "name", "identification", "possible", "efficient", "simulation", "large", "body", "water", "coupling", "two", "three", "dimensional", "technique", "Geoffrey", "Irving", "Eran", "Guendelman", "Stanford", "University", "Stanford", "University", "Pixar", "Animation", "Studios", "Figure", "simulation", "wake", "behind", "kinematically", "script", "boat", "-lrb-", "1500", "300", "horizontal", "resolution", "-rrb-", "we", "present", "new", "method", "efficient", "simulation", "large", "body", "water", "especially", "effective", "when", "three-dimensional", "surface", "effect", "important", "similar", "traditional", "two-dimensional", "height", "field", "approach", "most", "water", "volume", "represent", "tall", "cell", "which", "assume", "have", "linear", "pressure", "profile", "order", "avoid", "limitation", "typically", "associate", "height", "field", "approach", "we", "simulate", "entire", "top", "surface", "water", "volume", "state", "art", "fully", "three-dimensional", "Navier-Stokes", "free", "surface", "solver", "we", "philosophy", "use", "best", "available", "method", "near", "interface", "-lrb-", "three-dimensional", "region", "-rrb-", "coarsen", "mesh", "away", "from", "interface", "efficiency", "we", "coarsen", "tall", "thin", "cell", "-lrb-", "oppose", "octree", "AMR", "-rrb-", "because", "maintain", "good", "resolution", "horizontally", "allow", "accurate", "representation", "bottom", "topography", "cr", "category", "i.", "3.5", "-lsb-", "Computer", "Graphics", "-rsb-", "computational", "geometry", "object", "modeling?physically", "base", "modeling", "Keywords", "water", "adaptive", "simulation", "river", "stream", "navierstoke", "equation", "e-mail", "-lcb-", "irving", "erang", "losasso", "fedkiw", "-rcb-", "@cs", "stanford.edu", "copyright", "2006", "Association", "Computing", "Machinery", "Inc.", "permission", "make", "digital", "hard", "copy", "part", "all", "work", "personal", "classroom", "use", "grant", "without", "fee", "provide", "copy", "make", "distribute", "commercial", "advantage", "copy", "bear", "notice", "full", "citation", "first", "page", "copyright", "component", "work", "own", "other", "than", "ACM", "must", "honor", "abstract", "credit", "permit", "copy", "otherwise", "republish", "post", "server", "redistribute", "list", "require", "prior", "specific", "permission", "and/or", "fee", "request", "permission", "from", "Permissions", "Dept", "ACM", "Inc.", "fax", "+1", "-lrb-212-rrb-Â 869-0481", "e-mail", "Frank", "Losasso", "Ronald", "Fedkiw", "Stanford", "University", "Stanford", "University", "Industrial", "Light", "Magic", "Industrial", "Light", "Magic", "introduction", "scene", "involve", "stormy", "sea", "sudden", "flood", "cascade", "rapid", "provide", "some", "most", "spectacular", "visual", "effect", "shot", "feature", "film", "-lrb-", "e.g.", "day", "after", "tomorrow", "-lsb-", "Iversen", "Sakaguchi", "2004", "-rsb-", "-rrb-", "invariably", "expensive", "whether", "simulated", "via", "computer", "hundred", "thousand", "gallon", "real", "water", "since", "water", "opaque", "large", "scale", "its", "appearance", "govern", "surface", "layer", "while", "interior", "flow", "visible", "only", "through", "its", "effect", "surface", "fully", "three-dimensional", "navier-stoke", "solver", "produce", "stunning", "result", "do", "scale", "well", "large", "body", "water", "when", "simulation", "carry", "out", "uniform", "cartesian", "grid", "although", "situation", "can", "improve", "significantly", "coarsen", "away", "from", "surface", "octree", "-lsb-", "Losasso", "et", "al.", "2004", "-rsb-", "two", "major", "drawback", "approach", "first", "current", "octree", "approach", "do", "make", "full", "use", "highly", "accurate", "MAC", "grid", "method", "-lsb-", "Enright", "et", "al.", "2002", "-rsb-", "instead", "rely", "too", "much", "nodal", "value", "interpolation", "result", "increase", "numerical", "dissipation", "course", "can", "fix", "coarsen", "octree", "away", "from", "interface", "otherwise", "apply", "standard", "MAC", "solver", "uniform", "cell", "near", "water", "surface", "second", "more", "importantly", "-lrb-", "especially", "since", "we", "propose", "remedy", "-rrb-", "large", "octree", "cell", "can", "represent", "bottom", "topography", "even", "one", "refine", "near", "bottom", "domain", "large", "octree", "cell", "middle", "water", "filter", "out", "horizontal", "detail", "make", "surface", "simulation", "unaware", "any", "rich", "structure", "below", "contrast", "method", "base", "height", "field", "-lrb-", "shallow", "water", "equation", "-lsb-", "Kass", "Miller", "1990", "O?Brien", "Hodgins", "1995", "-rsb-", "-rrb-", "use", "tall", "cell", "detailed", "refinement", "horizontal", "direction", "thus", "capture", "effect", "complex", "bottom", "topography", "rather", "well", "unfortunately", "method", "do", "support", "overturn", "other", "interesting", "three-dimensional", "behavior", "thus", "we", "place", "following", "requirement", "we", "method", "first", "we", "need", "detailed", "three-dimensional", "behavior", "near", "interface", "down", "depth", "which", "turbulent", "motion", "directly", "affect", "look", "surface", "optical", "depth", "simulation", "usually", "greater", "than", "visible", "optical", "depth", "since", "interesting", "turbulence", "cause", "visible", "water", "continuously", "mix", "water", "larger", "layer", "underneath", "second", "large", "unseen", "region", "liquid", "should", "represent", "efficiently", "possible", "without", "lose", "plausible", "bulk", "motion", "important", "detail", "bottom", "topography", "first", "requirement", "satisfy", "use", "state", "art", "uniform", "MAC", "grid", "navier-stoke", "solver", "near", "interface", "-lrb-", "-lsb-", "Enright", "et", "al.", "2002", "-rsb-", "-rrb-", "also", "allow", "addition", "any", "other", "technique", "work", "uniform", "grid", "vortex", "particle", "-lsb-", "Selle", "et", "al.", "2005", "-rsb-", "outside", "surface", "layer", "we", "maintain", "same", "resolution", "horizontal", "direction", "coarsen", "vertical", "direction", "obtain", "tall", "thin", "cell", "reach", "down", "bottom", "domain", "-lrb-", "satisfy", "second", "requirement", "-rrb-", "since", "effect", "bottom", "topography", "diminish", "increase", "depth", "method", "most", "useful", "shallow", "water", "regime", "one", "advantage", "hybrid", "approach", "reduce", "exactly", "standard", "MAC", "discretization", "under", "full", "refinement", "contrast", "octree", "method", "-lsb-", "Losasso", "et", "al.", "2004", "-rsb-", "suffer", "from", "increase", "dissipation", "due", "repeat", "back", "forth", "average", "even", "when", "fully", "refine", "while", "dissipation", "partially", "reduce", "-lsb-", "Guendelman", "et", "al.", "2005", "-rsb-", "use", "flip", "rather", "than", "PIC", "averaging", "-lrb-", "see", "also", "-lsb-", "Zhu", "Bridson", "2005", "-rsb-", "-rrb-", "we", "experience", "uniform", "grid", "indicate", "full", "MAC", "method", "still", "produce", "higher", "quality", "result", "although", "grid", "type", "could", "represent", "pointer", "structure", "-lrb-", "-lsb-", "Whitaker", "1998", "-rsb-", "-rrb-", "connect", "all", "tall", "short", "cell", "together", "require", "fashion", "could", "prove", "rather", "inefficient", "luckily", "we", "can", "leverage", "recent", "work", "run-lengthencoded", "-lrb-", "rle", "-rrb-", "grid", "-lsb-", "Houston", "et", "al.", "2004", "Breen", "et", "al.", "2004", "Wiebe", "Houston", "2004", "Nielsen", "Museth", "2005", "Houston", "et", "al.", "2005", "Houston", "et", "al.", "2006", "-rsb-", "-lrb-", "note", "-lsb-", "Curless", "Levoy", "1996", "-rsb-", "apply", "rle", "volume", "-lsb-", "Bridson", "2003", "-rsb-", "suggest", "rle", "level", "set", "-rrb-", "fluid", "simulator", "solve", "level", "set", "narrow", "band", "near", "interface", "use", "uniform", "MAC", "discretization", "inside", "liquid", "fluid", "solver", "long", "cell", "allow", "only", "air", "analogous", "previous", "local", "level", "set", "narrow", "band", "method", "-lsb-", "Peng", "et", "al.", "1999", "-rsb-", "-lsb-", "adalsteinsson", "sethian", "1995", "-rsb-", "thus", "method", "improve", "cost", "level", "set", "algorithm", "remove", "need", "store", "check", "grid", "cell", "deep", "inside", "air", "do", "reduce", "time", "spend", "solve", "advection", "pressure", "fluid", "itself", "which", "typically", "most", "computational", "cost", "contrast", "we", "use", "tall", "cell", "water", "which", "greatly", "reduce", "computational", "cost", "outside", "band", "cell", "near", "interface", "require", "novel", "method", "both", "discretize", "tall", "cell", "full", "liquid", "well", "coupling", "cell", "standard", "uniform", "cell", "we", "tall", "cell", "only", "occur", "far", "from", "interface", "thus", "do", "participate", "particle", "level", "set", "method", "however", "we", "do", "require", "method", "advect", "velocity", "field", "solve", "pressure", "order", "make", "velocity", "divergence", "free", "note", "all", "we", "tall", "cell", "vertical", "typical", "shallow", "water", "method", "because", "reasonable", "assume", "linear", "pressure", "variation", "vertical", "direction", "horizontal", "direction", "permissions@acm.org", "2006", "ACM", "0730-0301/06", "07000805", "5.00", "805", "-lrb-", "-rrb-", "figure", "we", "use", "uniform", "cell", "near", "object", "within", "specify", "optical", "depth", "surface", "coarsen", "tall", "cell", "elsewhere", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "figure", "-lrb-", "-rrb-", "pressure", "velocity", "uniform", "MAC", "grid", "-lrb-", "-rrb-", "pressure", "uniform", "tall", "cell", "-lrb-", "-rrb-", "horizontal", "pressure", "derivative", "-lrb-", "-rrb-", "vertical", "pressure", "derivative", "-lrb-", "-rrb-", "horizontal", "velocity", "co-locate", "horizontal", "pressure", "derivative", "-lrb-", "-rrb-", "vertical", "velocity", "co-locate", "vertical", "pressure", "derivative", "previous", "work", "three-dimensional", "navier-stoke", "equation", "be", "popularize", "work", "-lsb-", "Foster", "Metaxas", "1997b", "Stam", "1999", "Fedkiw", "et", "al.", "2001", "-rsb-", "equation", "be", "combine", "method", "simulate", "water", "surface", "-lsb-", "Foster", "Metaxas", "1996", "Foster", "Metaxas", "1997a", "Foster", "Fedkiw", "2001", "-rsb-", "we", "use", "particle", "level", "set", "approach", "-lsb-", "Enright", "et", "al.", "2002", "-rsb-", "method", "choice", "three-dimensional", "surface", "layer", "water", "-lsb-", "Baxter", "et", "al.", "2004b", "-rsb-", "use", "conservative", "heightfield", "fluid", "model", "interactive", "painting", "system", "other", "work", "water", "liquid", "include", "viscoelastic", "fluid", "-lsb-", "Goktekin", "et", "al.", "2004", "-rsb-", "solid", "fluid", "coupling", "-lsb-", "Carlson", "et", "al.", "2004", "Guendelman", "et", "al.", "2005", "-rsb-", "control", "-lsb-", "McNamara", "et", "al.", "2004", "Shi", "Yu", "2005", "-rsb-", "contact", "angle", "-lsb-", "Wang", "et", "al.", "2005", "-rsb-", "sand", "-lsb-", "Zhu", "Bridson", "2005", "-rsb-", "two", "phase", "flow", "-lsb-", "Hong", "Kim", "2005", "-rsb-", "number", "two-dimensional", "technique", "large", "body", "water", "include", "popular", "method", "deep", "water", "-lsb-", "Fournier", "Reeves", "1986", "Peachey", "1986", "Mastin", "et", "al.", "1987", "ts?o", "Barsky", "1987", "Thon", "et", "al.", "2000", "-rsb-", "we", "refer", "interested", "reader", "recent", "work", "-lsb-", "Hinsinger", "et", "al.", "2002", "-rsb-", "course", "note", "-lsb-", "tessendorf", "2002", "-rsb-", "-lsb-", "Baraff", "et", "al.", "2003", "-rsb-", "course", "deep", "water", "equation", "ignore", "bottom", "topography", "do", "resolve", "fully", "three-dimensional", "phenomenon", "surface", "another", "interesting", "technique", "consist", "solve", "two-dimensional", "navier-stoke", "equation", "horizontal", "velocity", "use", "pressure", "define", "height", "field", "-lsb-", "Chen", "Lobo", "1994", "-rsb-", "-lsb-", "Thon", "Ghazanfarpour", "2001", "-rsb-", "also", "solve", "two-dimensional", "navierstoke", "equation", "horizontal", "velocity", "stream", "use", "noise", "function", "vertical", "velocity", "-lsb-", "Neyret", "Praizelin", "2001", "-rsb-", "propose", "simpler", "stream", "model", "use", "two-dimensional", "Laplace", "equation", "bulk", "flow", "finally", "few", "author", "have", "tackle", "large", "body", "water", "three-dimensional", "navierstoke", "equation", "e.g.", "focus", "splash", "foam", "-lsb-", "Takahashi", "et", "al.", "2003", "-rsb-", "break", "wave", "-lsb-", "Mihalef", "et", "al.", "2004", "-rsb-", "Grid", "structure", "we", "simulate", "uniform", "two-dimensional", "horizontal", "grid", "vertical", "column", "contain", "both", "uniform", "cell", "tall", "cell", "replace", "collection", "uniform", "cell", "e.g.", "see", "figure", "tall", "uniform", "cell", "can", "arbitrary", "each", "column", "particular", "we", "split", "tall", "cell", "ground", "match", "bottom", "topography", "-lrb-", "figure", "-rrb-", "uniform", "MAC", "grid", "scalar", "store", "cell", "center", "while", "velocity", "component", "store", "respective", "face", "-lrb-", "figure", "3a", "-rrb-", "level", "set", "value", "only", "require", "uniform", "cell", "near", "interface", "whereas", "pressure", "velocity", "need", "everywhere", "tall", "cell", "contain", "two", "pressure", "value", "correspond", "cell", "center", "uppermost", "bottommost", "uniform", "cell", "tall", "cell", "replace", "-lrb-", "figure", "3b", "-rrb-", "pressure", "value", "can", "interpolate", "center", "other", "uniform", "cell", "replace", "tall", "cell", "use", "vertical", "linear", "interpolation", "later", "we", "calculate", "horizontal", "pressure", "derivative", "every", "pressure", "sample", "-lrb-", "figure", "3c", "-rrb-", "thus", "we", "co-locate", "horizontal", "velocity", "they", "-lrb-", "figure", "3e", "-rrb-", "Figure", "3e", "outline", "control", "volume", "around", "each", "minimal", "face", "note", "minimal", "face", "between", "tall", "cell", "may", "contain", "two", "horizontal", "velocity", "-lrb-", "show", "figure", "-rrb-", "between", "two", "velocity", "we", "interpolate", "horizontal", "velocity", "uniform", "face", "replace", "minimal", "face", "use", "linear", "interpolation", "consistent", "pressure", "its", "derivative", "vertical", "pressure", "derivative", "vertical", "velocity", "show", "Figure", "3d", "3f", "-lrb-", "also", "co-locate", "-rrb-", "along", "outline", "control", "volume", "linear", "pressure", "profile", "tall", "cell", "dictate", "all", "uniform", "grid", "vertical", "face", "replace", "face", "center", "cell", "should", "have", "same", "vertical", "velocity", "806", "Figure", "three", "ball", "splash", "water", "-lrb-", "300", "200", "horizontal", "resolution", "-rrb-", "fully", "refine", "case", "-lrb-", "left", "-rrb-", "1/4", "refine", "case", "-lrb-", "middle", "-rrb-", "quite", "similar", "however", "quite", "different", "result", "obtain", "one", "doesn?t", "refine", "enough", "-lrb-", "right", "1/16", "refine", "-rrb-", "3.1", "refinement", "coarsen", "when", "we", "change", "structure", "tall", "uniform", "cell", "velocity", "need", "interpolate", "new", "grid", "vertical", "velocity", "center", "new", "tall", "cell", "set", "average", "value", "all", "vertical", "face", "replace", "whereas", "those", "uniform", "cell", "define", "interpolated", "value", "conserve", "vertical", "momentum", "horizontal", "velocity", "difficulty", "occur", "when", "new", "minimal", "face", "replace", "more", "than", "one", "uniform", "face", "example", "let", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "...", "-lrb-", "-rrb-", "sequence", "velocity", "value", "minimal", "face", "we", "desire", "bottom", "top", "value", "linear", "interpolation", "between", "they", "best", "approximate", "sequence", "least", "square", "error", "-lrb-", "-rrb-", "differentiate", "respect", "set", "derivative", "zero", "give", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "use", "formula", "sum", "linear", "quadratic", "sequence", "equation", "simplify", "2n", "2n", "-lrb-", "-rrb-", "where", "some", "subsequence", "-lrb-", "-rrb-", "come", "from", "minimal", "face?s", "linear", "profile", "same", "formula", "can", "compute", "portion", "right-hand", "side", "sum", "constant", "time", "system", "trivially", "invert", "find", "show", "-lsb-", "Houston", "et", "al.", "2006", "-rsb-", "entire", "process", "build", "new", "grid", "transfer", "datum", "between", "grid", "take", "linear", "time", "we", "use", "one", "grid", "cell", "band", "uniform", "cell", "around", "move", "object", "so", "special", "tall", "cell", "treatment", "require", "one-way", "twoway", "coupling", "solid", "-lrb-", "though", "we", "implement", "only", "one-way", "coupling", "so", "far", "-rrb-", "addition", "we", "define", "optical", "depth", "down", "which", "we", "want", "preserve", "much", "detail", "possible", "use", "uniform", "cell", "within", "distance", "from", "interface", "we", "emphasize", "optical", "depth", "require", "give", "problem", "do", "shrink", "under", "refinement", "rather", "true", "length", "scale", "related", "threedimensional", "physics", "we", "wish", "capture", "3.2", "refinement", "analysis", "comparison", "effect", "vary", "optical", "depth", "illustrate", "Figure", "sufficient", "optical", "depth", "satisfactory", "result", "obtain", "-lrb-", "middle", "-rrb-", "otherwise", "we", "fail", "resolve", "enough", "threedimensional", "flow", "structure", "obtain", "nonphysical", "result", "-lrb-", "right", "-rrb-", "simulation", "use", "processor", "grid", "-lrb-", "see", "section", "-rrb-", "take", "250", "116", "59", "seconds", "per", "frame", "respectively", "note", "fully", "refine", "splash", "-lrb-", "left", "-rrb-", "use", "essentially", "same", "method", "-lsb-", "Houston", "et", "al.", "2006", "-rsb-", "since", "computational", "cost", "tall", "cell", "independent", "its", "height", "all", "tall", "cell", "together", "equivalent", "cost", "few", "extra", "layer", "uniform", "cell", "regardless", "depth", "water", "certain", "optical", "depth", "uniform", "cell", "need", "another", "layer", "cell", "provide", "extra", "computation", "need", "we", "approach", "unlikely", "another", "adaptive", "method", "octree", "would", "make", "layer", "more", "efficient", "particular", "we", "can", "double", "depth", "water", "without", "incur", "factor", "two", "slowdown", "characteristic", "uniform", "grid", "previous", "rle", "technique", "-lrb-", "figure", "-lrb-", "left", "-rrb-", "-rrb-", "moreover", "result", "splash", "qualitatively", "different", "from", "shallow", "simulation", "which", "show", "importance", "water", "depth", "bulk", "flow", "deeper", "simulation", "take", "140", "seconds", "frame", "due", "increase", "surface", "area", "compare", "Figure", "-lrb-", "middle", "-rrb-", "Figure", "-lrb-", "right", "-rrb-", "show", "serial", "octree", "simulation", "same", "splash", "although", "Figure", "-lrb-", "middle", "-rrb-", "take", "same", "amount", "total", "computation", "-lrb-", "460", "seconds", "per", "frame", "-rrb-", "we", "method", "readily", "parallelize", "lead", "faster", "turnaround", "larger", "simulation", "excessive", "computational", "cost", "keep", "we", "from", "refine", "octree", "same", "resolution", "throughout", "entire", "optical", "depth", "region", "we", "instead", "be", "force", "coarsen", "away", "from", "typical", "three", "grid", "cell", "band", "which", "make", "simulation", "significantly", "more", "viscous", "highlight", "interesting", "aspect", "we", "approach", "we", "combine", "we", "tall", "cell", "uniform", "grid", "whereas", "probably", "better", "combine", "they", "adaptive", "octree", "grid", "fact", "straightforward", "implement", "place", "individual", "octree", "each", "we", "uniform", "cell", "just", "do", "-lsb-", "Losasso", "et", "al.", "2006", "-rsb-", "Figure", "-lrb-", "leave", "-rrb-", "same", "optical", "depth", "Figure", "-lrb-", "middle", "-rrb-", "twice", "water", "depth", "while", "would", "twice", "expensive", "uniform", "grid", "almost", "cost", "increase", "use", "we", "approach", "-lrb-", "right", "-rrb-", "octree", "simulation", "two", "level", "coarsen", "away", "from", "interface", "-lrb-", "312", "208", "208", "effective", "resolution", "-rrb-", "807", "Figure", "cross-section", "grid", "from", "river", "simulation", "show", "tall", "cell", "use", "represent", "bottom", "topography", "Uniform", "Three-Dimensional", "Method", "inviscid", "incompressible", "navier-stoke", "equation", "conservation", "mass", "momentum", "where", "-lrb-", "-rrb-", "velocity", "pressure", "density", "acceleration", "due", "gravity", "we", "use", "standard", "uniform", "MAC", "grid", "fluid", "solver", "band", "uniform", "cell", "together", "particle", "level", "set", "method", "-lsb-", "Enright", "et", "al.", "2002", "-rsb-", "both", "level", "set", "velocity", "field", "advect", "semi-lagrangian", "advection", "-lsb-", "stam", "1999", "-rsb-", "band", "since", "level", "set", "only", "define", "near", "interface", "its", "semi-lagrangian", "ray", "interpolate", "from", "other", "uniform", "cell", "contrast", "velocity", "define", "everywhere", "some", "semi-lagrangian", "ray", "ask", "information", "from", "tall", "cell", "velocity", "instead", "update", "same", "algorithm", "use", "update", "velocity", "tall", "cell", "-lrb-", "see", "section", "5.1", "-rrb-", "note", "pressure", "solve", "globally", "coupling", "uniform", "tall", "cell", "together", "-lrb-", "see", "section", "5.2", "-rrb-", "situation", "where", "additional", "turbulence", "desire", "we", "use", "vortex", "particle", "approach", "-lsb-", "Selle", "et", "al.", "2005", "-rsb-", "figure", "show", "simulation", "vortex", "particle", "seed", "behind", "boat", "represent", "turbulence", "generate", "propeller", "adaptive", "two-dimensional", "method", "section", "we", "address", "advection", "velocity", "all", "tall", "cell", "uniform", "cell", "be", "update", "semilagrangian", "advection", "because", "be", "too", "close", "tall", "cell", "we", "also", "address", "solve", "pressure", "arbitrary", "collection", "tall", "uniform", "cell", "discretization", "construct", "sum", "uniform", "finite", "volume", "discretization", "over", "tall", "cell", "use", "linear", "constant", "basis", "function", "can", "consider", "discrete", "finite", "volume/finite", "element", "method", "5.1", "Advection", "we", "use", "first", "order", "accurate", "conservative", "upwinding", "all", "tall", "cell", "any", "uniform", "cell", "update", "semi-lagrangian", "method", "since", "number", "cell", "need", "update", "method", "small", "subset", "total", "cell", "-lrb-", "even", "though", "can", "most", "volume", "-rrb-", "efficiency", "approach", "unimportant", "thus", "we", "choose", "conservative", "method", "preserve", "momentum", "very", "tall", "cell", "likely", "have", "large", "truncation", "error", "moreover", "conservative", "scheme", "quite", "popular", "two-dimensional", "nonlinear", "shallow", "water", "equation", "which", "have", "many", "similarity", "we", "tall", "cell", "we", "emphasize", "conservation", "do", "cure", "large", "truncation", "error", "only", "make", "result", "more", "physically", "plausible", "we", "begin", "put", "velocity", "term", "conservation", "form", "use", "transform", "equation", "-lrb-", "uu", "-rrb-", "g.", "ignore", "pressure", "force", "term", "we", "focus", "component", "velocity", "-lrb-", "-rrb-", "-lrb-", "vu", "-rrb-", "-lrb-", "wu", "-rrb-", "we", "place", "control", "volume", "around", "each", "face", "show", "dot", "line", "Figure", "3e", "equation", "can", "rewrite", "indicate", "velocity", "update", "base", "flux", "across", "control", "volume", "face", "i.e.", "x?y?z", "where", "sign", "depend", "which", "side", "control", "volume", "flux", "flux", "compute", "average", "velocity", "control", "volume", "face", "use", "average", "velocity", "decide", "upwind", "direction", "flux", "itself", "construct", "multiply", "upwind", "component", "velocity", "we", "advecting", "up", "average", "value", "other", "component", "av", "av", "y?zu", "up", "x?zv", "av", "up", "x?yw", "av", "up", "velocity", "component", "treat", "similarly", "while", "algorithm", "straightforward", "uniform", "grid", "few", "modification", "require", "tall", "cell", "motivation", "we", "point", "out", "we", "could", "refine", "tall", "cell", "uniform", "grid", "apply", "uniform", "grid", "method", "just", "discuss", "re-coarsen", "although", "would", "inefficient", "implement", "directly", "we", "approach", "achieve", "exactly", "result", "efficient", "manner", "simulate", "process", "refining", "advecting", "coarsening", "we", "consider", "each", "pair", "adjacent", "minimal", "face", "one", "time", "apply", "equation", "entire", "velocity", "profile", "produce", "piecewise", "linear", "quadratic", "each", "side", "use", "equation", "reduce", "back", "constant", "linear", "profile", "fact", "reduce", "each", "flux", "contribution", "separately", "have", "same", "result", "treat", "they", "all", "once", "follow", "from", "linearity", "equation", "show", "Figure", "structure", "flux", "profile", "differ", "depend", "which", "component", "be", "advect", "which", "direction", "example", "give", "two", "minimal", "face", "whose", "control", "volume", "intersect", "along", "direction", "average", "velocity", "profile", "av", "linear", "av", "have", "constant", "sign", "have", "single", "quadratic", "profile", "-lrb-", "up", "linear", "-rrb-", "control", "volume", "face", "av", "change", "sign", "we", "split", "control", "volume", "face", "two", "section", "constant", "sign", "handle", "each", "section", "separately", "Advection", "along", "other", "horizontal", "dimension", "similar", "advect", "along", "between", "distinct", "minimal", "face", "simple", "since", "intersection", "single", "uniform", "control", "volume", "face", "however", "we", "must", "also", "account", "flux", "between", "top", "bottom", "sample", "linear", "profile", "average", "middle", "control", "volume", "face", "produce", "constant", "av", "every", "virtual", "control", "volume", "face", "so", "flux", "profile", "linear", "update", "can", "simplify", "note", "net", "flux", "every", "virtual", "uniform", "face", "except", "first", "last", "constant", "since", "difference", "consecutive", "term", "linear", "sequence", "Advection", "other", "horizontal", "velocity", "similar", "u.", "Advection", "along", "same", "except", "flux", "profile", "linear", "instead", "quadratic", "need", "consider", "flux", "inside", "middle", "face", "since", "constant", "first", "order", "upwinding", "require", "CFL", "condition", "time", "step", "stability", "namely", "max", "-lrb-", "-rrb-", "larger", "time", "step", "desire", "other", "part", "algorithm", "upwind", "phase", "advection", "can", "subcycle", "little", "extra", "cost", "since", "only", "need", "small", "fraction", "velocity", "after", "advection", "we", "refine/coarsen", "grid", "do", "before", "make", "velocity", "field", "divergence", "free", "because", "velocity", "interpolation", "do", "preserve", "discrete", "incompressibility", "two", "issue", "advection", "method", "which", "we", "would", "like", "resolve", "future", "work", "first", "instability", "sometimes", "ap", "pear", "near", "sharp", "change", "bottom", "topography", "wall", "canyon", "Figure", "can", "occur", "because", "final", "value", "affine", "combination", "start", "velocity", "since", "average", "control", "volume", "face", "break", "discrete", "incompressibility", "we", "avoid", "instability", "compute", "total", "weight", "use", "each", "value", "divide", "weight", "would", "larger", "than", "affine", "combination", "note", "weight", "can", "compute", "apply", "same", "advection", "algorithm", "constant", "field", "-lrb-", "i.e.", "substitute", "up", "everywhere", "-rrb-", "fix", "far", "from", "satisfactory", "especially", "since", "lack", "discrete", "incompressibility", "cause", "problem", "uniform", "grid", "second", "while", "first", "order", "method", "sufficient", "bulk", "motion", "would", "interesting", "generalize", "ENO", "WENO", "scheme", "typically", "use", "shallow", "water", "case", "tall", "cell", "reduce", "numerical", "dissipation", "808", "figure", "boat", "move", "along", "straight", "path", "-lrb-", "1500", "300", "horizontal", "resolution", "-rrb-", "along", "along", "along", "along", "figure", "Advection", "flux", "-lrb-", "small", "blue", "circle", "-rrb-", "minimal", "control", "volume", "face", "between", "adjacent", "velocity", "control", "volume", "5.2", "Laplace", "Equation", "after", "advection", "we", "solve", "pressure", "make", "velocity", "divergence", "free", "via", "-lrb-", "-rrb-", "+1", "t?p", "entire", "collection", "uniform", "tall", "cell", "once", "since", "variable", "density", "flow", "do", "have", "approximately", "linear", "vertical", "pressure", "profile", "we", "assume", "density", "spatially", "constant", "can", "move", "right", "hand", "side", "i.e.", "??", "component", "discrete", "pressure", "gradient", "MAC", "grid", "face", "between", "two", "MAC", "grid", "cell", "-lrb-", "-rrb-", "where", "readily", "generalize", "arbitrary", "configuration", "tall", "cell", "since", "we", "determine", "placement", "structure", "velocity", "pressure", "gradient", "mind", "-lrb-", "figure", "3c", "-rrb-", "horizontal", "derivative", "say", "direction", "consider", "two", "adjacent", "tall", "cell", "extend", "from", "respectively", "intersect", "minimal", "face", "from", "max", "-lrb-", "-rrb-", "min", "-lrb-", "-rrb-", "corresponding", "pressure", "component", "discrete", "gradient", "face", "between", "they", "linear", "profile", "value", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "give", "interpolate", "pressure", "each", "cell", "apply", "standard", "central", "differencing", "e.g.", "-lrb-", "-rrb-", "similarly", "-lrb-", "-rrb-", "derivative", "between", "vertically", "adjacent", "pressure", "sample", "simply", "-lrb-", "-rrb-", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "discrete", "volume", "weighted", "divergence", "uniform", "cell", "can", "write", "-lrb-", "-rrb-", "where", "sign", "choose", "base", "which", "face", "be", "consider", "area", "face", "we", "generalize", "equation", "tall", "cell", "compute", "flux", "each", "virtual", "uniform", "cell", "tall", "cell", "divide", "each", "flux", "between", "bottom", "top", "sample", "cell", "add", "up", "contribution", "we", "divide", "virtual", "uniform", "flux", "use", "same", "fraction", "use", "interpolate", "pressure", "give", "virtual", "uniform", "cell", "order", "ensure", "symmetry", "final", "system", "example", "give", "tall", "cell", "from", "minimal", "face", "from", "velocity", "total", "flux", "contribution", "from", "face", "give", "upper", "portion", "cell", "809", "y?z", "while", "y?z", "contribution", "lower", "portion", "cell", "vertical", "flux", "contribution", "always", "v?x?z", "we", "can", "now", "combine", "discrete", "volume", "weighted", "divergence", "gradient", "operator", "discretize", "Laplacian", "horizontal", "direction", "get", "contribution", "from", "minimal", "face", "from", "top", "portion", "cell", "we", "substitute", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "equation", "collapse", "nested", "interpolation", "obtain", "y?z", "jb", "ja", "similarly", "y?z", "jb", "ja", "contribution", "bottom", "portion", "cell", "note", "coefficient", "first", "equation", "-lrb-", "which", "-rrb-", "identical", "coefficient", "second", "equation", "-lrb-", "which", "-rrb-", "since", "all", "symmetric", "pair", "contribution", "discretization", "matrix", "identical", "final", "result", "symmetric", "coefficient", "relate", "handle", "similarly", "moreover", "cross", "term", "relate", "also", "similarly", "treat", "vertical", "term", "we", "obtain", "-lrb-", "x?z", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "once", "again", "result", "identical", "contribution", "symmetric", "term", "result", "negative", "semi-definite", "linear", "system", "can", "treat", "same", "manner", "typical", "MAC", "grid", "discretization", "i.e.", "preconditioned", "conjugate", "gradient", "incomplete", "Cholesky", "preconditioner", "Neumann", "Dirichlet", "boundary", "condition", "anywhere", "tall", "uniform", "cell", "etc.", "example", "we", "implement", "we", "method", "parallel", "use", "mpus", "decompose", "horizontal", "domain", "two-dimensional", "grid", "give", "each", "processor", "one", "fix", "rectangular", "piece", "domain", "before", "every", "stage", "fluid", "solve", "require", "neighbor", "datum", "we", "fill", "ghost", "cell", "side", "each", "processor", "from", "boundary", "datum", "its", "neighbor", "processor", "pressure", "solve", "each", "processor", "construct", "incomplete", "Cholesky", "preconditioner", "portion", "grid", "own", "participate", "global", "pcg", "solve", "block", "diagonal", "preconditioner", "form", "from", "incomplete", "Cholesky", "block", "each", "processor", "extend", "serial", "version", "algorithm", "use", "MPI", "relatively", "straightforward", "since", "domain", "decomposition", "apply", "only", "along", "uniform", "horizontal", "dimension", "use", "tall", "cell", "bulk", "fluid", "significantly", "reduce", "communication", "bandwidth", "require", "all", "simulation", "be", "run", "cluster", "processor", "2.6", "GHz", "Opteron", "machine", "boat", "simulation", "figure", "use", "16", "processor", "grid", "optical", "depth", "1/5", "water", "depth", "cost", "approximately", "minute", "frame", "boat", "example", "we", "use", "vortex", "particle", "-lsb-", "Selle", "et", "al.", "2005", "-rsb-", "render", "remove", "negative", "particle", "-lsb-", "Guendelman", "et", "al.", "2005", "-rsb-", "Figure", "show", "river", "simulation", "vary", "bottom", "topography", "use", "20", "processor", "20", "grid", "computational", "cost", "approximately", "25", "minute", "frame", "optical", "depth", "illustrate", "Figure", "memory", "consumption", "significant", "issue", "any", "simulation", "Figure", "simulation", "river", "fill", "canyon", "-lrb-", "2000", "200", "horizontal", "resolution", "-rrb-", "conclusion", "we", "have", "present", "novel", "method", "simulation", "large", "body", "water", "combine", "two-dimensional", "three-dimensional", "simulation", "technique", "bulk", "water", "volume", "represent", "tall", "cell", "similar", "height", "field", "method", "surface", "layer", "water", "simulated", "state", "art", "fully", "three-dimensional", "Navier-Stokes", "free", "surface", "solver", "algorithm", "work", "well", "capture", "detailed", "surface", "motion", "represent", "detailed", "bottom", "topography", "we", "general", "philosophy", "use", "best", "available", "method", "surface", "layer", "where", "we", "expect", "interesting", "detail", "coarsen", "mesh", "away", "from", "interface", "efficiency", "like", "shallow", "water", "we", "method", "only", "admit", "computational", "gain", "flow", "heavily", "dominate", "gravity", "where", "large", "portion", "water", "near", "vertical", "equilibrium", "against", "ground", "general", "we", "believe", "best", "approach", "any", "simulation", "uniform", "grid", "capture", "interesting", "flow", "feature", "coarsen", "vertically", "use", "we", "method", "area", "where", "linear", "pressure", "profile", "sufficient", "refine", "uniform", "cell", "use", "octree", "area", "where", "more", "resolution", "desirable", "finally", "we", "note", "effect", "bottom", "topography", "surface", "diminish", "increase", "depth", "deep", "water", "limit", "effect", "negligible", "however", "we", "interested", "problem", "shallow", "water", "regime", "where", "tall", "cell", "almost", "exclusively", "use", "Acknowledgements", "Research", "support", "part", "ONR", "YIP", "award", "pecase", "award", "-lrb-", "onr", "n00014-01-1-0620", "-rrb-", "Packard", "Foundation", "Fellowship", "Sloan", "Research", "Fellowship", "ONR", "n00014-03-1-0071", "onr", "n00014-02-1-0720", "onr", "n00014-05-1-0479", "-lrb-", "SUN", "computing", "cluster", "-rrb-", "aro", "daad19-03-1-0331", "nsf", "iis-0326388", "nsf", "itr-0205671", "nsf", "itr-0121288", "nsf", "aci-0323866", "NIH", "u54-gm072970", "g.i.", "support", "part", "NSF", "Graduate", "Fellowship", "810", "reference", "DALSTEINSSON", "ETHIAN", "J.", "Comput", "Phys", "118", "ARAFF", "ITKIN", "ASS", "NDERSON", "SIGGRAPH", "Course", "Notes", "AXTER", "Proc", "graph", "Interface", "AXTER", "IU", "Proc", "Comput", "Anim", "Social", "Agents", "AXTER", "ENDT", "Proc", "Non-Photorealistic", "Anim", "rendering", "REEN", "EDKIW", "USETH", "SHER", "APIRO", "HITAKER", "SIGGRAPH", "Course", "Notes", "RIDSON", "Computational", "Aspects", "Dynamic", "Surfaces", "ARLSON", "UCHA", "URK", "ACM", "Trans", "graph", "-lrb-", "SIGGRAPH", "Proc", "-rrb-", "23", "hen", "obo", "comput", "graph", "image", "processing", "57", "URLESS", "EVOY", "Comput", "graph", "-lrb-", "SIGGRAPH", "Proc", "-rrb-", "NRIGHT", "ARSCHNER", "EDKIW", "ACM", "Trans", "graph", "-lrb-", "SIGGRAPH", "Proc", "-rrb-", "21", "EDKIW", "TAM", "ENSEN", "Proc", "ACM", "SIGGRAPH", "2001", "OSTER", "EDKIW", "Proc", "ACM", "SIGGRAPH", "2001", "OSTER", "ETAXAS", "Graph", "model", "image", "processing", "58", "OSTER", "ETAXAS", "Comput", "graph", "Int.", "OSTER", "ETAXAS", "Proc", "SIGGRAPH", "97", "OURNIER", "EEVES", "Comput", "graph", "-lrb-", "Proc", "SIGGRAPH", "86", "-rrb-", "OKTEKIN", "ARGTEIL", "RIEN", "ACM", "Trans", "graph", "-lrb-", "SIGGRAPH", "Proc", "-rrb-", "23", "UENDELMAN", "ELLE", "OSASSO", "EDKIW", "ACM", "Trans", "graph", "-lrb-", "SIGGRAPH", "Proc", "-rrb-", "24", "INSINGER", "EYRET", "ANI", "ACM", "SIGGRAPH", "Symp", "Comput", "Anim.", "ONG", "IM", "ACM", "Trans", "graph", "-lrb-", "SIGGRAPH", "Proc", "-rrb-", "24", "OUSTON", "IEBE", "ATTY", "SIGGRAPH", "2004", "Sketches", "application", "OUSTON", "IELSEN", "ATTY", "ILSSON", "USETH", "SIGGRAPH", "2005", "Sketches", "application", "OUSTON", "IELSEN", "atty", "ilsson", "useth", "D.", "J.", "1995", "fast", "level", "set", "method", "propagate", "interface", "269", "277", "D.", "A.", "M.", "J.", "2003", "physically", "base", "modeling", "-lrb-", "little", "fluid", "dynamics", "graphic", "-rrb-", "ACM", "W.", "M.", "2004", "haptic", "interaction", "fluid", "media", "81", "88", "W.", "Y.", "M.", "2004", "viscous", "paint", "model", "interactive", "application", "vol", "15", "433", "441", "W.", "J.", "M.", "2004", "Impasto", "realistic", "interactive", "model", "paint", "45", "56", "D.", "R.", "K.", "S.", "G.", "R.", "2004", "level", "set", "pde", "method", "computer", "graphic", "ACM", "R.", "2003", "phd", "thesis", "Stanford", "University", "m.", "P.", "J.", "G.", "2004", "rigid", "fluid", "animate", "interplay", "between", "rigid", "body", "fluid", "377", "384", "J.", "N.", "1994", "toward", "interactive-rate", "simulation", "fluid", "move", "obstacle", "use", "navier-stoke", "equation", "107", "116", "B.", "M.", "1996", "volumetric", "method", "building", "complex", "model", "from", "range", "image", "303", "312", "D.", "S.", "R.", "2002", "animation", "rendering", "complex", "water", "surface", "736", "744", "R.", "J.", "H.", "2001", "visual", "simulation", "smoke", "15", "22", "N.", "R.", "2001", "Practical", "animation", "liquid", "23", "30", "N.", "D.", "1996", "realistic", "animation", "liquid", "471", "483", "N.", "D.", "1997", "controlling", "fluid", "animation", "178", "188", "N.", "D.", "1997", "model", "motion", "hot", "turbulent", "gas", "181", "188", "a.", "W.", "T.", "1986", "simple", "model", "ocean", "wave", "vol", "20", "75", "84", "T.", "G.", "A.", "W.", "O?B", "J.", "F.", "2004", "method", "animate", "viscoelastic", "fluid", "463", "467", "E.", "a.", "F.", "R.", "2005", "coupling", "water", "smoke", "thin", "deformable", "rigid", "shell", "973", "981", "D.", "F.", "m.-p", "2002", "interactive", "animation", "ocean", "wave", "161", "166", "j.-m.", "c.-h", "2005", "discontinuous", "fluid", "915", "919", "B.", "M.", "C.", "2004", "rle", "sparse", "level", "set", "ACM", "Press", "B.", "M.", "C.", "O.", "K.", "2005", "gigantic", "deformable", "surface", "ACM", "Press", "B.", "M.", "C.", "O.", "K.", "2006", "hierarchical", "rle", "level", "set", "compact", "versatile", "de", "ACM", "Trans", "graph", "25", "VERSEN", "AKAGUCHI", "SIGGRAPH", "2004", "Sketches", "application", "ass", "iller", "comput", "graph", "-lrb-", "Proc", "SIGGRAPH", "90", "-rrb-", "OSASSO", "IBOU", "EDKIW", "ACM", "Trans", "graph", "-lrb-", "SIGGRAPH", "Proc", "-rrb-", "23", "OSASSO", "EDKIW", "SHER", "Computers", "Fluids", "-lrb-", "press", "-rrb-", "ASTIN", "ATTERBERG", "AREDA", "IEEE", "Comput", "graph", "appl", "AMARA", "REUILLE", "OPOVI", "TAM", "ACM", "Trans", "graph", "-lrb-", "SIGGRAPH", "Proc", "-rrb-", "IHALEF", "ETAXAS", "USSMAN", "Proc", "2004", "ACM", "siggraph/eurographics", "Symp", "Comput", "Anim.", "EYRET", "RAIZELIN", "Comput", "Anim", "Sim", "01", "IELSEN", "USETH", "Accepted", "SIAM", "J.", "Scientific", "Comput", "RIEN", "ODGINS", "Comput", "Anim", "95", "EACHEY", "Comput", "graph", "-lrb-", "Proc", "SIGGRAPH", "86", "-rrb-", "ENG", "ERRIMAN", "SHER", "HAO", "ang", "J.", "Comput", "Phys", "155", "ELLE", "ASMUSSEN", "EDKIW", "ACM", "Trans", "graph", "-lrb-", "SIGGRAPH", "Proc", "-rrb-", "24", "HI", "Proc", "ACM", "SIGGRAPH/Eurographics", "Symp", "Comput", "Anim.", "TAM", "AKAHASHI", "ANAKA", "Proc", "SIGGRAPH", "99", "ujii", "UNIMATSU", "IWADA", "AITO", "EKI", "Comp", "graph", "Forum", "-lrb-", "Eurographics", "Proc", "-rrb-", "22", "ESSENDORF", "SIGGRAPH", "2002", "Course", "Notes", "-lrb-", "simulate", "nature", "realistic", "interactive", "technique", "-rrb-", "HON", "HAZANFARPOUR", "Comput", "graph", "Forum", "-lrb-", "Proc", "eurographic", "-rrb-", "19", "HON", "ISCHLER", "HAZANFARPOUR", "Comput", "graph", "Int.", "arsky", "acm", "Trans", "graph", "ang", "ucha", "urk", "acm", "Trans", "graph", "-lrb-", "SIGGRAPH", "Proc", "-rrb-", "24", "HITAKER", "Int", "J.", "Comput", "Vision", "29", "IEBE", "OUSTON", "SIGGRAPH", "2004", "Sketches", "application", "ACM", "Trans", "formable", "surface", "representation", "24", "J.", "R.", "2004", "grow", "up", "fluid", "simulation", "day", "after", "tomorrow", "ACM", "Press", "M.", "G.", "1990", "rapid", "stable", "fluid", "dynamics", "computer", "graphic", "vol", "24", "49", "57", "F.", "F.", "R.", "2004", "simulate", "water", "smoke", "octree", "datum", "structure", "457", "462", "F.", "R.", "S.", "2006", "spatially", "adaptive", "technique", "Level", "set", "method", "incompressible", "flow", "G.", "P.", "J.", "1987", "fourier", "synthesis", "ocean", "scene", "16", "23", "a.", "a.", "Z.", "J.", "2004", "fluid", "control", "use", "adjoint", "method", "449", "456", "V.", "D.", "M.", "2004", "animation", "control", "break", "wave", "315", "324", "F.", "N.", "2001", "phenomenological", "simulation", "brook", "Proc", "eurographic", "wrkshp.", "53", "64", "m.", "K.", "2005", "Dynamic", "tubular", "grid", "efficient", "datum", "structure", "algorithm", "high", "resolution", "level", "set", "O?B", "J.", "F.", "J.", "K.", "1995", "Dynamic", "simulation", "splash", "fluid", "198", "205", "D.", "R.", "1986", "model", "wave", "surf", "vol", "20", "65", "74", "D.", "B.", "S.", "H.", "M.", "1999", "pde-based", "fast", "local", "level", "set", "method", "410", "438", "a.", "N.", "R.", "2005", "vortex", "particle", "method", "smoke", "water", "explosion", "910", "914", "L.", "Y.", "2005", "tame", "liquid", "rapidly", "change", "target", "229", "236", "J.", "1999", "stable", "fluid", "121", "128", "T.", "H.", "a.", "K.", "T.", "K.", "H.", "2003", "realistic", "animation", "fluid", "splash", "foam", "391", "400", "J.", "2002", "simulate", "Ocean", "Water", "ACM", "Press", "S.", "D.", "2001", "semi-physical", "model", "run", "water", "53", "59", "S.", "J.-M.", "D.", "2000", "Ocean", "wave", "synthesis", "use", "spectrum-based", "turbulence", "function", "65", "74", "P.", "Y.", "B.", "A.", "1987", "modeling", "render", "wave", "wave-tracing", "use", "beta-spline", "reflective", "refractive", "texture", "mapping", "191", "214", "H.", "P.", "G.", "2005", "Water", "drop", "surface", "921", "929", "R.", "T.", "1998", "level-set", "approach", "3d", "reconstruction", "from", "range", "datum", "203", "231", "M.", "B.", "2004", "tar", "monster", "create", "character", "fluid", "simulation", "ACM", "Press", "Y.", "R.", "2005", "animate", "sand", "fluid", "965", "971", "HU", "RIDSON", "Graph", "-lrb-", "SIGGRAPH", "Proc", "-rrb-", "24", "811" ],
  "content" : "\n  \n    2af60870790846bcd9acb8d4fb8ed13f296a69ed47bd849f8944b69def480427\n    mhf\n    http://dx.doi.org/10.1145/1141911.1141959\n    Name identification was not possible. \n  \n  \n    \n      \n        Efficient Simulation of Large Bodies of Water by Coupling Two and Three Dimensional Techniques\n      \n      Geoffrey Irving ? Eran Guendelman ? Stanford University Stanford University Pixar Animation Studios\n      \n        \n        Figure 1: Simulation of a wake behind a kinematically scripted boat (1500 ? 300 horizontal resolution).\n      \n      We present a new method for the efficient simulation of large bodies of water, especially effective when three-dimensional surface effects are important. Similar to a traditional two-dimensional height field approach, most of the water volume is represented by tall cells which are assumed to have linear pressure profiles. In order to avoid the limitations typically associated with a height field approach, we simulate the entire top surface of the water volume with a state of the art, fully three-dimensional Navier-Stokes free surface solver. Our philosophy is to use the best available method near the interface (in the three-dimensional region) and to coarsen the mesh away from the interface for efficiency. We coarsen with tall, thin cells (as opposed to octrees or AMR), because they maintain good resolution horizontally allowing for accurate representation of bottom topography. CR Categories: I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling?Physically based modeling; Keywords: water, adaptive simulation, rivers, streams, NavierStokes equations\n      ?\n    \n    \n      \n        e-mail:\n         {irving,erang,losasso,fedkiw}@cs.stanford.edu\n        Copyright ? 2006 by the Association for Computing Machinery, Inc. Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers, or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from Permissions Dept, ACM Inc., fax +1 (212) 869-0481 or e-mail\n        Frank Losasso ? Ronald Fedkiw ? Stanford University Stanford University Industrial Light + Magic Industrial Light + Magic\n      \n      \n        1 Introduction\n      \n      Scenes involving stormy seas, sudden floods or cascading rapids provide some of the most spectacular visual effects shots in feature films (e.g. ?The Day After Tomorrow? [Iversen and Sakaguchi 2004]), and are invariably expensive whether they are simulated via computer or hundreds of thousands of gallons of real water. Since water is opaque at large scales, its appearance is governed by a surface layer while the interior flow is ?visible? only through its effect on the surface. Fully three-dimensional Navier-Stokes solvers produce stunning results, but do not scale well to large bodies of water when the simulation is carried out on a uniform Cartesian grid. Although the situation can be improved significantly by coarsening away from the surface with an octree as in [Losasso et al. 2004], there are two major drawbacks to this approach. First, the current octree approaches do not make full use of the highly accurate MAC grid method as in [Enright et al. 2002], instead relying too much on nodal values for interpolation resulting in increased numerical dissipation. Of course, this can be fixed by coarsening the octree away from the interface, and otherwise applying a standard MAC solver in the uniform cells near the water surface. Second, and more importantly (especially since we propose no remedy), large octree cells cannot represent bottom topography. Even if one refined near the bottom of the domain, the large octree cells in the middle of the water filter out horizontal detail making the surface simulation unaware of any rich structure below. In contrast, methods based on height fields (such as the shallow water equations [Kass and Miller 1990; O?Brien and Hodgins 1995]) use tall cells with detailed refinement in the horizontal directions, thus capturing the effects of complex bottom topography rather well. Unfortunately, these methods do not support overturning or other interesting three-dimensional behavior.  Thus, we place the following requirements on our method. First, we need detailed three-dimensional behavior near the interface, down to the depth at which turbulent motion directly affects the look of the surface. This ?optical depth? for simulation will usually be greater than the visible optical depth, since interesting turbulence will cause the visible water to continuously mix with the water in a larger layer underneath. Second, the large unseen region of the liquid should be represented as efficiently as possible without losing plausible bulk motion and important details such as bottom topography. The first requirement is satisfied by using a state of the art, uniform MAC grid Navier-Stokes solver near the interface (as in [Enright et al. 2002]). This also allows for the addition of any other technique that works on a uniform grid, such as vortex particles [Selle et al. 2005]. Outside of this surface layer, we maintain the same resolution in the horizontal directions but coarsen in the vertical direction obtaining tall thin cells that reach down to the bottom of the domain (satisfying the second requirement). Since the effects of bottom topography diminish with increasing depth, the method is most useful in the shallow water regime. One advantage of this hybrid approach is that it reduces to exactly the standard MAC discretization under full refinement. In contrast, the octree method of [Losasso et al. 2004] suffers from increased dissipation due to repeated back and forth averaging even when fully refined. While this dissipation was partially reduced in [Guendelman et al. 2005] using FLIP rather than PIC averaging (see also [Zhu and Bridson 2005]), our experience with uniform grids indicates that the full MAC method still produces higher quality results. Although a grid of this type could be represented with pointer structures (as in [Whitaker 1998]) connecting all the tall and short cells together in the required fashion, this could prove rather inefficient. Luckily, we can leverage recent work on Run-LengthEncoded (RLE) grids by [Houston et al. 2004; Breen et al. 2004; Wiebe and Houston 2004; Nielsen and Museth 2005; Houston et al. 2005; Houston et al. 2006] (note that [Curless and Levoy 1996] applied RLE to volumes and [Bridson 2003] suggested RLE level sets). Their fluid simulator solves the level set on a narrow band near the interface, but uses a uniform MAC discretization inside the liquid for the fluid solver with long cells allowed only in the air. This is analogous to previous local level set and narrow band methods such as [Peng et al. 1999] and [Adalsteinsson and Sethian 1995]. Thus, their method improves the cost of the level set algorithm and removes the need to store and check grid cells deep inside the air, but does not reduce the time spent solving for advection and pressure in the fluid itself, which is typically most of the computational cost. In contrast, we use tall cells in the water, which greatly reduces the computational cost outside the band of cells near the interface. This requires novel methods both for discretizing tall cells full of liquid as well as for coupling these cells to the standard uniform cells. Our tall cells only occur far from the interface, and thus do not participate in the particle level set method. However, we do require methods for advecting the velocity field and solving for the pressure in order to make the velocity divergence free. Note that all our tall cells are vertical as is typical for shallow water methods, because it is reasonable to assume linear pressure variation in the vertical direction but not in the horizontal directions.\n       permissions@acm.org . ? 2006 ACM 0730-0301/06/07000805 $5.00\n      805\n      (d)\n      \n        Figure 2: We use uniform cells near objects and within a specified optical depth of the surface, and coarsen with tall cells elsewhere.\n      \n      (a) (b) (c) (d) (e) (f)\n      \n        Figure 3: (a) pressure and velocity for a uniform MAC grid (b) pressure in uniform and tall cells (c) horizontal pressure derivatives (d) vertical pressure derivatives (e) horizontal velocities co-located with horizontal pressure derivatives (f) vertical velocities co-located with vertical pressure derivatives.\n      \n      \n        2 Previous Work\n        The three-dimensional Navier-Stokes equations were popularized with the work of [Foster and Metaxas 1997b; Stam 1999; Fedkiw et al. 2001]. These equations were combined with methods for simulating a water surface in [Foster and Metaxas 1996; Foster and Metaxas 1997a; Foster and Fedkiw 2001], and we use the particle level set approach of [Enright et al. 2002] as the method of choice in the three-dimensional surface layer of water. [Baxter et al. 2004b] used a conservative heightfield fluid model in an interactive painting system. Other work on water and liquids includes viscoelastic fluids [Goktekin et al. 2004], solid fluid coupling [Carlson et al. 2004; Guendelman et al. 2005], control [McNamara et al. 2004; Shi and Yu 2005], contact angles [Wang et al. 2005], sand [Zhu and Bridson 2005], and two phase flow [Hong and Kim 2005]. There are a number of two-dimensional techniques for large bodies of water including the popular methods for deep water [Fournier and Reeves 1986; Peachey 1986; Mastin et al. 1987; Ts?o and Barsky 1987; Thon et al. 2000]. We refer the interested reader to the recent work of [Hinsinger et al. 2002] and course notes of [Tessendorf 2002] and [Baraff et al. 2003]. Of course, the deep water equations ignore bottom topography and do not resolve fully three-dimensional phenomena at the surface. Another interesting technique consists of solving the two-dimensional Navier-Stokes equations for the horizontal velocities, and then using the pressure to define a height field as in [Chen and Lobo 1994]. [Thon and Ghazanfarpour 2001] also solved the two-dimensional NavierStokes equations for the horizontal velocity in streams, but used a noise function for the vertical velocity. [Neyret and Praizelin 2001] proposed a simpler stream model using a two-dimensional Laplace equation for the bulk flow. Finally, a few authors have tackled large bodies of water with the three-dimensional NavierStokes equations, e.g. focusing on splash and foam in [Takahashi et al. 2003] and on breaking waves in [Mihalef et al. 2004].\n      \n      \n        3 Grid Structure\n        We simulate on a uniform two-dimensional horizontal grid of vertical columns that contain both uniform cells and tall cells that replace collections of uniform cells, e.g. see Figure 2 . The tall and uniform cells can be arbitrary in each column, and in particular we split tall cells at the ground to match bottom topography ( Figure 6 ). In a uniform MAC grid, scalars are stored at cell centers while velocity components are stored on their respective faces ( Figure 3a ). Level set values are only required in uniform cells near the interface, whereas pressure and velocity are needed everywhere. Tall cells contain two pressure values corresponding to the cell centers of the uppermost and bottommost uniform cells that the tall cell replaces ( Figure 3b ). Pressure values can be interpolated to the centers of the other uniform cells replaced by a tall cell using vertical linear interpolation. Later, we will calculate horizontal pressure derivatives for every pressure sample ( Figure 3c ), and thus we co-locate horizontal velocities with them ( Figure 3e ). Figure 3e outlines the control volume around each minimal face noting that minimal faces between tall cells may contain two horizontal velocities (as shown in the figure). Between these two velocities, we interpolate horizontal velocities on the uniform faces replaced by this minimal face using linear interpolation consistent with the pressure and its derivatives. Vertical pressure derivatives and vertical velocities are shown in Figure 3d and 3f (also co-located) along with outlined control volumes. The linear pressure profile in the tall cell dictates that all uniform grid vertical faces replaced by the face at the center of this cell should have the same vertical velocity.\n        806\n        \n          \n          Figure 4: Three balls splashing into water (300 ? 200 horizontal resolution). The fully refined case (left) and the 1/4 refined case (middle) are quite similar. However, quite different results are obtained if one doesn?t refine enough (right, 1/16 refined).\n        \n        \n          3.1 Refinement and Coarsening\n          When we change the structure of tall and uniform cells, the velocity needs to be interpolated to the new grid. The vertical velocities at the center of new tall cells are set to the average value of all the vertical faces replaced by it, whereas those for uniform cells are defined as their interpolated values. This conserves vertical momentum. For horizontal velocities, the difficulties occur when a new minimal face replaces more than one uniform face. For example, let u( j a ), u( j a + 1), . . . , u( j b ) be a sequence of velocity values on a minimal face. We desire bottom and top values u a and u b such that linear interpolation between them best approximates the sequence. The least squares error is E = 2 1 j= ? j b j a j j b b ? ? j j a u a + j j b ? ? j j a a u b ? u( j) 2 Differentiating with respect to u a and u b and setting the derivatives to zero gives j= ? j b j a ( j j b b ? ? j) j a 2 u a + ( j b ? j b j)( ? j j a ? j a ) u b = j= ? j b j a ( j b ? j)u( j) j= ? j b j a ( j b ? j b j)( ? j j a ? j a ) u a + ( j j b ? ? j a j a ) 2 u b = j= ? j b j a ( j ? j a )u( j) Using the formulas for sums of linear and quadratic sequences, these equations simplify into\n          \n            1\n            n + 6 1 2n n ? + 1 1 2n n ? + 1 1 u u b a = j= ? j b j a j j b ? ? j a j u( j)\n          \n          where n = j b ? j a . If some subsequence of the u( j)?s come from a minimal face?s linear profile, the same formulas can compute that portion of the right-hand side sum in constant time. This 2 ? 2 system is trivially inverted to find u a and u b . As shown in [Houston et al. 2006], the entire process of building a new grid and transferring data between grids takes linear time. We use a one grid cell band of uniform cells around moving objects, so that no special tall cell treatment is required for one-way or twoway coupling with solids (though we implemented only one-way coupling so far). In addition, we define an optical depth down to which we want to preserve as much detail as possible and use uniform cells within that distance from the interface. We emphasize that the optical depth required for a given problem does not shrink under refinement, rather it is a true length scale related to the threedimensional physics we wish to capture.\n        \n        \n          3.2 Refinement Analysis and Comparison\n          The effects of varying the optical depth are illustrated in Figure 4 . With a sufficient optical depth, satisfactory results are obtained (middle). Otherwise, we fail to resolve enough of the threedimensional flow structure and obtain nonphysical results (right). These simulations used 4 processors in a 2 ? 2 grid (see section 6), and took 250, 116, and 59 seconds per frame, respectively. Note that the fully refined splash (left) uses essentially the same method as [Houston et al. 2006]. Since the computational cost of a tall cell is independent of its height, all the tall cells together are equivalent in cost to a few extra layers of uniform cells regardless of the depth of the water. That is, if a certain optical depth of uniform cells is needed, then another layer of cells provides the extra computation needed for our approach. It is unlikely that another adaptive method such as an octree would make this layer more efficient. In particular, we can double the depth of the water without incurring the factor of two slowdown characteristic of uniform grids or previous RLE techniques ( Figure 5 (left)). Moreover, the resulting splash is qualitatively different from the shallow simulation, which shows the importance of water depth on the bulk flow. The deeper simulation took 140 seconds a frame due to the increased surface area compared to Figure 4 (middle). Figure 5 (right) shows a serial octree simulation of the same splash. Although Figure 4 (middle) takes the same amount of total computation (460 seconds per frame), our method is readily parallelized leading to faster turnaround and larger simulations. Excessive computational costs kept us from refining the octree to the same resolution throughout the entire optical depth region, and we instead were forced to coarsen away from the typical three grid cell band, which made the simulation significantly more viscous. This highlights an interesting aspect of our approach, in that we combine our tall cells with a uniform grid whereas it is probably better to combine them with an adaptive octree grid. In fact, this is straightforward to implement by placing individual octrees in each of our uniform cells just as was done in [Losasso et al. 2006].\n          \n            \n            Figure 5: (Left) The same optical depth as Figure 4 (middle), but with twice the water depth. While this would be twice as expensive with a uniform grid, there is almost no cost increase using our approach. (Right) An octree simulation with two levels of coarsening away from the interface (312 ? 208 ? 208 effective resolution).\n          \n          807\n          \n            \n            Figure 6: A cross-section of the grid from a river simulation showing tall cells used to represent bottom topography.\n          \n        \n      \n      \n        4 Uniform Three-Dimensional Method\n        The inviscid, incompressible Navier-Stokes equations for the conservation of mass and momentum are\n        \n          2\n          u t + u ? ?u + ?p/? = g\n        \n        \n          3\n          ? ? u = 0\n        \n        where u = (u, v, w) is the velocity, p is the pressure, ? is the density, and g is the acceleration due to gravity. We use a standard, uniform MAC grid fluid solver in the band of uniform cells, together with the particle level set method of [Enright et al. 2002]. Both the level set and velocity field are advected with semi-Lagrangian advection [Stam 1999] in this band. Since the level set is only defined near the interface, its semi-Lagrangian rays will interpolate from other uniform cells. In contrast, velocity is defined everywhere, and some semi-Lagrangian rays will ask for information from tall cells. These velocities will instead be updated with the same algorithm used to update velocities in tall cells (see section 5.1). Note that the pressure is solved for globally, coupling the uniform and tall cells together (see section 5.2). In situations where additional turbulence is desired, we use the vortex particle approach of [Selle et al. 2005]. Figures 1 and 7 show simulations with vortex particles seeded behind a boat to represent the turbulence generated by a propeller.\n      \n      \n        5 Adaptive Two-Dimensional Method\n        In this section, we address the advection of velocity on all the tall cells and on the uniform cells that were not updated with semiLagrangian advection because they were too close to the tall cells. We also address solving for the pressure on an arbitrary collection of tall and uniform cells. These discretizations will be constructed  by summing uniform finite volume discretizations over tall cells using linear or constant basis functions, and can be considered discrete finite volume/finite element methods.\n        \n          5.1 Advection\n          We use first order accurate conservative upwinding for all tall cells and any uniform cells that are not updated with the semi-Lagrangian method. Since the number of cells that need to be updated with this method is a small subset of the total cells (even though it can be most of the volume), the efficiency of this approach is unimportant. Thus, we chose the conservative method to preserve momentum in these very tall cells that are likely to have large truncation errors. Moreover, conservative schemes are quite popular for the two-dimensional nonlinear shallow water equations, which have many similarities with our tall cells. We emphasize that conservation does not cure large truncation errors: it only makes the results more physically plausible. We begin by putting the velocity terms into conservation form using ? ? u = 0 to transform equation 2 into u t + ? ? (uu T ) + ?p/? = g. Ignoring the pressure and force terms, we focus on the u component of the velocity u t + (u 2 ) x + (vu) y + (wu) z = 0. If we place a control volume around each face as shown by the dotted lines in Figure 3e , then this equation can be rewritten to indicate that the velocity is updated based on the fluxes across the control volume faces, i.e.\n          \n            4\n            6 u ? = u n + ?t ? ?F f ?x?y?z f =1\n          \n          where the sign depends on which side of the control volume a flux is on. The fluxes are computed by averaging the velocities to the control volume faces, and then using these average velocities to decide on the upwind direction. The flux itself is constructed by multiplying the upwind component of the velocity we are advecting, u up , with the average values for the other components v av and w av :\n          \n            5\n            F u = ?y?zu up 2 F v = ?x?zv av u up F w = ?x?yw av u up\n          \n          The v and w velocity components are treated similarly. While this algorithm is straightforward on a uniform grid, a few modifications are required for tall cells. For motivation, we point out that we could refine the tall cells into a uniform grid, apply the uniform grid method just discussed, and then re-coarsen. Although this would be inefficient to implement directly, our approach achieves exactly this result in an efficient manner. To simulate this process of refining, advecting, and coarsening, we consider each pair of adjacent minimal faces one at a time, apply equations 5 and 4 to the entire velocity profile to produce a piecewise linear or quadratic u ? on each side, and use equation 1 to reduce u ? back to a constant or linear profile. The fact that reducing each flux contribution to u ? separately has the same result as treating them all  at once follows from the linearity of equation 1. As shown in Figure 8, the structure of the flux profile differs depending on which component is being advected and in which direction. For example, given two minimal u faces whose control volumes intersect along the x direction, the averaged velocity profile u av will be linear. If u av has constant sign, F u has a single quadratic profile (u up is linear) on the control volume face. If u av changes sign, we split the control volume face into two sections with constant sign and handle each section separately. Advection of u along the other horizontal dimension w is similar. Advecting u along v between distinct minimal u faces is simple since the intersection is a single uniform control volume face. However, we must also account for flux between the top and bottom samples of a linear profile. Averaging v to the middle control volume face produces a constant v av at every virtual control volume face, so the flux profile F v will be linear. The update of u ? can be simplified by noting that the net flux into every virtual uniform face except for the first and last is constant, since it is the difference of consecutive terms in a linear sequence. Advection of the other horizontal velocity w is similar to that of u. Advection of v along u or w is the same as for u except that the flux profiles are linear instead of quadratic, and there is no need to consider flux inside middle v faces since they are constant. First order upwinding requires a CFL condition on the time step for stability, namely ?t max(|u|/?x + |v|/?y + |w|/?z) ? 1. If a larger time step is desired for the other parts of the algorithm, the upwinding phase of advection can be subcycled for little extra cost since it is only needed for a small fraction of the velocities. After advection, we refine/coarsen the grid. This is done before making the velocity field divergence free, because velocity interpolation does not preserve discrete incompressibility. There are two issues with this advection method which we would like to resolve with future work. First, instabilities sometimes ap- pear near sharp changes in bottom topography such as the walls of the canyon in Figure 9 . These can occur because the final u ? values are not affine combinations of the starting velocities, since averaging to control volume faces breaks discrete incompressibility. We avoided these instabilities by computing the total weight used for each u ? value, and dividing by this weight if u ? would be larger than an affine combination. Note that these weights can be computed by applying the same advection algorithm to the constant field 1 (i.e., substitute 1 for u up everywhere). This fix is far from satisfactory, especially since the lack of discrete incompressibility causes no problems for uniform grids. Second, while a first order method is sufficient for bulk motion, it would be interesting to generalize the ENO and WENO schemes typically used for shallow water to the case of tall cells to reduce numerical dissipation.\n          808\n          \n            \n            Figure 7: The boat moving along a straight path (1500 ? 300 horizontal resolution).\n          \n          u along u u along v v along u v along v\n          \n            Figure 8: Advection fluxes (small blue circles) on minimal control volume faces between adjacent velocity control volumes.\n          \n        \n        \n          5.2 Laplace Equation\n          After advection, we solve for the pressure and make the velocities divergence free via ? ? (?p/?) = ? ? u ? /?t u n+1 = u ? ? ?t?p/? for the entire collection of uniform and tall cells at once. Since variable density flows do not have approximately linear vertical pressure profiles, we assume that the density is spatially constant and can be moved to the right hand side, i.e. ? ? ?p = ?? ? u ? /?t. The component of the discrete pressure gradient on a MAC grid face between two MAC grid cells p 1 and p 2 is ? p/? l = (p 2 ? p 1 )/?l where l = x, y, or z. This readily generalizes to arbitrary configurations of tall cells, since we determined the placement and structure of the velocities with pressure gradients in mind ( Figure 3c ,d). For the horizontal derivative, say in the x direction, consider two adjacent tall cells extending from j 1 to j 2 and j 3 to j 4 , respectively, intersecting in a minimal face from j a = max( j 1 , j 3 ) to j b = min( j 2 , j 4 ). If the corresponding pressures are p 1 , p 2 , p 3 , p 4 , then the component of the discrete gradient on the face between them is a linear profile with values (p x ) a and (p x ) b given by interpolating pressures to j a and j b in each cell and applying standard central differencing, e.g. (p x ) a = 1 j 4 ? j a p 3 + j a ? j 3 p 4 ? j 2 ? j a p 1 ? j a ? j 1 p 2 ?x j 4 ? j 3 j 4 ? j 3 j 2 ? j 1 j 2 ? j 1 and similarly for (p x ) b . The derivative between vertically adjacent pressure samples p 1 at j 1 and p 2 at j 2 is simply p y = (p 2 ? p 1 )/(( j 2 ? j 1 )?y). The discrete volume weighted divergence of a uniform cell can be written as 6 V (? ? u) = ? ?u f A f f =1 where the ? sign is chosen based on which face is being considered, and A f is the area of the face. We generalize this equation to tall cells by computing the flux into each virtual uniform cell in the tall cell, dividing each flux between the bottom and top samples in the cell, and adding up the contributions. We divide the virtual uniform fluxes using the same fractions used to interpolate pressures to the given virtual uniform cell in order to ensure the symmetry of the final system. For example, given a tall cell from j 1 to j 2 and a minimal face from j a to j b with velocities u a and u b , the total flux contribution from the face given to the upper portion of the cell is\n          809\n          \n            6\n            j b j ? j 1 j b ? j j ? j a j= ? j a j 2 ? j 1 j b ? j a u a + j b ? j a u b ?y?z.\n          \n          while j b j 2 ? j j b ? j j ? j a j= ? j a j 2 ? j 1 j b ? j a u a + j b ? j a u b ?y?z. is the contribution to the lower portion of the cell. The vertical flux contribution is always v?x?z. We can now combine the discrete volume weighted divergence and gradient operators to discretize the Laplacian. For the horizontal direction, to get the contribution from the minimal face from j a to j b to the top portion of the cell, we substitute (p x ) a and (p x ) b for u a and u b in equation 6 and collapse the nested interpolation to obtain ?y?z jb j ? j 1 j 4 ? j j ? j 3 j 2 ? j j ? j 1 ?x j= ? ja j 2 ? j 1 j 4 ? j 3 p 3 + j 4 ? j 3 p 4 ? j 2 ? j 1 p 1 ? j 2 ? j 1 p 2 and similarly ?y?z jb j 2 ? j j 4 ? j j ? j 3 j 2 ? j j ? j 1 ?x j= ? ja j 2 ? j 1 j 4 ? j 3 p 3 + j 4 ? j 3 p 4 ? j 2 ? j 1 p 1 ? j 2 ? j 1 p 2 is the contribution to the bottom portion of the cell. Note that the coefficient of p 1 in the first equation (which is for p 2 ) is identical to the coefficient of p 2 in the second equation (which is for p 1 ). Since all symmetric pairs of contributions to the discretization matrix are identical, the final result is symmetric. The coefficients relating p 3 to p 4 are handled similarly. Moreover, the cross terms relating p 1 to p 3 , p 1 to p 4 , p 2 to p 3 and p 2 to p 4 are also similarly treated. For the vertical terms, we obtain (?x?z/?y)(p 2 ? p 1 )/( j 2 ? j 1 ) once again resulting in identical contributions for symmetric terms. The resulting negative semi-definite linear system can be treated in the same manner as a typical MAC grid discretization, i.e. preconditioned conjugate gradients, incomplete Cholesky preconditioner, Neumann and Dirichlet boundary conditions anywhere in tall or uniform cells, etc.\n        \n      \n      \n        6 Examples\n        We implemented our method in parallel using MPI by decomposing the horizontal domain into a two-dimensional grid and giving each processor one fixed rectangular piece of the domain. Before every stage of the fluid solve that requires neighboring data, we fill ghost cells on the sides of each processor from the boundary data of its neighboring processors. In the pressure solve, each processor constructs an incomplete Cholesky preconditioner for the portion of the grid that it owns, and participates in a global PCG solve with a block diagonal preconditioner formed from the incomplete Cholesky blocks on each processor. Extending the serial version of the algorithm to use MPI was relatively straightforward since the domain decomposition is applied only along uniform horizontal dimensions, and the use of tall cells for the bulk of the fluid significantly reduced the communication bandwidth required. All simulations were run on a cluster of 4 processor 2.6 GHz Opteron machines. The boat simulations in Figures 1 and 7 used 16 processors in an 8? 2 grid. The optical depth was 1/5 the water depth and the cost was approximately 3 minutes a frame. For the boat examples we used vortex particles [Selle et al. 2005] and rendered removed negative particles as in [Guendelman et al. 2005]. Figure 9 shows a river simulation with varying bottom topography using 20 processors in a 20 ? 1 grid. The computational cost was approximately 25 minutes a frame, and the optical depth is illustrated in Figure 6 . Memory consumption was not a significant issue in any of the simulations.\n        \n          \n          Figure 9: Simulation of a river filling a canyon (2000 ? 200 horizontal resolution).\n        \n      \n      \n        7 Conclusion\n        We have presented a novel method for the simulation of large bodies of water by combining two-dimensional and three-dimensional simulation techniques. The bulk of the water volume is represented with tall cells similar to a height field method, and a surface layer of water is simulated with a state of the art, fully three-dimensional Navier-Stokes free surface solver. This algorithm works well for capturing detailed surface motion and for representing detailed bottom topography. Our general philosophy is to use the best available method in the surface layer where we expect interesting detail, and to coarsen the mesh away from the interface for efficiency. Like shallow water, our method only admits computational gains for flows heavily dominated by gravity, where a large portion of the water is in near vertical equilibrium against the ground. In general, we believe that the best approach for any simulation is to start with a uniform grid that captures the interesting flow features, coarsen vertically using our method in areas where linear pressure profiles are sufficient, and then refine uniform cells using an octree in areas where more resolution is desirable. Finally, we note that the effects of bottom topography on the surface diminish with increasing depth, and in the deep water limit the effects are negligible. However, we are interested in problems in the shallow water regime, where tall cells are almost exclusively used.\n      \n      \n        Acknowledgements\n        Research supported in part by an ONR YIP award and a PECASE award (ONR N00014-01-1-0620), a Packard Foundation Fellowship, a Sloan Research Fellowship, ONR N00014-03-1-0071, ONR N00014-02-1-0720, ONR N00014-05-1-0479 (for a SUN computing cluster), ARO DAAD19-03-1-0331, NSF IIS-0326388, NSF  ITR-0205671, NSF ITR-0121288, NSF ACI-0323866 and NIH U54-GM072970. G.I. was supported in part by an NSF Graduate Fellowship.\n        810\n      \n      \n        References\n        \n          DALSTEINSSON AND ETHIAN J. Comput. Phys. 118, ARAFF ITKIN ASS AND NDERSON SIGGRAPH Course Notes, AXTER AND IN Proc. of Graph. Interface, AXTER IU AND IN Proc. of Comput. Anim. and Social Agents, AXTER ENDT AND IN Proc. of Non-Photorealistic Anim. and Rendering, REEN EDKIW USETH SHER APIRO AND HITAKER SIGGRAPH Course Notes, RIDSON Computational Aspects of Dynamic Surfaces. ARLSON UCHA AND URK ACM Trans. Graph. (SIGGRAPH Proc.) 23, HEN AND OBO Comput. Graph. and Image Processing 57, URLESS AND EVOY Comput. Graph. (SIGGRAPH Proc.), NRIGHT ARSCHNER AND EDKIW ACM Trans. Graph. (SIGGRAPH Proc.) 21, EDKIW TAM AND ENSEN Proc. of ACM SIGGRAPH 2001,\n          OSTER AND EDKIW Proc. of ACM SIGGRAPH 2001,\n          OSTER AND ETAXAS Graph. Models and Image Processing 58, OSTER AND ETAXAS Comput. Graph. Int., OSTER AND ETAXAS Proc. of SIGGRAPH 97, OURNIER AND EEVES Comput. Graph. (Proc. of SIGGRAPH 86), OKTEKIN ARGTEIL AND RIEN ACM Trans. Graph. (SIGGRAPH Proc.) 23, UENDELMAN ELLE OSASSO AND EDKIW ACM Trans. Graph. (SIGGRAPH Proc.) 24, INSINGER EYRET AND ANI ACM SIGGRAPH Symp. on Comput. Anim., ONG AND IM ACM Trans. Graph. (SIGGRAPH Proc.) 24, OUSTON IEBE AND ATTY SIGGRAPH 2004 Sketches & Applications,\n          OUSTON IELSEN ATTY ILSSON AND USETH SIGGRAPH 2005 Sketches\n          & Applications, OUSTON IELSEN ATTY ILSSON AND USETH\n        \n      \n      \n        A , D., S , J. 1995. A fast level set method for propagating interfaces. 269?277. B , D., W , A., K , M., A , J. 2003. Physically based modeling (a little fluid dynamics for graphics). In ACM. B , W., L , M. 2004. Haptic interaction with fluid media. In 81?88. B , W., L , Y., L , M. 2004. A viscous paint model for interactive applications. In vol. 15, 433?441. B , W., W , J., L , M. 2004. Impasto: A realistic, interactive model for paint. In 45?56. B , D., F , R., M , K., O , S., S , G., W , R. 2004. Level sets and PDE methods for computer graphics. In ACM. B , R. 2003. PhD thesis, Stanford University. C , M., M , P. J., T , G. 2004. Rigid fluid: Animating the interplay between rigid bodies and fluid. 377?384. C , J., L , N. 1994. Toward interactive-rate simulation of fluids with moving obstacles using the navier-stokes equations. 107?116. C , B., L , M. 1996. A volumetric method for building complex models from range images. 303?312. E , D., M , S., F , R. 2002. Animation and rendering of complex water surfaces. 3, 736?744. F , R., S , J., J , H. 2001. Visual simulation of smoke. In 15?22. F , N., F , R. 2001. Practical animation of liquids. In 23?30. F , N., M , D. 1996. Realistic animation of liquids. 471?483. F , N., M , D. 1997. Controlling fluid animation. In 178?188. F , N., M , D. 1997. Modeling the motion of a hot, turbulent gas. In 181?188. F , A., R , W. T. 1986. A simple model of ocean waves. In vol. 20, 75?84. G , T. G., B , A. W., O?B , J. F. 2004. A method for animating viscoelastic fluids. 463?467. G , E., S , A., L , F., F , R. 2005. Coupling water and smoke to thin deformable and rigid shells. 3, 973?981. H , D., N , F., C , M.-P. 2002. Interactive animation of ocean waves. In 161?166. H , J.-M., K , C.-H. 2005. Discontinuous fluids. 3, 915?919. H , B., W , M., B , C. 2004. RLE sparse level sets. In ACM Press. H , B., N , M., B , C., N , O., M , K. 2005. Gigantic deformable surfaces. In ACM Press. H , B., N , M., B , C., N , O., M , K. 2006. Hierarchical RLE level set: A compact and versatile de-\n        ACM Trans. Graph. 25, VERSEN AND AKAGUCHI SIGGRAPH 2004 Sketches & Applications, ASS AND ILLER Comput. Graph. (Proc. of SIGGRAPH 90),\n        OSASSO IBOU AND EDKIW ACM Trans. Graph. (SIGGRAPH Proc.) 23, OSASSO EDKIW AND SHER Computers and Fluids (in press). ASTIN ATTERBERG AND AREDA IEEE Comput. Graph. Appl. 7, C AMARA REUILLE OPOVI C AND TAM ACM Trans. Graph. (SIGGRAPH Proc.), IHALEF ETAXAS AND USSMAN Proc. of the 2004 ACM SIGGRAPH/Eurographics Symp. on Comput. Anim., EYRET AND RAIZELIN Comput. Anim. and Sim. ?01,\n        IELSEN AND USETH Accepted to SIAM J. Scientific Comput.. RIEN AND ODGINS Comput. Anim. ?95, EACHEY Comput. Graph. (Proc. of SIGGRAPH 86), ENG ERRIMAN SHER HAO AND ANG J. Comput. Phys. 155, ELLE ASMUSSEN AND EDKIW ACM Trans. Graph. (SIGGRAPH Proc.) 24, HI AND U Proc. of the ACM SIGGRAPH/Eurographics Symp. on Comput. Anim.,\n        TAM AKAHASHI ANAKA\n        Proc. of SIGGRAPH 99, UJII UNIMATSU IWADA AITO AND EKI Comp. Graph. Forum (Eurographics Proc.) 22,\n        ESSENDORF SIGGRAPH 2002 Course Notes #9 (Simulating Nature: Realistic and Interactive Techniques), HON AND HAZANFARPOUR Comput. Graph. Forum (Proc. Eurographics) 19, HON ISCHLER AND HAZANFARPOUR Comput. Graph. Int., S O AND ARSKY\n        ACM Trans. Graph. 6, ANG UCHA AND URK ACM Trans. Graph. (SIGGRAPH Proc.) 24, HITAKER Int. J. Comput. Vision 29, IEBE AND OUSTON SIGGRAPH 2004 Sketches & Applications,\n        ACM Trans.\n      \n      \n        formable surface representation. 1, 1?24. I , J., S , R. 2004. Growing up with fluid simulation on ?The Day After Tomorrow?. In ACM Press. K , M., M , G. 1990. Rapid, stable fluid dynamics for computer graphics. In vol. 24, 49?57. L , F., G , F., F , R. 2004. Simulating water and smoke with an octree data structure. 457?462. L , F., F , R., O , S. 2006. Spatially Adaptive Techniques for Level Set Methods and Incompressible Flow. M , G., W , P., M , J. 1987. Fourier synthesis of ocean scenes. 3, 16?23. M N , A., T , A., P  ? , Z., S , J. 2004. Fluid control using the adjoint method. 449?456. M , V., M , D., S , M. 2004. Animation and control of breaking waves. In 315?324. N , F., P , N. 2001. Phenomenological simulation of brooks. In Proc. Eurographics Wrkshp., 53?64. N , M., M , K. 2005. Dynamic tubular grid: An efficient data structure and algorithms for high resolution level sets. O?B , J. F., H , J. K. 1995. Dynamic simulation of splashing fluids. In 198?205. P , D. R. 1986. Modeling waves and surf. In vol. 20, 65?74. P , D., M , B., O , S., Z , H., K , M. 1999. A PDE-based fast local level set method. 410?438. S , A., R , N., F , R. 2005. A vortex particle method for smoke, water and explosions. 3, 910?914. S , L., Y , Y. 2005. Taming liquids for rapidly changing targets. In 229?236. S , J. 1999. Stable fluids. In 121?128. T , T., F , H., K , A., H , K., S , T., T , K., U , H. 2003. Realistic animation of fluid with splash and foam. 3, 391? 400. T , J. 2002. Simulating Ocean Water. In ACM Press. T , S., G , D. 2001. A semi-physical model of running waters. 53?59. T , S., D , J.-M., G , D. 2000. Ocean waves synthesis using a spectrum-based turbulence function. In 65?74. T ? , P. Y., B , B. A. 1987. Modeling and rendering waves: Wave-tracing using beta-splines and reflective and refractive texture mapping. 3, 191?214. W , H., M , P., T , G. 2005. Water drops on surfaces. 3, 921?929. W , R. T. 1998. A level-set approach to 3d reconstruction from range data. 3, 203?231. W , M., H , B. 2004. The tar monster: Creating a character with fluid simulation. In ACM Press. Z , Y., B , R. 2005. Animating sand as a fluid. 3, 965?971.\n        HU AND RIDSON Graph. (SIGGRAPH Proc.) 24,\n        811\n      \n    \n  ",
  "resources" : [ ]
}