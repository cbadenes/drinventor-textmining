{
  "uri" : "sig2009-a29-wang_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2009/a29-wang_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Kernel Nystr?m Method for Light Transport",
    "published" : null,
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ ]
  },
  "bagOfWords" : [ "kernel", "nystr?m", "method", "effective", "modeling", "scene", "complex", "lighting", "effect", "occlusion", "which", "have", "be", "challenge", "exist", "technique", "where", "light", "transport", "matrix", "describe", "light", "transport", "from", "light", "source", "camera", "pixel", "illumination", "condition", "represent", "vector", "incident", "radiance", "from", "email", "-lcb-", "jiapw", "xtong", "zhoulin", "bainguo", "-rcb-", "@microsoft", "com", "light", "source", "outgoing", "radiance", "observe", "camera", "image", "pixel", "however", "generate", "high", "quality", "result", "exist", "technique", "often", "require", "ten", "thousand", "image", "accurate", "reconstruction", "light", "transport", "matrix", "-lrb-", "e.g.", "see", "-lsb-", "Debevec", "et", "al.", "2000", "Wenger", "et", "al.", "2005", "-rsb-", "-rrb-", "kernel", "nystr?m", "method", "refer", "nystr?m", "method", "light", "transport", "kernel", "incorporate", "light", "transport", "kernel", "work", "follow", "light", "transport", "matrix", "represent", "discrete", "sample", "reflectance", "field", "-lsb-", "Debevec", "et", "al.", "2000", "-rsb-", "therefore", "most", "exist", "method", "only", "consider", "simplify", "4d", "-lsb-", "Debevec", "et", "al.", "2000", "Lin", "et", "al.", "Matusik", "et", "al.", "2004", "peer", "Dutr", "2005", "-rsb-", "6d", "reflectance", "field", "-lsb-", "Matusik", "et", "al.", "2002", "Masselus", "et", "al.", "2003", "Sen", "et", "al.", "2005", "Wenger", "et", "al.", "2005", "-rsb-", "light", "Transport", "Acquisition", "we", "categorize", "exist", "method", "three", "class", "brute", "force", "sparsity", "base", "coherence", "base", "method", "Debevec", "et", "al.", "-lsb-", "2000", "-rsb-", "develop", "light", "stage", "device", "capture", "4d", "reflectance", "field", "fix", "viewpoint", "distant", "lighting", "move", "point", "light", "source", "around", "object", "later", "improve", "device", "fast", "capture", "-lsb-", "Wenger", "et", "al.", "2005", "-rsb-", "Hawkins", "et", "al.", "-lsb-", "2005", "-rsb-", "exploit", "Helmholtz", "reciprocity", "capture", "reflectance", "field", "highly", "reflective", "object", "obtain", "dense", "sample", "incident", "light", "domain", "row", "light", "transport", "matrix", "capture", "shoot", "ray", "from", "viewpoint", "capture", "high", "resolution", "image", "scene", "project", "over", "incident", "light", "domain", "reciprocity", "also", "exploit", "-lsb-", "Sen", "et", "al.", "2005", "-rsb-", "acquire", "6d", "reflectance", "field", "sparsity", "base", "method", "model", "light", "transport", "matrix", "set", "basis", "function", "define", "over", "incident", "light", "domain", "assume", "each", "row", "light", "transport", "matrix", "can", "approximate", "linear", "combination", "sparse", "set", "basis", "function", "Matusik", "et", "al.", "-lsb-", "2004", "-rsb-", "model", "light", "transport", "matrix", "hierarchical", "rectangular", "basis", "function", "adaptive", "algorithm", "develop", "derive", "sparse", "basis", "weight", "each", "pixel", "from", "image", "scene", "capture", "under", "various", "natural", "illumination", "condition", "peer", "et", "al.", "-lsb-", "2005", "-rsb-", "model", "light", "transport", "matrix", "wavelet", "infer", "light", "transport", "matrix", "from", "image", "scene", "illuminate", "carefully", "design", "wavelet", "noise", "pattern", "recently", "compressive", "sense", "approach", "-lsb-", "peer", "et", "al.", "2009", "-rsb-", "propose", "which", "compute", "solution", "each", "pixel", "from", "image", "capture", "from", "scene", "illuminate", "pattern", "lighting", "number", "image", "need", "reconstruction", "only", "proportional", "rank", "light", "transport", "matrix", "independent", "size", "matrix", "coherence", "base", "method", "acquire", "light", "transport", "matrix", "exploit", "coherence", "reflectance", "field", "datum", "masselus", "et", "al.", "-lsb-", "2004", "-rsb-", "explore", "interpolation", "compression", "reflectance", "field", "Fuchs", "et", "al.", "-lsb-", "2007", "-rsb-", "propose", "adaptive", "sampling", "scheme", "sampling", "4d", "reflectance", "field", "while", "method", "only", "exploit", "coherence", "either", "row", "column", "we", "method", "exploit", "datum", "coherence", "entire", "light", "transport", "matrix", "reconstruction", "low", "Rank", "Matrix", "approximation", "graphic", "research", "et", "al.", "-lsb-", "2008", "-rsb-", "apply", "nystr?m", "method", "accelerate", "appearance", "edit", "propagation", "approximate", "dense", "symmetric", "distance", "matrix", "sparsely", "sample", "row", "column", "approach", "column", "matrix", "cluster", "small", "number", "group", "accord", "value", "sparsely", "sample", "row", "representative", "column", "each", "group", "sample", "weight", "approximate", "other", "column", "same", "group", "coherence", "between", "row", "exploit", "reconstruction", "accurate", "when", "symmetric", "matrix", "have", "rank", "except", "sample", "row", "-lsb-", "-rsb-", "rank", "smaller", "than", "d.", "where", "size", "respectively", "column", "orthonormal", "matrix", "compute", "after", "reconstruct", "-lrb-", "-rrb-", "use", "generalize", "nystr?m", "method", "i.e.", "compute", "one", "only", "have", "prepare", "explicit", "kernel", "function", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "rather", "than", "explicitly", "specify", "which", "much", "more", "difficult", "argue", "before", "reduce", "reconstruction", "error", "one", "have", "make", "rank", "-lrb-", "-rrb-", "close", "-lrb-", "-rrb-", "possible", "we", "calibrate", "other", "point", "light", "source", "within", "regular", "grid", "interpolate", "calibration", "result", "neighbor", "point", "light", "source", "grid" ],
  "content" : "The kernel Nystr?m method is effective for modeling scenes with complex lighting effects and occlusions which have been challenging for existing techniques. where T is the m ? n light transport matrix that describes the light transport from n light sources to m camera pixels, l is the illumination condition represented by a vector of incident radiance from n ? email: {jiapw,xtong,zhoulin,bainguo}@microsoft.com light sources, and b is the outgoing radiance observed in a camera image with m pixels. However, to generate high quality results, the existing techniques often require tens of thousands of images for accurate reconstruction of the light transport matrix (e.g., see [Debevec et al. 2000; Wenger et al. 2005]). The kernel Nystr?m method refers to the Nystr?m method with the light transport kernel incorporated. The light transport kernel works as follows. The light transport matrix represents discrete samples of the reflectance field [Debevec et al. 2000]. Therefore, most existing methods only consider simplified 4D [Debevec et al. 2000; Lin et al. ; Matusik et al. 2004; Peers and Dutr? 2005] and 6D reflectance fields [Matusik et al. 2002; Masselus et al. 2003; Sen et al. 2005; Wenger et al. 2005]. Light Transport Acquisition. We categorize the existing methods into three classes: brute force, sparsity based, and coherence based methods. Debevec et. al. [2000] developed a light stage device for capturing 4D reflectance fields for a fixed viewpoint and distant lighting by moving a point light source around the object. They later improved the device for fast capturing [Wenger et al. 2005]. Hawkins et. al. [2005] exploited the Helmholtz reciprocity to capture the reflectance field of highly reflective objects. To obtain dense samples in the incident light domain, rows of the light transport matrix are captured by shooting rays from the viewpoint and capturing the high resolution image of the scene projected over the incident light domain. Reciprocity is also exploited in [Sen et al. 2005] for acquiring 6D reflectance fields. The sparsity based methods model the light transport matrix with a set of basis functions defined over the incident light domain and assume that each row of the light transport matrix can be approximated by a linear combination of a sparse set of basis functions. Matusik et. al. [2004] modeled the light transport matrix with hierarchical rectangular basis functions. An adaptive algorithm is developed for deriving the sparse basis and their weights for each pixel from images of the scene captured under various natural illumination conditions. Peers et al. [2005] modeled the light transport matrix with wavelets and inferred the light transport matrix from images of the scene illuminated by carefully designed wavelet noise patterns. Recently a compressive sensing approach [Peers et al. 2009] was proposed which computes the solution for each pixel from images captured from a scene illuminated by patterned lighting. The number of images needed for reconstruction is only proportional to the rank of the light transport matrix and independent on the size of the matrix. Coherence based methods acquire the light transport matrix by exploiting the coherence of reflectance field data. Masselus et. al. [2004] explored the interpolation and compression of reflectance field. Fuchs et. al. [2007] proposed an adaptive sampling scheme for sampling the 4D reflectance field. While these methods only exploit the coherence in either rows or columns, our method exploits the data coherence in the entire light transport matrix for reconstruction. Low Rank Matrix Approximation. In graphics research, An et. al. [2008] applied the Nystr?m method to accelerate appearance edit propagation by approximating the dense symmetric distance matrix with sparsely sampled rows and columns. In their approach, columns of the matrix are clustered in a small number of groups according to their values in the sparsely sampled rows. A representative column for each group is then sampled and weighted for approximating other columns in the same group. Coherence between the rows is not exploited. The reconstruction is accurate when the symmetric matrix T has a rank d ? k, except that the sampled rows [ A C T ] are of a rank smaller than d. where U A , ? A and V T A are of sizes r ? d, d ? d and d ? c, respectively, and the columns of U A and V A are orthonormal: U T A U A = I and V T A V A = I. The matrix A + is then computed as After reconstructing f (T) using the generalized Nystr?m method, i.e., To compute K, one only has to prepare an explicit kernel function g such that g( ? i , ? j ) ? ?( ? i ) ? ?( ? j ), rather than explicitly specifying ?, which is much more difficult. As argued before, to reduce the reconstruction error, one has to make the rank of f (T) as close to that of f (A) as possible. We then calibrate the other point light sources within the regular grid by interpolating the calibration results of the neighbor point light sources on the grid.",
  "resources" : [ ]
}