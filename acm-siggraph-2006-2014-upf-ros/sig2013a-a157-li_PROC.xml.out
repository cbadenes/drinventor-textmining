{
  "uri" : "sig2013a-a157-li_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2013a/a157-li_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "Analyzing Growing Plants from 4D Point Cloud Data",
    "published" : "2013",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Yangyan-Li",
      "name" : "Yangyan",
      "surname" : "Li"
    }, {
      "uri" : "http://drinventor/Xiaochen-Fan",
      "name" : "Xiaochen",
      "surname" : "Fan"
    }, {
      "uri" : "http://drinventor/Niloy J.-Mitra",
      "name" : "Niloy J.",
      "surname" : "Mitra"
    }, {
      "uri" : "http://drinventor/Daniel A.-Chamovitz",
      "name" : "Daniel A.",
      "surname" : "Chamovitz"
    }, {
      "uri" : "http://drinventor/Daniel-Cohen-Or",
      "name" : "Daniel",
      "surname" : "Cohen-Or"
    }, {
      "uri" : "http://drinventor/Baoquan-Chen",
      "name" : "Baoquan",
      "surname" : "Chen"
    } ]
  },
  "bagOfWords" : [ "end", "we", "present", "forward-backward", "analysis", "where", "move", "forward", "time", "we", "identify", "after-affect", "i.e.", "we", "extract", "easier", "detect", "future", "event", "pull", "back", "time", "accurately", "locate", "event", "while", "still", "its", "infancy", "-lrb-", "see", "section", "-rrb-", "we", "show", "necessity", "forward-backward", "process", "its", "effectiveness", "accurately", "locate", "-lrb-", "morphological", "-rrb-", "event", "lead", "novel", "automate", "quantitative", "measurement", "analysis", "study", "plant", "growth", "-lrb-", "see", "Figure", "-rrb-", "we", "validate", "we", "method", "synthetic", "dataset", "successfully", "detect", "growth", "-lrb-", "decay", "-rrb-", "event", "scan", "sequence", "variety", "plant", "species", "-lrb-", "e.g.", "Anthurium", "Dishlia", "etc.", "-rrb-", "often", "acquire", "over", "day", "week", "-lrb-", "section", "-rrb-", "we", "use", "evolve", "organ", "consistently", "segmented", "out", "from", "4d", "point", "cloud", "synthesize", "live", "plant", "model", "both", "growth", "motion", "raw", "output", "3d", "scanner", "suffer", "from", "various", "imperfection", "include", "noise", "miss", "datum", "outlier", "method", "mostly", "factor", "out", "camera", "movement", "consolidate", "scan", "across", "different", "viewpoint", "while", "assume", "scan", "object", "static", "common", "approach", "fit", "pre-defined", "shape", "template", "which", "encode", "topology", "sometimes", "also", "coarse", "geometry", "capture", "shape", "while", "solve", "perframe", "pose", "variation", "-lsb-", "Ahmed", "et", "al.", "2008", "de", "Aguiar", "et", "al.", "2008", "Vlasic", "et", "al.", "2008", "Bradley", "et", "al.", "2008", "Pons-Moll", "et", "al.", "2011", "-rsb-", "when", "successive", "scan", "have", "small", "relative", "deformation", "share", "large", "overlap", "region", "adequate", "feature", "correspondence", "can", "find", "between", "consecutive", "frame", "case", "video", "sequence", "Beeler", "et", "al.", "-lsb-", "2011", "-rsb-", "find", "predefined", "anchor", "frame", "propagate", "information", "both", "forward", "backward", "establish", "frame", "correspondence", "incompressible", "model", "fix", "topology", "specifically", "plant", "evolve", "continuously", "organ", "emerge", "build", "up", "wither", "result", "significant", "change", "shape", "-lrb-", "e.g.", "leaf", "curling", "-rrb-", "volume", "-lrb-", "e.g.", "leaf", "expansion", "bud", "formation", "-rrb-", "topology", "-lrb-", "e.g.", "stem", "bifurcation", "-rrb-", "recently", "Bojsen-Hansen", "et", "al.", "-lsb-", "2012", "-rsb-", "present", "method", "recover", "temporally", "coherent", "deform", "triangle", "mesh", "arbitrarily", "change", "topology", "from", "incoherent", "sequence", "static", "closed", "mesh", "surface", "plant", "modeling", "simulation", "M?ndermann", "et", "al.", "-lsb-", "2005", "-rsb-", "present", "approach", "recover", "descriptive", "developmental", "model", "Arabidopsis", "large", "amount", "measurement", "datum", "from", "sparsely", "time-lapse", "image", "we", "refer", "reader", "comprehensive", "survey", "-lsb-", "Prusinkiewicz", "Runions", "2012", "-rsb-", "method", "approximate", "tree", "natural", "growth", "follow", "botanic", "growth", "model", "allometric", "rule", "event", "detection", "apart", "from", "reconstruction", "time", "lapse", "2d", "image", "3d", "point", "cloud", "contain", "valuable", "datum", "can", "ana", "lyze", "detect", "understand", "particular", "event", "occur", "during", "capture", "time", "Kevin", "et", "al.", "-lsb-", "2012", "-rsb-", "utilize", "conditional", "model", "able", "automatically", "discover", "discriminative", "interesting", "segment", "video", "we", "also", "propose", "forward-backward", "analysis", "accurately", "detect", "track", "event", "which", "often", "subtle", "automatically", "identify", "early", "stage", "thus", "best", "we", "knowledge", "we", "present", "first", "attempt", "focus", "event", "detection", "raw", "point", "cloud", "analyze", "growth", "pattern", "both", "geometry", "change", "topology", "across", "time", "context", "grow", "-lrb-", "decay", "-rrb-", "plant", "each", "setup", "house", "its", "own", "glass", "cage", "shield", "plant", "from", "external", "disturbance", "-lrb-", "e.g.", "wind", "-rrb-", "scanner", "capture", "geometry", "plant", "from", "specific", "view", "while", "turntable", "rotate", "30", "degree", "each", "time", "after", "each", "turn", "setup", "pause", "sec", "plant", "stabilize", "before", "scan", "plant", "each", "view", "camera", "record", "30", "shot", "over", "seconds", "take", "minute", "do", "full", "cycle", "scan", "which", "we", "call", "frame", "denote", "-lrb-", "superscript", "indicate", "time", "instant", "-rrb-", "system", "record", "12", "frame", "per", "hour", "average", "25", "day", "however", "we", "setting", "measurement", "error", "be", "bit", "higher", "since", "we", "provide", "sufficient", "light", "access", "plant", "which", "less", "than", "ideal", "structured", "light", "device", "we", "capture", "massive", "volume", "structured", "light", "image", "we", "find", "turntable", "unstable", "over", "long", "time", "so", "we", "use", "feature", "flowerpot", "together", "turntable", "axis", "refine", "registration", "resultant", "registration", "use", "update", "axis", "turn", "table", "follow", "frame", "-lrb-", "datum", "freely", "available", "academic", "use", "-rrb-", "more", "advanced", "3d", "acquisition", "-lrb-", "e.g.", "Coplanar", "Shadowgrams", "-lsb-", "Yamazaki", "et", "al.", "2007", "Yamazaki", "et", "al.", "2009", "-rsb-", "-rrb-", "specifically", "design", "long", "time", "scanning", "can", "alternately", "use", "stage", "particular", "we", "interested", "segment", "plant", "track", "growth", "its", "organ", "e.g.", "stem", "leave", "identify", "event", "vegetative", "bud", "leaf", "bifurcation", "stem", "unlike", "typical", "acquisition", "setting", "where", "challenge", "arise", "from", "move", "camera", "articulate", "deformable", "body", "movement", "occluded", "part", "we", "problem", "different", "we", "have", "account", "emerge", "object", "part", "since", "we", "key", "focus", "detect", "growth", "event", "i.e.", "locate", "they", "both", "space", "time", "growth", "event", "leave", "noticeable", "trace", "near", "future", "bifurcate", "stem", "grown", "bud", "both", "organ", "relatively", "easy", "detect", "few", "frame", "after", "actual", "event", "analyze", "point", "cloud", "use", "local", "discriminate", "feature", "particular", "curvature", "help", "discriminate", "between", "leaf", "stem", "while", "local", "orientation", "help", "discriminate", "different", "branch", "stem", "around", "bifurcation", "point", "since", "grow", "part", "gradually", "evolve", "over", "time", "feature", "difference", "more", "prominent", "when", "measure", "respect", "local", "reference", "value", "observe", "nearby", "frame", "instead", "respect", "absolute", "value", "hence", "classification", "parameter", "better", "derive", "directly", "from", "local", "datum", "rather", "than", "be", "hard-coded", "beginning", "imply", "reference", "value", "must", "retrieve", "from", "future", "where", "reference", "value", "exit", "organ", "which", "we", "search", "its", "budding", "reference", "value", "exist", "past", "again", "suggest", "we", "can", "only", "go", "forward", "future", "have", "effective", "reference", "value", "analyze", "datum", "before", "step", "back", "time", "Figure", "illustrate", "vertical", "slab", "over", "which", "brand", "new", "slab", "emerge", "two", "adjacent", "slab", "grow", "vertically", "horizontal", "axis", "denote", "time", "slab", "color", "feature", "value", "after", "some", "time", "feature", "clearly", "indicate", "existence", "two", "slab", "while", "left", "end", "say", "when", "new", "upper", "slab", "bud", "feature", "quite", "alike", "very", "difficult", "discriminate", "however", "feature", "associate", "two", "slab", "frame", "know", "can", "use", "local", "reference", "define", "effective", "relative", "feature", "allow", "discriminate", "between", "two", "slab", "thus", "once", "we", "detect", "clear", "split", "between", "two", "slab", "say", "frame", "we", "define", "two", "local", "reference", "value", "trace", "from", "right", "left", "-lrb-", "i.e.", "backwards", "time", "-rrb-", "until", "one", "slab", "vanish", "??", "new", "slab", "event", "detect", "??", "+1", "one", "advantage", "we", "forward", "backward", "approach", "can", "apply", "on-the-fly", "during", "acquisition", "datum", "while", "hardware", "capture", "+1", "algorithm", "have", "enough", "time", "analyze", "from", "frame", "need", "trace", "backwards", "detect", "event", "short", "past", "detect", "event", "count", "organ", "number", "growth", "event", "qualitative", "change", "result", "increase", "decrease", "organ", "number", "between", "neighbor", "frame", "e.g.", "bud", "bifurcation", "event", "increase", "leaf", "stem", "number", "while", "decay", "event", "decrease", "they", "critical", "event", "detection", "leaf", "number", "stem", "number", "each", "frame", "can", "compute", "decompose", "point", "cloud", "each", "frame", "individual", "organ", "we", "check", "organ", "number", "between", "adjacent", "frame", "detect", "growth", "event", "solve", "organ", "decomposition", "labeling", "problem", "we", "compute", "organ", "number", "each", "frame", "first", "generate", "organ", "hypothesis", "one", "frame", "organ", "number", "less", "than", "real", "one", "validate", "hypothesis", "thus", "narrow", "hypothesis", "number", "down", "real", "one", "organ", "hypothesis", "each", "frame", "generate", "analyze", "geometry", "frame", "well", "reference", "adjacent", "frame", "we", "map", "point", "organ", "minimize", "suitable", "energy", "function", "organ", "without", "any", "assign", "point", "indicate", "false", "positive", "hence", "remove", "specifically", "-lcb-", "-rcb-", "frame", "we", "l-th", "maintain", "leaf", "where", "active", "organ", "denote", "s-th", "hypothesis", "stem", "leaf", "respectively", "stem", "category", "-lcb-", "give", "-rcb-", "output", "point", "while", "both", "minimize", "organ", "we", "category", "would", "suitable", "-lrb-", "like", "energy", "-rrb-", "find", "function", "label", "index", "-lrb-", "map", "label", "-rrb-", "organ", "should", "belong", "two-stage", "labeling", "thus", "first", "stage", "classify", "find", "binary", "point", "cloud", "labeling", "leaf", "point", "map", "stem", "-lcb-", "-rcb-", "point", "second", "stage", "consist", "two", "multi-labeling", "further", "stem", "-lcb-", "decomposing", "-rcb-", "respectively", "individual", "leaf", "-lcb-", "-rcb-", "both", "binary", "multiple", "labeling", "stage", "both", "forward", "backward", "analysis", "make", "use", "information", "from", "adjacent", "frame", "generate", "validate", "active", "organ", "hypothesis", "multiple", "labeling", "stage", "label", "even", "number", "they", "unknown", "organ", "information", "from", "adjacent", "frame", "especially", "useful", "multiple", "labeling", "stage", "automatically", "gener", "eat", "target", "label", "point", "current", "frame", "map", "while", "analysis", "-rrb-", "depend", "processing", "+1", "-lrb-", "forward/backward", "backward", "we", "next", "discuss", "analysis", "-rrb-", "direction", "two", "stage", "take", "-lrb-", "detail", "reference", "forward", "we", "find", "binary", "labeling", "map", "two", "known", "label", "leaf", "stem", "category", "respectively", "we", "accordingly", "define", "objective", "energy", "minimize", "labeling", "-lcb-", "-lrb-", "where", "-rrb-", "-rcb-", "be", "-lcb-", "-lrb-", "3d", "Delaunay", "-rrb-", "-rcb-", "triangulation", "neighborhood", "edge", "system", "euclidean", "length", "less", "than", "3mm", "-lrb-", "accord", "error", "range", "we", "setup", "-rrb-", "datum", "term", "-lrb-", "-rrb-", "measure", "cost", "classify", "leaf", "stem", "smoothness", "term", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "measure", "cost", "assign", "label", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "neighbor", "point", "use", "encourage", "spatial", "coherence", "we", "approximately", "solve", "minimization", "via", "Markov", "Random", "Fields", "-lrb-", "MRF", "-rrb-", "formulation", "use", "expansion", "-lsb-", "Boykov", "et", "al.", "2001", "Boykov", "Kolmogorov", "2004", "Kolmogorov", "Zabih", "2004", "-rsb-", "border", "organ", "neighbor", "point", "often", "have", "very", "different", "label", "important", "energy", "function", "do", "over", "penalize", "labeling", "since", "curvature", "estimate", "typically", "high", "around", "organ", "boundary", "we", "define", "smoothness", "term", "where", "-lrb-", "-rrb-", "curvature", "labeling", "function", "apply", "here", "well", "section", "5.2", "smoothness", "term", "penalize", "label", "neighbor", "point", "different", "organ", "less", "near", "organ", "border", "we", "use", "observation", "discriminate", "between", "stem", "mature", "leaf", "hence", "we", "build", "datum", "term", "-lrb-", "-rrb-", "base", "curvature", "value", "smaller", "since", "-lrb-", "one", "-rrb-", "we", "-lsb-", "first", "1/3", "-rsb-", "cap", "very", "larger", "small", "value", "-lrb-", "can", "-rrb-", "several", "-lrb-", "we", "use", "time", "0.015", "-rrb-", "use", "log", "function", "further", "reduce", "non-linearity", "feature", "value", "result", "flatness", "feature", "-lrb-", "-rrb-", "log", "max", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "we", "-lsb-", "define", "-rsb-", "flatness", "log", "-lrb-", "-rrb-", "feature", "each", "log", "-lrb-", "1/3", "-rrb-", "point", "-lrb-", "-rrb-", "we", "-lrb-", "define", "-rrb-", "flatness", "feature", "each", "leaf", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "stem", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "respectively", "we", "define", "distance", "between", "point", "organ", "-lrb-", "-rrb-", "distance", "between", "closest", "point", "organ", "we", "take", "flatness", "feature", "-lrb-", "-rrb-", "closest", "leaf", "flatness", "feature", "-lrb-", "-rrb-", "closest", "stem", "-lrb-", "forward", "analysis", "-rrb-", "+1", "-lrb-", "backward", "analysis", "-rrb-", "reference", "value", "compute", "datum", "cost", "label", "leaf", "stem", "-lrb-", "see", "Figure", "-rrb-", "only", "when", "closest", "leaf", "stem", "miss", "neighbor", "frame", "global", "absolute", "threshold", "use", "pt", "-lrb-", "-rrb-", "max", "-lrb-", "-lrb-", "-rrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "3b", "-rrb-", "where", "-lcb-", "-rcb-", "-lcb-", "-rcb-", "indicator", "whether", "both", "leaf", "stem", "exist", "neighbor", "frame", "relative", "definition", "datum", "term", "adapt", "both", "time", "-lrb-", "neighbor", "frame", "-rrb-", "space", "-lrb-", "closest", "organ", "-rrb-", "thus", "accommodate", "gradual", "evolution", "plant", "part", "forward-backward", "analysis", "-lrb-", "see", "Section", "-rrb-", "adaptive", "reference", "value", "datum", "term", "enable", "accurate", "leaf-stem", "classification", "even", "when", "difference", "subtle", "when", "flatness", "feature", "value", "bias", "while", "forward", "only", "analysis", "global", "absolute", "threshold", "miss", "they", "early", "day", "-lrb-", "see", "Table", "-rrb-", "leaf-stem", "stem", "point", "binary", "classification", "which", "decompose", "further", "decompose", "leaf", "point", "multilabeling", "individual", "organ", "we", "elaborate", "first", "subsection", "leaf", "multi-labeling", "segmentation", "leaf-stem", "binary", "classification", "already", "take", "stem", "point", "away", "from", "leave", "leaf", "point", "without", "support", "stem", "float", "air", "ideally", "connected", "component", "should", "represent", "individual", "leaf", "case", "two", "leave", "touch", "partially", "overlap", "treat", "one", "segmentation", "-lcb-", "we", "+1", "-rcb-", "generate", "-lrb-", "backward", "leaf", "hypothesis", "leave", "analysis", "-rrb-", "detect", "-lcb-", "-lcb-", "-rcb-", "-rcb-", "jointing", "-lcb-", "-lrb-", "-rcb-", "forward", "-lcb-", "potential", "analysis", "-rrb-", "-rcb-", "leaf", "inor", "tuition", "operator", "two", "leaf", "be", "previously", "separate", "correctly", "segmented", "information", "should", "transfer", "current", "frame", "when", "two", "now", "connect", "note", "operator", "may", "put", "some", "false", "positive", "hypothesis", "where", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "neighborhood", "sys", "tem", "instead", "after", "optimization", "may", "empty", "leaf", "which", "false", "positive", "hypothesis", "update", "once", "leaf", "computed/updated", "flatness", "feature", "computed/updated", "accordingly", "update", "value", "use", "adapt", "reference", "feature", "value", "process", "adjacent", "frame", "Figure", "show", "example", "detect", "evolve", "degrade", "organ", "note", "reference", "value", "process", "from", "strong", "growth", "event", "evidence", "subtle", "case", "thus", "evidence", "bifurcation", "bud", "event", "detect", "forward", "analysis", "refine", "backward", "analysis", "information", "from", "future", "decaying", "event", "come", "strong", "evidence", "subtle", "ending", "thus", "can", "robustly", "handle", "forward", "analysis", "-lrb-", "see", "Figure", "-rrb-", "stem", "multi-labeling", "segmentation", "like", "leaf", "segmentation", "part", "stem", "segmentation", "decompose", "stem", "point", "individual", "stem", "-lcb-", "-rcb-", "however", "unlike", "leaf", "largely", "isolate", "leaf-stem", "classification", "stem", "point", "still", "tightly", "connect", "instead", "extract", "connected", "component", "we", "branch", "stem", "point", "potential", "stem", "-lrb-", "c.f.", "-lsb-", "Huang", "et", "al.", "2013", "-rsb-", "-rrb-", "here", "we", "have", "threshold", "trim", "short", "stem", "perform", "similar", "leaf-stem", "classification", "although", "we", "take", "conservative", "decision", "branch", "could", "mistakenly", "trim", "still", "backward", "analysis", "have", "chance", "fix", "finally", "we", "get", "set", "individual", "branch", "-lrb-", "see", "Figure", "-rrb-", "similar", "leaf", "segmentation", "we", "generate", "stem", "hypothesis", "-lcb-", "-rcb-", "-lcb-", "-lcb-", "-rcb-", "-rcb-", "-lcb-", "minimize", "-rcb-", "find", "labeling", "map", "orientation", "feature", "discriminative", "between", "different", "branch", "upon", "which", "datum", "term", "build", "where", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "orientation", "diagonal", "element", "matrix", "from", "local", "pca", "analysis", "-lrb-", "-rrb-", "average", "orientation", "point", "-lrb-", "-rrb-", "large", "penalty", "prevent", "be", "assign", "distant", "stem", "after", "optimization", "stem", "hypothesis", "update", "-lcb-", "-rcb-", "-lcb-", "-lcb-", "-rcb-", "-rcb-", "detection", "new", "organ", "current", "frame", "forward", "analysis", "trigger", "backward", "analysis", "update", "leaf-stem", "classification", "well", "individual", "organ", "segmentation", "previous", "frame", "both", "leaf", "stem", "segmentation", "procedure", "work", "part-level", "generate", "consistent", "segmentation", "across", "frame", "algorithm", "establish", "organ", "correspondence", "between", "frame", "separate", "touching/overlapping", "leaf", "-lrb-", "see", "-lrb-", "see", "figure", "10", "11", "-rrb-", "which", "essential", "track", "individual", "organ", "detect", "new", "event", "we", "have", "capture", "datum", "represent", "development", "several", "plant", "over", "1-5", "week", "all", "plant", "grow", "from", "seed", "some", "move", "acquisition", "cube", "while", "plant", "already", "several", "inch", "tall", "due", "special", "care", "need", "early", "stage", "after", "plant", "remain", "cube", "until", "grow", "out", "sight", "camera", "we", "stop", "acquisition", "we", "use", "three", "grow", "plant", "represent", "different", "species", "study", "-lrb-", "number", "week", "grow", "show", "parenthesis", "-rrb-", "anthurium", "-lrb-", "-rrb-", "figure", "11", "Dishlia", "-lrb-", "-rrb-", "Figure", "10", "dancing", "bean", "-lrb-", "-rrb-", "Figure", "12", "Table", "list", "some", "statistics", "three", "plant", "each", "plant", "represent", "different", "shape", "different", "growth", "dynamics", "Anthurium", "plant", "have", "large", "leaf", "firm", "branch", "Dilisha", "plant", "have", "relatively", "thinner", "branch", "therefore", "leaf", "have", "larger", "motion", "than", "Anthurium", "plant", "dance", "Bean", "plant", "fastest", "grow", "because", "its", "large", "sway", "movement", "we", "refer", "dance", "Bean", "-lrb-", "see", "Figure", "12", "-rrb-", "result", "blur", "even", "indistinguishable", "boundary", "between", "structure", "which", "make", "worse", "noisy", "nature", "input", "scan", "any", "frozen", "moment", "time", "can", "difficult", "discern", "semantically", "meaningful", "plant", "component", "Figure", "11", "show", "frame", "Anthurium", "datum", "where", "one", "leaf", "touch", "another", "leaf", "make", "they", "hard", "distinguish", "from", "each", "other", "however", "several", "frame", "after", "leaf", "grow", "away", "from", "other", "leaf", "move", "open", "space", "leaf-stem", "classification", "frame", "immediately", "identify", "new", "leaf", "event", "forward", "analysis", "trigger", "backward", "analysis", "track", "detect", "leaf", "closer", "its", "budding", "moment", "Figure", "10", "show", "another", "example", "forward", "analysis", "beyond", "detect", "growth", "we", "also", "track", "decay", "-lrb-", "i.e.", "senescence", "-rrb-", "leaf", "when", "fold", "wither", "away", "figure", "show", "decaying", "leaf", "Dishlia", "plant", "note", "geometric", "shape", "same", "plant", "component", "can", "significantly", "different", "temporal", "coherence", "help", "resolve", "ambiguity", "Figure", "depict", "more", "event", "detect", "Dishlia", "plant", "growth", "include", "bud", "bifurcation", "leaf", "decay", "plant", "grow", "fast", "exhibit", "large", "sway", "motion", "during", "its", "development", "day", "show", "blur", "effect", "result", "from", "dynamics", "within", "single", "frame", "scanning", "-lrb-", "minute", "-rrb-", "blurry", "point", "still", "correctly", "classify", "even", "though", "exhibit", "quite", "different", "geometric", "feature", "day", "individual", "plant", "touch", "intertwine", "due", "large", "amount", "motion", "we", "algorithm", "successfully", "handle", "all", "scenario", "use", "spatial", "temporal", "coherence", "we", "method", "rely", "temporal", "coherence", "could", "sensitive", "plant", "demonstrate", "fast", "large", "scale", "motion", "figure", "12", "show", "three", "frame", "dance", "Bean", "plant", "where", "stem", "swing", "large", "amount", "-lrb-", "see", "accompany", "video", "-rrb-", "large", "scale", "motion", "make", "geometric", "correspondence", "difficult", "maintain", "note", "also", "blur", "point", "cloud", "due", "movement", "within", "scanning", "one", "single", "frame", "Branch", "extraction", "help", "datum", "consolidation", "together", "feature", "analysis", "ensure", "building", "component", "correspondence", "between", "adjacent", "frame", "plant", "different", "development", "stage", "may", "have", "very", "different", "shape", "while", "flatness", "feature", "work", "well", "plant", "have", "big", "leaf", "thin", "stem", "do", "work", "well", "soybean", "just", "break", "through", "soil", "case", "we", "simply", "change", "flatness", "feature", "another", "thickness", "feature", "-lrb-", "radius", "local", "point", "-rrb-", "we", "dynamically", "threshold", "forward-backward", "analysis", "Limitations", "we", "investigate", "plant", "grow", "indoors", "controlled", "glass-walled", "cubic", "space", "ensure", "minimal", "external", "environmental", "disturbance", "-lrb-", "e.g.", "wind", "-rrb-", "human", "intervention", "-lrb-", "e.g.", "trim", "-rrb-", "plant", "grow", "open", "space", "can", "get", "more", "bushy", "leafy", "make", "tracking", "individual", "leaf", "almost", "impossible", "instead", "interest", "would", "tracking", "major", "event", "large", "branch", "mass", "statistics", "would", "also", "help", "adapt", "parameter", "we", "algorithm", "example", "flatness", "orientation", "feature", "use", "algorithm", "can", "vary", "statistically", "from", "species", "species", "also", "different", "stage", "development", "species", "while", "we", "leverage", "temporal", "coherence", "have", "fairly", "short", "memory", "due", "its", "greedy", "nature", "i.e.", "part", "correspondence", "lose", "too", "long", "re-tracked", "can", "happen", "example", "when", "leaf", "grow", "surround", "leaf", "branch", "grow", "out", "only", "after", "long", "while", "one", "solution", "can", "conduct", "backward", "search", "large", "step", "employ", "global", "optimization", "when", "match", "structure", "two", "time", "frame", "we", "forward-backward", "analysis", "adaptive", "reference", "value", "accommodate", "characteristic", "gradually", "evolve", "point", "feature", "grow", "plant", "demonstrate", "effective", "robust", "segmentation", "plant", "organ", "example", "Figure", "11", "new", "leaf", "bud", "even", "before", "moment", "we", "detect", "extremely", "curvy", "shape", "thus", "have", "feature", "similar", "stem", "prior", "grow", "organ", "gradually", "evolve", "volume", "can", "incorporate", "address", "issue", "i.e.", "add", "constraint", "volume", "each", "organ", "should", "change", "smoothly", "we", "demonstrate", "two", "application", "4d", "datum", "information", "extract", "from", "they", "plant", "animation", "simulation", "both", "which", "very", "hard", "tedious", "model", "hand", "synthesize", "live", "plant", "capture", "growth", "sequence", "we", "algorithm", "consistently", "segment", "4d", "point", "cloud", "individual", "organ", "where", "growth", "motion", "each", "organ", "can", "extract", "well", "relative", "bifurcation", "position", "time", "information", "can", "use", "synthesize", "live", "plant", "similar", "species", "give", "static", "plant", "model", "proper", "correspondence", "organ", "extract", "from", "4d", "point", "cloud", "datum", "initial", "state", "can", "bring", "life", "synthesize", "from", "real", "growth", "sequence", "-lrb-", "see", "Figure", "accompany", "video", "-rrb-", "analogous", "motion", "transfer", "widely", "use", "human", "body", "however", "here", "only", "motion", "captured/transferred", "also", "growth", "organ", "segmentation", "simulation", "proper", "segmentation", "hierarchical", "organization", "plant", "organ", "critical", "simulation", "-lrb-", "cf.", "-lsb-", "Zhao", "Barbi", "2013", "-rsb-", "-rrb-", "since", "most", "plant", "model", "build", "render", "purpose", "only", "additional", "effort", "have", "apply", "author", "model", "simulation-ready", "we", "algorithm", "output", "consistent", "segmentation", "4d", "point", "cloud", "resolve", "even", "organ", "touching", "overlap", "case", "segmentation", "information", "point", "cloud", "transfer", "reconstructed", "mesh", "model", "make", "segmented", "hierarchically", "organize", "thus", "simulation", "ready", "-lrb-", "see", "Figure", "13", "accompany", "video", "-rrb-", "other", "hand", "valuable", "property", "can", "extract", "from", "4d", "datum", "feed", "plant", "simulator", "example", "Figure", "14", "stiffness", "value", "stem", "set", "function", "age", "which", "directly", "compute", "we", "algorithm", "age", "base", "stiffness", "value", "help", "produce", "simulation", "conform", "better", "its", "observe", "motion", "reality", "-lrb-", "see", "accompany", "video", "-rrb-", "we", "present", "first", "attempt", "capture", "develop", "plant", "analyze", "its", "evolve", "part", "over", "time", "only", "require", "elaborate", "setup", "datum", "acquisition", "also", "challenge", "exist", "stateof-the-art", "method", "4d", "shape", "analysis", "core", "we", "approach", "build", "two", "premise", "-lrb-", "-rrb-", "temporal", "coherence", "inherent", "plant", "growth", "-lrb-", "ii", "-rrb-", "increase", "discernibility", "individual", "plant", "structure", "over", "time", "we", "demonstrate", "we", "method", "analyze", "4d", "point", "cloud", "grow", "plant", "record", "over", "day", "some", "case", "week", "beyond", "challenge", "datum", "acquisition", "we", "expect", "significant", "problem", "arise", "due", "occlusion", "limited", "accessibility", "large", "scale", "plant", "movement", "-lrb-", "e.g.", "due", "wind", "-rrb-", "outlier", "object", "-lrb-", "e.g.", "bird", "surround", "tree", "-rrb-", "addition", "detect", "plant", "growth", "although", "color", "image", "inherently", "2d", "sensitive", "change", "lighting", "condition", "can", "nevertheless", "provide", "additional", "hint", "when", "point", "cloud", "datum", "severely", "degrade", "along", "direction", "we", "also", "explore", "coupling", "additional", "physical", "sensor", "we", "grateful", "Zhan", "song", "Xufang", "Pang", "Xiaoting", "Zhang", "help", "build", "structured", "light", "scanning", "system", "Jernej", "Barbi", "Yili", "Zhao", "run", "plant", "simulator", "we", "datum", "Sujuan", "Tan", "take", "care", "plant", "Amit", "Shesh", "Nathan", "Gossett", "proofread", "paper", "we", "would", "like", "thank", "all", "reviewer", "valuable", "comment", "work", "support", "part", "grant", "from", "nsfc", "-lrb-", "61202221", "61232011", "61161160567", "-rrb-", "National", "863", "program", "-lrb-", "2013aa01a604", "-rrb-", "Guangdong", "Science", "Technology", "Program", "-lrb-", "2011B050200007", "-rrb-", "Shenzhen", "Innovation", "Program", "-lrb-", "CXB201104220029A", "zd201111080115a", "kc2012jsjs0019a", "kqcx20120807104901791", "jcyj20120617114842361", "-rrb-", "israeli", "science", "foundation", "Marie", "Curie", "CIG", "ERC", "start", "Grant", "SmartGeometry" ],
  "content" : "To that end, we present a forward-backward analysis, where moving forward in time we identify the ?after-affect?, i.e., we extract an easier to detect future event and pull it back in time to accurately locate the event while still in its infancy (see Sections 4 and 5). We show the necessity of this forward-backward process, and its effectiveness in accurately locating (morphological) events leading to novel automated quantitative measurement and analysis for studying plant growth (see Figure 2 ). We validated our method on synthetic datasets and successfully detected growth (and decay) events in scan sequences of a variety of plant species (e.g., Anthurium, Dishlia, etc.) often acquired over a period of days and weeks (Section 6). We use the evolving organs consistently segmented out from the 4D point cloud to synthesize live plant models with both growth and motion. Raw output of 3D scanners suffers from various imperfections including noise, missing data, and outliers. Such methods mostly factor out camera movements and consolidate the scans across different viewpoints while assuming the scanned object to be static. A common approach is to fit pre-defined shape templates, which encode the topology and sometimes also the coarse geometry of the captured shape, while solving for perframe pose variations [Ahmed et al. 2008; de Aguiar et al. 2008; Vlasic et al. 2008; Bradley et al. 2008; Pons-Moll et al. 2011]. When successive scans have small relative deformation and share large overlapping regions, adequate feature correspondences can be found between consecutive frames. In the case of video sequences, Beeler et al. [2011] find predefined anchor frames and propagate the information both forward and backward to establish frame correspondence. Incompressible models and fixed topology. Specifically, plants evolve continuously as organs emerge, build up and wither, resulting in significant changes in shape (e.g., leaf curling), volume (e.g., leaf expansion and bud formation), and topology (e.g., stem bifurcation). Recently, Bojsen-Hansen et al. [2012] presented a method to recover a temporally coherent, deforming triangle mesh with arbitrarily changing topology from an incoherent sequence of static closed mesh surfaces. Plant modeling and simulation. M?ndermann et al. [2005] presented an approach to recover a descriptive developmental model for Arabidopsis with a large amount of measurement data from sparsely time-lapse images. We refer the reader to the comprehensive survey of [Prusinkiewicz and Runions 2012]. The methods approximate trees? natural growth following botanic growth models and allometric rules. Event detection. Apart from reconstruction, time lapse of 2D images or 3D point clouds contain valuable data that can be ana- lyzed to detect and understand particular events that occurred during the captured time periods. Kevin et al. [2012] utilize a conditional model that is able to automatically discover discriminative and interesting segments of video. We also propose a forward-backward analysis but for accurately detecting and tracking events, which are often subtle to automatically identify in their early stages. Thus, to the best of our knowledge, we present the first attempt focusing on event detection in raw point clouds, and analyzing growth patterns, both in geometry and changing topology across time, in the context of growing (and decaying) plants. Each setup is housed in its own glass cage to shield the plants from external disturbances (e.g., wind). The scanner captures the geometry of the plant from a specific view, while the turntable rotates by 30 degrees each time. After each turn, the setup pauses for 5 sec for the plant to stabilize before scanning the plant. In each view, the camera records 30 shots over 3 seconds. It takes 5 minutes to do a full cycle scan, which we call a frame and denote by F t (the superscript t indicates the time instant). The system records 12 frames per hour for an average of 25 days. However, in our setting, measurement errors were a bit higher since we provide sufficient light access to the plants, which is less than ideal for the structured light device. We captured massive volumes of structured light images. We found the turntable to be unstable over a long time period, so we use the features on the flowerpots together with the turntable axis to refine the registration. The resultant registration is used to update the axis of the turn table for the following frames (data freely available for academic use). More advanced 3D acquisition (e.g., Coplanar Shadowgrams [Yamazaki et al. 2007; Yamazaki et al. 2009]) specifically designed for long time scanning can alternately be used in this stage. In particular, we are interested in segmenting the plant, tracking the growth  of its organs, e.g., stems and leaves, and identifying events such as vegetative budding of a leaf, or bifurcation of a stem. Unlike typical acquisition settings where the challenges arise from moving camera, articulated, or deformable body movements, or occluded parts, our problem is different. We have to account for emerging object parts since our key focus is to detect such growth events, i.e., locate them both in space and time. Growth events leave noticeable traces in the near future as the bifurcated stem or the grown bud. Both of these organs are relatively easy to detect in a few frames after the actual event by analyzing the point cloud using local discriminating features. In particular, curvature helps discriminate between leaves and stems; while local orientation helps discriminate different branches of the stem around bifurcation points. Since growing parts gradually evolve over time, feature differences are more prominent when measured with respect to a local reference value observed in nearby frames, instead of with respect to absolute values. Hence, the classification parameters are better derived directly from the local data, rather than being hard-coded at the beginning. This implies that the reference value must be retrieved from the future, where the reference value exits for the organ for which we search its budding, and no reference values exist in the past. This again suggests that we can only go forward to the future to have an effective reference value to analyze the data, before stepping back in time. Figure 5 illustrates a vertical slab over which a brand new slab emerges. The two adjacent slabs grow vertically with the horizontal axis denoting time. The slabs are colored by their feature values. After some time their features clearly indicate the existence of two slabs, while on the left end, say in F 0 , or in F 1 , when the new upper slab is budding, their features are quite alike and very difficult to discriminate. However, if the features associated with the two slabs in frame F 1 are known, they can be used as local references for defining effective relative features, allowing discriminating between the two slabs in F 0 . Thus, once we detect a clear split between the two slabs, say in frame F t , we define the two local reference values, and trace from right to left (i.e., backwards in time), until one slab vanishes at F t?? . Then the new slab event is detected at F t??+1 . One of the advantages of our forward and backward approach is that it can be applied on-the-fly during the acquisition of the data. While the hardware captures F t+1 , the algorithm has enough time to analyze from frame F t , and if needed, tracing backwards to detect the event in the short past. Detecting events by counting organ number. Growth events are qualitative changes resulting in the increase or decrease of organ number between neighboring frames, e.g., budding and bifurcation events increase leaf and stem numbers, while decay events decrease them. Critical to event detection are the leaf number and stem number in each frame, and can be compute by decomposing point cloud of each frame into individual organs. We then check the organ numbers between adjacent frames to detect growth events. Solving organ decomposition as a labeling problem. We compute the organ number of each frame by first generating a organ hypothesis of one frame, with organ number no less than the real one, then validating the hypothesis and thus narrowing the hypothesis number down to the real one. The organ hypothesis of each frame is generated by analyzing the geometry of that frame, as well as referencing to the adjacent frames. We then map the points to the organs by minimizing suitable energy functions. Organs without any assigned points indicate false positives, and hence are removed. Specifically, {S with s t } L for t l as frame the we l-th F maintain t , leaf where and an L S active and s t as S the organ denote s-th hypothesis stem, leaf and respectively. stem H t categories, := {L Given l t }? outputs to a point H t , while p both t ? P the minimizing t in organ F t , we category a would suitable (L like or energy to S) find and function. a labeling the index Such that (l t maps or labeling s t ) P of t the organ p t should belong to. Two-stage labeling. The thus first stage classifies finds the a binary point cloud labeling into f B leaf that points maps L P t t and to stem {L, S} points and S t ; the second stage consists of two multi-labelings f L and f S , further stems {S decomposing s t }, respectively. L t and S t into individual leaves {L l t } and Both the binary and multiple labeling stages in both forward and backward analysis make use of information from adjacent frames to generate and validate the active organ hypothesis H t . In the multiple labeling stage, the labels, and even the number of them, are unknown. The organ information from adjacent frames is especially useful for the multiple labeling stage to automatically gener- ate the target labels for the the points of current frame to be mapped while analysis) to. Depending processing or H t+1 on F the (in t . forward/backward backward We next discuss analysis) the direction, will two be stages taken H t?1 in as (in detail. reference forward We find a binary labeling B that maps to two known labels L and S for leaf and stem category, respectively. We accordingly define the objective energy to be minimized by the labeling as: {(p where t , q t N )} P t being := {(p 3D t Delaunay , q t )} is a triangulation neighborhood edges system with on Euclidean P t with lengths less than 3mm (according to the error range of our setup). The data term D p t f B (p t ) measures the cost of classifying p t as leaf or stem. The smoothness term V f B (p t ), f B (q t ) measures the cost of assigning the labels f B (p t ), f B (q t ) to the neighboring points p t , q t and is used to encourage spatial coherence. We approximately solve the minimization via an Markov Random Fields (MRF) formulation using ?-expansion [Boykov et al. 2001; Boykov and Kolmogorov 2004; Kolmogorov and Zabih 2004]. At the borders of organs, neighboring points often have very different labels and it is important that the energy function do not over penalize such labeling. Since curvature estimates are typically high around organ boundaries, we define the smoothness term as: where C(p t ) is the curvature of p t , and the labeling function f applies for f B here, as well as f L and f S in Section 5.2. The smoothness term penalizes labeling neighboring points to different organs, but less near organ borders. We use this observation to discriminate between stems and mature leaves. Hence, we build the data term D p t f B (p t ) based on the curvature values. smaller Since C(p ones, t ) we ? [0, first 1/3], cap very larger small values C(p can t ) to be c several (we use times 0.015), the and then use a log function to further reduce the non-linearity of the feature values, resulting in flatness feature R(p t ) := log max(C(p t ), c ) . We [ L , define S ]. With L := the flatness log(c ) feature and S of := each log(1/3), point R(p and t ), we R(p define t ) ? flatness feature of each leaf R(L l t ) := p t ?L t l R(p t )/|L t l | and stem R(S s t ) := p t ?S s t R(p t )/|S s t |, respectively. We define the distance between a point p and an organ O, d(p, O), as the distance between p and the closest point in organ O. We take the flatness feature R(L l? t?1 ) of the closest leaf L t?1 l? and flatness feature R(S s? t?1 ) of the closest stem S s? t?1 in F t?1 (in forward analysis) or F t+1 (in backward analysis) as the reference value for computing the data cost of labeling p t to leaf or stem (see Figure 6 ), and only when the closest leaf or stem is missing in the neighboring frames, global absolute threshold L and S are used: D pt (S) := max S ? R(S R(p s? t t?1 ) ) ? R(p t ), 0 if if ? ? > = 0 0 , (3b) where ? := |{L l t?1 }| ? |{S s t?1 }| is an indicator of whether there are both leaf and stem existing in the neighboring frame. The relative definition of the data term adapts both in time (neighboring frame) and space (closest organ), and thus accommodates for gradual evolution of plant parts. The forward-backward analysis (see Section 4) with the adaptive reference values in the data term enables accurate leaf-stem classification even when the differences are subtle or when the flatness feature values are biased, while forward only analysis with global absolute threshold misses them in their early days (see Table 1 ). The L t and leaf-stem stem points binary S classification t , which are decomposes further decomposed P t into leaf by points multilabelings f L and f S into individual organs. We elaborate first f L and then f S in this subsection. Leaf multi-labeling segmentation. The leaf-stem binary classification already takes the stem points S t away from P t , leaving the leaf points, without the support of stems, floating in the air. Ideally, the connected components in L t should represent individual leaves. But in cases that two leaves touch or partially overlap, they will be treated as one segmentation. F {L We t+1 l t } generate (in in F backward t with leaf hypothesis leaves analysis): detected {? {? t l } l t in } by F ? jointing t?1 {L (in l t } forward the {L potential t?1 l analysis) }. The leaves inor tuition of the operator is that if two leaves were previously separated and correctly segmented, this information should be transferred to the current frame when the two are now connected. Note that the operator may put some false positives in the hypothesis. where D p t f L (p t ) := d p t , f L (p t ) , and the neighborhood sys-\n          tem is on L t , instead of P t . After the optimization, there may be empty leaves, which are the false positives in the hypothesis. to update Once the leaves of F t are computed/updated, their flatness features are computed/updated accordingly. The updated values are used for adapting reference feature values in the process of the adjacent frames. Figure 6 shows an example for detecting evolving or degrading organs. Note that the reference values are processed from strong growth event evidences to subtle cases, thus the evidences of bifurcation or budding events are detected in the forward analysis and then refined in the backward analysis with the information from future. The decaying events come with strong evidences with subtle endings, thus can be robustly handled in the forward analysis (see Figure 7 ). Stem multi-labeling segmentation. Like that in the leaf segmentation part, the stem segmentation decomposes stem points S t into individual stems {S s t }. However, unlike leaves that are largely isolated by the leaf-stem classification, the stems points are still tightly connected. Instead of extracting connected components, we branch the stem points into potential stems (c.f. , [Huang et al. 2013]). Here we have a threshold for trimming the short stems, but it performs similar as L and S for leaf-stem classification: although we take a conservative decision, branches could be mistakenly trimmed, still, the backward analysis will have a chance to fix this. Finally, we get a set of individual branches (see Figure 8 ). Similar to leaf segmentation, we generate stem hypothesis by p {? t ? s t } S ? t to {S {? s t } t s } by {S minimizing: s t?1 }, and then find the labeling f S that maps The orientation feature are discriminative between different branches, upon which the data term is built: where O(p t ) := (x, y, z) is the orientation of p t , with x, y, z the diagonal element of the matrix from the local PCA analysis, O f S (p t ) is the average orientation of points in f S (p t ), and ? is a large penalty that prevents p t being assigned to a distant stem. After the optimization, the stem hypothesis is updated: {S s t } ? {S x ? {? s t } : S x = ?}. Detection of new organs in the current frame of the forward analysis, triggers the backward analysis to update the leaf-stem classification, as well as individual organ segmentation of previous frames. Both the leaf and stem segmentation procedures work at a part-level and generate consistent segmentation across frames. The algorithm establishes organ correspondences between frames and separating touching/overlapping leaves (see (see Figures 10 and 11), which is essential for tracking individual organs and detecting new events. We have captured data representing the development of several plants over a period of 1-5 weeks. All the plants grow from seeds, but some are moved into the acquisition cube while the plant was already several inches tall, due to the special care needed at the early stage. After that, the plants remain in the cube until they grow out of sight of the camera, and we stopped the acquisition. We used three growing plants representing different species in this study (the number of weeks grown for are shown in parentheses): an Anthurium (3)-in Figures 11 and 9, a Dishlia (5)-in Figure 1 , 10, and 7, and a dancing bean (1)-in Figure 12 . Table 1 lists some statistics of these three plants. Each plant represents different shapes and different growth dynamics: the Anthurium plant has large leaves with firm branches; the Dilisha plant has relatively thinner branches, therefore, leaves have larger motion than the Anthurium plant; the Dancing Bean plant is the fastest growing, and because of its large swaying movements we refer to it as the ?Dancing Bean? (see Figure 12 ). This results in blurred or even indistinguishable boundaries between structures, which is made worse by the noisy nature of the input scans. At any frozen moment of time, it can be difficult to discern semantically meaningful plant components. Figure 11 shows a frame of the Anthurium data, where one leaf touches another leaf making them hard to distinguish from each other. However, several frames after, that leaf grows away from the other leaf and moves to open space. The leaf-stem classification for this frame immediately identifies the new leaf. This event in the forward analysis, triggers the backward analysis to track and detect the leaf closer to its budding moment. Figure 10 shows another example of forward analysis. Beyond detecting growth, we also track decay (i.e., senescence) of leaves, when they fold or wither away. Figures 7 shows a decaying leaf of the Dishlia plant. Note that the geometric shapes of the same plant component can be significantly different. The temporal coherence helps to resolve the ambiguity. Figure 1 depicts more events detected in the Dishlia plant growth including budding, bifurcation, and leaf decay. The plant grows fast and exhibits large swaying motion during its development. Day 2 shows the blurring effect resulted from the dynamics within a single frame of the scanning period (minutes). These ?blurry? points are still correctly classified even though they exhibit quite different geometric features. On Day 3 that individual plants touch and intertwine, due to the large amount of motion. Our algorithm successfully handling all these scenarios using spatial and temporal coherence. As our method relies on temporal coherence, it could be sensitive if the plant demonstrates fast and large scale motion. Figures 12 shows three frames of the Dancing Bean plant where the stems swing by large amount (see accompanying video). The large scale motion makes geometric correspondence difficult to maintain. Note also the ?blur? of point cloud due to movements within the scanning period of one single frame. Branch extraction helps in data consolidation and together with the feature analysis, ensures building component correspondence between adjacent frames. Plants at different development stages may have very different shapes. While the flatness feature works well with plants that have big leaves and thin stems, it does not work well with the soybeans that just break through the soil. In this case, we simply change the flatness feature into another thickness feature (radius of local points) in our dynamically thresholded forward-backward analysis. Limitations. We investigated plants growing indoors in controlled glass-walled cubic space to ensure minimal external environmental disturbance (e.g., wind) and human interventions (e.g., trimming). Plants growing in open spaces can get more bushy and leafy, making the tracking of individual leaves almost impossible. Instead, the interest there would be tracking of major events, such as large branching and mass statistics. This would also help adapt parameters for our algorithm; for example, the flatness and orientation features, as used in the algorithm, can vary statistically from species to species, also at different stages development of a species. While we leverage temporal coherence, it has a fairly ?short memory? due to its greedy nature, i.e., if part correspondence is lost for too long, it will not be re-tracked. This can happen, for example, when a leaf grows into surrounding leaves and branches, and grows out only after a long while. One solution can be to conduct backward search in large steps and employ global optimization when matching the structures of two time frames. Our forward-backward analysis with adaptive reference values accommodates the characteristics of gradually evolving point features of growing plants, and is demonstrated to be effective for robust segmentation of plant organs. For example in Figure 11 , the new leaf buds even before the moment we detect it with an extremely curvy shape and thus has features similar to stems. The prior that growing organs gradually evolve in volume can be incorporated to address this issue, i.e., by adding the constraint that the volume of each organ should change smoothly. We demonstrate two applications with the 4D data and the information extracted from them: plant animation and simulation, both of which are very hard and tedious to be modelled by hand. Synthesizing live plants with captured growth sequence. Our algorithm consistently segments 4D point cloud into individual organs, where the growth and motion of each organ can be extracted, as well as the relative bifurcation positions and times. Such information can be used to synthesize a live plant of similar species. Given a static plant model with proper correspondences to the organs extracted from the 4D point cloud data as the initial state, it can be brought to life by, or synthesized from, a real growth sequence (see Figure 1 and accompanying video). This is analogous to motion transfer widely used for human body, however, here not only the motion is captured/transferred, but also the growth. Organ segmentation for simulation. Proper segmentation and hierarchical organization of the plant organs are critical for simulation (cf. [Zhao and Barbi c 2013]). Since most plant models are built for rendering purpose only, additional effort has to be applied to author such models to be simulation-ready. Our algorithm outputs consistent segmentation of the 4D point cloud, resolves even organ touching or overlapping cases. The segmentation information in the point cloud is transfered to the reconstructed mesh model, making it segmented and hierarchically organized, and thus simulation ready (see Figure 13 and accompanying video). On the other hand, valuable properties can be extracted from the 4D data, and fed into plant simulators. For example, in Figure 14 , the stiffness values of the stems are set as a function of their ages which are directly computed by our algorithm. The age based stiffness values help produce simulations that conform better to its observed motion in reality (see accompanying video). We presented a first attempt at capturing a developing plant and analyzing its evolving parts over time. This not only requires an elaborate setup for data acquisition, but also challenges existing stateof-the-art methods for 4D shape analysis. The core of our approach is built on two premises: (i) temporal coherence inherent to plant growth, and (ii) increased discernibility of individual plant structures over a period of time. We demonstrated our method by analyzing 4D point clouds of growing plants, recorded over days and in some cases weeks. Beyond the challenges of data acquisition, we expect significant problems arising due to occlusion, limited accessibility, large scale plant movements (e.g., due to wind), outlier objects (e.g., birds, surrounding trees) in addition to detecting plant growth. Although color images are inherently 2D and are sensitive to change of lighting condition, they can nevertheless provide additional hints when point cloud data is severely degraded. Along this direction, we will also explore coupling additional physical sensors. We are grateful to Zhan Song, Xufang Pang and Xiaoting Zhang for helping build the structured light scanning system, Jernej Barbi c and Yili Zhao for running their plant simulator on our data, Sujuan Tan for taking care of the plants, Amit Shesh and Nathan Gossett for proofreading the paper. We would like to thank all the reviewers for their valuable comments. This work is supported in part by grants from NSFC (61202221, 61232011, 61161160567), National 863 Program (2013AA01A604), Guangdong Science and Technology Program (2011B050200007), Shenzhen Innovation Program (CXB201104220029A, ZD201111080115A, KC2012JSJS0019A, KQCX20120807104901791, JCYJ20120617114842361), Israeli science foundation, Marie Curie CIG, and ERC Starting Grant\n        SmartGeometry.",
  "resources" : [ ]
}