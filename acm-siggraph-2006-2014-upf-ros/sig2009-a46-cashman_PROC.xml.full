{
  "uri" : "sig2009-a46-cashman_PROC.xml",
  "url" : "/Users/cbadenes/Documents/OEG/Projects/DrInventor/datasets/acm-siggraph-2006-2014-upf/sig2009/a46-cashman_PROC.xml",
  "source" : {
    "name" : "SIGGRAPH",
    "uri" : "http://drinventor/SIGGRAPH",
    "url" : "http://drinventor/SIGGRAPH",
    "protocol" : "http"
  },
  "metainformation" : {
    "title" : "NURBS with Extraordinary Points: High-degree, Non-uniform, Rational Subdivision Schemes",
    "published" : "2009",
    "format" : "pdf",
    "language" : "en",
    "rights" : "GPLv2",
    "description" : "",
    "creators" : [ {
      "uri" : "http://drinventor/Thomas J.-Cashman",
      "name" : "Thomas J.",
      "surname" : "Cashman"
    }, {
      "uri" : "http://drinventor/Ursula H.-Augsd?rfer",
      "name" : "Ursula H.",
      "surname" : "Augsd?rfer"
    }, {
      "uri" : "http://drinventor/Neil A.-Dodgson",
      "name" : "Neil A.",
      "surname" : "Dodgson"
    }, {
      "uri" : "http://drinventor/Malcolm A.-Sabin",
      "name" : "Malcolm A.",
      "surname" : "Sabin"
    } ]
  },
  "bagOfWords" : [ "6e7798d061af681a77d6d94c07330fad8547922a8f5555e4f0f61fff29cf9a00", "p7e", "10.1145", "1531326.1531352", "name", "identification", "possible", "nurb", "extraordinary", "point", "high-degree", "non-uniform", "rational", "Subdivision", "Schemes", "Thomas", "J.", "Cashman", "Ursula", "H.", "Augsd?rfer", "University", "Cambridge", "University", "Cambridge", "-lrb-", "-rrb-", "control", "mesh", "-lrb-", "-rrb-", "degree", "figure", "same", "control", "mesh", "subdivide", "three", "different", "configuration", "regular", "region", "degree", "surface", "-lrb-", "-rrb-", "c2", "degree", "surface", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "c6", "previous", "subdivision", "scheme", "can", "generate", "surface", "-lrb-", "-rrb-", "knot", "interval", "modify", "give", "-lrb-", "-rrb-", "show", "-lrb-", "-rrb-", "red", "interval", "ten", "time", "greater", "than", "unmarked", "interval", "green", "interval", "four", "time", "greater", "compare", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "note", "case", "non-uniform", "interval", "change", "whole", "surface", "because", "influence", "knot", "interval", "grow", "degree", "we", "present", "subdivision", "framework", "add", "extraordinary", "vertex", "nurb", "arbitrarily", "high", "degree", "surface", "can", "represent", "any", "odd", "degree", "nurb", "patch", "exactly", "we", "rule", "handle", "non-uniform", "knot", "vector", "restricted", "midpoint", "knot", "insertion", "absence", "multiple", "knot", "extraordinary", "point", "limit", "surface", "have", "bound", "curvature", "cr", "category", "i.", "3.5", "-lsb-", "Computer", "Graphics", "-rsb-", "comp", "Geom", "Object", "Modeling?Curve", "surface", "solid", "object", "representation", "introduction", "designer", "freeform", "surface", "use", "have", "operate", "within", "constraint", "impose", "nurb", "-lsb-", "Farin", "2001", "-rsb-", "nurb", "have", "rigid", "rectangular", "control", "grid", "so", "surface", "usually", "have", "represent", "collection", "trim", "patch", "continuity", "across", "patch", "seam", "have", "manually", "enforce", "Subdivision", "surface", "remove", "constraint", "allow", "designer", "introduce", "extraordinary", "point", "otherwise", "regular", "control", "mesh", "result", "flexibility", "lead", "widespread", "adoption", "application", "character", "animation", "-lsb-", "DeRose", "et", "al.", "1998", "-rsb-", "NURBS", "still", "important", "industry", "standard", "field", "like", "ACM", "Reference", "Format", "Cashman", "T.", "Augsd?rfer", "U.", "Dodgson", "N.", "Sabin", "M.", "2009", "nurb", "extraordinary", "point", "high-degree", "non-uniform", "rational", "subdivision", "scheme", "ACM", "Trans", "graph", "28", "Article", "46", "-lrb-", "August", "2009", "-rrb-", "page", "dous", "10.1145", "1531326.1531352", "http://doi.acm.org/10.1145/1531326.1531352", "copyright", "Notice", "permission", "make", "digital", "hard", "copy", "part", "all", "work", "personal", "classroom", "use", "grant", "without", "fee", "provide", "copy", "make", "distribute", "profit", "direct", "commercial", "advantage", "copy", "show", "notice", "fus", "rst", "page", "initial", "screen", "display", "along", "full", "citation", "copyright", "component", "work", "own", "other", "than", "ACM", "must", "honor", "abstract", "credit", "permit", "copy", "otherwise", "republish", "post", "server", "redistribute", "list", "use", "any", "component", "work", "other", "work", "require", "prior", "specific", "permission", "and/or", "fee", "permission", "may", "request", "from", "Publications", "Dept.", "ACM", "Inc.", "Penn", "Plaza", "Suite", "701", "New", "York", "NY", "10121-0701", "fax", "+1", "-lrb-212-rrb-Â 869-0481", "permissions@acm.org", "2009", "ACM", "0730-0301/2009", "03-art46", "10.00", "DOI", "10.1145", "1531326.1531352", "http://doi.acm.org/10.1145/1531326.1531352", "Neil", "A.", "Dodgson", "Malcolm", "a.", "Sabin", "University", "Cambridge", "Numerical", "Geometry", "Ltd", "-lrb-", "-rrb-", "degree", "degree", "non-uniform", "knot", "computer-aided", "design", "addition", "bicubic", "patch", "cad", "model", "sometimes", "use", "additional", "continuity", "available", "from", "biquintic", "occasionally", "biseptic", "very", "rarely", "higher", "degree", "b-spline", "high", "class", "surface", "also", "use", "non-uniform", "parametrization", "handle", "boundary", "selectively", "reduce", "continuity", "integrate", "surface", "feature", "vary", "scale", "subdivision", "scheme", "however", "have", "be", "able", "provide", "full", "complement", "nurb", "feature", "alongside", "flexibility", "extraordinary", "point", "we", "present", "new", "subdivision", "framework", "true", "superset", "nurb", "odd", "degree", "we", "provide", "rule", "give", "continuous", "tangent", "plane", "bound", "curvature", "extraordinary", "point", "any", "exist", "nurb", "patch", "can", "represent", "exactly", "regular", "region", "result", "surface", "also", "exact", "nurb", "so", "surface", "can", "export", "collection", "nurb", "within", "any", "give", "deviation", "tolerance", "related", "work", "nurb", "can", "non-uniform", "well", "define", "arbitrarily", "high", "degree", "we", "subdivision", "scheme", "superset", "NURBS", "must", "also", "hold", "two", "property", "-lrb-", "see", "Figure", "-rrb-", "we", "method", "build", "previous", "scheme", "address", "challenge", "separately", "interest", "high-degree", "subdivision", "scheme", "initially", "center", "around", "search", "surface", "continuous", "non-zero", "curvature", "extraordinary", "point", "reif", "-lsb-", "1996", "-rsb-", "show", "stationary", "c2", "scheme", "would", "have", "use", "least", "bisextic", "patch", "both", "prautzsch", "-lsb-", "1997", "-rsb-", "reif", "-lsb-", "1998", "-rsb-", "present", "construction", "which", "achieve", "lower", "bind", "result", "surface", "ck", "extraordinary", "point", "arbitrary", "use", "b-spline", "patch", "degree", "which", "increase", "rapidly", "k.", "instead", "specify", "continuity", "class", "-lrb-", "let", "degree", "adapt", "necessary", "-rrb-", "prautzsch", "-lsb-", "1998", "-rsb-", "also", "describe", "midpoint", "scheme", "which", "can", "generate", "b-spline", "patch", "specify", "degree", "rule", "scheme", "generalize", "averaging", "algorithm", "describe", "Lane", "Riesenfeld", "-lsb-", "1980", "-rsb-", "uniform", "b-spline", "subdivision", "use", "sequence", "smooth", "stage", "scheme", "avoid", "problem", "arise", "from", "widen", "influence", "point", "degree", "increase", "Warren", "Weimer", "-lsb-", "2001", "-rsb-", "develop", "idea", "along", "several", "other", "researcher", "Zorin", "Schr?der", "-lsb-", "2001", "-rsb-", "show", "result", "surface", "c1", "extraordinary", "point", "-lrb-", "although", "curvature", "diverge", "-rrb-", "stam", "-lsb-", "2001", "-rsb-", "describe", "variant", "where", "topology", "mesh", "invariant", "under", "smoothing", "around", "same", "time", "subdivision", "surface", "be", "develop", "which", "generalize", "non-uniform", "-lrb-", "fix", "degree", "-rrb-", "b-spline", "surface", "tensor", "product", "construction", "nurb", "mean", "same", "knot", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "46", "publication", "date", "August", "2009", "46:2", "T.", "Cashman", "et", "al.", "spacing", "must", "share", "entire", "row", "column", "edge", "Sederberg", "et", "al.", "-lsb-", "1998", "-rsb-", "present", "surface", "which", "relax", "property", "scheme", "allow", "separate", "knot", "spacing", "attach", "every", "edge", "control", "mesh", "M?ller", "et", "al.", "-lsb-", "2006", "-rsb-", "develop", "scheme", "which", "could", "additionally", "provide", "position", "give", "point", "limit", "surface", "surface", "be", "also", "combine", "t-spline", "-lsb-", "Sederberg", "et", "al.", "2003", "-rsb-", "although", "restriction", "opposite", "edge", "quadrilateral", "face", "must", "share", "same", "knot", "spacing", "bring", "surface", "equivalence", "bicubic", "nurb", "absence", "extraordinary", "point", "t-junction", "therefore", "previous", "scheme", "true", "superset", "bicubic", "nurb", "previous", "scheme", "arbitrary", "degree", "previous", "scheme", "combine", "superset", "nurb", "arbitrary", "degree", "overview", "like", "prautzsch?s", "midpoint", "scheme", "we", "method", "handle", "high", "degree", "break", "each", "subdivision", "step", "one", "refine", "several", "smoothing", "stage", "we", "need", "handle", "non-uniform", "knot", "vector", "however", "therefore", "unable", "use", "Lane", "Riesenfeld", "-lsb-", "1980", "-rsb-", "algorithm", "instead", "we", "generalize", "non-uniform", "analogue", "which", "we", "review", "section", "we", "make", "same", "restriction", "Sederberg", "et", "al.", "-lsb-", "2003", "-rsb-", "each", "quadrilateral", "face", "must", "have", "equal", "knot", "spacing", "opposite", "edge", "-lrb-", "case", "nurb", "-rrb-", "we", "also", "restrict", "control", "mesh", "contain", "only", "quadrilateral", "face", "-lrb-", "again", "nurb", "-rrb-", "we", "rule", "must", "still", "allow", "extraordinary", "vertex", "we", "discuss", "generalization", "make", "possible", "section", "result", "subdivision", "framework", "achieve", "we", "objective", "add", "extraordinary", "point", "nurb", "arbitrary", "odd", "degree", "we", "method", "allow", "each", "knot", "interval", "subdivide", "any", "position", "all", "extraordinary", "region", "change", "sequence", "knot", "insertion", "can", "change", "limit", "surface", "so", "important", "resolve", "which", "knot", "we", "should", "insert", "where", "we", "address", "section", "algorithm", "first", "subdivide", "only", "large", "knot", "interval", "until", "all", "interval", "approximately", "same", "size", "avoid", "problem", "which", "occur", "around", "extraordinary", "point", "large", "disparity", "between", "neighbor", "knot", "interval", "we", "use", "further", "subdivision", "step", "create", "region", "uniformity", "around", "extraordinary", "point", "so", "continuity", "curvature", "variation", "region", "determine", "uniform", "rather", "than", "non-uniform", "rule", "section", "we", "use", "eigenanalysis", "tune", "uniform", "rule", "so", "curvature", "stable", "under", "subdivision", "process", "instead", "increase", "infinity", "collapse", "zero", "same", "bound", "curvature", "condition", "mean", "extraordinary", "region", "can", "hold", "both", "elliptic", "hyperbolic", "shape", "limit", "surface", "neither", "shape", "dominate", "other", "prove", "more", "difficult", "satisfy", "bound", "curvature", "condition", "around", "vertex", "valency", "we", "find", "necessary", "introduce", "additional", "smoothing", "stage", "handle", "case", "modification", "we", "method", "have", "bound", "curvature", "all", "valency", "arbitrarily", "high", "degree", "maintain", "convex", "hull", "property", "-lrb-", "take", "only", "convex", "combination", "-rrb-", "up", "degree", "13", "+1", "figure", "smoothing", "stage", "single", "control", "point", "univariate", "knot", "insertion", "algorithm", "where", "contribution", "come", "only", "from", "point", "its", "two", "immediate", "neighbor", "+1", "figure", "we", "can", "consider", "contribution", "from", "each", "side", "point", "separately", "use", "only", "half", "weight", "each", "contribution", "from", "predecessor", "point", "non-uniform", "high-degree", "curve", "we", "method", "build", "NURBS", "subdivision", "rule", "regular", "region", "whatever", "degree", "derive", "from", "b-spline", "knot", "insertion", "we", "can", "find", "rule", "use", "number", "different", "ap", "proach", "two", "example", "method", "present", "Boehm", "-lsb-", "1980", "-rsb-", "Oslo", "algorithm", "-lsb-", "Cohen", "et", "al.", "1980", "-rsb-", "all", "knot", "insertion", "algorithm", "give", "same", "result", "degree", "increase", "each", "point", "have", "widen", "influence", "point", "subdivide", "control", "polygon", "generalization", "surface", "contain", "extraordinary", "point", "cause", "problem", "high", "degree", "both", "because", "drop", "efficiency", "because", "subdivision", "step", "must", "account", "any", "possible", "config", "uration", "extraordinary", "point", "control", "mesh", "number", "case", "consider", "grow", "exponentially", "influence", "point", "which", "grow", "quadratically", "degree", "therefore", "use", "exist", "knot", "insertion", "rule", "directly", "feasible", "option", "high", "degree", "instead", "we", "need", "knot", "insertion", "algorithm", "use", "series", "local", "computation", "which", "overlap", "same", "way", "Lane", "Riesenfeld", "-lsb-", "1980", "-rsb-", "algorithm", "matter", "how", "high", "degree", "number", "case", "consider", "constant", "Schaefer", "Goldman", "-lsb-", "2009", "-rsb-", "describe", "univariate", "non-uniform", "algorithm", "which", "work", "way", "difficult", "generalize", "surface", "because", "asymmetry", "we", "develop", "symmetric", "approach", "-lsb-", "Cashman", "et", "al.", "2009", "-rsb-", "which", "we", "use", "here", "univariate", "algorithm", "break", "subdivision", "step", "refine", "stage", "follow", "d/2", "smoothing", "stage", "where", "which", "odd", "degree", "we", "use", "denote", "current", "stage", "each", "smooth", "stage", "we", "consider", "each", "point", "turn", "two", "knot", "which", "distance", "away", "subdivide", "knot", "vector", "either", "side", "knot", "need", "insert", "algorithm", "use", "stage", "introduce", "they", "polar", "form", "-lrb-", "blossom", "-rrb-", "-lsb-", "ramshaw", "1989", "-rsb-", "relevant", "point", "process", "insert", "knot", "polar", "form", "each", "point", "each", "stage", "Cashman", "et", "al.", "-lsb-", "2009", "-rsb-", "give", "require", "affine", "combination", "implementation", "detail", "curve", "case", "important", "observation", "each", "affine", "combination", "use", "only", "direct", "neighbor", "we", "can", "therefore", "visualize", "effect", "smoothing", "stage", "single", "point", "show", "figure", "although", "either", "-lrb-", "both", "-rrb-", "weight", "may", "Figure", "show", "we", "can", "consider", "same", "smoothing", "operation", "one", "edge", "time", "which", "form", "foundation", "we", "method", "surface", "case", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "46", "publication", "date", "August", "2009", "nurb", "extraordinary", "point", "high-degree", "non-uniform", "rational", "Subdivision", "Surfaces", "46:3", "non-uniform", "high-degree", "surface", "generalize", "curve", "case", "surface", "extraordinary", "point", "we", "calculate", "affine", "combination", "refine", "smooth", "stage", "one", "face", "time", "weight", "use", "affine", "combination", "define", "use", "tensor", "product", "univariate", "knot", "insertion", "when", "consider", "-lrb-", "show", "Figure", "-rrb-", "nurb", "one", "edge", "time", "control", "mesh", "each", "smooth", "stage", "calculate", "weight", "four", "face", "surround", "vertex", "-lrb-", "figure", "-rrb-", "weight", "combine", "give", "tensor", "product", "smoothing", "stage", "form", "show", "figure", "require", "NURBS", "knot", "insertion", "5.1", "introduce", "extraordinary", "point", "like", "Sederberg", "et", "al.", "-lsb-", "1998", "-rsb-", "we", "associate", "knot", "spacing", "each", "edge", "control", "mesh", "however", "we", "require", "all", "face", "quadrilateral", "knot", "spacing", "opposite", "edge", "face", "equal", "latter", "same", "restriction", "Sederberg", "et", "al.", "-lsb-", "2003", "-rsb-", "impose", "nurss", "order", "incorporate", "t-junction", "result", "knot", "spacing", "define", "whole", "strip", "quadrilateral", "face", "rather", "than", "single", "edge", "both", "condition", "course", "property", "nurb", "control", "mesh", "mesh", "where", "condition", "hold", "each", "face", "have", "two", "associate", "strip", "quadrilateral", "face", "one", "each", "two", "direction", "-lrb-", "figure", "-rrb-", "we", "use", "strip", "build", "local", "knot", "vector", "each", "face", "mesh", "contain", "extraordinary", "point", "smoothing", "stage", "may", "use", "different", "knot", "vector", "each", "face", "surround", "vertex", "refine", "stage", "also", "compute", "one", "face", "time", "here", "we", "face", "case", "new", "vertex", "position", "give", "tensor", "product", "introduce", "vertex", "exist", "edge", "within", "exist", "face", "univariate", "refinement", "two", "direction", "edge", "case", "two", "univariate", "contribution", "split", "four", "two", "each", "side", "edge", "Cashman", "et", "al.", "-lsb-", "2009", "-rsb-", "give", "univariate", "rule", "figure", "show", "example", "how", "apply", "bivariate", "case", "section", "describe", "we", "modification", "bound", "curvature", "which", "multiply", "weight", "each", "contribution", "from", "extraordinary", "vertex", "additional", "value", "separate", "multiplier", "contribution", "from", "extraordinary", "vertex", "its", "successor", "adjacent", "vertex", "vertex", "across", "diagonal", "same", "value", "use", "every", "refine", "smooth", "stage", "determine", "valency", "extraordinary", "point", "degree", "surface", "Valency", "difficult", "-lrb-", "see", "Section", "7.2", "-rrb-", "require", "extra", "smoothing", "step", "achieve", "bounded", "curvature", "while", "maintain", "convex", "hull", "property", "maintain", "affine", "invariance", "weight", "every", "affine", "combina", "tion", "must", "sum", "we", "therefore", "normalize", "each", "affine", "combination", "divide", "sum", "contribute", "weight", "necessary", "extraordinary", "point", "since", "vertex", "valency", "receive", "4n", "contribution", "instead", "16", "multiplier", "we", "use", "bound", "curvature", "make", "necessary", "normalize", "every", "affine", "combination", "have", "contribution", "from", "extraordinary", "point", "normalization", "sometimes", "necessary", "along", "ray", "which", "emanate", "from", "extraor", "dinary", "point", "because", "two", "side", "ray", "can", "use", "different", "knot", "vector", "therefore", "easiest", "normalize", "every", "affine", "combination", "regardless", "position", "mesh", "also", "handle", "face", "more", "than", "one", "extraordinary", "corner", "without", "special", "case", "strategy", "allow", "we", "create", "non-uniform", "subdivision", "surface", "arbitrarily", "high", "degree", "create", "true", "superset", "NURBS", "all", "remain", "make", "surface", "rational", "which", "straightforward", "-lsb-", "Sederberg", "et", "al.", "1998", "-rsb-", "rational", "control", "point", "project", "subdivide", "project", "back", "Figure", "regular", "region", "smoothing", "stage", "compute", "contribution", "point", "from", "each", "surround", "four", "face", "weight", "each", "face", "take", "from", "tensor", "product", "Figure", "pair", "contribution", "show", "red", "define", "influence", "edgeconnected", "vertex", "four", "contribution", "show", "blue", "combine", "give", "influence", "point", "its", "successor", "nurb", "mesh", "16", "weight", "sum", "compute", "same", "affine", "combination", "tensor", "product", "figure", "10", "10", "Figure", "every", "face", "have", "local", "knot", "vector", "two", "direction", "which", "we", "can", "construct", "follow", "strip", "quadrilateral", "face", "shaded", "face", "knot", "spacing", "blue", "direction", "-lcb-", "-rcb-", "red", "direction", "-lcb-", "10", "-rcb-", "example", "collect", "knot", "vector", "length", "require", "subdivision", "degree", "Figure", "example", "refine", "stage", "degree", "where", "interval", "have", "knot", "insert", "its", "midpoint", "other", "interval", "unmodified", "knot", "insertion", "algorithm", "therefore", "introduce", "point", "along", "subdivide", "interval", "we", "show", "unnormalized", "weight", "use", "form", "central", "point", "fraction", "involve", "from", "curve", "case", "factor", "one", "half", "because", "we", "treat", "each", "side", "each", "edge", "separately", "multiplier", "require", "get", "bound", "curvature", "bivariate", "case", "explain", "section", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "46", "publication", "date", "August", "2009", "46:4", "T.", "Cashman", "et", "al.", "knot", "insertion", "strategy", "we", "have", "now", "achieve", "we", "objective", "nurb", "odd", "degree", "extraordinary", "point", "however", "extraordinary", "point", "make", "possible", "large", "knot", "interval", "adjacent", "high-valency", "point", "invisible", "face", "hide", "behind", "point", "we", "find", "can", "cause", "fold", "limit", "surface", "knot", "insert", "na?vely", "course", "regular", "region", "nurb", "sequence", "knot", "insertion", "do", "alter", "limit", "surface", "same", "property", "do", "apply", "around", "extraordinary", "point", "so", "sequence", "which", "knot", "insert", "important", "section", "we", "describe", "we", "method", "choose", "which", "knot", "insert", "where", "insert", "they", "we", "univariate", "algorithm", "-lsb-", "Cashman", "et", "al.", "2009", "-rsb-", "constrain", "subdivide", "every", "interval", "so", "we", "can", "regularize", "knot", "spacing", "subdivide", "large", "interval", "first", "we", "regularization", "condition", "knot", "interval", "twice", "-lrb-", "more", "-rrb-", "large", "any", "other", "give", "complete", "set", "knot", "interval", "-lcb-", "-rcb-", "we", "establish", "minimum", "non-zero", "interval", "min", "-lrb-", "-lcb-", "-rcb-", "-rrb-", "max", "-lrb-", "-rrb-", "we", "use", "limited", "subdivision", "step", "insert", "knot", "only", "interval", "which", "greater", "we", "subdivide", "each", "interval", "its", "midpoint", "so", "total", "log", "-lrb-", "max", "-lrb-", "-rrb-", "-rrb-", "step", "require", "achieve", "we", "regularization", "condition", "strategy", "avoid", "undesirable", "fold", "surface", "scale", "first", "subdivision", "step", "once", "max", "-lrb-", "-rrb-", "we", "address", "behavior", "extraordinary", "point", "smaller", "scale", "make", "guarantee", "behavior", "extraordinary", "region", "we", "use", "further", "subdivision", "step", "insert", "knot", "uniformly", "around", "extraordinary", "point", "while", "subdivide", "other", "interval", "midpoint", "do", "so", "create", "uniform", "region", "stationary", "subdivision", "matrix", "we", "therefore", "able", "apply", "eigenanalysis", "guarantee", "c1", "continuity", "-lrb-", "see", "appendix", "-rrb-", "Figure", "two", "subdivision", "step", "may", "require", "insert", "uniform", "knot", "around", "extraordinary", "point", "figure", "knot", "interval", "size", "symbolize", "geometrically", "black", "edge", "indicate", "original", "knot", "we", "insert", "red", "knot", "next", "subdivision", "step", "note", "uniform", "spacing", "extraordinary", "point", "right", "influence", "interval", "surround", "point", "left", "also", "conflict", "central", "knot", "interval", "knot", "show", "use", "dash", "green", "line", "can", "both", "insert", "first", "subdivision", "step", "Figure", "we", "knot", "insertion", "strategy", "group", "extraordinary", "point", "equivalence", "class", "base", "whether", "share", "emanate", "ray", "example", "two", "extraordinary", "point", "marked", "-lrb-", "emanate", "ray", "draw", "red", "-rrb-", "same", "equivalence", "class", "two", "point", "marked", "-lrb-", "emanate", "ray", "draw", "green", "-rrb-", "case", "single", "extraordinary", "point", "valency", "surround", "regular", "we", "need", "most", "two", "step", "before", "every", "extraordinary", "point", "surround", "one", "layer", "evenly", "space", "knot", "consider", "simplest", "mesh", "let", "knot", "interval", "surround", "point", "we", "insert", "knot", "each", "interval", "create", "uniform", "spacing", "distance", "min", "-lrb-", "-lcb-", "...", "-rcb-", "-rrb-", "away", "from", "extraordinary", "point", "general", "case", "we", "have", "multiple", "extraordinary", "point", "arbitrary", "configuration", "Figure", "show", "uniform", "knot", "insertion", "one", "extraordinary", "point", "may", "impact", "another", "fact", "extraordinary", "point", "emanate", "ray", "which", "share", "over", "any", "number", "regular", "point", "must", "insert", "knot", "same", "distance", "away", "order", "achieve", "uniform", "knot", "spacing", "-lrb-", "figure", "-rrb-", "we", "can", "define", "set", "equivalence", "class", "extraordinary", "point", "connect", "way", "calculate", "membership", "class", "single", "pass", "through", "point", "mesh", "achieve", "we", "implementation", "use", "knot", "interval", "object", "hold", "reference", "adjacent", "extraordinary", "point", "one", "either", "side", "disjoint", "set", "datum", "structure", "-lsb-", "Galil", "Italiano", "1991", "-rsb-", "associate", "find", "union", "operation", "use", "join", "any", "class", "which", "appear", "same", "side", "knot", "interval", "equivalence", "class", "unaffected", "subdivision", "so", "need", "only", "calculate", "once", "can", "coarsest", "level", "once", "calculate", "equivalence", "class", "can", "use", "insert", "knot", "distance", "which", "achieve", "uniform", "spacing", "all", "member", "class", "however", "Figure", "also", "show", "two", "more", "extraordinary", "point", "either", "side", "knot", "interval", "might", "make", "conflict", "request", "where", "knot", "should", "insert", "case", "we", "use", "first", "subdivision", "step", "insert", "knot", "between", "two", "position", "knot", "interval", "split", "can", "conflict", "second", "subdivision", "step", "uniform", "knot", "spacing", "around", "extraordinary", "point", "thus", "guarantee", "most", "two", "step", "summary", "we", "algorithm", "establish", "uniform", "spacing", "each", "equivalence", "class", "establish", "minimum", "from", "knot", "interval", "surround", "extraordinary", "point", "within", "each", "extraordinary", "point", "request", "insert", "knot", "sur", "round", "interval", "half", "minimum", "interval", "class", "each", "knot", "interval", "subdivide", "midpoint", "mean", "request", "position", "insertion", "request", "note", "method", "describe", "here", "can", "apply", "multiple", "knot", "-lrb-", "i.e.", "zero", "knot", "interval", "-rrb-", "adjacent", "extraordinary", "point", "case", "we", "can", "still", "proceed", "subdivision", "we", "unable", "create", "uniform", "knot", "spacing", "which", "mean", "we", "can", "prove", "c1", "continuity", "presence", "zero", "knot", "interval", "where", "uniform", "spacing", "achievable", "additional", "subdivision", "step", "insert", "knot", "center", "surround", "interval", "create", "grow", "region", "uniformity", "around", "each", "extraordinary", "point", "so", "behavior", "limit", "surface", "point", "determine", "uniform", "rule", "therefore", "section", "-lrb-", "which", "modify", "uniform", "case", "bound", "curvature", "-rrb-", "appendix", "-lrb-", "which", "discuss", "we", "proof", "uniform", "rule", "create", "c1", "surface", "-rrb-", "apply", "any", "non-uniform", "configuration", "non-zero", "knot", "interval", "adjacent", "extraordinary", "point", "bounded", "curvature", "without", "multiple", "knot", "degree", "b-spline", "-lrb-", "include", "regular", "region", "we", "scheme", "-rrb-", "have", "continuous", "derivative", "extraordinary", "point", "however", "have", "prove", "difficult", "stationary", "subdivision", "provide", "anything", "more", "than", "continuity", "first", "derivative", "range", "possible", "behavior", "second", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "46", "publication", "date", "August", "2009", "nurb", "extraordinary", "point", "high-degree", "non-uniform", "rational", "Subdivision", "Surfaces", "46:5", "800", "1.5", "600", "400", "0.5", "200", "10", "15", "20", "10", "15", "valency", "-lrb-", "-rrb-", "valency", "-lrb-", "-rrb-", "figure", "bounded", "curvature", "solution", "Valency", "range", "from", "20", "multiplier", "plot", "degree", "equal", "note", "definition", "regular", "case", "curvature", "continuous", "hence", "already", "satisfy", "bound", "curvature", "equation", "1.3333", "1.3333", "1.3333", "1.3333", "1.2560", "1.1370", "2.6079", "8.0641", "13.574", "19.510", "0.6499", "0.7919", "4.6412", "15.560", "29.347", "45.446", "0.4364", "0.6048", "9.9085", "34.571", "68.153", "108.89", "0.2321", "0.3604", "20", "73.691", "269.09", "536.37", "866.17", "20", "0.0343", "0.0578", "1.3333", "1.3333", "1.3333", "1.3333", "1.2560", "1.1370", "2.6079", "8.0641", "13.574", "19.510", "0.6499", "0.7919", "4.6412", "15.560", "29.347", "45.446", "0.4364", "0.6048", "9.9085", "34.571", "68.153", "108.89", "0.2321", "0.3604", "20", "73.691", "269.09", "536.37", "866.17", "20", "0.0343", "0.0578", "Table", "selection", "valency", "range", "from", "see", "auxiliary", "material", "full", "table", "derivative", "-lsb-", "Sabin", "et", "al.", "2003", "-rsb-", "which", "we", "can", "analyze", "use", "eigen", "decomposition", "subdivision", "matrix", "-lsb-", "Peters", "Reif", "2008", "-rsb-", "we", "aim", "bound", "curvature", "which", "we", "believe", "give", "best", "behavior", "limit", "surface", "we", "use", "denote", "subdominant", "eigenvalue", "write", "eigenvalue", "component", "which", "generalize", "elliptic", "hyperbolic", "paraboloid", "respectively", "subdivision", "rule", "we", "consider", "rotationally", "symmetric", "Reif", "-lsb-", "1996", "-rsb-", "show", "stationary", "subdivision", "scheme", "base", "bicubic", "piece", "can", "have", "non-zero", "curvature", "continuity", "extraordinary", "point", "possible", "however", "satisfy", "bounded", "curvature", "where", "necessary", "sufficient", "condition", "c2", "continuity", "preserve", "curvature", "both", "quadratic", "eigencomponent", "through", "subdivision", "therefore", "extraordinary", "region", "dominate", "either", "elliptic", "hyper", "eigenvalue", "always", "double", "bolic", "component", "curvature", "extraordinary", "point", "bound", "curvature", "appear", "spline", "ring", "those", "component", "-lsb-", "Peters", "Reif", "2008", "-rsb-", "contrast", "Catmull-Clark", "scheme", "-lsb-", "Catmull", "Clark", "1978", "-rsb-", "have", "valency", "greater", "than", "four", "lead", "surface", "which", "always", "hyperbolic", "irrespective", "control", "mesh", "shape", "-lsb-", "Karciauskas", "et", "al.", "2004", "-rsb-", "several", "author", "have", "modify", "stationary", "subdivision", "scheme", "improve", "curvature", "extraordinary", "region", "Sabin", "-lsb-", "1991", "-rsb-", "present", "variant", "catmull-clark", "bound", "curvature", "Barthe", "Kobbelt", "-lsb-", "2004", "-rsb-", "tune", "extraordinary", "point", "rule", "number", "desirable", "property", "include", "bound", "curvature", "both", "Holt", "-lsb-", "1996", "-rsb-", "Loop", "-lsb-", "2002", "-rsb-", "present", "bound", "curvature", "scheme", "triangle", "mesh", "augsd?rfer", "et", "al.", "-lsb-", "2006", "-rsb-", "tune", "scheme", "bound", "curvature", "while", "seek", "minimize", "range", "bound", "Ginkel", "Umlauf", "-lsb-", "2006", "-rsb-", "try", "eliminate", "case", "where", "bound", "range", "include", "both", "positive", "negative", "curvature", "subdivision", "matrix", "require", "stationary", "curvature", "continuity", "easier", "achieve", "Levin", "-lsb-", "2006", "-rsb-", "example", "use", "1.5", "0.5", "20", "10", "15", "20", "valency", "-lrb-", "-rrb-", "1.1204", "1.1172", "1.4012", "1.1003", "1.0758", "1.0608", "0.8152", "0.8339", "0.6224", "0.7727", "0.8228", "0.8466", "0.6417", "0.6770", "0.4115", "0.5638", "0.6420", "0.6813", "0.3979", "0.4421", "0.2164", "0.3098", "0.3870", "0.4289", "0.0664", "0.0790", "20", "0.0317", "0.0430", "0.0605", "0.0695", "non-stationary", "rule", "result", "local", "blend", "between", "limit", "surface", "c2", "polynomial", "would", "possible", "apply", "same", "principle", "we", "scheme", "once", "uniform", "knot", "spacing", "have", "be", "create", "around", "extraordinary", "point", "however", "we", "have", "choose", "maintain", "simplicity", "stationary", "rule", "uniform", "configuration", "we", "now", "show", "how", "modify", "we", "rule", "give", "bound", "curvature", "arbitrarily", "high", "degree", "7.1", "Valency", "greater", "than", "regular", "-lrb-", "subdivision", "matrix", "calculate", "double", "precision", "uniform", "knot", "vector", "each", "degree", "valency", "we", "compute", "Discrete", "fourier", "transform", "-lrb-", "dft", "-rrb-", "subdivision", "matrix", "rule", "describe", "section", "we", "want", "modify", "rule", "bound", "curvature", "size", "subdivision", "matrix", "increase", "degree", "therefore", "become", "impractical", "find", "exact", "solution", "symbolic", "form", "even", "use", "dft", "consider", "each", "block", "separately", "instead", "we", "use", "nonlinear", "solver", "float", "point", "value", "we", "ensure", "differ", "from", "more", "than", "10", "12", "floating-point", "eigenvalue", "routine", "-rrb-", "note", "process", "offline", "have", "impact", "speed", "implementation", "we", "modify", "we", "rule", "use", "mask", "tuning", "-lsb-", "augsd?rfer", "et", "al.", "2006", "-rsb-", "adapt", "setting", "where", "subdivision", "step", "factorize", "separate", "stage", "idea", "multiply", "weight", "any", "contribution", "from", "extraordinary", "point", "additional", "value", "we", "use", "same", "multiplier", "refine", "smooth", "stage", "extraordinary", "vertex", "diagonally", "opposite", "extraordinary", "vertex", "vertex", "can", "make", "contribution", "vertex", "three", "different", "position", "each", "which", "use", "separate", "multiplier", "new", "extraordinary", "vertex", "edge-connected", "vertex", "adjacent", "face", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "46", "publication", "date", "August", "2009", "46:6", "T.", "Cashman", "et", "al.", "figure", "10", "final", "affine", "combination", "use", "position", "3-valent", "vertex", "bound", "curvature", "red", "line", "indicate", "knot", "which", "have", "be", "insert", "subdivision", "step", "-lrb-", "illustration", "we", "show", "case", "where", "knot", "have", "be", "insert", "interval", "right", "-rrb-", "extraordinary", "point", "center", "take", "new", "position", "calculate", "from", "exist", "position", "-lrb-", "-rrb-", "point", "-lrb-", "-rrb-", "which", "edge-connected", "end", "subdivision", "step", "point", "-lrb-", "-rrb-", "which", "position", "which", "be", "face-connected", "subdivision", "step", "11", "13", "0.0013", "0.0813", "0.1915", "0.3537", "0.5732", "0.8550", "11", "13", "0.0013", "0.0813", "0.1915", "0.3537", "0.5732", "0.8550", "Table", "value", "achieve", "bounded", "curvature", "valency", "initialization", "foreach", "extraordinary", "point", "do", "assign", "equivalence", "class", "foreach", "subdivision", "step", "do", "knot", "insertion", "strategy", "max", "-lrb-", "-rrb-", "foreach", "knot", "interval", "where", "do", "subdivide", "its", "midpoint", "else", "foreach", "equivalence", "class", "do", "min", "-lrb-", "knot", "interval", "surround", "point", "-rrb-", "foreach", "extraordinary", "point", "equivalence", "class", "do", "foreach", "knot", "interval", "surround", "do", "make", "insertion", "request", "distance", "from", "foreach", "knot", "interval", "do", "have", "insertion", "request", "subdivide", "mean", "request", "position", "else", "subdivide", "its", "midpoint", "subdivide", "mesh", "base", "insert", "knot", "foreach", "quadrilateral", "face", "knot", "interval", "do", "both", "subdivide", "compute", "refine", "stage", "new", "point", "within", "subdivide", "make", "contribution", "new", "point", "edge", "degree/2", "do", "foreach", "quadrilateral", "face", "do", "make", "contribution", "smooth", "stage", "within", "foreach", "3-valent", "point", "do", "compute", "final", "position", "figure", "11", "pseudocode", "we", "subdivision", "algorithm", "we", "find", "bounded", "curvature", "solution", "each", "degree", "-lrb-", "which", "value", "store", "lookup", "table", "always", "odd", "-rrb-", "each", "valency", "implementation", "multiplier", "affect", "only", "zero", "frequency", "fourier", "block", "so", "we", "can", "first", "solve", "use", "just", "we", "use", "second", "degree", "freedom", "optimization", "make", "shape", "subdominant", "eigenvector", "stable", "possible", "take", "solution", "zero", "frequency", "block", "we", "able", "use", "solve", "Figure", "Table", "show", "result", "solution", "degree", "valency", "up", "20", "full", "table", "include", "auxiliary", "material", "7.2", "Valency", "valency", "we", "can", "use", "method", "describe", "above", "solve", "exactly", "same", "way", "we", "try", "satisfy", "however", "we", "find", "solution", "negative", "result", "surface", "could", "therefore", "lie", "outside", "convex", "hull", "control", "point", "even", "worse", "some", "degree", "bound", "curvature", "solution", "all", "we", "therefore", "need", "treat", "valency", "case", "separately", "instead", "use", "negative", "weight", "contribution", "from", "extraordinary", "vertex", "its", "successor", "we", "can", "instead", "shrink", "increase", "number", "point", "which", "influence", "extraordinary", "vertex", "over", "course", "subdivision", "step", "increase", "support", "may", "consider", "undesirable", "we", "consider", "convex", "combination", "more", "important", "than", "small", "increase", "support", "we", "modification", "introduce", "additional", "final", "smoothing", "stage", "affect", "only", "3-valent", "vertex", "-lrb-", "figure", "10", "-rrb-", "we", "need", "take", "contribution", "from", "vertex", "sufficiently", "far", "away", "from", "extraordinary", "point", "shrink", "rate", "we", "also", "want", "avoid", "complication", "arise", "from", "arbitrary", "connectivity", "we", "solution", "therefore", "take", "vertex", "position", "which", "be", "faceconnect", "extraordinary", "point", "subdivision", "step", "uniform", "case", "therefore", "lie", "corner", "two", "ring", "surround", "extraordinary", "point", "face", "have", "be", "subdivide", "one", "direction", "both", "however", "more", "closely", "connect", "Figure", "10", "example", "only", "knight?s", "move", "away", "from", "extraordinary", "point", "we", "also", "use", "vertex", "connect", "extraordinary", "point", "edge", "position", "3-valent", "extraordinary", "point", "position", "new", "point", "give", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "product", "non-negative", "weight", "final", "smoothing", "stage", "allow", "we", "solve", "use", "same", "numerical", "solver", "vary", "instead", "-lrb-", "see", "Table", "-rrb-", "here", "product", "over", "every", "stage", "normalize", "weight", "contribution", "from", "extraordinary", "point", "its", "successor", "we", "use", "retain", "property", "point", "only", "modify", "knot", "insert", "nearby", "knot", "insert", "domain", "extraordinary", "point?s", "basis", "function", "give", "require", "every", "affine", "combination", "we", "univariate", "knot", "insertion", "algorithm", "use", "non-negative", "weight", "same", "therefore", "true", "tensor", "product", "modification", "bound", "curvature", "multiplier", "also", "non-negative", "therefore", "we", "scheme", "hold", "convex", "hull", "property", "solve", "we", "find", "six", "degree", "where", "range", "from", "13", "result", "value", "give", "Table", "inclusion", "additional", "smoothing", "stage", "have", "relatively", "little", "effect", "position", "extraordinary", "point", "largely", "determine", "value", "however", "we", "do", "want", "make", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "46", "publication", "date", "August", "2009", "nurb", "extraordinary", "point", "high-degree", "non-uniform", "rational", "Subdivision", "Surfaces", "46:7", "control", "mesh", "degree", "degree", "Table", "surface", "three", "different", "knot", "configuration", "-lrb-", "top", "bottom", "-rrb-", "degree", "-lrb-", "leave", "right", "-rrb-", "each", "surface", "draw", "reflection", "line", "define", "control", "mesh", "show", "left", "each", "row", "knot", "interval", "show", "red", "five", "time", "larger", "than", "other", "first", "row", "show", "uniform", "case", "note", "widen", "influence", "knot", "interval", "degree", "increase", "six", "surface", "which", "both", "high-degree", "non-uniform", "-lrb-", "bottom-right", "-rrb-", "can", "generate", "any", "previous", "subdivision", "scheme", "sure", "therefore", "we", "set", "all", "useful", "simplification", "achieve", "give", "uniform", "knot", "spacing", "value", "scale", "contribution", "from", "3-valent", "point", "successor", "so", "total", "unnormalized", "weight", "same", "regular", "4-valent", "case", "summary", "we", "have", "now", "modify", "general", "degree", "non-uniform", "subdivision", "scheme", "have", "bound", "curvature", "all", "degree", "valency", "scheme", "hold", "convex", "hull", "property", "useful", "range", "degree", "from", "13", "which", "valency", "require", "small", "increase", "support", "surround", "basis", "function", "complete", "algorithm", "summarize", "pseudocode", "Figure", "11", "discussion", "work", "follow", "call", "from", "cad", "industry", "subdivision", "surface", "do", "enforce", "uniform", "parametrization", "-lsb-", "Gonsor", "Neamtu", "2001", "-rsb-", "Ma", "-lsb-", "2005", "-rsb-", "also", "suggest", "research", "area", "would", "allow", "subdivision", "gain", "greater", "acceptance", "CAD", "further", "unified", "generalization", "...", "-lsb-", "which", "-rsb-", "should", "cover", "all", "-lsb-", "-rsb-", "we", "can", "do", "nurb", "we", "have", "achieve", "odd", "degree", "Figure", "Table", "show", "example", "range", "degree", "different", "knot", "interval", "Karciauskas", "et", "al.", "-lsb-", "2004", "-rsb-", "note", "bound", "curvature", "scheme", "can", "suffer", "from", "lack", "fairness", "effect", "seem", "visible", "degree", "surface", "Table", "since", "reflection", "line", "smooth", "Catmull-Clark", "surface", "same", "datum", "however", "we", "have", "recourse", "higher", "degree", "provide", "additional", "smoothness", "surface", "degree", "higher", "seem", "fairer", "fact", "we", "believe", "even", "completely", "uniform", "case", "degree", "surface", "interesting", "alternative", "Catmull-Clark", "computational", "cost", "only", "slightly", "higher", "-lrb-", "be", "degree", "rather", "than", "degree", "-rrb-", "yet", "result", "surface", "have", "bound", "curvature", "without", "compromise", "global", "shape", "around", "point", "high", "valency", "subdivision", "surface", "typically", "suffer", "from", "poor", "shape", "-lrb-", "figure", "12", "-rrb-", "we", "method", "produce", "much", "smoother", "shape", "even", "low", "degree", "compare", "scheme", "have", "divergent", "curvature", "also", "noticeable", "improvement", "visual", "smoothness", "use", "higher", "degree", "although", "surface", "remain", "formally", "only", "c1", "extraordinary", "point", "degree", "Degree", "Zorin", "Schr?der", "-lsb-", "2001", "-rsb-", "find", "general", "degree", "surface", "which", "generate", "centroid", "averaging", "have", "curvature", "which", "diverge", "faster", "extraordinary", "point", "degree", "increase", "we", "modification", "bound", "curvature", "avoid", "outcome", "so", "fewer", "disadvantage", "use", "higher", "degree", "obtain", "greater", "smoothness", "remain", "disadvantage", "apply", "b-spline", "general", "higher", "computational", "cost", "increase", "shrinkage", "when", "compare", "limit", "surface", "control", "mesh", "control", "point", "which", "have", "less", "local", "influence", "over", "surface", "we", "modification", "bound", "curvature", "require", "less", "than", "valency", "greater", "than", "valency", "greater", "than", "-lrb-", "see", "Figure", "14", "-rrb-", "Barthe", "Kobbelt", "-lsb-", "2004", "-rsb-", "explicitly", "try", "avoid", "outcome", "because", "polar", "artifact", "which", "appear", "when", "subdivision", "surface", "render", "use", "its", "control", "polygon", "after", "just", "few", "subdivision", "step", "however", "we", "primarily", "interested", "behavior", "limit", "surface", "-lrb-", "make", "up", "b-spline", "patch", "-rrb-", "rather", "than", "control", "mesh", "limit", "surface", "important", "CAD", "application", "non-uniform", "parametrization", "might", "useful", "where", "subdivision", "surface", "texture", "-lrb-", "example", "procedurally", "-rrb-", "use", "piecewise", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "46", "publication", "date", "August", "2009", "46:8", "T.", "Cashman", "et", "al.", "-lrb-", "-rrb-", "control", "mesh", "-lrb-", "-rrb-", "catmull-clark", "-lsb-", "1978", "-rsb-", "Figure", "12", "reflection", "line", "surface", "define", "control", "mesh", "12-valent", "extraordinary", "point", "each", "surface", "render", "vertex", "project", "limit", "surface", "-lrb-", "-rrb-", "-lrb-", "-rrb-", "use", "exact", "evaluation", "-lsb-", "stam", "1998", "-rsb-", "sample", "limit", "surface", "region", "12-valent", "point", "-lrb-", "-rrb-", "uniform", "parametrization", "-lrb-", "-rrb-", "chordal", "parametrization", "figure", "13", "cuboid", "subdivide", "degree", "subdivision", "surface", "show", "isoparameter", "line", "set", "knot", "interval", "chord", "length", "increase", "regularity", "parametrization", "parametrization", "associate", "control", "mesh", "like", "NURBS", "we", "scheme", "allow", "each", "face", "parametrize", "rectangle", "rather", "than", "unit", "square", "Figure", "13", "show", "chordal", "parametrization", "can", "help", "reduce", "texture", "distortion", "increase", "regularity", "parametrization", "another", "use", "non-uniform", "parametrization", "allow", "good", "control", "boundary", "subdivision", "surface", "we", "have", "previously", "describe", "how", "handle", "boundary", "curve", "case", "-lsb-", "Cashman", "et", "al.", "2009", "-rsb-", "easily", "transfer", "surface", "case", "result", "we", "can", "use", "multiple", "knot", "give", "surface", "which", "meet", "univariate", "b-spline", "curve", "boundary", "whilst", "provide", "good", "control", "both", "tangent", "curvature", "exist", "boundary", "condition", "duplicate", "control", "point", "gain", "clamp", "surface", "suffer", "from", "zero", "curvature", "boundary", "introduction", "subdivision", "surface", "which", "have", "full", "capability", "NURBS", "possible", "end", "user", "need", "longer", "present", "mutually", "exclusive", "surface", "primitive", "nurb", "Catmull-Clark", "subdivision", "surface", "we", "believe", "surface", "present", "paper", "could", "allow", "many", "application", "present", "single", "unified", "interface", "user", "allow", "control", "which", "familiar", "from", "nurb", "-lrb-", "non-uniform", "parametrization", "arbitrary", "degree", "-rrb-", "alongside", "flexibility", "extraordinary", "point", "which", "familiar", "from", "subdivision", "two", "area", "particular", "where", "may", "better", "solution", "than", "one", "we", "have", "present", "affine", "combination", "use", "bound", "curvature", "valency", "-lrb-", "section", "7.2", "-rrb-", "method", "use", "create", "uniform", "knot", "spacing", "-lrb-", "section", "-rrb-", "natural", "development", "would", "make", "condition", "max", "-lrb-", "-rrb-", "local", "rather", "than", "global", "knot", "interval", "would", "only", "consider", "too", "large", "interval", "half", "size", "sufficiently", "nearby", "-lrb-", "where", "distance", "depend", "degree", "-rrb-", "modification", "would", "allow", "normal", "midpoint", "subdivision", "knot", "interval", "which", "increase", "-lrb-", "-rrb-", "we", "method", "degree", "-lrb-", "-rrb-", "we", "method", "degree", "gradually", "across", "surface", "without", "compromise", "continuity", "around", "extraordinary", "point", "might", "also", "potential", "more", "extensive", "change", "we", "could", "allow", "face", "have", "different", "knot", "spacing", "opposite", "edge", "like", "Sederberg", "et", "al.", "-lsb-", "1998", "-rsb-", "M?ller", "et", "al.", "-lsb-", "2006", "-rsb-", "would", "involve", "generalization", "knot", "vector", "which", "collect", "show", "Figure", "generalization", "place", "might", "possible", "incorporate", "extraordinary", "face", "well", "extraordinary", "vertex", "we", "mention", "section", "we", "method", "make", "guarantee", "surface", "continuity", "zero", "knot", "interval", "lie", "adjacent", "extraordinary", "point", "furthermore", "around", "extraordinary", "region", "we", "unable", "insert", "arbitrary", "knot", "while", "maintain", "invariant", "limit", "surface", "neither", "limitation", "affect", "compatibility", "nurb", "allow", "room", "further", "analysis", "improvement", "finally", "framework", "we", "describe", "here", "have", "natural", "counterpart", "even", "degree", "where", "knot", "spacing", "specify", "across", "strip", "edge", "rather", "than", "strip", "face", "future", "work", "we", "hope", "provide", "bounded", "curvature", "modification", "even", "degree", "scheme", "acknowledgement", "we", "would", "like", "thank", "anonymous", "reviewer", "helpful", "feedback", "Ursula", "Augsd?rfer", "Malcolm", "Sabin", "be", "support", "EPSRC", "grant", "number", "ep/e025889/1", "reference", "ugsd", "orfer", "U.", "H.", "ODGSON", "N.", "a.", "abin", "M.", "A.", "2006", "tune", "subdivision", "minimise", "Gaussian", "Curvature", "M.", "A.", "2009", "numerical", "checking", "Arbitrary", "Degree", "Quadrilateral", "Subdivision", "Schemes", "variation", "near", "extraordinary", "vertex", "Comp", "graph", "Forum", "25", "263", "272", "ugsd", "orfer", "U.", "H.", "ASHMAN", "T.", "J.", "ODGSON", "N.", "a.", "abin", "13th", "IMA", "conference", "mathematics", "surface", "Springer", "appear", "arthe", "L.", "OBBELT", "L.", "2004", "subdivision", "scheme", "tuning", "around", "extraordinary", "vertex", "cagd", "21", "561", "583", "oehm", "W.", "1980", "insert", "new", "knot", "b-spline", "curve", "computer-aided", "design", "12", "199", "201", "ASHMAN", "T.", "J.", "ODGSON", "N.", "a.", "abin", "M.", "A.", "2009", "selective", "knot", "insertion", "symmetric", "non-uniform", "refine", "smooth", "b-spline", "subdivision", "cagd", "26", "472", "479", "atmull", "E.", "lark", "J.", "1978", "recursively", "generate", "Bspline", "surface", "arbitrary", "topological", "mesh", "computer-aided", "design", "10", "350", "355", "ohen", "E.", "YCHE", "T.", "iesenfeld", "R.", "1980", "discrete", "b-spline", "Subdivision", "Techniques", "Computer-Aided", "Geometric", "design", "computer", "graphic", "Computer", "Graphics", "image", "processing", "14", "87", "111", "ose", "T.", "ASS", "M.", "ruong", "t.", "1998", "Subdivision", "surface", "character", "animation", "Proc", "SIGGRAPH", "98", "85", "94", "arin", "G.", "2001", "curve", "surface", "cagd", "Practical", "Guide", "5th", "ed", "Morgan", "Kaufmann", "alil", "Z.", "taliano", "G.", "1991", "datum", "structure", "algorithm", "disjoint", "set", "union", "problem", "ACM", "Computing", "survey", "23", "319", "344", "inkel", "i.", "MLAUF", "G.", "2006", "Loop", "subdivision", "curvature", "control", "Eurographics", "Symposium", "Geom", "Proc.", "Eurographics", "K.", "Polthier", "A.", "Sheffer", "Eds.", "163", "171", "onsor", "D.", "EAMTU", "M.", "2001", "Subdivision", "Surfaces", "can", "useful", "geometric", "modeling", "application", "Tech", "Rep.", "01-011", "Boeing", "Company", "olt", "F.", "1996", "toward", "curvature-continuous", "stationary", "subdivision", "algorithm", "Zeitschrift", "f?r", "angewandte", "Mathematik", "und", "Mechanik", "76", "423", "424", "ARCIAUSKAS", "K.", "eter", "J.", "eif", "U.", "2004", "shape", "characterization", "subdivision", "surfaces?case", "study", "cagd", "21", "601", "614", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "46", "publication", "date", "August", "2009", "nurb", "extraordinary", "point", "high-degree", "non-uniform", "rational", "Subdivision", "Surfaces", "46:9", "J.", "M.", "R.", "F.", "1980", "theoretical", "devel", "ane", "iesenfeld", "opment", "computer", "generation", "display", "Piecewise", "Polynomial", "Surfaces", "IEEE", "Trans", "pamus", "35", "46", "evin", "a.", "2006", "modify", "subdivision", "surface", "continuous", "curvature", "ACM", "Trans", "graph", "25", "1035", "1040", "oop", "C.", "2002", "bound", "curvature", "triangle", "mesh", "subdivision", "convex", "hull", "property", "Visual", "Computer", "18", "316", "325", "W.", "2005", "Subdivision", "surface", "cad?an", "overview", "computer-aided", "design", "37", "693", "709", "uller", "K.", "EUSCHE", "L.", "ellner", "D.", "2006", "extended", "subdivision", "surface", "building", "bridge", "between", "NURBS", "Catmull-Clark", "surface", "ACM", "Trans", "graph", "25", "268", "292", "eter", "J.", "eif", "U.", "2008", "Subdivision", "Surfaces", "Springer", "rautzsch", "H.", "1997", "freeform", "spline", "cagd", "14", "201", "206", "rautzsch", "H.", "1998", "smoothness", "subdivision", "surface", "extraordinary", "point", "Adv.", "Comp", "Math", "377", "389", "AMSHAW", "L.", "1989", "blossom", "polar", "form", "cagd", "323", "358", "eif", "U.", "1996", "degree", "Estimate", "Subdivision", "Surfaces", "higher", "regularity", "Proc", "Amer", "Math", "soc", "124", "2167", "2174", "eif", "U.", "1998", "turbs?topologically", "Unrestricted", "rational", "b-spline", "constructive", "approximation", "14", "57", "77", "abin", "M.", "A.", "ODGSON", "N.", "A.", "ASSAN", "M.", "F.", "vri", "simtzi", "i.", "P.", "2003", "Curvature", "behaviour", "extraordinary", "point", "subdivision", "surface", "computer-aided", "design", "35", "11", "1047", "1051", "abin", "M.", "1991", "cubic", "recursive", "division", "bound", "curvature", "curve", "surface", "Academic", "Press", "411", "414", "chaefer", "S.", "OLDMAN", "R.", "2009", "non-uniform", "Subdivision", "b-spline", "Arbitrary", "Degree", "cagd", "26", "75", "81", "ederberg", "T.", "W.", "HENG", "J.", "ewell", "D.", "ABIN", "M.", "1998", "Non-Uniform", "Recursive", "Subdivision", "Surfaces", "Proc", "SIGGRAPH", "98", "387", "394", "ederberg", "T.", "W.", "HENG", "J.", "AKENOV", "a.", "asrus", "a.", "2003", "t-spline", "t-nurcc", "ACM", "Trans", "graph", "22", "477", "484", "tam", "J.", "1998", "exact", "evaluation", "Catmull-Clark", "subdivision", "surface", "arbitrary", "parameter", "value", "Proc", "SIGGRAPH", "98", "395", "404", "tam", "J.", "2001", "subdivision", "scheme", "generalize", "uniform", "b-spline", "surface", "arbitrary", "degree", "cagd", "18", "383", "396", "ARREN", "J.", "EIMER", "H.", "2001", "Subdivision", "method", "Geometric", "Design", "Morgan", "Kaufmann", "orin", "D.", "CHR", "ODER", "P.", "2001", "unified", "framework", "primal/dual", "quadrilateral", "subdivision", "scheme", "cagd", "18", "429", "454", "appendix", "c1", "continuity", "we", "strategy", "knot", "insertion", "-lrb-", "section", "-rrb-", "create", "region", "unifor", "remain", "show", "derivative", "-lrb-", "which", "mity", "around", "every", "extraordinary", "point", "surround", "non-zero", "knot", "interval", "therefore", "continuity", "limit", "surface", "determine", "stationary", "subdivision", "matrix", "we", "can", "use", "eigenanalysis", "prove", "we", "method", "produce", "c1", "surface", "proof", "use", "Theorem", "5.25", "from", "Peters", "Reif", "-lsb-", "2008", "-rsb-", "subdivision", "matrix", "derive", "from", "we", "method", "satisfy", "condition", "theorem", "flip-symmetric", "shift-invariant", "subdominant", "eigenvalue", "lie", "unit", "frequency", "fourier", "block", "characteristic", "ring", "make", "up", "b-spline", "patch", "degree", "scheme", "-rrb-", "do", "overlap", "due", "symmetry", "we", "need", "only", "check", "derivative", "one", "direction", "first", "sector", "-lrb-", "draw", "red", "Figure", "14", "-rrb-", "lie", "same", "quadrant", "-lsb-", "Peters", "Reif", "2008", "-rsb-", "enough", "prove", "characteristic", "ring", "regular", "injective", "thus", "scheme", "c1", "condition", "derivative", "use", "first", "difference", "point", "use", "variation", "diminish", "property", "b-spline", "we", "can", "prove", "subdominant", "eigenvector", "-lsb-", "augsd?rfer", "et", "al.", "2009", "-rsb-", "where", "necessary", "obtain", "tighter", "bind", "we", "can", "use", "subdivision", "step", "bring", "first", "difference", "closer", "derivative", "subdivision", "step", "require", "only", "straightforward", "uniform", "b-spline", "knot", "insertion", "we", "have", "verify", "condition", "hence", "prove", "c1", "continuity", "degree", "from", "19", "valency", "from", "50", "trend", "suggest", "problem", "likely", "occur", "higher", "valency", "degree", "Figure", "14", "characteristic", "ring", "-lsb-", "Peters", "Reif", "2008", "-rsb-", "valency", "-lrb-", "leave", "right", "-rrb-", "degree", "-lrb-", "top", "-rrb-", "-lrb-", "bottom", "-rrb-", "first", "sector", "draw", "red", "ACM", "transaction", "Graphics", "Vol", "28", "no.", "Article", "46", "publication", "date", "August", "2009" ],
  "content" : "\n  \n    6e7798d061af681a77d6d94c07330fad8547922a8f5555e4f0f61fff29cf9a00\n    p7e\n    10.1145/1531326.1531352\n    Name identification was not possible. \n  \n  \n    \n      \n        NURBS with Extraordinary Points: High-degree, Non-uniform, Rational Subdivision Schemes\n      \n      Thomas J. Cashman Ursula H. Augsd?rfer University of Cambridge University of Cambridge\n      \n        \n      \n      (a) Control mesh (b) Degree 3\n      \n        Figure 1: The same control mesh subdivided in three different configurations. In regular regions, the degree 3 surface (b) is C2, and the degree 7 surfaces (c) and (d) are C6. No previous subdivision scheme can generate the surface (d). The knot intervals modified to give (d) are shown in (a); the red interval is ten times greater than the unmarked intervals, and the green interval is four times greater. Comparing (d) with (c), note that in this case the non-uniform intervals change the whole surface, because the influence of a knot interval grows with degree.\n      \n      We present a subdivision framework that adds extraordinary vertices to NURBS of arbitrarily high degree. The surfaces can represent any\n    \n    \n      odd degree NURBS patch exactly. Our rules handle non-uniform knot vectors, and are not restricted to midpoint knot insertion. In the absence of multiple knots at extraordinary points, the limit surfaces have bounded curvature.\n      CR Categories: I.3.5 [Computer Graphics]: Comp. Geom. and\n      \n        Object Modeling?Curve, surface, solid, and object representations\n      \n      \n        1 Introduction\n      \n      Designers of freeform surfaces used to have to operate within the constraints imposed by NURBS [Farin 2001]. NURBS have a rigid rectangular control grid, so surfaces usually had to be represented as a collection of trimmed patches and continuity across the patch seams had to be manually enforced. Subdivision surfaces removed these constraints by allowing designers to introduce extraordinary points into an otherwise regular control mesh. The resulting flexibility led to widespread adoption for applications such as character animation [DeRose et al. 1998], but NURBS are still an important industry standard in fields like\n      ACM Reference Format Cashman, T., Augsd?rfer, U., Dodgson, N., Sabin, M. 2009. NURBS with Extraordinary Points: High-degree, Non-uniform, Rational Subdivision Schemes. ACM Trans. Graph. 28, 3, Article 46 (August 2009), 9 pages. DOI = 10.1145/1531326.1531352 http://doi.acm.org/10.1145/1531326.1531352. Copyright Notice Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or direct commercial advantage and that copies show this notice on the fi rst page or initial screen of a display along with the full citation. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers, to redistribute to lists, or to use any component of this work in other works requires prior specific permission and/or a fee. Permissions may be requested from Publications Dept., ACM, Inc., 2 Penn Plaza, Suite 701, New York, NY 10121-0701, fax +1 (212) 869-0481, or permissions@acm.org . ? 2009 ACM 0730-0301/2009/03-ART46 $10.00 DOI 10.1145/1531326.1531352 http://doi.acm.org/10.1145/1531326.1531352\n      Neil A. Dodgson Malcolm A. Sabin University of Cambridge Numerical Geometry Ltd\n      \n        \n        \n      \n      \n        d\n        (c) Degree 7 Degree 7, non-uniform knots.\n      \n      Computer-Aided Design. In addition to bicubic patches, CAD models sometimes use the additional continuity available from biquintic,\n      \n        occasionally biseptic, and very rarely higher degree B-splines. High-\n      \n      class surfaces also use non-uniform parametrizations for handling boundaries, selectively reducing continuity, and integrating surface features at varying scales. No subdivision scheme, however, has been able to provide the full complement of NURBS features alongside the flexibility of extraordinary points. We present a new subdivision framework that is a true superset of NURBS at odd degrees. We provide rules that give a continuous tangent plane and bounded curvature at the extraordinary points. Any existing NURBS patch can be represented exactly, and the regular regions of the resulting surfaces are also exact NURBS, so surfaces can be exported as a collection of NURBS to within any given deviation tolerance.\n      \n        2 Related work\n      \n      \n        NURBS can be non-uniform and are well defined for arbitrarily high\n      \n      degree. Our subdivision scheme, as a superset of NURBS, must also hold these two properties (see Figure 1 ). Our method builds on previous schemes that address these challenges separately.\n      \n        Interest in high-degree subdivision schemes initially centered around\n      \n      the search for surfaces with continuous non-zero curvature at extraordinary points. Reif [1996] showed that a stationary C2 scheme\n      \n        would have to use at least bisextic patches, and both Prautzsch [1997]\n      \n      and Reif [1998] presented constructions which achieve this lower bound. The resulting surfaces are Ck at extraordinary points, for arbitrary k, and use B-spline patches with degree which increases rapidly with k. Instead of specifying a continuity class (and letting degree adapt as necessary), Prautzsch [1998] also described a ?midpoint? scheme which can generate B-spline patches of a specified degree. The rules for this scheme generalize the averaging algorithm described by Lane and Riesenfeld [1980] for uniform B-spline subdivision.  By using a sequence of smoothing stages, the scheme avoids the problems arising from the widening influence of a point as degree increases. Warren and Weimer [2001] developed these ideas along with several other researchers; Zorin and Schr?der [2001] showed that the resulting surfaces are C1 at extraordinary points (although the curvature diverges), and Stam [2001] described a variant where the topology of the mesh is invariant under smoothing. Around the same time, subdivision surfaces were developed which generalize non-uniform (but fixed degree) B-spline surfaces. The tensor product construction for NURBS means that the same knot\n      ACM Transactions on Graphics, Vol. 28, No. 3, Article 46, Publication date: August 2009.\n      46:2 ? T. Cashman et al.\n      \n        spacing must be shared by an entire ?row? or ?column? of edges, but\n        Sederberg et al. [1998] presented surfaces which relax this property. Their scheme allows a separate knot spacing to be attached to every edge in a control mesh. M?ller et al. [2006] developed a scheme which could additionally provide the position of a given point on the limit surface. These surfaces were also combined with T-splines [Sederberg et al. 2003], although with the restriction that opposite\n      \n      \n        edges of a quadrilateral face must share the same knot spacing. This\n        brought the surfaces into equivalence with bicubic NURBS, in the absence of extraordinary points and ?T-junctions?. There are therefore previous schemes that are true supersets of bicubic NURBS, and previous schemes of arbitrary degree, but no previous scheme that combines these ? a superset of NURBS at arbitrary degree.\n      \n      \n        3 Overview\n      \n      \n        Like Prautzsch?s midpoint scheme, our method handles high degrees\n        by breaking each subdivision step into one ?refine? and several ?smoothing? stages. We need to handle non-uniform knot vectors, however, and are therefore unable to use the Lane and Riesenfeld [1980] algorithm. Instead, we generalize a non-uniform analogue, which we review in Section 4. We make the same restriction as Sederberg et al. [2003]: that each quadrilateral face must have equal knot spacing on opposite edges (as is the case with NURBS). We also restrict the control mesh to contain only quadrilateral faces (again, as with NURBS), but our rules must still allow for extraordinary vertices. We discuss the generalization that makes this possible in Section 5. The resulting subdivision framework achieves our objective of adding extraordinary points to NURBS of arbitrary odd degree. Our\n      \n      \n        method allows each knot interval to be subdivided at any position or\n        not at all. In extraordinary regions, changing the sequence of knot insertions can change the limit surface, so it is important to resolve\n      \n      \n        which knots we should insert, and where. We address this in Section\n        6, with an algorithm that first subdivides only large knot intervals until all the intervals are approximately the same size. This avoids problems which occur around extraordinary points if there is a large disparity between neighboring knot intervals. We use further subdivision steps to create a region of uniformity around extraordinary points, so that continuity and curvature variation in these regions is determined by uniform, rather than non-uniform, rules. In Section 7, we use eigenanalysis to tune the uniform rules so that curvature is stable under the subdivision process, instead of increasing to infinity or collapsing to zero. The same bounded curvature\n      \n      \n        conditions mean that extraordinary regions can hold both elliptic and\n        hyperbolic shapes in the limit surface, as neither shape dominates the other. It proves more difficult to satisfy the bounded curvature conditions around vertices of valency 3; we found it necessary to introduce an additional smoothing stage to handle this case. With this modification, our method has bounded curvature for all valencies at arbitrarily high degrees, and maintains the convex hull property (by taking only convex combinations) up to degree 13.\n        ? = i a b c ? = i +1\n        \n          Figure 2: A smoothing stage on a single control point in the univariate knot insertion algorithm, where a + b + c = 1. Contributions come only from the point and its two immediate neighbors. ? = i a b b c 2 2 ? = i +1\n        \n        \n          Figure 3: We can consider the contributions from each side of a point separately, by using only half weights for each of the contributions from the predecessor point.\n        \n      \n      \n        4 Non-uniform, high-degree curves\n        As our method is built on NURBS, the subdivision rules for regular regions, whatever the degree, are derived from B-spline knot insertion. We can find these rules using a number of different ap-\n      \n      \n        proaches: two examples are the method presented by Boehm [1980]\n        and the Oslo algorithm [Cohen et al. 1980]. All knot insertion algorithms give the same result but as degree increases, each point has a widening influence on points in the subdivided control polygon.\n      \n      \n        For a generalization to surfaces containing extraordinary points, this causes problems at high degrees: both because of a drop in efficiency, and because a subdivision step must account for any possible config-\n        uration of extraordinary points in the control mesh. The number of cases to consider grows exponentially with the influence of a point, which grows quadratically with degree. Therefore using existing knot insertion rules directly is not a feasible option for high degrees.  Instead we need a knot insertion algorithm that uses a series of local computations which overlap, in the same way as the Lane and Riesenfeld [1980] algorithm. No matter how high the degree, the\n      \n      \n        number of cases to consider is then constant. Schaefer and Goldman\n        [2009] describe a univariate non-uniform algorithm which works in this way, but it is difficult to generalize to surfaces because of asymmetry. We developed a symmetric approach [Cashman et al. 2009], which we use here.\n      \n      \n        This univariate algorithm breaks a subdivision step into a refine stage\n        followed by d/2 smoothing stages, where d, which is odd, is the degree. We use ? to denote the current stage. At each smoothing stage we consider each point in turn, with the two knots which are a distance ? away in the subdivided knot vector on either side. If these knots need to be inserted, then the algorithm uses stage ? to introduce them into the polar form (blossom) [Ramshaw 1989] of the relevant point.  This process inserts 0, 1, or 2 knots into the polar form of each point at each stage. Cashman et al. [2009] give the required affine combinations and implementation details for the curve case. The\n      \n      \n        important observation is that each affine combination uses only direct neighbors; we can therefore visualize the effect of a smoothing stage\n        on a single point as shown in Figure 2 , although either (or both) of the weights a and c may be 0. Figure 3 shows that we can consider the same smoothing operation one edge at a time, which forms the foundation of our method for the surface case.\n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 46, Publication date: August 2009.\n        NURBS with Extraordinary Points: High-degree, Non-uniform, Rational Subdivision Surfaces ? 46:3\n      \n      \n        5 Non-uniform, high-degree surfaces\n        To generalize the curve case to surfaces with extraordinary points, we calculate the affine combinations of refine and smooth stages one face at a time. The weights used in the affine combinations are defined using the tensor product of univariate knot insertion when\n      \n      \n        considered (as shown in Figure 3 ). For a NURBS\n        one edge at a time\n        control mesh, each smoothing stage calculates weights in the four faces surrounding a vertex ( Figure 4 ). These weights combine to give the tensor product of a smoothing stage in the form shown in Figure 2 , as required for NURBS knot insertion.\n        5.1 Introducing extraordinary points Like Sederberg et al. [1998], we associate a knot spacing with each edge of a control mesh. However, we require: ? that all faces are quadrilateral, and ? that knot spacings on opposite edges of a face are equal.\n      \n      \n        The latter is the same restriction that Sederberg et al. [2003] imposed on NURSS in order to incorporate T-junctions. The result is that knot\n        spacings are defined for a whole strip of quadrilateral faces rather than for a single edge. Both conditions, of course, are properties of NURBS control meshes. In a mesh where these conditions hold, each face has two associated strips of quadrilateral faces, one in each of the two directions ( Figure 5 ). We use these strips to build local knot vectors for each face. In a mesh containing extraordinary points, a smoothing stage may use different knot vectors for each face surrounding a vertex. The refine stage is also computed one face at a time. Here we\n        face case, the new vertex position is given by the tensor product of\n      \n      \n        introduce vertices on existing edges and within existing faces. In the univariate refinement in the two directions. In the edge case, the two\n        univariate contributions are split into four: two on each side of the edge. Cashman et al. [2009] give the univariate rules and Figure 6 shows an example of how these are applied to a bivariate case. Section 7 describes our modifications for bounded curvature, which\n      \n      \n        multiply the weight of each contribution from an extraordinary vertex\n        by an additional value. There is a separate multiplier for contributions from an extraordinary vertex to its successor, ? n d , to adjacent vertices, ? n d , and to vertices across a diagonal, ? n d . The same value is used in every refine and smoothing stage, and is determined by the valency of the extraordinary point and the degree of the surface. Valency 3 is difficult (see Section 7.2) and requires an extra smoothing step to achieve bounded curvature while maintaining the convex hull property. To maintain affine invariance, the weights in every affine combina-\n      \n      \n        tion must sum to 1. We therefore normalize each affine combination\n        by dividing by the sum of contributing weights. This is necessary at extraordinary points, since a vertex of valency n receives 4n contributions instead of 16. The multipliers we use for bounded curvature make it necessary to normalize every affine combination that has a contribution from an extraordinary point. Normalization is sometimes necessary along the rays which emanate from extraor-\n      \n      \n        dinary points, because the two sides of the ray can use different knot vectors. It is therefore easiest to normalize every affine combination, regardless of position in the mesh. This also handles faces with more\n        than one extraordinary corner, without special cases. This strategy allows us to create non-uniform subdivision surfaces at arbitrarily high degrees. To create a true superset of NURBS, all that remains is to make the surfaces rational, which is straightforward [Sederberg et al. 1998]: rational control points are projected into R 4 , subdivided, and then projected back into R 3 .\n        \n          Figure 4: In regular regions, a smoothing stage computes contributions to a point from each of the surrounding four faces. The weights in each face are taken from the tensor product of Figure 3 ; the pairs of contributions shown in red define the influence of edgeconnected vertices and the four contributions shown in blue combine to give the influence of a point on its successor. In a NURBS mesh, these 16 weights sum to 1, and compute the same affine combination as the tensor product of Figure 2 . k 6 k 1 k 7 k 2 k 3 k 8 k 4 k 5 k 6 k 1 k 7 k 2 k 8 k 9 k 9 k 10 k 3 k 10 k 4 k 5\n        \n        \n          Figure 5:\n        \n        Every face has a local knot vector in two directions, which we can construct by following a strip of quadrilateral faces. For the shaded face, knot spacings in the blue direction are {k 1 , k 2 , k 3 , k 4 , k 5 } and in the red direction are {k 6 , k 7 , k 8 , k 9 , k 10 }. This example collects knot vectors at the length required for subdivision at degree 5.\n        k 1 k 3 k 4 k 2 ? 5 3 k 3 /2+k 4 1 k 1 +k 3 /2 2 k 1 +k 3 +k 4 2 k 1 +k 3 +k 4 ? 5 3 k 3 /2+k 4 1 k 2 +k 3 /2 k 1 2 k 2 +k 3 +k 4 2 k 2 +k 3 +k 4 k 3 k 4 k 2\n        \n          Figure 6: An example refine stage for degree 3, where the interval k 3 has a knot inserted at its midpoint. Other intervals are unmodified.\n        \n        The knot insertion algorithm therefore introduces points , along the subdivided interval, and we show the unnormalized weights used to form the central point . The fractions that involve k i are from the curve case, the factors of one half are because we treat each side of each edge separately, and the multiplier, ? 5 3 , is required to get bounded curvature in the bivariate case, as explained in Section 7.\n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 46, Publication date: August 2009.\n        46:4 ? T. Cashman et al.\n      \n      \n        6 Knot insertion strategy\n        We have now achieved our objective: NURBS of odd degree with\n      \n      \n        extraordinary points. However, extraordinary points make it possible\n        for a large knot interval, adjacent to a high-valency point, to be invisible to faces ?hidden behind? the point. We find that this can cause folds in the limit surface if knots are inserted na?vely. Of course, in regular regions, as with NURBS, the sequence of knot insertions does not alter the limit surface. The same property does not apply around extraordinary points, so the sequence in which knots are inserted is important. In this section we describe our\n      \n      \n        method for choosing which knots to insert, and where to insert them.\n        Our univariate algorithm [Cashman et al. 2009] is not constrained to subdivide every interval, so we can regularize knot spacings by subdividing large intervals first. Our regularization condition is that no knot interval is twice (or more) as large as any other. Given the complete set of knot intervals k = {k i }, we establish the minimum non-zero interval ? = min({k i : k i > 0}). If max(k) ? 2?, we use a limited subdivision step that inserts knots only into intervals which are 2? or greater. We subdivide each interval at its midpoint, so a total of log 2 (max(k)/?) such steps is required to achieve our regularization condition. This strategy avoids undesirable folds in the surface at the scale of the first subdivision step. Once max(k) < 2?, we address the\n      \n      \n        behavior of the extraordinary points at smaller scales. To make guarantees on the behavior of these extraordinary regions, we use further\n        subdivision steps to insert knots uniformly around extraordinary points, while subdividing other intervals at their midpoint. Doing so creates a uniform region with a stationary subdivision matrix. We are therefore able to apply eigenanalysis to guarantee C1 continuity (see the Appendix).\n        \n          Figure 7: Two subdivision steps may be required to insert uniform knots around extraordinary points. In this figure, knot interval size is symbolized geometrically; black edges indicate original knots, and we insert the red knots in the next subdivision step. Note that the uniform spacing for the extraordinary point on the right is influenced by the intervals surrounding the point on the left. There is also a conflict in the central knot interval, as the knots shown using dashed green lines cannot both be inserted in the first subdivision step.\n        \n        \n          Figure 8: Our knot insertion strategy groups extraordinary points into equivalence classes based on whether they share an emanating ray. For this example, the two extraordinary points marked (with emanating rays drawn in red) are in the same equivalence class, as are the two points marked (with emanating rays drawn in green).\n        \n      \n      \n        case: a single extraordinary point of valency surrounded by regular\n        We need at most two steps before every extraordinary point is surrounded by one layer of evenly spaced knots. Consider the simplest n mesh. Let the knot intervals surrounding this point be k 1 to k n . We insert a knot into each interval k i , creating uniform spacing at a distance min({k 1 , . . . , k n })/2 away from the extraordinary point. In the general case, we have multiple extraordinary points in an arbitrary configuration. Figure 7 shows that the uniform knot insertion for one extraordinary point may impact on another. In fact, extraordinary points with emanating rays which are shared over any\n      \n      \n        number of regular points must insert knots at the same distance away,\n        in order to achieve uniform knot spacing ( Figure 8 ). We can define a set of equivalence classes for extraordinary points connected in this way, and calculate the membership of the classes in a single pass through points in the mesh. To achieve this, our implementation uses knot interval objects that hold a reference to an adjacent extraordinary point, if there is one, on either side. A disjoint set data structure [Galil and Italiano 1991], with associated ?find? and ?union? operations, is then used to join any classes which appear on the same side of a knot interval. The equivalence classes are\n      \n      \n        unaffected by subdivision, so they need only be calculated once, and\n        this can be at the coarsest level. Once calculated, the equivalence classes can be used to insert knots\n      \n      \n        at a distance which achieves uniform spacing for all members of the\n        class. However, Figure 7 also shows that two or more extraordinary points, on either side of a knot interval, might make conflicting\n      \n      \n        requests for where a knot should be inserted. In this case, we use the\n        first subdivision step to insert a knot between the two positions. As the knot interval is then split, there can be no conflict in the second subdivision step.\n      \n      \n        Uniform knot spacing around extraordinary points is thus guaranteed\n        in at most two steps. In summary, our algorithm for establishing uniform spacing is: ? for each equivalence class, establish the minimum from the knot intervals that surround extraordinary points within it ? for each extraordinary point, request to insert knots into sur-\n      \n      \n        rounding intervals at half of the minimum interval for the class for each knot interval, subdivide at the midpoint, or at the mean\n        ? of the requested positions, if there are insertion requests. Note that the method described here cannot apply if there is a multiple knot (i.e. a zero knot interval) adjacent to an extraordinary point. In this case, we can still proceed with subdivision but we are unable to create uniform knot spacing, which means that we cannot prove C1 continuity in the presence of zero knot intervals. Where uniform spacing is achievable, additional subdivision steps\n      \n      \n        insert knots into the centers of the surrounding intervals. This creates\n        a growing region of uniformity around each extraordinary point, so the behavior of the limit surface at these points is determined by uniform rules. Therefore Section 7 (which modifies the uniform case for bounded curvature) and the Appendix (which discusses our proof that the uniform rules create C1 surfaces) will apply to any non-uniform configuration with non-zero knot intervals adjacent to extraordinary points.\n      \n      \n        7 Bounded curvature\n        Without multiple knots, degree d B-splines (including the regular regions of our scheme) have d ? 1 continuous derivatives. At extraordinary points, however, it has proved difficult for stationary subdivision to provide anything more than continuity of the first derivative. There are a range of possible behaviors for the second\n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 46, Publication date: August 2009.\n        NURBS with Extraordinary Points: High-degree, Non-uniform, Rational Subdivision Surfaces ? 46:5\n        ? n ? n 800 1.5 600 1 400 0.5 200 0 0 5 10 15 20 5 10 15 valency (n) valency (n)\n        \n          Figure 9: Bounded curvature solutions for ? n d , ? n d and ? n d . Valency ranges from 3 to 20. The multipliers are plotted for degree, d, equal to 3 , 5 , 7 and 9 . Note that ? 4 d = ? 4 d = ? 4 d = 1 by definition, as the regular case is curvature continuous and hence already satisfies the bounded curvature equations ? 2 = ? 0 = ? 2 .\n        \n        \n          \n            \n              \n                \n                   n\n                   ? n 3\n                   ? n 5\n                   ? n 7\n                   ? n 9\n                   n\n                   ? n 3\n                   ? n 5\n                \n              \n              \n                \n                   3\n                   1.3333\n                   1.3333\n                   1.3333\n                   1.3333\n                   3\n                   1.2560\n                   1.1370\n                \n                \n                   5\n                   2.6079\n                   8.0641\n                   13.574\n                   19.510\n                   5\n                   0.6499\n                   0.7919\n                \n                \n                   6\n                   4.6412\n                   15.560\n                   29.347\n                   45.446\n                   6\n                   0.4364\n                   0.6048\n                \n                \n                   8\n                   9.9085\n                   34.571\n                   68.153\n                   108.89\n                   8\n                   0.2321\n                   0.3604\n                \n                \n                   20\n                   73.691\n                   269.09\n                   536.37\n                   866.17\n                   20\n                   0.0343\n                   0.0578\n                \n              \n            \n          \n          n ? n 3 ? n 5 ? n 7 ? n 9 n ? n 3 ? n 5 3 1.3333 1.3333 1.3333 1.3333 3 1.2560 1.1370 5 2.6079 8.0641 13.574 19.510 5 0.6499 0.7919 6 4.6412 15.560 29.347 45.446 6 0.4364 0.6048 8 9.9085 34.571 68.153 108.89 8 0.2321 0.3604 20 73.691 269.09 536.37 866.17 20 0.0343 0.0578\n          Table 1: ? n d , ? n d and ? n d at a selection of valencies and with d ranging from 3 to 9. See auxiliary material for a full table.\n        \n        derivative [Sabin et al. 2003], which we can analyze using an eigen-\n      \n      \n        decomposition of the subdivision matrix [Peters and Reif 2008]. We aim for bounded curvature, which we believe gives the best behavior of the limit surface. We use to denote the subdominant eigenvalue,\n        ? and write ? 0 and ? 2 for the eigenvalues of the components which generalize an elliptic and a hyperbolic paraboloid, respectively. As the subdivision rules we consider are rotationally symmetric, the  Reif [1996] shows that no stationary subdivision scheme based on bicubic pieces can have non-zero curvature continuity at extraordinary points. It is possible, however, to satisfy bounded curvature, where ? 2 = ? 0 = ? 2 . This is a necessary, but not sufficient, condition for C2 continuity, and preserves curvatures in both of the quadratic eigencomponents through subdivision. Therefore the extraordinary region is not dominated by either the elliptic or hyper-\n        eigenvalues ? and ? 2 are always double.\n      \n      \n        bolic component, and curvature at the extraordinary point is bounded\n        by the curvatures appearing in the spline rings of those components [Peters and Reif 2008]. In contrast, the Catmull-Clark scheme [Catmull and Clark 1978] has ? 2 < ? 0 < ? 2 at valencies greater than\n      \n      \n        four, leading to a surface which is always hyperbolic, irrespective of\n        the control mesh shape [Karciauskas et al. 2004].\n        Several authors have modified stationary subdivision schemes to improve curvature in extraordinary regions. Sabin [1991] presents a variant of Catmull-Clark with bounded curvature. Barthe and Kobbelt [2004] tune extraordinary point rules for a number of desirable properties, including bounded curvature, and both Holt [1996] and Loop [2002] present bounded curvature schemes for triangle meshes. Augsd?rfer et al. [2006] tune schemes for bounded curvature while seeking to minimize the range of the bounds, and Ginkel and Umlauf [2006] try to eliminate cases where the bounded range includes both positive and negative curvatures.\n        If the subdivision matrix is not required to be stationary, then curvature continuity is easier to achieve. Levin [2006], for example, uses\n        ? n 1.5 1 0.5 0 20 5 10 15 20 valency (n)\n        ? n 7 ? n 9 n ? n 3 ? n 5 ? n 7 ? n 9 1.1204 1.1172 3 1.4012 1.1003 1.0758 1.0608 0.8152 0.8339 5 0.6224 0.7727 0.8228 0.8466 0.6417 0.6770 6 0.4115 0.5638 0.6420 0.6813 0.3979 0.4421 8 0.2164 0.3098 0.3870 0.4289 0.0664 0.0790 20 0.0317 0.0430 0.0605 0.0695\n        non-stationary rules that result in a local blend between the limit\n      \n      \n        surface and a C2 polynomial. It would be possible to apply the same principle to our scheme, once uniform knot spacing has been created\n        around extraordinary points. However we have chosen to maintain the simplicity of stationary rules for uniform configurations. We now show how to modify our rules to give bounded curvature at arbitrarily high degree.\n        7.1 Valency greater than regular\n      \n      \n        (with subdivision matrices calculated to double precision, and\n        For uniform knot vectors at each degree and valency, we compute the Discrete Fourier Transform (DFT) of the subdivision matrix for the rules described in Section 5. We want to modify the rules for bounded curvature, but the size of the subdivision matrix increases with degree. It therefore becomes impractical to find an exact solution in symbolic form, even using the DFT and considering each block separately. Instead we use a nonlinear solver on floating point values. We ensure that ? 2 differs from ? 0 and ? 2 by no more than 10 ?12 with floating-point eigenvalue routines). Note that this process is offline, and has no impact on the speed of an implementation. We modify our rules using mask tuning [Augsd?rfer et al. 2006], adapted for the setting where a subdivision step is factorized into separate stages. The idea is to multiply the weight of any contribution from an extraordinary point by an additional value. We use the same multipliers for the refine and smoothing stages. An extraordinary\n      \n      \n        , for vertices diagonally opposite the extraordinary vertex in\n        vertex can make contributions to vertices in three different positions, each of which uses a separate multiplier: ? ? n d , for the new extraordinary vertex, ? ? n d , for edge-connected vertices, ? ? n d adjacent faces.\n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 46, Publication date: August 2009.\n        46:6 ? T. Cashman et al.\n        f 1 e 2 v f 2 e 1 e 3 f 3\n        \n          Figure 10: Final affine combination used to position 3-valent vertices for bounded curvature. Red lines indicate knots which have been inserted in this subdivision step (as an illustration, we show a case where no knot has been inserted into the interval on the right). The extraordinary point, in the center, takes a new position calculated from the existing position v ( ), the points e i ( ) which are edge-connected at the end of the subdivision step, and the points\n        \n        f i ( ) which are in the positions which were face-connected at the start of the subdivision step.\n        \n          \n            \n              \n              \n                \n                   ? 3\n                   ? 5\n                   ? 7\n                   ? 9\n                   ? 11\n                   ? 13\n                \n                \n                   0.0013\n                   0.0813\n                   0.1915\n                   0.3537\n                   0.5732\n                   0.8550\n                \n              \n            \n          \n          ? 3 ? 5 ? 7 ? 9 ? 11 ? 13 0.0013 0.0813 0.1915 0.3537 0.5732 0.8550\n          Table 2: Values for ? d to achieve bounded curvature for valency 3.\n        \n        // Initialization foreach extraordinary point p do assign p to an equivalence class foreach subdivision step do // Knot insertion strategy if max(k) ? 2? then foreach knot interval k where k ? 2? do subdivide k at its midpoint else foreach equivalence class e i do ? i ? min(knot intervals surrounding points in e i ) foreach extraordinary point p in equivalence class e i do foreach knot interval surrounding p do make insertion request at a distance 1 2 ? i from p foreach knot interval k do if k has insertion requests then subdivide k at mean of requested positions else subdivide k at its midpoint // Subdivide mesh based on inserted knots foreach quadrilateral face f with knot intervals k i and k j do if k i and k j both subdivided then compute refine stage for new point within f if k i or k j is subdivided then make contributions for new points on edge of f for ? ? 1 to degree/2 do foreach quadrilateral face f do make contributions for smoothing stage ? within f foreach 3-valent point p do compute final position of p\n        \n          Figure 11: Pseudocode for our subdivision algorithm\n        \n        We find bounded curvature solutions for each d, the degree (which n, values are stored in a lookup table. ? ? 2 = ? 2 ? ?.\n      \n      \n        is always odd), and each the valency. In an implementation, these The multiplier affects only the zero frequency Fourier block, so we can first solve using just and We use the second degree of freedom in this optimization to make the shape of the subdominant\n        eigenvector as stable as possible. Taking these solutions into the zero frequency block, we are then able to use ? to solve ? 2 = ? 0 . Figure 9 and Table 1 show the resulting solutions for degrees 3 to 9 and valencies up to 20. A full table is included as auxiliary material.\n        7.2 Valency 3\n        At valency 3, we can use the method described above to solve ? 2 = ? 2 in exactly the same way. If we try to satisfy ? 2 = ? 0 , however, ? 3 d\n      \n      \n        we find that the solutions for are negative. The resulting surfaces could therefore lie outside the convex hull of the control points. Even\n        worse, there are some degrees with no bounded curvature solution at all. We therefore need to treat the valency 3 case separately. Instead of using a negative weight for the contribution from an extraordinary vertex to its successor, we can instead shrink ? 0 by increasing the number of points which influence the extraordinary\n      \n      \n        vertex over the course of a subdivision step. This increase in support\n        may be considered undesirable, but we consider convex combinations more important than a small increase in support. Our modification introduces an additional, final smoothing stage, affecting only 3-valent vertices ( Figure 10 ). We need to take a contribution from vertices that are sufficiently far away from the extraordinary point to shrink ? 0 at a rate of ? 2 . We also want to\n      \n      \n        avoid complications arising from arbitrary connectivity. Our solution\n        is therefore to take f i , the vertices in the positions which were faceconnected to the extraordinary point at the start of the subdivision step. In the uniform case, the f i therefore lie at the corners of the two rings surrounding an extraordinary point. If a face has not been subdivided in one direction or both, however, they will be more closely connected. In Figure 10 , for example, f 1 and f 3 are only a knight?s move away from the extraordinary point. We also use e i , the vertices connected to the extraordinary point by edges, and the position of the 3-valent extraordinary point, v. The position of the new point, v, is given by\n        3 3 v = ?v + X 1 (1 ? ?)(1 ? ? d )e i + X 1 (1 ? ?)? d f i 3 3 i=1 i=1\n      \n      \n        as is the product of non-negative weights, and if then\n        This final smoothing stage allows us to solve ? 2 = ? 0 using the same numerical solver, but varying ? d instead of ? 3 d (see Table 2 ). Here ? is the product, over every stage, of the normalized weight in the contribution from the extraordinary point to its successor. We use ? to retain the property that a point is only modified if knots are inserted nearby. If no knots are inserted into the domain of the extraordinary point?s basis function, then ? = 1 gives v = v as required. Every affine combination in our univariate knot insertion algorithm uses non-negative weights. The same is therefore true of the tensor product, and of the modifications for bounded curvature, as the multipliers ?, ? and ? are also non-negative. Therefore 0 ? ? ? 1, ? 0 ? ? d ? 1, our scheme holds the convex hull property. In solving ? 2 = ? 0 , we find 0 ? ? d ? 1 for the six degrees where d ranges from 3 to 13. The resulting values are given in Table 2 . With the inclusion of an additional smoothing stage, ? 3 d has relatively little effect, as the position of the extraordinary point is\n      \n      \n        largely determined by the value of . However, we do want to make\n        ? d\n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 46, Publication date: August 2009.\n        NURBS with Extraordinary Points: High-degree, Non-uniform, Rational Subdivision Surfaces ? 46:7\n        Control mesh Degree 3 Degree 5\n        \n          \n          \n        \n        \n          Table 3: Surfaces with three different knot configurations (top to bottom) at degrees 3, 5, 7 and 9 (left to right). Each surface is drawn with reflection lines and is defined by the control mesh shown on the left. In each row, the knot intervals shown in red are five times larger than the others; the first row shows the uniform case. Note the widening influence of a knot interval as degree increases. The six surfaces which are both high-degree and non-uniform (bottom-right) cannot be generated by any previous subdivision scheme.\n        \n        sure that ? 3 ? 0, and therefore we set ? 3 d = 3 4 for all d as a useful simplification that achieves this. Given uniform knot spacing, this value scales contributions from 3-valent points to their successors so that the total unnormalized weight is the same as in the regular, 4-valent case.  In summary, we have now modified general degree, non-uniform subdivision schemes to have bounded curvature at all degrees and valencies. The schemes hold the convex hull property for a useful range of degrees from 3 to 13, which, at valency 3, requires a small\n      \n      \n        increase in the support of surrounding basis functions. The complete\n        algorithm is summarized as pseudocode in Figure 11 .\n      \n      \n        8 Discussion\n        This work follows calls from the CAD industry for subdivision surfaces that do not enforce a uniform parametrization [Gonsor and Neamtu 2001]. Ma [2005] also suggests, as a research area that would allow subdivision to gain greater acceptance in CAD, ?a further unified generalization ... [which] should cover all [that] we can do with NURBS.? We have achieved this for odd degree.   Figure 1 and Table 3 show examples at a range of degrees and different knot intervals. Karciauskas et al. [2004] note that bounded curvature schemes can suffer from a lack of fairness. This effect seems to be visible in the degree 3 surfaces of Table 3 , since the reflection lines are not as smooth as a Catmull-Clark surface on the same data. However, we have recourse to higher degrees for providing additional smoothness, and the surfaces at degree 5 and higher seem fairer. In fact, we believe that even in the completely uniform case, the degree 5 surfaces are an interesting alternative to Catmull-Clark. The computational cost is only slightly higher (being degree 5 rather than degree 3), and yet the resulting surfaces have bounded curvature without compromising global shape. Around points with high valency, subdivision surfaces typically suffer from poor shape ( Figure 12 ). Our method produces a much smoother shape, even at low degree, compared with schemes that have divergent curvature. There is also a noticeable improvement in visual smoothness by using a higher degree, although the surface remains formally only C1 at the extraordinary point.\n        Degree 7 Degree 9\n        \n          \n          \n        \n      \n      \n        Zorin and Schr?der [2001] found that general degree surfaces which\n        are generated by centroid averaging have curvatures which diverge faster, at extraordinary points, as degree increases. Our modifications for bounded curvature avoid this outcome, so there are fewer disadvantages to using higher degrees to obtain greater smoothness. The remaining disadvantages apply to B-splines in general: higher computational cost, increased shrinkage when comparing the limit surface to the control mesh, and control points which have a less local influence over the surface. Our modifications for bounded curvature require ? to be less than 1 for valency 3, and greater than 1 for valency greater than 4 (see 2 2 Figure 14 ). Barthe and Kobbelt [2004] explicitly try to avoid this outcome, because of the ?polar artifact? which then appears when a subdivision surface is rendered using its control polygon after just a few subdivision steps. However, we are primarily interested in the behavior of the limit surface (made up of B-spline patches) rather than the control mesh, as it is the limit surface that is important for CAD applications. Non-uniform parametrizations might be useful where subdivision\n      \n      \n        surfaces are textured (for example, procedurally) using the piecewise\n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 46, Publication date: August 2009.\n        46:8 ? T. Cashman et al.\n        \n          \n          \n        \n        (a) Control Mesh (b) Catmull-Clark [1978]\n        \n          Figure 12: Reflection lines on surfaces defined by a control mesh with a 12-valent extraordinary point. Each surface is rendered with vertices projected to the limit surface; (c) and (d) use exact evaluation [Stam 1998] to sample the limit surface in the region of the 12-valent point.\n          \n        \n        (a) Uniform parametrization (b) Chordal parametrization\n        \n          Figure 13: A cuboid subdivided at degree 3. The subdivision surfaces are shown with isoparameter lines. Setting knot intervals to chord length increases the regularity of the parametrization.\n        \n        parametrization associated with the control mesh. Like NURBS, our scheme allows each face to be parametrized by a rectangle, rather than the unit square. Figure 13 shows that a chordal parametrization can help reduce texture distortion by increasing the regularity of this parametrization. Another use for non-uniform parametrizations is to allow good control of the boundaries of subdivision surfaces. We have previously\n      \n      \n        described how to handle boundaries in the curve case [Cashman et al.\n        2009] and this is easily transferred to the surface case. As a result, we can use multiple knots to give surfaces which meet a univariate B-spline curve at the boundary, whilst providing good control of both tangent and curvature. Existing boundary conditions, such as duplicating control points to gain a clamped surface, suffer from zero curvature at the boundary. With the introduction of subdivision surfaces which have the full capabilities of NURBS, it is possible that end users need no longer\n      \n      \n        be presented with mutually exclusive surface primitives for NURBS and Catmull-Clark subdivision surfaces. We believe that the surfaces\n        presented in this paper could allow many applications to present a single, unified interface to users, allowing control which is familiar from NURBS (non-uniform parametrizations at arbitrary degree) alongside the flexibility of extraordinary points, which is familiar from subdivision.\n      \n      \n        There are two areas in particular where there may be better solutions\n        than the ones we have presented: the affine combination used for bounded curvature at valency 3 (Section 7.2), and the method used for creating uniform knot spacing (Section 6). A natural development would be to make the condition max(k) < 2? local rather than global. A knot interval would then only be considered too large if there was an interval of half the size sufficiently nearby (where this distance depends on degree). This modification would\n      \n      \n        allow normal midpoint subdivision for knot intervals which increase\n        \n          \n        \n        (c) Our method at degree 3 (d) Our method at degree 9\n      \n      \n        gradually across a surface, without compromising continuity around\n        extraordinary points.\n        There might also be the potential for more extensive changes. We\n      \n      \n        could allow faces to have a different knot spacing on opposite edges\n        like Sederberg et al. [1998] and M?ller et al. [2006]. This would involve a generalization of the knot vectors which are collected as shown in Figure 5 . With this generalization in place, it might be possible to incorporate extraordinary faces as well as extraordinary vertices.\n        As we mentioned in Section 6, our method makes no guarantees on surface continuity if zero knot intervals lie adjacent to extraordinary points. Furthermore, around extraordinary regions, we are unable to insert an arbitrary knot while maintaining an invariant limit surface. Neither of these limitations affects compatibility with NURBS, but they allow room for further analysis and improvement.\n        Finally, the framework we describe here has a natural counterpart for even degrees, where knot spacings are specified across a strip of\n      \n      \n        edges rather than a strip of faces. In future work, we hope to provide\n        bounded curvature modifications for the even degree schemes.\n      \n      \n        Acknowledgements\n        We would like to thank the anonymous reviewers for their helpful\n      \n      \n        feedback. Ursula Augsd?rfer and Malcolm Sabin were supported by\n        EPSRC grant number EP/E025889/1.\n      \n      \n        References\n        \n          A UGSD ORFER  ? , U. H., D ODGSON , N. A., AND S ABIN , M. A. 2006. Tuning Subdivision by Minimising Gaussian Curvature\n        \n      \n      \n        S , M. A. 2009. Numerical Checking of C for Arbitrary Degree Quadrilateral Subdivision Schemes. In\n        Variation Near Extraordinary Vertices. Comp. Graph. Forum 25, 3, 263?272. A UGSD ORFER  ? , U. H., C ASHMAN , T. J., D ODGSON , N. A., AND 1 ABIN 13th IMA Conference on the Mathematics of Surfaces, Springer. To appear. B ARTHE , L., AND K OBBELT , L. 2004. Subdivision scheme tuning around extraordinary vertices. CAGD 21, 6, 561?583. B OEHM , W. 1980. Inserting new knots into B-spline curves. Computer-Aided Design 12, 4, 199?201.\n        C ASHMAN , T. J., D ODGSON , N. A., AND S ABIN , M. A. 2009. Selective knot insertion for symmetric, non-uniform refine and smooth B-spline subdivision. CAGD 26, 4, 472?479.  C ATMULL , E., AND C LARK , J. 1978. Recursively generated Bspline surfaces on arbitrary topological meshes. Computer-Aided Design 10, 6, 350?355. C OHEN , E., L YCHE , T., AND R IESENFELD , R. 1980. Discrete B-splines and Subdivision Techniques in Computer-Aided Geometric Design and Computer Graphics. Computer Graphics and Image Processing 14, 2, 87?111. D E R OSE , T., K ASS , M., AND T RUONG , T. 1998. Subdivision surfaces in character animation. In Proc. SIGGRAPH 98, 85?94. F ARIN , G. 2001. Curves and Surfaces for CAGD: A Practical Guide, 5th ed. Morgan Kaufmann. G ALIL , Z., AND I TALIANO , G. 1991. Data structures and algorithms for disjoint set union problems. ACM Computing Surveys 23, 3, 319?344. G INKEL , I., AND U MLAUF , G. 2006. Loop subdivision with curvature control. In Eurographics Symposium on Geom. Proc., Eurographics, K. Polthier and A. Sheffer, Eds., 163?171. G ONSOR , D., AND N EAMTU , M. 2001. Subdivision Surfaces ? Can they be Useful for Geometric Modeling Applications? Tech. Rep. 01-011, The Boeing Company. H OLT , F. 1996. Toward a curvature-continuous stationary subdivision algorithm. Zeitschrift f?r angewandte Mathematik und Mechanik 76, 423?424. K ARCIAUSKAS , K., P ETERS , J., AND R EIF , U. 2004. Shape characterization of subdivision surfaces?case studies. CAGD 21, 6, 601?614.\n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 46, Publication date: August 2009.\n        NURBS with Extraordinary Points: High-degree, Non-uniform, Rational Subdivision Surfaces ? 46:9\n      \n      \n        L , J. M., R , R. F. 1980. A Theoretical Devel-\n        ANE AND IESENFELD\n        opment for the Computer Generation and Display of Piecewise Polynomial Surfaces. IEEE Trans. PAMI 2, 1, 35?46. L EVIN , A. 2006. Modified subdivision surfaces with continuous curvature. ACM Trans. Graph. 25, 3, 1035?1040. L OOP , C. 2002. Bounded curvature triangle mesh subdivision with the convex hull property. The Visual Computer 18, 316?325. M A , W. 2005. Subdivision surfaces for CAD?an overview. Computer-Aided Design 37, 7, 693?709. M ULLER  ? , K., R EUSCHE , L., AND F ELLNER , D. 2006. Extended subdivision surfaces: Building a bridge between NURBS and Catmull-Clark surfaces. ACM Trans. Graph. 25, 2, 268?292. P ETERS , J., AND R EIF , U. 2008. Subdivision Surfaces. Springer. P RAUTZSCH , H. 1997. Freeform splines. CAGD 14, 3, 201?206. P RAUTZSCH , H. 1998. Smoothness of subdivision surfaces at extraordinary points. Adv. in Comp. Math. 9, 3, 377?389. R AMSHAW , L. 1989. Blossoms are polar forms. CAGD 6, 4, 323?358. R EIF , U. 1996. A Degree Estimate for Subdivision Surfaces of Higher Regularity. Proc. Amer. Math. Soc. 124, 7, 2167?2174. R EIF , U. 1998. TURBS?Topologically Unrestricted Rational B-Splines. Constructive Approximation 14, 1, 57?77. S ABIN , M. A., D ODGSON , N. A., H ASSAN , M. F., AND I VRIS SIMTZIS , I. P. 2003. Curvature behaviours at extraordinary points of subdivision surfaces. Computer-Aided Design 35, 11, 1047?1051. S ABIN , M. 1991. Cubic recursive division with bounded curvature. In Curves and surfaces, Academic Press, 411?414.  S CHAEFER , S., AND G OLDMAN , R. 2009. Non-uniform Subdivision for B-splines of Arbitrary Degree. CAGD 26, 1, 75?81. S EDERBERG , T. W., Z HENG , J., S EWELL , D., AND S ABIN , M. 1998. Non-Uniform Recursive Subdivision Surfaces. In Proc. SIGGRAPH 98, 387?394. S EDERBERG , T. W., Z HENG , J., B AKENOV , A., AND N ASRI , A. 2003. T-splines and T-NURCCs. ACM Trans. Graph. 22, 3, 477?484. S TAM , J. 1998. Exact evaluation of Catmull-Clark subdivision surfaces at arbitrary parameter values. In Proc. SIGGRAPH 98, 395?404. S TAM , J. 2001. On subdivision schemes generalizing uniform B-spline surfaces of arbitrary degree. CAGD 18, 5, 383?396. W ARREN , J., AND W EIMER , H. 2001. Subdivision Methods for Geometric Design. Morgan Kaufmann. Z ORIN , D., AND S CHR ODER  ? , P. 2001. A unified framework for primal/dual quadrilateral subdivision schemes. CAGD 18, 5, 429?454.\n      \n      \n        Appendix: C1 continuity\n      \n      \n        Our strategy for knot insertion (Section 6) creates a region of unifor-\n      \n      \n        remains to show that the derivatives of the (which\n        mity around every extraordinary point surrounded by non-zero knot intervals. Therefore the continuity of the limit surface is determined by a stationary subdivision matrix, and we can use eigenanalysis to prove that our method produces C1 surfaces. The proof uses Theorem 5.25 from Peters and Reif [2008]. The subdivision matrices derived from our method satisfy the conditions of the theorem: they are flip-symmetric, shift-invariant, and the subdominant eigenvalues lie in the unit frequency Fourier block. It characteristic ring is made up of B-spline patches, of the degree of the scheme) do not overlap. Due to symmetry, we need only check that the derivatives in one direction of the first sector (drawn red in Figure 14 ) lie in the same quadrant [Peters and Reif 2008]. This is enough to prove that the characteristic ring is regular and injective, and thus that the schemes are C1.\n        this condition on the derivatives using the first differences of points\n      \n      \n        Using the variation diminishing property of B-splines, we can prove in the subdominant eigenvector [Augsd?rfer et al. 2009]. Where it is\n        necessary to obtain a tighter bound, we can use subdivision steps to bring the first differences closer to the derivative. These subdivision steps require only straightforward uniform B-spline knot insertion.\n      \n      \n        We have verified this condition, and hence proved C1 continuity, for\n        degree from 3 to 19 and valency from 3 to 50. The trends suggest that no problem is likely to occur at higher valencies and degrees.\n        \n          Figure 14: Characteristic rings [Peters and Reif 2008] at valencies 3 and 5 to 8 (left to right) and degrees 3 (top) and 7 (bottom). The first sector is drawn in red.\n        \n        ACM Transactions on Graphics, Vol. 28, No. 3, Article 46, Publication date: August 2009.\n      \n    \n  ",
  "resources" : [ ]
}